Check from v4.9.103 to v4.9.104
Commit count: 327
checking 5b90d559d4d5c8fd2127013666014595caa53ae2 ......
checking 357cf023c01b135620838ea6c948f093b4d4437f ......
	 orig commit -> 1e0ce03bf142454f38a5fc050bf4fd698d2d36d8 ......
checking 0bd77073e693e8f93ff6ddba65a9f426153221cb ......
	 orig commit -> a7aa75a2a7dba32594291a71c3704000a2fd7089 ......
checking 4c9701fd4324f6d0a03c4455168dc50742960a64 ......
	 orig commit -> 30966861a7a2051457be8c49466887d78cc47e97 ......
checking 9c4eb3b322d8529147c70a97ce895740d5c7752d ......
	 orig commit -> d4b78db6ac3e084e2bdc57d5518bd247c727f396 ......
checking d0b4b72528670f0096e34e434c53f6a457d602b4 ......
	 orig commit -> 2bada7ac1fdcbf79a9689bd2ff65fa515ca7a31f ......
checking 7a2e11e7ba39325acef7b4a603d185f4a67447f7 ......
	 orig commit -> 71df179363a5a733a8932e9afb869760d7559383 ......
checking f806ed5cfac6bbd23bd223b4b6e3d8dd1f71838a ......
	 orig commit -> 213d7f94775322ba44e0bbb55ec6946e9de88cea ......
checking 66380cb5b98fd7ec5a4e774f755156d8d88fc33b ......
	 orig commit -> ddd0010392d9cbcb95b53d11b7cafc67b373ab56 ......
checking 5a8e209b2d9b72c197d079ccb3787d706763d756 ......
	 orig commit -> e3ebaa465136ecfedf9c6f4671df02bf625f8125 ......
checking f97276ccfd66b11da8948271b052f5e4226a47a1 ......
	 orig commit -> ab6e9a99345131cd8e54268d1d0dc04a33f7ed11 ......
checking 1e6b708a1dc617478a6dede5ecd38e055f3b1e35 ......
	 orig commit -> bee3204ec3c49f6f53add9c3962c9012a5c036fa ......
checking 996c5d9d9c625a29544c83bf94ffe107d2cd724f ......
	 orig commit -> 57de50af162b67612da99207b061ade3239e57db ......
checking f65c7c6ec720748cc73313585213a7658a20413d ......
	 orig commit -> db6775ca6e0353d2618ca7d5e210fc36ad43bbd4 ......
checking f2455fbbfc2ac178a95b5c5e4c097c53b0f59e96 ......
	 orig commit -> b418c4609d5052d174668ad6d13efe023c45c595 ......
checking c458c7c7839e1e531ec1c31803a2bc6e5e07037c ......
	 orig commit -> 3caa973b7a260e7a2a69edc94c300ab9c65148c3 ......
checking 85e924bb3309d59ffee2e0c23c920c74826ba509 ......
	 orig commit -> 23138ead270045f1b3e912e667967b6094244999 ......
checking b6bfbdfe0215172a232ef5b486f40d4ab8315dc4 ......
	 orig commit -> 79c81facdc0b43b1cef37b8d5689a8c8b78f8be0 ......
checking 8365105f1e959e389ce5a4ca02c5be9b6813d83c ......
	 orig commit -> 116e5258e4115aca0c64ac0bf40ded3b353ed626 ......
checking 71047cafcf9200c21acbb0e51907ae96d7f7d2ea ......
	 orig commit -> 832e4e1f76b8a84991e9db56fdcef1ebce839b8b ......
checking 0fba88ec9a7d201f2462d5337e50112a457b9984 ......
	 orig commit -> b24b6478e65f140610ab1ffaadc7bc6bf0be8aad ......
checking 5b3b32d061477e99d0805197930ad60dd51909d6 ......
	 orig commit -> 15d2ee42a3087089e73ad52fd8c1b37ab496b87c ......
checking 82aad32b4aad92244bc7b8e4cd1210253785fe03 ......
	 orig commit -> a6b25da5e7ba212af5826a662e6a035a79bffabd ......
checking cecf8a69042b3a54cb843223756c10ee8a8665e3 ......
	 orig commit -> 48d163b1aa6e7f650c0b7a4f9c61c387a6def868 ......
checking 086a52f1db8847dc0ab4acc5c9af3dd9cc4cf4e8 ......
	 orig commit -> 326ed382256475aa4b8b7eae8a2f60689fd25e78 ......
checking 92ff7ff0318f3c38394d36629084a19ea0e61a23 ......
	 orig commit -> e8588e268509292550634d9a35f2723a207683b2 ......
		 e8588e268509292550634d9a35f2723a207683b2 has problem. Fixes commit -> 56f772279a762984f6e9ebbf24a7c829faba5712
commit 8576adcc101dc5d3308c2dbd81dbc651ce70b0b4
Author: Govindarajulu Varadarajan <gvaradar@cisco.com>
Date:   Mon Jun 18 10:01:05 2018 -0700

    enic: do not overwrite error code
    
    [ Upstream commit 56f772279a762984f6e9ebbf24a7c829faba5712 ]
    
    In failure path, we overwrite err to what vnic_rq_disable() returns. In
    case it returns 0, enic_open() returns success in case of error.
    
    Reported-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Fixes: e8588e268509 ("enic: enable rq before updating rq descriptors")
    Signed-off-by: Govindarajulu Varadarajan <gvaradar@cisco.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
checking 431f979f767f55a0416d6b27604b79108dac88eb ......
	 orig commit -> 3e081628d510b2ddbe493371d9c574d9275da17e ......
checking 83f6484ce77f119ff4923db9ea252761c84003e4 ......
	 orig commit -> a3ca831249ca8c4c226e4ceafee04e280152e59d ......
checking e096b3d0f0f4856eeee8ecf02d8a369af939cfda ......
	 orig commit -> 2e2c177ca84aff092c3c96714b0f6a12900f3946 ......
checking b08a3589fb07497cf5d5895a3b6589d0bbfe0156 ......
	 orig commit -> 0a5169add90e43ab45ab1ba34223b8583fcaf675 ......
checking 0ea601d7d0069ec7a4b757774ee8a7e3f674a543 ......
	 orig commit -> 628df9dc5ad886b0a9b33c75a7b09710eb859ca1 ......
checking 44b65516d7785b328ed7965aea9ce1a2fb006569 ......
	 orig commit -> 174d1232ebc84fcde8f5889d1171c9c7e74a10a7 ......
checking 3aa06676c1122efafd0d986f9a928d6f5df7ac38 ......
	 orig commit -> 90c29ed7627b6b4aeb603ee197650173c8434512 ......
checking de4699cd616fee88b811b74b0b752388c093d3d5 ......
	 orig commit -> e723795c702b52cfceb3bb3faa63059eb4658313 ......
checking db27c6c53b8145d1e6f45e822c7f69527c794578 ......
	 orig commit -> d31fc13fdcb20e1c317f9a7dd6273c18fbd58308 ......
checking cb65df419ec536b4abeabe0985aebbe23d8ffd3a ......
	 orig commit -> f605cfca8c39ffa2b98c06d2b9f30ba64f1e54e3 ......
checking 94ee9a43c689ea8cfb45d7a74e00756605af3732 ......
	 orig commit -> 2bbea6e117357d17842114c65e9a9cf2d13ae8a3 ......
checking c698169b3027be08facc8ee1cb4d8f786c007b5e ......
	 orig commit -> 82d71ed0277efc45360828af8c4e4d40e1b45352 ......
checking 5556bf88fd03fce6d86f3a2e0abdc4726fd6a33b ......
	 orig commit -> ecb29abd4cb0670c616fb563a078f25d777ce530 ......
checking de3d8015f87fb1536879bc6824a483e17cfe99b3 ......
	 orig commit -> a46f8cd696624ef757be0311eb28f119c36778e8 ......
checking 3d363ad0de093c27b2c00a5a5247f4db4b36ff6c ......
	 orig commit -> 5651e5e094591f479adad5830ac1bc45196a39b3 ......
checking bc09bf874d6c7d262b92525dcdf07868786cfed9 ......
	 orig commit -> 9e5b127d6f33468143d90c8a45ca12410e4c3fa7 ......
checking d3ab3aa8adcab55141696049936d247b7a62b40f ......
	 orig commit -> bf617f7a92edc6bb2909db2bfa4576f50b280ee5 ......
checking a9d617543c89ed41238de8bd4209801089f105f9 ......
	 orig commit -> f5246862f82f1e16bbf84cda4cddf287672b30fe ......
checking b4cc441afd750abffb247205542ab7070298e776 ......
	 orig commit -> f002612b9d86613bc6fde0a444e0095225f6053e ......
checking 117ccc1846afbe63f1d5941859299f05c35c63fe ......
	 orig commit -> 5775b843a619b3c93f946e2b55a208d9f0f48b59 ......
checking 9b6fe8dc375b05eba37549e0396c4d55cc463819 ......
	 orig commit -> 05454c1bde91fb013c0431801001da82947e6b5a ......
checking 3888ac575deeaecc2888de0f94dd0326acb4cc2c ......
	 orig commit -> bc3cc75281b3c2b1c5355d88d147b66a753bb9a5 ......
checking 121de4edcab749b1ab69c47b5c2a1dec8a0d40ef ......
	 orig commit -> ed8cffda27dea6fd3dafb3ee881c5a786edac9ca ......
checking 19434e74192e86218f3a727cbd90000148618249 ......
	 orig commit -> 563c4ba3bd2b8b0b21c65669ec2226b1cfa1138b ......
checking 5bb5f95132df9c5c10cf12b1be9e00471c41029c ......
	 orig commit -> fca32340a5e8b896f57d41fd94b8b1701df25eb1 ......
checking f2c9d72746730adf336fb54aa924fd8c5dcc271f ......
	 orig commit -> a3a4a3b37c9b911af4c375b2475cea0fd2b84d38 ......
checking e1d32f93981e74332f8e0efae5cba2832f098919 ......
	 orig commit -> 0bcc3fb95b97ac2ca223a5a870287b37f56265ac ......
checking f59418121e7af1df60d045f2e78ead6e0b5b009d ......
	 orig commit -> 31184d8c6ea49ea0676d100cdd7e1f102ad025b5 ......
checking 494ce7e6afff5532f31c661cc7432ed9748452e7 ......
	 orig commit -> d7cb44496a9bb458632cb3c18acb08949c210448 ......
checking 9c6d844357a30e5dfcbb015c0d07a8175464b9c6 ......
	 orig commit -> 97f3c0a4b0579b646b6b10ae5a3d59f0441cc12c ......
checking 1e45b8dfb148997c2725f00e87ef8fa393320f5b ......
	 orig commit -> b4c0de312613ca676db5bd7e696a44b56795612a ......
checking fe45138dd010dd479716c669660f8bdc8125ded5 ......
	 orig commit -> fadd94e05c02afec7b70b0b14915624f1782f578 ......
		 fadd94e05c02afec7b70b0b14915624f1782f578 has problem. Fixes commit -> 3943b040f11ed0cc6d4585fd286a623ca8634547
commit 3ddf06cdf05aab898a10cc1c1d28f2ecc43a6f34
Author: Shan Hai <shan.hai@oracle.com>
Date:   Thu Aug 23 02:02:56 2018 +0800

    bcache: release dc->writeback_lock properly in bch_writeback_thread()
    
    commit 3943b040f11ed0cc6d4585fd286a623ca8634547 upstream.
    
    The writeback thread would exit with a lock held when the cache device
    is detached via sysfs interface, fix it by releasing the held lock
    before exiting the while-loop.
    
    Fixes: fadd94e05c02 (bcache: quit dc->writeback_thread when BCACHE_DEV_DETACHING is set)
    Signed-off-by: Shan Hai <shan.hai@oracle.com>
    Signed-off-by: Coly Li <colyli@suse.de>
    Tested-by: Shenghui Wang <shhuiw@foxmail.com>
    Cc: stable@vger.kernel.org #4.17+
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking b19d676b7715deaaaf1f53cb0af6c58712c11504 ......
	 orig commit -> 55496d3fe2acd1a365c43cbd613a20ecd4d74395 ......
checking 796fd6b5939248415f88016a77f5b32692c40ca2 ......
	 orig commit -> 55b55abc17f238c61921360e61dde90dd9a326d1 ......
checking 4767139615790512019fbcf4c0d151f02f1846e2 ......
	 orig commit -> 6d97d5aba08b26108f95dc9fb7bbe4d9436c769c ......
checking ebfab1f2ddf3540cc1ba6af1671eae23c1ebc905 ......
	 orig commit -> bda7fab54828bbef2164bb23c0f6b1a7d05cc718 ......
checking 99d8240f0dbabe9511a880ba32d632fe3b1834f8 ......
	 orig commit -> ab60368ab6a452466885ef4edf0cefd089465132 ......
checking 79ad08dae99b978b6d1567f746076272cadefc38 ......
	 orig commit -> 843bd7db79c861b49e2912d723625f5fa8e94502 ......
checking e63ff84eb09953c4028fc450fe2c4c0103cf7ba0 ......
	 orig commit -> 8b2d93dd22615cb7f3046a5a2083a6f8bb8052ed ......
checking 6d59a4a6df2c9e30242ab3e02b436fc30cdf5b34 ......
	 orig commit -> 957f6ba8adc7be401a74ccff427e4cfd88d3bfcb ......
checking 3feab927bb324ffd673825f6f3911f61775ed9d3 ......
	 orig commit -> 88893cf787d3062c631cc20b875068eb11756e03 ......
checking 98b219800a8fc5ce5da5eb597f1fbd8e010ae87a ......
	 orig commit -> 6c59f64b7ecf2bccbe73931d7d573d66ed13b537 ......
checking bbcc07d5fcb1145b58a3ae6ccf7ffb8ba41a4b61 ......
	 orig commit -> e1ebd0e5b9d0a10ba65e63a3514b6da8c6a5a819 ......
checking 0ebbbeb8c4651c3566028df308d8b53b09105e3e ......
	 orig commit -> bb19af816025d495376bd76bf6fbcf4244f9a06d ......
checking 2a48e89c37bf60872a297cf584544826a44c29b7 ......
	 orig commit -> 415eb2a1aaa4881cf85bd86c683356fdd8094a23 ......
checking 0c16b7ed7704c39efc2d633a4a33ba3f2ec4710a ......
	 orig commit -> b845f66f78bf42a4ce98e5cfe0e94fab41dd0742 ......
checking 4f9711115a11bbc8b5e371a6572c12ebadef2a73 ......
	 orig commit -> f61e64310b75733d782e930d1fb404b84699eed6 ......
checking c73749beaab56ed94c7c85124650773c9f688b8d ......
	 orig commit -> 0834d627fbea00c1444075eb3e448e1974da452d ......
checking bebc3f0137796d0377fb7c06bdf191941f62b033 ......
	 orig commit -> 8b29d29abc484d638213dd79a18a95ae7e5bb402 ......
checking bc45cf2446bf7350ea6db9f178f11996aadffb30 ......
	 orig commit -> e283655b5abe26462d53d5196f186c5e8863af3b ......
checking f22984237aa3d433a16317c4253ee951d3aab2ba ......
	 orig commit -> c37a3c94775855567b90f91775b9691e10bd2806 ......
checking 34f0516b709826c9210ad7e662a47fbef32ce3a1 ......
	 orig commit -> 57b0c9d49b94bbeb53649b7fbd264603c1ebd585 ......
checking 9b7c95ac2e0272b34b26ecc3a6bd9163e92e33c2 ......
	 orig commit -> 03877bf6a30cca7d4bc3ffabd3c3e9464a7a1a19 ......
checking 9c38c3ba5310b31196a8c2eca32c9398d723c25d ......
	 orig commit -> 8a5a916d9a35e13576d79cc16e24611821b13e34 ......
checking bee3c02ab61a87e20c2a93f2bd6789ae09f437ad ......
	 orig commit -> 8434ec46c6e3232cebc25a910363b29f5c617820 ......
checking 5934adafba3bfc43e9c8a22bd4ee5e7a2429cdc4 ......
	 orig commit -> 3c0efdf03b2d127f0e40e30db4e7aa0429b1b79a ......
checking deb064c4a906fcb541d0d56f59974a5397cf2e3f ......
	 orig commit -> 60d6e6f0b9e422dd01aeda39257ee0428e5e2a3f ......
checking 8e02caa11752874beaa9e1a7c3c4a99f3dda4571 ......
	 orig commit -> d13864b68e41c11e4231de90cf358658f6ecea45 ......
checking 9397f74deff9cddae7a62fd50d3e546858bf4951 ......
	 orig commit -> 2c98425720233ae3e135add0c7e869b32913502f ......
checking 94b4fed80f9265c95f9a9ee7a40db95f09630d1d ......
	 orig commit -> add5ff7a216ee545a214013f26d1ef2f44a9c9f8 ......
checking 3d0632557e6435b88e8ae91b78b098dbae123372 ......
	 orig commit -> d29a20645d5e929aa7e8616f28e5d8e1c49263ec ......
checking fbf947dd36861f106cfd6048367126089b26976b ......
	 orig commit -> bb34f24c7d2c98d0c81838a7700e6068325b17a0 ......
checking 4367fb9e86c303887a6fe8f8f47866373f17a7e6 ......
	 orig commit -> 1e1c50a929bc9e49bc3f9935b92450d9e69f8158 ......
checking 14c4d5f6e9f39070f1cfdbf4483e4c7ddc827f52 ......
	 orig commit -> 80c0b4210a963e31529e15bf90519708ec947596 ......
checking b38357528cd30e84942668352da8507cd4a0825b ......
	 orig commit -> b98def7ca6e152ee55e36863dddf6f41f12d1dc6 ......
checking d7f4e94843d97f5ce068f3b15260ada151d57f25 ......
	 orig commit -> e92bb4dd9673945179b1fc738c9817dd91bfb629 ......
checking 2272b8322cfa6c5b40d006721cedd17e2fc92211 ......
	 orig commit -> 77da2ba0648a4fd52e5ff97b8b2b8dd312aec4b0 ......
checking bb928fbe0f05d98570f6d10b5ab2961323ed1f89 ......
	 orig commit -> 76327a35caabd1a932e83d6a42b967aa08584e5d ......
checking 707f25a21d617cae6e3b42811f3e3a108026f31d ......
	 orig commit -> 8913315e9459b146e5888ab5138e10daa061b885 ......
checking 3bb576ce8a83f82c162333a4091305e48ab8fc68 ......
	 orig commit -> 8c81dd46ef3c416b3b95e3020fb90dbd44e6140b ......
checking b2666b2b70e88aec0323660e4e8d143411ddf2ff ......
	 orig commit -> 2d097c50212e137e7b53ffe3b37561153eeba87d ......
checking 423794780d0589356d0fa5287e376eb5bcbdf44b ......
	 orig commit -> a06ad633a37c64a0cd4c229fc605cee8725d376e ......
checking b62143830170e14ccd94c2e340a2ce8f2f4c777b ......
	 orig commit -> a0b0d1c345d0317efe594df268feb5ccc99f651e ......
checking 2bbb81de2b7c242fc724a1597a0aac6f1d78e4a4 ......
	 orig commit -> 639d6aafe437a7464399d2a77d006049053df06f ......
checking 1e2694161367a0bc370f897d03c5a4d3ff7f094f ......
	 orig commit -> e3e288121408c3abeed5af60b87b95c847143845 ......
checking f2a1bf451130e7141e3cf88f7e682c0d6afa9612 ......
	 orig commit -> 74c6c71530847808d4e3be7b205719270efee80c ......
checking bec95d211f1256ebb8414225cb235f22c1a4aa12 ......
	 orig commit -> 96a598996f6ac518ac79839ecbb17c91af91f4f7 ......
checking 2b1c1ad87805cab84cca87a3705c3b3b8e196840 ......
	 orig commit -> e81b5e01c14add8395dfba7130f8829206bb507d ......
checking b389e04a464f8abdfe949658fa20e1a5e7fdef82 ......
	 orig commit -> ae4745730cf8e693d354ccd4dbaf59ea440c09a9 ......
checking 51db67432b02593fdf011b4a2224ebd7ee26e637 ......
	 orig commit -> 914b6dfff790544d9b77dfd1723adb3745ec9700 ......
checking f2f820205cbf5f6ab40e59eaa6f6e68be2557bcc ......
	 orig commit -> f8437520704cfd9cc442a99d73ed708a3cdadaf9 ......
checking 4703f3fc5e495fc982c9ef41d304d682491e6a7d ......
	 orig commit -> b85ab56c3f81c5a24b5a5213374f549df06430da ......
checking fb58c034ee7ed508126fc236fa95b66d65c11d80 ......
	 orig commit -> 71eb9ee9596d8df3d5723c3cfc18774c6235e8b1 ......
checking b9c6381de1265870b045dcb073be4d0d0a1c656d ......
	 orig commit -> 743989254ea9f132517806d8893ca9b6cf9dc86b ......
checking 1475b5ab37dacdb610a1c402a82b2110fc8cf0cf ......
	 orig commit -> 73b9160d0dfe44dfdaffd6465dc1224c38a4a73c ......
checking 511d9451a37607246483bff6741cad2ea7e3924b ......
	 orig commit -> a752c0a4524889cdc0765925258fd1fd72344100 ......
checking 00a7d83c8acb9843f27ebf06208cd7f3059667e5 ......
	 orig commit -> f8fb3419ead44f9a3136995acd24e35da4525177 ......
checking 9cf1e7f6bdd0a2bec6299b5830a32aa8a847cbe3 ......
	 orig commit -> dfa453bc90eca0febff33c8d292a656e53702158 ......
checking c44ecab27c3471a2fa81f3a3fdea2bfcd5c7c171 ......
	 orig commit -> 5fbdbed797b6d12d043a5121fdbc8d8b49d10e80 ......
checking 47b91fcf63246d140148f2c3b2b3500dedcbfad3 ......
	 orig commit -> 871bef2000968c312a4000b2f56d370dcedbc93c ......
checking 6b7ff8e50a9d7bd9dd06f97a0076c2dcde675a4d ......
	 orig commit -> 9d3c3354bb85bab4d865fe95039443f09a4c8394 ......
checking be1a9d14d6dbb38990e81467b776c6044508b893 ......
	 orig commit -> 8970a63e965b43288c4f5f40efbc2bbf80de7f16 ......
checking 94ef0ff0b8ff0fd513653b2293cfcbfa1cd20638 ......
	 orig commit -> b15606f47b89b0b09936d7f45b59ba6275527041 ......
checking 2809193b46d2544c3362d67f9c03657dec1c5234 ......
	 orig commit -> c3594f22302cca5e924e47ec1cc8edd265708f41 ......
checking 8d1d56d9384d4f86052df55f82e70ea99f3b5906 ......
	 orig commit -> 5f3e3b85cc0a5eae1c46d72e47d3de7bf208d9e2 ......
checking df17a3408d5e21919d40d72141befb08fcb197fe ......
	 orig commit -> 825d487583089f9a33d31650c9c41f6474aab7fc ......
checking 78e7409901054e87559f15724652b4d666bd7f8a ......
	 orig commit -> 9b9322db5c5a1917a66c71fe47c3848a9a31227e ......
checking d4271d86a4cad42a49a1ebec31cf90d45760210e ......
	 orig commit -> c917e0f259908e75bd2a65877e25f9d90c22c848 ......
checking d82309e24315a99a29342d330f6142122e249963 ......
	 orig commit -> 03080e5ec72740c1a62e6730f2a5f3f114f11b19 ......
checking 69e692668cf51bb1a44366e770c561f386644ee0 ......
	 orig commit -> dd1df24737727e119c263acf1be2a92763938297 ......
checking d86130f69705054a57bb80ec0566a7f2852b09b8 ......
	 orig commit -> fc04fdb2c8a894283259f5621d31d75610701091 ......
checking 33e0acf13c744efefba4322c1963968f538ff671 ......
	 orig commit -> 6f27d2c2a8c236d296201c19abb8533ec20d212b ......
checking 58df28952c377af5b055be678e8e922a4a8ea3e5 ......
	 orig commit -> 4bbb3e0e8239f9079bf1fe20b3c0cb598714ae61 ......
		 4bbb3e0e8239f9079bf1fe20b3c0cb598714ae61 has problem. Fixes commit -> ae4745730cf8e693d354ccd4dbaf59ea440c09a9
commit b389e04a464f8abdfe949658fa20e1a5e7fdef82
Author: Toshiaki Makita <makita.toshiaki@lab.ntt.co.jp>
Date:   Thu Mar 29 19:05:29 2018 +0900

    net: Fix untag for vlan packets without ethernet header
    
    [ Upstream commit ae4745730cf8e693d354ccd4dbaf59ea440c09a9 ]
    
    In some situation vlan packets do not have ethernet headers. One example
    is packets from tun devices. Users can specify vlan protocol in tun_pi
    field instead of IP protocol, and skb_vlan_untag() attempts to untag such
    packets.
    
    skb_vlan_untag() (more precisely, skb_reorder_vlan_header() called by it)
    however did not expect packets without ethernet headers, so in such a case
    size argument for memmove() underflowed and triggered crash.
    
    ====
    BUG: unable to handle kernel paging request at ffff8801cccb8000
    IP: __memmove+0x24/0x1a0 arch/x86/lib/memmove_64.S:43
    PGD 9cee067 P4D 9cee067 PUD 1d9401063 PMD 1cccb7063 PTE 2810100028101
    Oops: 000b [#1] SMP KASAN
    Dumping ftrace buffer:
       (ftrace buffer empty)
    Modules linked in:
    CPU: 1 PID: 17663 Comm: syz-executor2 Not tainted 4.16.0-rc7+ #368
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    RIP: 0010:__memmove+0x24/0x1a0 arch/x86/lib/memmove_64.S:43
    RSP: 0018:ffff8801cc046e28 EFLAGS: 00010287
    RAX: ffff8801ccc244c4 RBX: fffffffffffffffe RCX: fffffffffff6c4c2
    RDX: fffffffffffffffe RSI: ffff8801cccb7ffc RDI: ffff8801cccb8000
    RBP: ffff8801cc046e48 R08: ffff8801ccc244be R09: ffffed0039984899
    R10: 0000000000000001 R11: ffffed0039984898 R12: ffff8801ccc244c4
    R13: ffff8801ccc244c0 R14: ffff8801d96b7c06 R15: ffff8801d96b7b40
    FS:  00007febd562d700(0000) GS:ffff8801db300000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: ffff8801cccb8000 CR3: 00000001ccb2f006 CR4: 00000000001606e0
    DR0: 0000000020000000 DR1: 0000000020000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000600
    Call Trace:
     memmove include/linux/string.h:360 [inline]
     skb_reorder_vlan_header net/core/skbuff.c:5031 [inline]
     skb_vlan_untag+0x470/0xc40 net/core/skbuff.c:5061
     __netif_receive_skb_core+0x119c/0x3460 net/core/dev.c:4460
     __netif_receive_skb+0x2c/0x1b0 net/core/dev.c:4627
     netif_receive_skb_internal+0x10b/0x670 net/core/dev.c:4701
     netif_receive_skb+0xae/0x390 net/core/dev.c:4725
     tun_rx_batched.isra.50+0x5ee/0x870 drivers/net/tun.c:1555
     tun_get_user+0x299e/0x3c20 drivers/net/tun.c:1962
     tun_chr_write_iter+0xb9/0x160 drivers/net/tun.c:1990
     call_write_iter include/linux/fs.h:1782 [inline]
     new_sync_write fs/read_write.c:469 [inline]
     __vfs_write+0x684/0x970 fs/read_write.c:482
     vfs_write+0x189/0x510 fs/read_write.c:544
     SYSC_write fs/read_write.c:589 [inline]
     SyS_write+0xef/0x220 fs/read_write.c:581
     do_syscall_64+0x281/0x940 arch/x86/entry/common.c:287
     entry_SYSCALL_64_after_hwframe+0x42/0xb7
    RIP: 0033:0x454879
    RSP: 002b:00007febd562cc68 EFLAGS: 00000246 ORIG_RAX: 0000000000000001
    RAX: ffffffffffffffda RBX: 00007febd562d6d4 RCX: 0000000000454879
    RDX: 0000000000000157 RSI: 0000000020000180 RDI: 0000000000000014
    RBP: 000000000072bea0 R08: 0000000000000000 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000246 R12: 00000000ffffffff
    R13: 00000000000006b0 R14: 00000000006fc120 R15: 0000000000000000
    Code: 90 90 90 90 90 90 90 48 89 f8 48 83 fa 20 0f 82 03 01 00 00 48 39 fe 7d 0f 49 89 f0 49 01 d0 49 39 f8 0f 8f 9f 00 00 00 48 89 d1 <f3> a4 c3 48 81 fa a8 02 00 00 72 05 40 38 fe 74 3b 48 83 ea 20
    RIP: __memmove+0x24/0x1a0 arch/x86/lib/memmove_64.S:43 RSP: ffff8801cc046e28
    CR2: ffff8801cccb8000
    ====
    
    We don't need to copy headers for packets which do not have preceding
    headers of vlan headers, so skip memmove() in that case.
    
    Fixes: 4bbb3e0e8239 ("net: Fix vlan untag for bridge and vlan_dev with reorder_hdr off")
    Reported-by: Eric Dumazet <eric.dumazet@gmail.com>
    Signed-off-by: Toshiaki Makita <makita.toshiaki@lab.ntt.co.jp>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking b43e24b039364fdab601a020103ae55d4e0f7dea ......
	 orig commit -> 6a055b92de15af987b4027826d43aa103c65a3c4 ......
checking e1e08390525aba7df545ac29ef9379593d0caa94 ......
	 orig commit -> cf55612a945039476abfd73e39064b2e721c3272 ......
checking d543907a4730400f5c5b684c57cb5bbbfd6136ab ......
	 orig commit -> d52e5a7e7ca49457dd31fc8b42fb7c0d58a31221 ......
		 d52e5a7e7ca49457dd31fc8b42fb7c0d58a31221 has problem. Fixes commit -> 28d35bcdd3925e7293408cdb8aa5f2aac5f0d6e3
checking 30393949d1ed11b3025ff6f5966d8b94040d1999 ......
	 orig commit -> 537f4146c53c95aac977852b371bafb9c6755ee1 ......
checking cbaab49706e993a42e44bed67418156e4c5afcb1 ......
	 orig commit -> 3c4fe80b32c685bdc02b280814d0cfe80d441c72 ......
checking cb5ce10a27d5a55c50072dfdeb12c9b62d140563 ......
	 orig commit -> 932909d9b28d27e807ff8eecb68c7748f6701628 ......
checking 3bdcced41936b054470639c6a76ae033df1074e3 ......
	 orig commit -> 3cd2c313f1d618f92d1294addc6c685c17065761 ......
checking 0238dbb33b156a36e29aa270c1493b7f04923f99 ......
	 orig commit -> e21da1c992007594d391e7b301779cf30f438691 ......
checking 0becf0693e8d5a4d14ebe8650941860c2726e2e3 ......
	 orig commit -> 351b2bccede1cb673ec7957b35ea997ea24c8884 ......
checking 9bcfd1c63ada820505690e1c41494fd179101996 ......
	 orig commit -> bb7f8f199c354c4cf155b1d6d55f86eaaed7fa5a ......
checking 57f1033e92781c2ebf242f71ab22c1fe1ae63359 ......
	 orig commit -> e06513d78d54e6c7026c9043a39e2c01ee25bdbe ......
checking ae19aaa6fc07011c43ac6d9d9e013166c51404c3 ......
	 orig commit -> cc5db3150e87fe7f7e947bf333b6c1c97f848ecb ......
checking 65518c6e641679cc149bd1f549591be27bcc3cd9 ......
	 orig commit -> 803fafbe0cd522fa6b9e41ca3b96cfb2e2a2222d ......
checking 05b4268070b14dbd77ac6f5986b77a80a458fffa ......
	 orig commit -> 250c6c49e3b68756b14983c076183568636e2bde ......
checking d2d48e0161b54be303b8023fd85b4c95ac8b83ca ......
	 orig commit -> 5d414b178e950ce9685c253994cc730893d5d887 ......
checking c6ffc778ca3fb5295eb2744c2288e29a29729e34 ......
	 orig commit -> a18177925c252da7801149abe217c05b80884798 ......
checking 6b4a65a7d035fc4bcc146f4766e0a862f3aabca3 ......
	 orig commit -> 0077416a3d529baccbe07ab3242e8db541cfadf6 ......
checking fccbe38f3933a2226a533cb46bb91bc6b6064f46 ......
	 orig commit -> 551e1c67b4207455375a2e7a285dea1c7e8fc361 ......
checking 7c5f3d1013eaf42cf20d197884364a7f62f59bdf ......
	 orig commit -> e3fd112cbf21d049faf64ba1471d72b93c22109a ......
checking b79a8597b0121263a839be1ebec873e32bd169ed ......
	 orig commit -> 69c907022a7d9325cdc5c9dd064571e445df9a47 ......
checking a47047e2b40abefe815313279175859590565c04 ......
	 orig commit -> aea3fca005fb45f80869f2e8d56fd4e64c1d1fdb ......
checking 36dd98b0e72da1e4ba4ab7d6b11151400fc7ae6d ......
	 orig commit -> 4e7dc08e57c95673d2edaba8983c3de4dd1f65f5 ......
checking 585f1ef43c1c0736e37190609140cd7dc4bd775f ......
	 orig commit -> 74c12c630fe310eb7fcae1b292257d47781fff0a ......
checking 25f9cea4300a0c3679e561fdea65c9de42d3768d ......
	 orig commit -> 93ac3deb7c220cbcec032a967220a1f109d58431 ......
checking aecd123f6a04e2f09859663cd8c33b8d72f778a9 ......
	 orig commit -> 7bd3e7b743956afbec30fb525bc3c5e22e3d475c ......
checking 57a85742bb00d5ab4ef174c59d35d122fe804188 ......
	 orig commit -> de04d4fbf87b769ab18c480e4f020c53e74bbdd2 ......
checking ec12bb57cd0db96babc0ad5dbdf068f39643cfad ......
	 orig commit -> debd574f4195e205ba505b25e19b2b797f4bcd94 ......
checking be00ce584839c058d2eeabae0e104546b4bc4ddc ......
	 orig commit -> cd4a6f3ab4d80cb919d15897eb3cbc85c2009d4b ......
checking b672f4bf9d2383afa048bdf64b0ac9915c672476 ......
	 orig commit -> d4dfc0f4d39475ccbbac947880b5464a74c30b99 ......
checking 6d8ce377c6180a75ca44c62eca9fc400989296d4 ......
	 orig commit -> e64b6afa98f3629d0c0c46233bbdbe8acdb56f06 ......
checking 058c84a37f60493015dd523a8931a7a3919d72ff ......
	 orig commit -> 910f8befdf5bccf25287d9f1743e3e546bcb7ce0 ......
checking c0074250ea9064ddb9c0476b6bec75a4d862cc01 ......
	 orig commit -> bffd2b61670feef18d2535e9b53364d270a1c991 ......
checking f981ef66dd3dfdeaf35da9a4310d5d7f8549a22d ......
	 orig commit -> ecc832758a654e375924ebf06a4ac971acb5ce60 ......
checking 6a2f2824eec75251cdedd9db2f10a224b018188f ......
	 orig commit -> 590399ddf9561f2ed0839311c8ae1be21597ba68 ......
checking c0ce44186a8810c80fefe5d9fb5277f692971c39 ......
	 orig commit -> 64c3f648c25d108f346fdc96c15180c6b7d250e9 ......
checking f38309df20f729073e3fdda3676a108eec76d4ef ......
	 orig commit -> 0a5aff64f20d92c5a6e9aeed7b5950b0b817bcd9 ......
checking 3588d9aed3ad11a3881f062647a482dd47910414 ......
	 orig commit -> 2b3957c34b6d7f03544b12ebbf875eee430745db ......
checking 11a670a04ecbc3d17135769ce64b21f96d6266f1 ......
	 orig commit -> a6aa80446234ec0ad38eecdb8efc59e91daae565 ......
checking b9822c2c24f948304692ca576ffe73579a8a58ae ......
	 orig commit -> 60eb34ec5526e264c2bbaea4f7512d714d791caf ......
checking 12700760a014f85202c519b43744dc3ff26d6271 ......
	 orig commit -> d716d9b702bb759dd6fb50804f10a174bd156d71 ......
checking bc3d7001d88b6b3ea4092562f346d1520d8cb4d7 ......
	 orig commit -> 9a191b114906457c4b2494c474f58ae4142d4e67 ......
checking 14a61b6f2d3fbf941128fab5d6e20519d8e5309e ......
	 orig commit -> 4c27bf3c5b7434ccb9ab962301da661c26b467a4 ......
checking 9df8e11bbdeba9fe792b76658f5edcfddbb30882 ......
	 orig commit -> c77f5fbbefc04612755117775e8555c2a7006cac ......
checking 790231395ed6a5360fc0dd0f41ec4e3fdfc1896c ......
	 orig commit -> 13a55372b64e00e564a08d785ca87bd9d454ba30 ......
checking 087d268b76b2adedb9b39e101ebf4097c3b42730 ......
	 orig commit -> 18106734b512664a8541026519ce4b862498b6c3 ......
checking 8a25a9d63c478b6893cab930ea1fd07c9ec0a261 ......
	 orig commit -> f287eb9013ccf199cbfa4eabd80c36fedfc15a73 ......
checking 23f9fb0f53b3add8669f093d58fe193846154a87 ......
	 orig commit -> f25a2dfc20e3a3ed8fe6618c331799dd7bd01190 ......
checking fef6509a9d273a6a2e3e954830c5a296b890d342 ......
	 orig commit -> fce672db548ff19e76a08a32a829544617229bc2 ......
checking 50b1c6b227433eea392cc8e9715e886034643850 ......
	 orig commit -> b0264ecdfeab5f889b02ec54af7ca8cc1c245e2f ......
checking d31ae952b198d038ccf6dc95cb00ebdf9127d08a ......
	 orig commit -> 011c935fceae5252619ef730baa610c655281dda ......
checking 280a7b6f18fd0fd4cee2029c50a4ddf351817334 ......
	 orig commit -> 10d570284258a30dc104c50787c5289ec49f3d23 ......
checking d505165f3787350b6268a9b11e7ab2298f83f2fc ......
	 orig commit -> fc6a5d0601c5ac1d02f283a46f60b87b2033e5ca ......
checking 4cf517fc579bf6a2040a978e0a8385ba030e2ebc ......
	 orig commit -> 3bf2a09da956b43ecfaa630a2ef9a477f991a46a ......
checking b6aa03f189cde8996534ca55e8b8e15c719359ed ......
	 orig commit -> abd6360591d3f8259f41c34e31ac4826dfe621b8 ......
checking b6e82d779221034848dd73e0663f3288baf2003a ......
	 orig commit -> 3de59bb9d551428cbdc76a9ea57883f82e350b4d ......
checking 547f11fd132d908018109417216d23b4008a2780 ......
	 orig commit -> 8876391e440ba615b10eef729576e111f0315f87 ......
checking 527ed41ff2776311bdae56c2472ee0a5cbb60605 ......
	 orig commit -> 8cc07c808c9d595e81cbe5aad419b7769eb2e5c9 ......
checking bcefedb87cf9625d33d0e53dfdc52e43744593c1 ......
	 orig commit -> 015555fd4d2930bc0c86952c46ad88b3392f66e4 ......
checking 3eacc4ab0d4b96a134f2b2581f89ffb8ded0632c ......
	 orig commit -> 076467490b8176eb96eddc548a14d4135c7b5852 ......
checking f19a40b0d7a5c76d390325aa35b532a900fed8d1 ......
	 orig commit -> 4e14bf4236490306004782813b8b4494b18f5e60 ......
checking c3655e72f84971c9d861c1acb48cf7b035866c8d ......
	 orig commit -> 9f416319f40cd857d2bb517630e5855a905ef3fb ......
checking 6588cfd4dae78e7d14eacaff800ece7f8a9db2f8 ......
	 orig commit -> b323ac19b7734a1c464b2785a082ee50bccd3b91 ......
checking b8421da4b57b47dfb9ee9aacfb2612bb188f5aa5 ......
	 orig commit -> 4596749339e06dc7a424fc08a15eded850ed78b7 ......
checking afc5883b73347e9e0fb35850a704d06f026e1a7b ......
	 orig commit -> 472e8c55cf6622d1c112dc2bc777f68bbd4189db ......
		 472e8c55cf6622d1c112dc2bc777f68bbd4189db has problem. Fixes commit -> fbfcd0199170984bd3c2812e49ed0fe7b226959a
checking 8a5a436acaf5fffeea35b7c11209d00d58b74bf6 ......
	 orig commit -> 120f3b11ef88fc38ce1d0ff9c9a4b37860ad3140 ......
checking 5d375e14cd8d5f0d12a04462eb5c52d45fa2dcef ......
	 orig commit -> 657308f73e674e86b60509a430a46e569bf02846 ......
		 657308f73e674e86b60509a430a46e569bf02846 has problem. Fixes commit -> 9b9322db5c5a1917a66c71fe47c3848a9a31227e
commit 78e7409901054e87559f15724652b4d666bd7f8a
Author: Stefan Wahren <stefan.wahren@i2se.com>
Date:   Wed Mar 14 20:02:59 2018 +0100

    brcmfmac: Fix check for ISO3166 code
    
    [ Upstream commit 9b9322db5c5a1917a66c71fe47c3848a9a31227e ]
    
    The commit "regulatory: add NUL to request alpha2" increases the length of
    alpha2 to 3. This causes a regression on brcmfmac, because
    brcmf_cfg80211_reg_notifier() expect valid ISO3166 codes in the complete
    array. So fix this accordingly.
    
    Fixes: 657308f73e67 ("regulatory: add NUL to request alpha2")
    Signed-off-by: Stefan Wahren <stefan.wahren@i2se.com>
    Acked-by: Franky Lin <franky.lin@broadcom.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 6eacfc12597a820cd8e027f6129184d748467256 ......
	 orig commit -> 88e80c62671ceecdbb77c902731ec95a4bfa62f9 ......
checking 353be46dfdab675096cbcfb30d39f2fc33047201 ......
	 orig commit -> ba6887836178d43b3665b9da075c2c5dfe1d207c ......
checking 4d7388a1895b5b06c8f625abc782b1b9a0ffbea9 ......
	 orig commit -> 6459ae386699a5fe0dc52cf30255f75274fa43a4 ......
checking f18fb14521dd9d46b9d02bf7caf25ac100ff09f9 ......
	 orig commit -> 410d5e13e7638bc146321671e223d56495fbf3c7 ......
checking b912a541d4ca6bafc7d6343f5656eb8652015b9d ......
	 orig commit -> 770b55c995d171f026a9efb85e71e3b1ea47b93d ......
checking 9a8c6a26da1351885d2cd64f127102e7eafcb8b3 ......
	 orig commit -> f97a6b6c47d2f329a24f92cc0ca3c6df5727ba73 ......
checking 503b6c0d278dc7bf4b5cf1c9b092b7b461b32e15 ......
	 orig commit -> 083b20907185b076f21c265b30fe5b5f24c03d8c ......
checking 79dc8f386541754db2bee28799bc9ce6aecc6aff ......
	 orig commit -> 88913bd8ea2a75d7e460a4bed5f75e1c32660d7e ......
checking fc78ce270423500568ad2e65840a893666954719 ......
	 orig commit -> 53b8d89ddbdbb0e4625a46d2cdbb6f106c52f801 ......
checking bffff2e16f50ba5e6cbe4e5ccdb2e478965de06d ......
	 orig commit -> cb13b424e986aed68d74cbaec3449ea23c50e167 ......
checking be4132e07364c5a758ac9d0c8e89dbf663f41f78 ......
	 orig commit -> 1293b6191010672c0c9dacae8f71c6f3e4d70cbe ......
checking e4529bc4ff8407de2ad373d9a1c19328a5a645d2 ......
	 orig commit -> a588a8bb7b25a3fb4f7fed00feb7aec541fc2632 ......
checking 3f5af7cc105f9bf5e6995db27e20c0f83ad5abcb ......
	 orig commit -> 01a69cab01c184d3786af09e9339311123d63d22 ......
checking d6114a6884d902029b2938c35d43d8f36b73b101 ......
	 orig commit -> 191da271ac260700db3e5b4bb982a17ca78769d6 ......
checking 31155ee44dd94f379532a446b078175289e8c3ff ......
	 orig commit -> 95f3ce6a77893ac828ba841df44421620de4314b ......
checking ae58b7545f76710ab9a776c7cafbae5ebfc0ceb3 ......
	 orig commit -> d78d9ee9d40aca4781d2c5334972544601a4c3a2 ......
checking 5f3c6add07622e31a1f2acf259d8482cb1765792 ......
	 orig commit -> 651b9920d7a694ffb1f885aef2bbb068a25d9d66 ......
checking f55ec6a8d856ffbd53e7424207e722c3c3eb5c2d ......
	 orig commit -> a16b8d0cf2ec1e626d24bc2a7b9e64ace6f7501d ......
checking 69b28c18f7c8b3bbdc037f1cc029acc21723b997 ......
	 orig commit -> fe9c842695e26d8116b61b80bfb905356f07834b ......
checking cd620d1636dce0316dce93d5cff6ae03ce3bd85b ......
	 orig commit -> 6b7a5aea71b342ec0593d23b08383e1f33da4c9a ......
		 6b7a5aea71b342ec0593d23b08383e1f33da4c9a has problem. Fixes commit -> 2859de7637b541dc7191f4d3fce4a1adba80fb3e
checking b9a8aa96cb1a1702d8d21081c4f794dcb66dfcca ......
	 orig commit -> 5ab2ba931255d8bf03009c06d58dce97de32797c ......
checking f1a8a34c906dfc69be8399c8648691b955724222 ......
	 orig commit -> 4b9b0f01350500173f17e2b2e65beb4df4ef99c7 ......
checking 222fe5f1081812899713cddd51db1f7d90ffd74c ......
	 orig commit -> 8cbbf1745dcde7ba7e423dc70619d223de90fd43 ......
checking d5cea0404364192bcbc0990f089f02c40484cdc4 ......
	 orig commit -> d3be6d2a08bd26580562d9714d3d97ea9ba22c73 ......
checking 72877aa5ee14e71a3569c9289e080adf3828bc89 ......
	 orig commit -> db35340c536f1af0108ec9a0b2126a05d358d14a ......
checking b611d4548adab4f11e4de7aa6f0ecd7a46cee244 ......
	 orig commit -> 9a606f8d55cfc932ec02172aaed4124fdc150047 ......
checking 3f3beab9649a9c26d1a26ea0eebb69ed26428ebd ......
	 orig commit -> 9a379e77033f02c4a071891afdf0f0a01eff8ccb ......
checking 3a6ebe27cc8bc541bd27c710ea11d36771234091 ......
	 orig commit -> 0d3e45bc6507bd1f8728bf586ebd16c2d9e40613 ......
checking 2e857aaf091f00b342f5d66e1ffa77bcb25c1f6a ......
	 orig commit -> 54e02162d4454a99227f520948bf4494c3d972d0 ......
checking a5338dbdf1e711e9873ff1958c0adc180d40dfe1 ......
	 orig commit -> 827cc2fa024dd6517d62de7a44c7b42f32af371b ......
checking 5fa8ed82ff4696425df12cb6ac4e755c9692f3c6 ......
	 orig commit -> b6dd4d83dc2f78cebc9a7e6e7e4bc2be4d29b94d ......
checking 31710e63fa66518d1b9c1101060c2d0369e09b11 ......
	 orig commit -> d207af2eab3f8668b95ad02b21930481c42806fd ......
checking 7f409f1576de19de5545383d40373721bc723d2e ......
	 orig commit -> 95a2562590c2f64a0398183f978d5cf3db6d0284 ......
checking c8723ceed341db0e62570f5b996554bd60026af5 ......
	 orig commit -> 11dc13224c975efcec96647a4768a6f1bb7a19a8 ......
checking 059befd4e0ae7ad7c54d5d292a3cb75b51ff4bf9 ......
	 orig commit -> 595dd46ebfc10be041a365d0a3fa99df50b6ba73 ......
checking 517fbc77e8b44eed689d1576245e16a62a647f22 ......
	 orig commit -> 941ff6f11c020913f5cddf543a9ec63475d7c082 ......
		 941ff6f11c020913f5cddf543a9ec63475d7c082 has problem. Fixes commit -> 262f9d811c7608f1e74258ceecfe1fa213bdf912
commit f6bded8904218cc838971101eb216e0446bc0e1a
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Oct 5 19:38:46 2018 -0700

    bpf: do not blindly change rlimit in reuseport net selftest
    
    [ Upstream commit 262f9d811c7608f1e74258ceecfe1fa213bdf912 ]
    
    If the current process has unlimited RLIMIT_MEMLOCK,
    we should should leave it as is.
    
    Fixes: 941ff6f11c02 ("bpf: fix rlimit in reuseport net selftest")
    Signed-off-by: John Sperbeck <jsperbeck@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking a7f9a7eb40cab86b15908f17f987f00259e1d22e ......
	 orig commit -> e3d91b0ca523d53158f435a3e13df7f0cb360ea2 ......
checking d4008f81ccdffd9960e92a8332b19125976174fb ......
	 orig commit -> 7f4fc93d4713394ee8f1cd44c238e046e11b4f15 ......
checking 0d5da3123946e74d822022f95091fc3fe60f9f61 ......
	 orig commit -> 73ac105be390c1de42a2f21643c9778a5e002930 ......
checking d26dcc057c716cf4ffd7e6efe6567d7038fa35e1 ......
	 orig commit -> 682811b3ce1a5a4e20d700939a9042f01dbc66c4 ......
checking ee6fcd83cc8b9f1b7f7d3ea3314c1f8d2f410e5e ......
	 orig commit -> 99361bbf26337186f02561109c17a4c4b1a7536a ......
checking 4bf53b51342b134dfcd6e4a6477547077b8b545d ......
	 orig commit -> ade7db991b47ab3016a414468164f4966bd08202 ......
checking e0a1a0173aceffb45c8ab008d3d37c096224af56 ......
	 orig commit -> ac7f1061c2c11bb8936b1b6a94cdb48de732f7a4 ......
checking 0675ec13c63f9eb918342b63614738767ef079a3 ......
	 orig commit -> 202fb4ef81e3ec765c23bd1e6746a5c25b797d0e ......
checking a0138dc31d07220a07adbf065bb8fee023a02f40 ......
	 orig commit -> 2c0aa08631b86a4678dbc93b9caa5248014b4458 ......
checking 240ef711607a8b53e185b1e15b7f3920f677493d ......
	 orig commit -> 3ac7292a25db1c607a50752055a18aba32ac2176 ......
checking ca3108cd4764000309fdb8900262d183641eab49 ......
	 orig commit -> f599c64fdf7d9c108e8717fb04bc41c680120da4 ......
		 f599c64fdf7d9c108e8717fb04bc41c680120da4 has problem. Fixes commit -> 2d408c0d4574b01b9ed45e02516888bf925e11a9
45c8184c1bed1ca8a7f02918552063a00b909bf5
cb257783c2927b73614b20f915a91ff78aa6f3e8
commit 8e697f95532ddb0e6ae93ed01c276030655d36b4
Author: Ross Lagerwall <ross.lagerwall@citrix.com>
Date:   Thu Jun 21 14:00:20 2018 +0100

    xen-netfront: Fix mismatched rtnl_unlock
    
    [ Upstream commit cb257783c2927b73614b20f915a91ff78aa6f3e8 ]
    
    Fixes: f599c64fdf7d ("xen-netfront: Fix race between device setup and open")
    Reported-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Ross Lagerwall <ross.lagerwall@citrix.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 43bbab662dc99fdfef6d8928a204d103651d54f8
Author: Ross Lagerwall <ross.lagerwall@citrix.com>
Date:   Thu Jun 21 14:00:21 2018 +0100

    xen-netfront: Update features after registering netdev
    
    [ Upstream commit 45c8184c1bed1ca8a7f02918552063a00b909bf5 ]
    
    Update the features after calling register_netdev() otherwise the
    device features are not set up correctly and it not possible to change
    the MTU of the device. After this change, the features reported by
    ethtool match the device's features before the commit which introduced
    the issue and it is possible to change the device's MTU.
    
    Fixes: f599c64fdf7d ("xen-netfront: Fix race between device setup and open")
    Reported-by: Liam Shepherd <liam@dancer.es>
    Signed-off-by: Ross Lagerwall <ross.lagerwall@citrix.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 21fa748862123528c12acc29c495066d0f635d8f
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Fri Jul 20 18:33:59 2018 +0200

    xen-netfront: fix queue name setting
    
    [ Upstream commit 2d408c0d4574b01b9ed45e02516888bf925e11a9 ]
    
    Commit f599c64fdf7d ("xen-netfront: Fix race between device setup and
    open") changed the initialization order: xennet_create_queues() now
    happens before we do register_netdev() so using netdev->name in
    xennet_init_queue() is incorrect, we end up with the following in
    /proc/interrupts:
    
     60:        139          0   xen-dyn    -event     eth%d-q0-tx
     61:        265          0   xen-dyn    -event     eth%d-q0-rx
     62:        234          0   xen-dyn    -event     eth%d-q1-tx
     63:          1          0   xen-dyn    -event     eth%d-q1-rx
    
    and this looks ugly. Actually, using early netdev name (even when it's
    already set) is also not ideal: nowadays we tend to rename eth devices
    and queue name may end up not corresponding to the netdev name.
    
    Use nodename from xenbus device for queue naming: this can't change in VM's
    lifetime. Now /proc/interrupts looks like
    
     62:        202          0   xen-dyn    -event     device/vif/0-q0-tx
     63:        317          0   xen-dyn    -event     device/vif/0-q0-rx
     64:        262          0   xen-dyn    -event     device/vif/0-q1-tx
     65:         17          0   xen-dyn    -event     device/vif/0-q1-rx
    
    Fixes: f599c64fdf7d ("xen-netfront: Fix race between device setup and open")
    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Reviewed-by: Ross Lagerwall <ross.lagerwall@citrix.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 43bbab662dc99fdfef6d8928a204d103651d54f8
Author: Ross Lagerwall <ross.lagerwall@citrix.com>
Date:   Thu Jun 21 14:00:21 2018 +0100

    xen-netfront: Update features after registering netdev
    
    [ Upstream commit 45c8184c1bed1ca8a7f02918552063a00b909bf5 ]
    
    Update the features after calling register_netdev() otherwise the
    device features are not set up correctly and it not possible to change
    the MTU of the device. After this change, the features reported by
    ethtool match the device's features before the commit which introduced
    the issue and it is possible to change the device's MTU.
    
    Fixes: f599c64fdf7d ("xen-netfront: Fix race between device setup and open")
    Reported-by: Liam Shepherd <liam@dancer.es>
    Signed-off-by: Ross Lagerwall <ross.lagerwall@citrix.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 9d47d0301ef568b8a41b38605a5654e9f867b1b4
Author: Xiao Liang <xiliang@redhat.com>
Date:   Tue Aug 14 23:21:28 2018 +0800

    xen-netfront: fix warn message as irq device name has '/'
    
    [ Upstream commit 21f2706b20100bb3db378461ab9b8e2035309b5b ]
    
    There is a call trace generated after commit 2d408c0d4574b01b9ed45e02516888bf925e11a9(
    xen-netfront: fix queue name setting). There is no 'device/vif/xx-q0-tx' file found
    under /proc/irq/xx/.
    
    This patch only picks up device type and id as its name.
    
    With the patch, now /proc/interrupts looks like below and the warning message gone:
     70:         21          0          0          0   xen-dyn    -event     vif0-q0-tx
     71:         15          0          0          0   xen-dyn    -event     vif0-q0-rx
     72:         14          0          0          0   xen-dyn    -event     vif0-q1-tx
     73:         33          0          0          0   xen-dyn    -event     vif0-q1-rx
     74:         12          0          0          0   xen-dyn    -event     vif0-q2-tx
     75:         24          0          0          0   xen-dyn    -event     vif0-q2-rx
     76:         19          0          0          0   xen-dyn    -event     vif0-q3-tx
     77:         21          0          0          0   xen-dyn    -event     vif0-q3-rx
    
    Below is call trace information without this patch:
    
    name 'device/vif/0-q0-tx'
    WARNING: CPU: 2 PID: 37 at fs/proc/generic.c:174 __xlate_proc_name+0x85/0xa0
    RIP: 0010:__xlate_proc_name+0x85/0xa0
    RSP: 0018:ffffb85c40473c18 EFLAGS: 00010286
    RAX: 0000000000000000 RBX: 0000000000000006 RCX: 0000000000000006
    RDX: 0000000000000007 RSI: 0000000000000096 RDI: ffff984c7f516930
    RBP: ffffb85c40473cb8 R08: 000000000000002c R09: 0000000000000229
    R10: 0000000000000000 R11: 0000000000000001 R12: ffffb85c40473c98
    R13: ffffb85c40473cb8 R14: ffffb85c40473c50 R15: 0000000000000000
    FS:  0000000000000000(0000) GS:ffff984c7f500000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007f69b6899038 CR3: 000000001c20a006 CR4: 00000000001606e0
    Call Trace:
    __proc_create+0x45/0x230
    ? snprintf+0x49/0x60
    proc_mkdir_data+0x35/0x90
    register_handler_proc+0xef/0x110
    ? proc_register+0xfc/0x110
    ? proc_create_data+0x70/0xb0
    __setup_irq+0x39b/0x660
    ? request_threaded_irq+0xad/0x160
    request_threaded_irq+0xf5/0x160
    ? xennet_tx_buf_gc+0x1d0/0x1d0 [xen_netfront]
    bind_evtchn_to_irqhandler+0x3d/0x70
    ? xenbus_alloc_evtchn+0x41/0xa0
    netback_changed+0xa46/0xcda [xen_netfront]
    ? find_watch+0x40/0x40
    xenwatch_thread+0xc5/0x160
    ? finish_wait+0x80/0x80
    kthread+0x112/0x130
    ? kthread_create_worker_on_cpu+0x70/0x70
    ret_from_fork+0x35/0x40
    Code: 81 5c 00 48 85 c0 75 cc 5b 49 89 2e 31 c0 5d 4d 89 3c 24 41 5c 41 5d 41 5e 41 5f c3 4c 89 ee 48 c7 c7 40 4f 0e b4 e8 65 ea d8 ff <0f> 0b b8 fe ff ff ff 5b 5d 41 5c 41 5d 41 5e 41 5f c3 66 0f 1f
    ---[ end trace 650e5561b0caab3a ]---
    
    Signed-off-by: Xiao Liang <xiliang@redhat.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 21fa748862123528c12acc29c495066d0f635d8f
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Fri Jul 20 18:33:59 2018 +0200

    xen-netfront: fix queue name setting
    
    [ Upstream commit 2d408c0d4574b01b9ed45e02516888bf925e11a9 ]
    
    Commit f599c64fdf7d ("xen-netfront: Fix race between device setup and
    open") changed the initialization order: xennet_create_queues() now
    happens before we do register_netdev() so using netdev->name in
    xennet_init_queue() is incorrect, we end up with the following in
    /proc/interrupts:
    
     60:        139          0   xen-dyn    -event     eth%d-q0-tx
     61:        265          0   xen-dyn    -event     eth%d-q0-rx
     62:        234          0   xen-dyn    -event     eth%d-q1-tx
     63:          1          0   xen-dyn    -event     eth%d-q1-rx
    
    and this looks ugly. Actually, using early netdev name (even when it's
    already set) is also not ideal: nowadays we tend to rename eth devices
    and queue name may end up not corresponding to the netdev name.
    
    Use nodename from xenbus device for queue naming: this can't change in VM's
    lifetime. Now /proc/interrupts looks like
    
     62:        202          0   xen-dyn    -event     device/vif/0-q0-tx
     63:        317          0   xen-dyn    -event     device/vif/0-q0-rx
     64:        262          0   xen-dyn    -event     device/vif/0-q1-tx
     65:         17          0   xen-dyn    -event     device/vif/0-q1-rx
    
    Fixes: f599c64fdf7d ("xen-netfront: Fix race between device setup and open")
    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Reviewed-by: Ross Lagerwall <ross.lagerwall@citrix.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking d6a4ef16ab138c007d6eb250ffd2e1a4a6bd6513 ......
	 orig commit -> 0cde5b44a30f1daaef1c34e08191239dc63271c4 ......
checking 51b896a8558722ee2ef54ad59b5b572c4c41065e ......
	 orig commit -> 9a9ab3078e2744a1a55163cfaec73a5798aae33e ......
checking ee4bba566dda17c8d844c45dfbd8269b7d11f6fd ......
	 orig commit -> 09584b406742413ac4c8d7e030374d4daa045b69 ......
		 09584b406742413ac4c8d7e030374d4daa045b69 has problem. Fixes commit -> 52fda36d63bfc8c8e8ae5eda8eb5ac6f52cd67ed
commit acfbd2866fe960eaca671b20329927c7a5697acc
Author: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
Date:   Tue Mar 20 09:58:51 2018 -0300

    test_bpf: Fix testing with CONFIG_BPF_JIT_ALWAYS_ON=y on other arches
    
    [ Upstream commit 52fda36d63bfc8c8e8ae5eda8eb5ac6f52cd67ed ]
    
    Function bpf_fill_maxinsns11 is designed to not be able to be JITed on
    x86_64. So, it fails when CONFIG_BPF_JIT_ALWAYS_ON=y, and
    commit 09584b406742 ("bpf: fix selftests/bpf test_kmod.sh failure when
    CONFIG_BPF_JIT_ALWAYS_ON=y") makes sure that failure is detected on that
    case.
    
    However, it does not fail on other architectures, which have a different
    JIT compiler design. So, test_bpf has started to fail to load on those.
    
    After this fix, test_bpf loads fine on both x86_64 and ppc64el.
    
    Fixes: 09584b406742 ("bpf: fix selftests/bpf test_kmod.sh failure when CONFIG_BPF_JIT_ALWAYS_ON=y")
    Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
    Reviewed-by: Yonghong Song <yhs@fb.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
checking cbaf06cca3dade6e1e5199f1fddf32f4a147dc13 ......
	 orig commit -> 63347db0affadcbccd5613116ea8431c70139b3e ......
checking 9a18bac19cdc52d082c362b694d37a1b7ddd4d81 ......
	 orig commit -> ba1edb9a5125a617d612f98eead14b9b84e75c3a ......
checking 6fdca0dcd765c89d62d590951f5d60583f9816f5 ......
	 orig commit -> a7770ae194569e96a93c48aceb304edded9cc648 ......
checking b2e949bfbac09a9906d1117d25a90d6710d3c647 ......
	 orig commit -> 328008a72d38b5bde6491e463405c34a81a65d3e ......
checking dd5968e80959b68f3883e03e01d8920312340599 ......
	 orig commit -> ea23d5e3bf340e413b8e05c13da233c99c64142b ......
checking e7bce21130372ed4f7ce59657c92264945f37a32 ......
	 orig commit -> fe9748b7b41cee11f8db57fb8b20bc540a33102a ......
checking e405d2ebba9f93d0df9b3b7b04f9fe8e5a38d074 ......
	 orig commit -> 1029361084d18cc270f64dfd39529fafa10cfe01 ......
checking bfd188fb51d7b68c2c498487d56f36286ca7e722 ......
	 orig commit -> 9382fe71c0058465e942a633869629929102843d ......
checking a8b21508b97b7c6c2799ecacbd729f446a32cc58 ......
	 orig commit -> a7ab400d6fe73d0119fdc234e9982a6f80faea9f ......
checking ab88b8a2846454f7e9aa10d96d99008fe939eedc ......
	 orig commit -> 69d763fc6d3aee787a3e8c8c35092b4f4960fa5d ......
		 69d763fc6d3aee787a3e8c8c35092b4f4960fa5d has problem. Fixes commit -> 145e1a71e090575c74969e3daa8136d1e5b99fc8
commit 93960f9d447467b9e6d9a8ee1d6ca7b5b6eb25b6
Author: Hugh Dickins <hughd@google.com>
Date:   Fri Jun 1 16:50:50 2018 -0700

    mm: fix the NULL mapping case in __isolate_lru_page()
    
    commit 145e1a71e090575c74969e3daa8136d1e5b99fc8 upstream.
    
    George Boole would have noticed a slight error in 4.16 commit
    69d763fc6d3a ("mm: pin address_space before dereferencing it while
    isolating an LRU page").  Fix it, to match both the comment above it,
    and the original behaviour.
    
    Although anonymous pages are not marked PageDirty at first, we have an
    old habit of calling SetPageDirty when a page is removed from swap
    cache: so there's a category of ex-swap pages that are easily
    migratable, but were inadvertently excluded from compaction's async
    migration in 4.16.
    
    Link: http://lkml.kernel.org/r/alpine.LSU.2.11.1805302014001.12558@eggly.anvils
    Fixes: 69d763fc6d3a ("mm: pin address_space before dereferencing it while isolating an LRU page")
    Signed-off-by: Hugh Dickins <hughd@google.com>
    Acked-by: Minchan Kim <minchan@kernel.org>
    Acked-by: Mel Gorman <mgorman@techsingularity.net>
    Reported-by:  Ivan Kalvachev <ikalvachev@gmail.com>
    Cc: "Huang, Ying" <ying.huang@intel.com>
    Cc: Jan Kara <jack@suse.cz>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking e56d3700cff0839fb22a7890f78b370757c42ba7 ......
	 orig commit -> 3b454ad35043dfbd3b5d2bb92b0991d6342afb44 ......
checking 9da97a9537031e0677da3c1accd4f11ff4a92da5 ......
	 orig commit -> a8e654f01cb725d0bfd741ebca1bf4c9337969cc ......
		 a8e654f01cb725d0bfd741ebca1bf4c9337969cc has problem. Fixes commit -> cfb61b5e3e09f8b49bc4d685429df75f45127adc
commit 24b71d1895f591f3779895c206e6d1ae29462e11
Author: David S. Miller <davem@davemloft.net>
Date:   Thu Mar 15 14:18:00 2018 -0700

    sparc64: Fix regression in pmdp_invalidate().
    
    [ Upstream commit cfb61b5e3e09f8b49bc4d685429df75f45127adc ]
    
    pmdp_invalidate() was changed to update the pmd atomically
    (to not lose dirty/access bits) and return the original pmd
    value.
    
    However, in doing so, we lost a lot of the essential work that
    set_pmd_at() does, namely to update hugepage mapping counts and
    queuing up the batched TLB flush entry.
    
    Thus we were not flushing entries out of the TLB when making
    such PMD changes.
    
    Fix this by abstracting the accounting work of set_pmd_at() out into a
    separate function, and call it from pmdp_establish().
    
    Fixes: a8e654f01cb7 ("sparc64: update pmdp_invalidate() to return old pmd value")
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
checking 038ab51ea036e255c614e1c5f58a8c08799ddd64 ......
	 orig commit -> c58f0bb77ed8bf93dfdde762b01cb67eebbdfc29 ......
checking 4cf2463f8a11499e0fbb981d4e4cb8a73e01a72f ......
	 orig commit -> 0486a38bcc4749808edbc848f1bcf232042770fc ......
checking 2851e3bd68de08a2cf17227ecc3aa66d6d2b039a ......
	 orig commit -> 56521e7a02b7b84a5e72691a1fb15570e6055545 ......
checking 9f5efe59b58f36c55c26521d37643f92b0a0d1da ......
	 orig commit -> d984187e3a1ad7d12447a7ab2c43ce3717a2b5b3 ......
checking 1d5fdc1307eeb04b334c5dc23e11dbd6068d90eb ......
	 orig commit -> 16c8d569f5704a84164f30ff01b29879f3438065 ......
checking e2afc4063eaa4c5b2b2c51ad8540db8d08d119c5 ......
	 orig commit -> 025bcbde3634b2c9b316f227fed13ad6ad6817fb ......
checking 9445fde8eec02816603e7b12b5d5beb1158cc907 ......
	 orig commit -> a340b3e229b24a56f1c7f5826b15a3af0f4b13e5 ......
checking d805047beb94f9174012465e24e20a222b60ec4d ......
	 orig commit -> e4823fbd229bfbba368b40cdadb8f4eeb20604cc ......
checking eea27e5bcf8edaeb37ac44140ac45a185db60e89 ......
	 orig commit -> 202a0a70e445caee1d0ec7aae814e64b1189fa4d ......
checking 33d353db125a9b220638066346e642b6bfbca204 ......
	 orig commit -> cbd27448faff4843ac4b66cc71445a10623ff48d ......
checking bdae32c794338da368d8ffc740f2a415db71ccad ......
	 orig commit -> b081808a66345ba725b77ecd8d759bee874cd937 ......
checking 2f2f95d96b8e59e29701621f94354325479cd91e ......
	 orig commit -> ea05ba7c559c8e5a5946c3a94a2a266e9a6680a6 ......
checking 6f9c15a3af8f5f46114ca250a2305b5b6852b411 ......
	 orig commit -> a346137e9142b039fd13af2e59696e3d40c487ef ......
checking b47544454b7f3a8b209677124bf8a22049ebe27f ......
	 orig commit -> 5bdd0c6f89fba430e18d636493398389dadc3b17 ......
checking f4afb04a10cc24189d90566042fb83f30d278a22 ......
	 orig commit -> c505cbd45f6e9c539d57dd171d95ec7e5e9f9cd0 ......
checking 42be47ac0320ab695a46392af5010299d5deb2c3 ......
	 orig commit -> cf315ea596ec26d7aa542a9ce354990875a920c0 ......
checking 5d193635af978a2bbb006414886e664eddc296b5 ......
	 orig commit -> 7ad81482cad67cbe1ec808490d1ddfc420c42008 ......
checking 3feba5904807315eaf5ce50369923a4a034e4904 ......
	 orig commit -> 6f794e3c5c8f8fdd3b5bb20d9ded894e685b5bbe ......
	 orig commit -> 319e4d0661e5323c9f9945f0f8fb5905e5fe74c3 ......
		 319e4d0661e5323c9f9945f0f8fb5905e5fe74c3 has problem. Fixes commit -> 6f794e3c5c8f8fdd3b5bb20d9ded894e685b5bbe
commit 3feba5904807315eaf5ce50369923a4a034e4904
Author: Anand Jain <Anand.Jain@oracle.com>
Date:   Tue Jan 9 09:05:43 2018 +0800

    btrfs: fail mount when sb flag is not in BTRFS_SUPER_FLAG_SUPP
    
    [ Upstream commit 6f794e3c5c8f8fdd3b5bb20d9ded894e685b5bbe ]
    
    It appears from the original commit [1] that there isn't any design
    specific reason not to fail the mount instead of just warning. This
    patch will change it to fail.
    
    [1]
     commit 319e4d0661e5323c9f9945f0f8fb5905e5fe74c3
        btrfs: Enhance super validation check
    
    Fixes: 319e4d0661e5323 ("btrfs: Enhance super validation check")
    Signed-off-by: Anand Jain <anand.jain@oracle.com>
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 186a6519dc94964a4c5c68fca482f20f71551f26 ......
	 orig commit -> 762221f095e3932669093466aaf4b85ed9ad2ac1 ......
checking e23c097653d0d0b3379588cf0d728f82c3a166c3 ......
	 orig commit -> 9ea2c7c9da13c9073e371c046cbbc45481ecb459 ......
checking bfae0436c8d07bfcda133d025e0624293aa56c57 ......
	 orig commit -> 343e4fc1c60971b0734de26dbbd475d433950982 ......
checking b5c7751a4ab7cc856f48929d7c5b66194fe17730 ......
	 orig commit -> e749d328b0b450aa78d562fa26a0cd8872325dd9 ......
checking 7e6d77dfca838d6ef31f1d78ad4288b11908d86d ......
	 orig commit -> 0ddcff49b672239dda94d70d0fcf50317a9f4b51 ......
checking f52bf071758ffa919b0410f7eb5f9d1c0baffc05 ......
	 orig commit -> 5b1374b3b3c2fc4f63a398adfa446fb8eff791a4 ......
checking a3343787005fb5e519bb1cc8976ab6f0ff2d0cb8 ......
	 orig commit -> ae7440ef0c8013d68c00dad6900e7cce5311bb1c ......
checking d0c1ba16ee933c8aacf71ba5fc5e69c427b06f13 ......
	 orig commit -> 0724a7c32a54e3e50d28e19e30c59014f61d4e2c ......
checking 8dec8a30a5f49a1699c29c3e320b0d33338724e2 ......
	 orig commit -> f541c09ebfc61697b586b38c9ebaf4b70defb278 ......
checking 73541706bfb1e34b06f253ff25c2f40e258413a1 ......
	 orig commit -> cbebc6ef4fc830f4040d4140bf53484812d5d5d9 ......
checking 0a345bd44de0920d19c5b91dea9d43c8951ab23f ......
	 orig commit -> fb7d38a70e1d8ffd54f7a7464dcc4889d7e490ad ......
checking 22fea05c2671edf7de5541134c8a0b2d82b6339e ......
	 orig commit -> 433c6cab9d298687c097f6ee82e49157044dc7c6 ......
checking 64b1a728f5c20883e761d6e2f8e9c7c2641f1507 ......
	 orig commit -> 9b28a1102efc75d81298198166ead87d643a29ce ......
checking b5c2e607fdc93b771abc52707187794f12561b2c ......
	 orig commit -> 9d2e6505f6d6934e681aed502f566198cb25c74a ......
checking 7b0f8d7f54ff9e6638b7faee9501560065987d80 ......
	 orig commit -> 81fccd6ca507d3b2012eaf1edeb9b1dbf4bd22db ......
checking d23d7b03fd9abdb635e815e86843d52a18ca3278 ......
	 orig commit -> d777f8de99b05d399c0e4e51cdce016f26bd971b ......
checking f32b5f4dded6e71c00f803d32cad0e038756da53 ......
	 orig commit -> 249d98e567e25dd03e015e2d31e1b7b9648f34df ......
checking 50efa63d697f5af81386504351a42abc98768677 ......
	 orig commit -> 38d70b7ca1769f26c0b79f3c08ff2cc949712b59 ......
checking c532d83b674a5f7f98d25109545170291d27d99d ......
	 orig commit -> 6376e926af1a8661dd1b2e6d0896e07f84a35844 ......
checking 0073fb55b18a22e254135e1f493c6d2c4a2068ed ......
	 orig commit -> 2bc4298f59d2f15175bb568e2d356b5912d0cdd9 ......
checking 9c1a1a9154c2055b146eb1c855d7d528a27fa7c0 ......
	 orig commit -> aa008206634363ef800fbd5f0262016c9ff81dea ......
checking e3ae971af7896594df867abb2c07e8a7732a4915 ......
	 orig commit -> 91633eed73a3ac37aaece5c8c1f93a18bae616a9 ......
checking d65bc9545fd352112c1c0f3c95c68da32a0f1bf8 ......
	 orig commit -> 83f1999caeb14e15df205e80d210699951733287 ......
		 83f1999caeb14e15df205e80d210699951733287 has problem. Fixes commit -> ea23d5e3bf340e413b8e05c13da233c99c64142b
commit dd5968e80959b68f3883e03e01d8920312340599
Author: Subash Abhinov Kasiviswanathan <subashab@codeaurora.org>
Date:   Wed Jan 31 04:50:01 2018 -0700

    netfilter: ipv6: nf_defrag: Kill frag queue on RFC2460 failure
    
    [ Upstream commit ea23d5e3bf340e413b8e05c13da233c99c64142b ]
    
    Failures were seen in ICMPv6 fragmentation timeout tests if they were
    run after the RFC2460 failure tests. Kernel was not sending out the
    ICMPv6 fragment reassembly time exceeded packet after the fragmentation
    reassembly timeout of 1 minute had elapsed.
    
    This happened because the frag queue was not released if an error in
    IPv6 fragmentation header was detected by RFC2460.
    
    Fixes: 83f1999caeb1 ("netfilter: ipv6: nf_defrag: Pass on packets to stack per RFC2460")
    Signed-off-by: Subash Abhinov Kasiviswanathan <subashab@codeaurora.org>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 017488a29110b857940e1255e86d27b34a858b91 ......
	 orig commit -> 51776043afa415435c7e4636204fbe4f7edc4501 ......
checking 71bff398b0d4ee99dd2a53d75950ad0c70f8c280 ......
	 orig commit -> c469652bb5e8fb715db7d152f46d33b3740c9b87 ......
		 c469652bb5e8fb715db7d152f46d33b3740c9b87 has problem. Fixes commit -> 6a30abaa40b62aed46ef12ea4c16c48565bdb376
commit dba8e960a541d7d81e9237065b5116f144e15077
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Apr 27 17:17:35 2018 +0200

    ALSA: hda - Fix incorrect usage of IS_REACHABLE()
    
    [ Upstream commit 6a30abaa40b62aed46ef12ea4c16c48565bdb376 ]
    
    The commit c469652bb5e8 ("ALSA: hda - Use IS_REACHABLE() for
    dependency on input") simplified the dependencies with IS_REACHABLE()
    macro, but it broke due to its incorrect usage: it should have been
    IS_REACHABLE(CONFIG_INPUT) instead of IS_REACHABLE(INPUT).
    
    Fixes: c469652bb5e8 ("ALSA: hda - Use IS_REACHABLE() for dependency on input")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
checking 70f254aa39fda3078b61403be13994aa7182ab3d ......
	 orig commit -> dce2630c7da73b0634686bca557cc8945cc450c8 ......
checking 653cf76017f16cf8f52e179cc9126987386cfc83 ......
	 orig commit -> 30c7e5b123673d5e570e238dbada2fb68a87212c ......
checking 83335517aa23b5b5027f8d7edead8307cc77475c ......
	 orig commit -> 188775181bc05f29372b305ef96485840e351fde ......
checking 9baf2bc5df2f61c79033f9a09a34a806e5ebb603 ......
	 orig commit -> 1eaafe91a0df4157521b6417b3dd8430bf5f52f0 ......
		 1eaafe91a0df4157521b6417b3dd8430bf5f52f0 has problem. Fixes commit -> 0cf9135b773bf32fba9dd8e6699c1b331ee4b749
commit 756e25cd669eb2a17ccc99a7de42e9022f9f5441
Author: Sean Christopherson <sean.j.christopherson@intel.com>
Date:   Thu Mar 7 15:43:02 2019 -0800

    KVM: x86: Emulate MSR_IA32_ARCH_CAPABILITIES on AMD hosts
    
    commit 0cf9135b773bf32fba9dd8e6699c1b331ee4b749 upstream.
    
    The CPUID flag ARCH_CAPABILITIES is unconditioinally exposed to host
    userspace for all x86 hosts, i.e. KVM advertises ARCH_CAPABILITIES
    regardless of hardware support under the pretense that KVM fully
    emulates MSR_IA32_ARCH_CAPABILITIES.  Unfortunately, only VMX hosts
    handle accesses to MSR_IA32_ARCH_CAPABILITIES (despite KVM_GET_MSRS
    also reporting MSR_IA32_ARCH_CAPABILITIES for all hosts).
    
    Move the MSR_IA32_ARCH_CAPABILITIES handling to common x86 code so
    that it's emulated on AMD hosts.
    
    Fixes: 1eaafe91a0df4 ("kvm: x86: IA32_ARCH_CAPABILITIES is always supported")
    Cc: stable@vger.kernel.org
    Reported-by: Xiaoyao Li <xiaoyao.li@linux.intel.com>
    Cc: Jim Mattson <jmattson@google.com>
    Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 772dccdb5986932eaad21798b49186d3ea8071dc ......
	 orig commit -> c4d2188206bafa177ea58e9a25b952baa0bf7712 ......
checking fcc47bec27412f532ef936152b20483ccbdd22f7 ......
	 orig commit -> f4a551b72358facbbe5714248dff78404272feee ......
checking 43462d908821d0af30ee3f5e74937034fa9453a5 ......
	 orig commit -> 0aa48468d00959c8a37cd3ac727284f4f7359151 ......
checking ec1975ac988686eba0f105f87ed0b587da43d384 ......
	 orig commit -> 4ea77014af0d6205b05503d1c7aac6eace11d473 ......
checking 960828aaa08f7a038621f3587cfbe33ccb244b07 ......
	 orig commit -> 23d6aef74da86a33fa6bb75f79565e0a16ee97c2 ......
checking b1fc8ecb94e0f532ed841e18c0073207a33229df ......
	 orig commit -> 3f1959721558a976aaf9c2024d5bc884e6411bf7 ......
checking 9c798bc19e1b42ca7ece9523fcb6a6751f689561 ......
	 orig commit -> 8f89c007b6dec16a1793cb88de88fcc02117bbbc ......
checking 2ef44a3c1a32656dbae30cd16ec5c22a996a4ca9 ......
	 orig commit -> a73ab244f0dad8fffb3291b905f73e2d3eaa7c00 ......
checking 36017b0c941569e46cbcaf942387b0494f2a9784 ......
	 orig commit -> f9e76ca3771bf23d2142a81a88ddd8f31f5c4c03 ......
checking 50af403619f08f533b0118dda5693507f824aafb ......
	 orig commit -> 938ae7259c908ad031da35d551da297640bb640c ......
checking 3246d2e53c62447f7b1a5249a6d3a74424fd7873 ......
	 orig commit -> 4855c92dbb7b3b85c23e88ab7ca04f99b9677b41 ......
checking 1b9c86c9dc8399914650062f6183619b7ec30363 ......
	 orig commit -> 136d769e0b3475d71350aa3648a116a6ee7a8f6c ......
checking 31eeaaf57bbc043439d2ca62967e6456d10111ca ......
	 orig commit -> 322579dcc865b94b47345ad1b6002ad167f85405 ......
checking 352f4375c6dfbea7c64cc52f90cec78fdbae318e ......
	 orig commit -> 5f651b870485ee60f5abbbd85195a6852978894a ......
checking 8d33d4682d983732aca37e28693e3d5f601a58e1 ......
	 orig commit -> 4c94238f37af87a2165c3fb491b4a8b50e90649c ......
checking 2d2d3f1ee7c4a1fe3bc43b685e16a1439e6821d5 ......
	 orig commit -> 1e2e547a93a00ebc21582c06ca3c6cfea2a309ee ......
checking 416808fbc20144d1cb76400d97ddafe26c6df9ff ......
	 orig commit -> 3ae180972564846e6d794e3615e1ab0a1e6c4ef9 ......
checking b14cfa26071daa8ad8c58aae85773e7e78647f31 ......
	 orig commit -> baf10564fbb66ea222cae66fbff11c444590ffd9 ......
checking 5aba1dc0d56b399284845a33e59b2a8c4462e6ff ......
	 orig commit -> 30da870ce4a4e007c901858a96e9e394a1daa74a ......
checking 211922cfb229d820edcff93113ff64129c14192d ......
	 orig commit -> ba3696e94d9d590d9a7e55f68e81c25dba515191 ......
checking 0ed5a2130ae0366a3aff0ab45fcbf362d65a1b05 ......
	 orig commit -> 9a3a92ccfe3620743d4ae57c987dc8e9c5f88996 ......
checking b1e0cf61e78df2336722b82b322348a36d8d12b5 ......
	 orig commit -> 71e909c0cdad28a1df1fa14442929e68615dee45 ......
checking aa9a00ef3d0deeb5f2091b11b6d06fd6a35332b0 ......
	 orig commit -> 55a2aa08b3af519a9693f99cdf7fa6d8b62d9f65 ......
