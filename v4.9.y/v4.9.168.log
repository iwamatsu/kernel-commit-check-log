Check from v4.9.168 to v4.9.169
Commit count: 78
checking df62169c33a1d06fbe8d0a411c250f230e64b44c ......
checking 5b86e010f02bba2ef344422bc945e7f46d14e126 ......
	 orig commit -> 9cde402a59770a0669d895399c13407f63d7d209 ......
checking aea59964f5bb0092e15ee2a86bc2b0c1551a2589 ......
	 orig commit -> ada770b1e74a77fff2d5f539bf6c42c25f4784db ......
checking 6d1e1da10c3a77e0f3f33c6f6649f75be9b3db5d ......
	 orig commit -> 0e9f02450da07fc7b1346c8c32c771555173e397 ......
checking 356bcb7b4eaa2fb92332344b5d1c1e47103b6999 ......
	 orig commit -> 42d8644bd77dd2d747e004e367cb0c895a606f39 ......
checking 79bedcb095bdc5c83db65180b414a8b0ac89b91d ......
	 orig commit -> 5ffa8518851f1401817c15d2a7eecc0373c26ff9 ......
checking 32810f94a69cc7b4bd3f3f7d1ca3a27248961bb7 ......
	 orig commit -> 045afc24124d80c6998d9c770844c67912083506 ......
		 045afc24124d80c6998d9c770844c67912083506 has problem. Fixes commit -> ff8acf929014b7f87315588e0daf8597c8aa9d1c
commit 8e6a1efbdb2e749130015aeadc61330355b4c491
Author: Nathan Chancellor <natechancellor@gmail.com>
Date:   Wed Apr 17 00:21:21 2019 -0700

    arm64: futex: Restore oldval initialization to work around buggy compilers
    
    commit ff8acf929014b7f87315588e0daf8597c8aa9d1c upstream.
    
    Commit 045afc24124d ("arm64: futex: Fix FUTEX_WAKE_OP atomic ops with
    non-zero result value") removed oldval's zero initialization in
    arch_futex_atomic_op_inuser because it is not necessary. Unfortunately,
    Android's arm64 GCC 4.9.4 [1] does not agree:
    
    ../kernel/futex.c: In function 'do_futex':
    ../kernel/futex.c:1658:17: warning: 'oldval' may be used uninitialized
    in this function [-Wmaybe-uninitialized]
       return oldval == cmparg;
                     ^
    In file included from ../kernel/futex.c:73:0:
    ../arch/arm64/include/asm/futex.h:53:6: note: 'oldval' was declared here
      int oldval, ret, tmp;
          ^
    
    GCC fails to follow that when ret is non-zero, futex_atomic_op_inuser
    returns right away, avoiding the uninitialized use that it claims.
    Restoring the zero initialization works around this issue.
    
    [1]: https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9/
    
    Cc: stable@vger.kernel.org
    Fixes: 045afc24124d ("arm64: futex: Fix FUTEX_WAKE_OP atomic ops with non-zero result value")
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking ff7a56ee2e86f4af65f1390877a6c9c8777db83a ......
	 orig commit -> e7dfb6d04e4715be1f3eb2c60d97b753fd2e4516 ......
checking 208d25a7ae49746d7ff08efcea6cc4e190fa6cfb ......
	 orig commit -> cf94db21905333e610e479688add629397a4b384 ......
checking 97491c03592c3e6586172b40982e581ed7ede3c3 ......
	 orig commit -> 325aa19598e410672175ed50982f902d4e3f31c5 ......
checking 056066d8a769aa87f280f00c6c2d802ecc2c7a6b ......
	 orig commit -> a3761c3c91209b58b6f33bf69dd8bb8ec0c9d925 ......
checking 1ac411b49fd636a53d3c117caa71af44a604859d ......
	 orig commit -> f35f06c35560a86e841631f0243b83a984dc11a9 ......
checking f4a40058ac9e6447a05626a0ba51ffc58a834f7b ......
	 orig commit -> 0ff4e8c61b794a4bf6c854ab071a1abaaa80f358 ......
checking a25d4ede3f6fc3b35da90c2ac22a5081c25a75d8 ......
	 orig commit -> 6147e136ff5071609b54f18982dea87706288e21 ......
checking a957aa573c1e8c4e2bed1fa253b70ec6008fbde8 ......
	 orig commit -> d006e95b5561f708d0385e9677ffe2c46f2ae345 ......
checking c35bf96aba0ca6bd6c7e5e180bc43d1a0f0c43f7 ......
	 orig commit -> 212ac181c158c09038c474ba68068be49caecebb ......
checking a3320acb47874c0977dd49d8adc19d5047f52f1a ......
	 orig commit -> b2e54b09a3d29c4db883b920274ca8dca4d9f04d ......
checking 77b924d94dd7a7719933ba9d97a7ba4d19d09d00 ......
	 orig commit -> 3d8830266ffc28c16032b859e38a0252e014b631 ......
checking 6996763856e1fb27ccae260e41fd73a3fff56678 ......
	 orig commit -> 355b98553789b646ed97ad801a619ff898471b92 ......
checking 9a739f1ad0b12f73afc176b2788c6d0f4e9cc739 ......
	 orig commit -> 80a2a9026b24c6bd34b8d58256973e22270bedec ......
checking 8e302e8e10b05165ed21273539a1e6a83ab93e9e ......
	 orig commit -> a1b0e4e684e9c300b9e759b46cb7a0147e61ddff ......
checking ebd153c6835cd8e3b4ab4eccf0042655f1d3ebb1 ......
	 orig commit -> 8e44e96c6c8e8fb80b84a2ca11798a8554f710f2 ......
checking 5f5d628adc1dd5542f7d1a08b2bbd808c1186c7e ......
	 orig commit -> 8c83f2df9c6578ea4c5b940d8238ad8a41b87e9e ......
checking 051ca6a515a8cfd2b88b0b7f53a1ecb60e0881a6 ......
	 orig commit -> aecfde23108b8e637d9f5c5e523b24fb97035dc3 ......
checking 57601d32dece9d91a6219818c6c66576f817ac7a ......
	 orig commit -> 09279e615c81ce55e04835970601ae286e3facbe ......
checking 6f8b25866727c2ea72e5b2ee4e00276e671a7512 ......
	 orig commit -> 6289d0facd9ebce4cc83e5da39e15643ee998dc5 ......
checking 12ff23da758517d5c618b6f59f5818e9ad6d8542 ......
	 orig commit -> f28cd2af22a0c134e4aa1c64a70f70d815d473fb ......
checking a1aa69beac4d88dfb892a95ee04fe6f932803952 ......
	 orig commit -> cb66ddd156203daefb8d71158036b27b0e2caf63 ......
checking b09d697afce2e42f8850be647c7645045b546e7d ......
	 orig commit -> 3c446e6f96997f2a95bf0037ef463802162d2323 ......
checking 2164e967d85e708efd769b5d432445046711cfb0 ......
	 orig commit -> bb9bd814ebf04f579be466ba61fc922625508807 ......
checking e33684f9bc4c2bf01c4b6e63048e79b830cacbe1 ......
	 orig commit -> ef0efcd3bd3fd0589732b67fb586ffd3c8705806 ......
checking 9b7984e8ff3b2c9e8685ffee04097ba927347f39 ......
	 orig commit -> 7c0cca7c847e6e019d67b7d793efbbe3b947d004 ......
checking 942ddc0de8efb52c43250033c7c6091f15e191f5 ......
	 orig commit -> c7084edc3f6d67750f50d4183134c4fb5712a5c8 ......
checking da6c4933cd5795e115124e50f93bc5426dec19a0 ......
	 orig commit -> c8a43c18a97845e7f94ed7d181c11f41964976a2 ......
checking 91f69a3c910f97215e8f49207497084c472d1fa3 ......
	 orig commit -> 92edf8df0ff2ae86cc632eeca0e651fd8431d40d ......
checking 012c2776114436b5a18a5fdd8ca342c148e8117f ......
	 orig commit -> 27da80719ef132cf8c80eb406d5aeb37dddf78cc ......
checking 38f573eec26fa4d07a2f1732bc0636bcd4f4d962 ......
	 orig commit -> 039daac5526932ec731e4499613018d263af8b3e ......
checking 0ac0d2b12434c7a0069f051f5000833ec2c88e90 ......
	 orig commit -> dfa88658fb0583abb92e062c7a9cd5a5b94f2a46 ......
checking 487bea70ea9886d7860af15e8d413d8d5c9873e7 ......
	 orig commit -> 3bc8ea8603ae4c1e09aca8de229ad38b8091fcb3 ......
checking 5b0392afd333e0dc78f9a0b50951b5a5e1b74e02 ......
	 orig commit -> e7aa61f47b23afbec41031bc47ca8d6cb6516abc ......
checking e1152947cea025cc832df454be283f5cb99baa81 ......
	 orig commit -> 7fef436295bf6c05effe682c8797dfcb0deb112a ......
checking dd8bf94d03d1f35c8792760d9d67428f2abc3fb1 ......
	 orig commit -> 10c5e83afd4a3f01712d97d3bb1ae34d5b74a185 ......
		 10c5e83afd4a3f01712d97d3bb1ae34d5b74a185 has problem. Fixes commit -> 27da80719ef132cf8c80eb406d5aeb37dddf78cc
commit 012c2776114436b5a18a5fdd8ca342c148e8117f
Author: Christophe Leroy <christophe.leroy@c-s.fr>
Date:   Thu Apr 11 21:46:29 2019 +1000

    powerpc/fsl: Fix the flush of branch predictor.
    
    commit 27da80719ef132cf8c80eb406d5aeb37dddf78cc upstream.
    
    The commit identified below adds MC_BTB_FLUSH macro only when
    CONFIG_PPC_FSL_BOOK3E is defined. This results in the following error
    on some configs (seen several times with kisskb randconfig_defconfig)
    
    arch/powerpc/kernel/exceptions-64e.S:576: Error: Unrecognized opcode: `mc_btb_flush'
    make[3]: *** [scripts/Makefile.build:367: arch/powerpc/kernel/exceptions-64e.o] Error 1
    make[2]: *** [scripts/Makefile.build:492: arch/powerpc/kernel] Error 2
    make[1]: *** [Makefile:1043: arch/powerpc] Error 2
    make: *** [Makefile:152: sub-make] Error 2
    
    This patch adds a blank definition of MC_BTB_FLUSH for other cases.
    
    Fixes: 10c5e83afd4a ("powerpc/fsl: Flush the branch predictor at each kernel entry (64bit)")
    Cc: Diana Craciun <diana.craciun@nxp.com>
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Reviewed-by: Daniel Axtens <dja@axtens.net>
    Reviewed-by: Diana Craciun <diana.craciun@nxp.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
checking 7133df4c86d9e853e12469a3a5c363fb75981429 ......
	 orig commit -> f633a8ad636efb5d4bba1a047d4a0f1ef719aa06 ......
checking a1101a6297c97c126c485d2f5209547bbbb8b332 ......
	 orig commit -> 98518c4d8728656db349f875fcbbc7c126d4c973 ......
checking 1eb1ddbdf5c019d90c690495dc545696c86ed3ce ......
	 orig commit -> 7d8bad99ba5a22892f0cad6881289fdc3875a930 ......
checking 5188172929d63775332476e32be735ca1416a8af ......
	 orig commit -> 1cbf8990d79ff69da8ad09e8a3df014e1494462b ......
checking d91460f2d0efc0fe6a197fc739e30edab6070456 ......
	 orig commit -> 76a5eaa38b15dda92cd6964248c39b5a6f3a4e9d ......
checking ae361096d6857727275631d1d64bcd8fec2d8f25 ......
	 orig commit -> 99d54754d3d5f896a8f616b0b6520662bc99d66b ......
checking e745d1518d7a3766841d06f7846d4217253817ed ......
	 orig commit -> ba72dc171954b782a79d25e0f4b3ed91090c3b1e ......
checking 98f6dedbcb1fe30ee9e7eeafd220269ae75b8afd ......
	 orig commit -> ee13cb249fabdff8b90aaff61add347749280087 ......
		 ee13cb249fabdff8b90aaff61add347749280087 has problem. Fixes commit -> 92edf8df0ff2ae86cc632eeca0e651fd8431d40d
7d8bad99ba5a22892f0cad6881289fdc3875a930
commit 1eb1ddbdf5c019d90c690495dc545696c86ed3ce
Author: Diana Craciun <diana.craciun@nxp.com>
Date:   Thu Apr 11 21:46:20 2019 +1000

    powerpc/fsl: Fix spectre_v2 mitigations reporting
    
    commit 7d8bad99ba5a22892f0cad6881289fdc3875a930 upstream.
    
    Currently for CONFIG_PPC_FSL_BOOK3E the spectre_v2 file is incorrect:
    
      $ cat /sys/devices/system/cpu/vulnerabilities/spectre_v2
      "Mitigation: Software count cache flush"
    
    Which is wrong. Fix it to report vulnerable for now.
    
    Fixes: ee13cb249fab ("powerpc/64s: Add support for software count cache flush")
    Cc: stable@vger.kernel.org # v4.19+
    Signed-off-by: Diana Craciun <diana.craciun@nxp.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
commit 91f69a3c910f97215e8f49207497084c472d1fa3
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Thu Apr 11 21:46:30 2019 +1000

    powerpc/security: Fix spectre_v2 reporting
    
    commit 92edf8df0ff2ae86cc632eeca0e651fd8431d40d upstream.
    
    When I updated the spectre_v2 reporting to handle software count cache
    flush I got the logic wrong when there's no software count cache
    enabled at all.
    
    The result is that on systems with the software count cache flush
    disabled we print:
    
      Mitigation: Indirect branch cache disabled, Software count cache flush
    
    Which correctly indicates that the count cache is disabled, but
    incorrectly says the software count cache flush is enabled.
    
    The root of the problem is that we are trying to handle all
    combinations of options. But we know now that we only expect to see
    the software count cache flush enabled if the other options are false.
    
    So split the two cases, which simplifies the logic and fixes the bug.
    We were also missing a space before "(hardware accelerated)".
    
    The result is we see one of:
    
      Mitigation: Indirect branch serialisation (kernel only)
      Mitigation: Indirect branch cache disabled
      Mitigation: Software count cache flush
      Mitigation: Software count cache flush (hardware accelerated)
    
    Fixes: ee13cb249fab ("powerpc/64s: Add support for software count cache flush")
    Cc: stable@vger.kernel.org # v4.19+
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Reviewed-by: Michael Neuling <mikey@neuling.org>
    Reviewed-by: Diana Craciun <diana.craciun@nxp.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 1eb1ddbdf5c019d90c690495dc545696c86ed3ce
Author: Diana Craciun <diana.craciun@nxp.com>
Date:   Thu Apr 11 21:46:20 2019 +1000

    powerpc/fsl: Fix spectre_v2 mitigations reporting
    
    commit 7d8bad99ba5a22892f0cad6881289fdc3875a930 upstream.
    
    Currently for CONFIG_PPC_FSL_BOOK3E the spectre_v2 file is incorrect:
    
      $ cat /sys/devices/system/cpu/vulnerabilities/spectre_v2
      "Mitigation: Software count cache flush"
    
    Which is wrong. Fix it to report vulnerable for now.
    
    Fixes: ee13cb249fab ("powerpc/64s: Add support for software count cache flush")
    Cc: stable@vger.kernel.org # v4.19+
    Signed-off-by: Diana Craciun <diana.craciun@nxp.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
checking 2f4fed0185515cc6da36ac718969fa12537a6868 ......
	 orig commit -> dc8c6cce9a26a51fc19961accb978217a3ba8c75 ......
checking 6482f0d6af10262ca6586327090a47f2feaf0fea ......
	 orig commit -> 06d0bbc6d0f56dacac3a79900e9a9a0d5972d818 ......
checking 25ea29564244de9271db9359b4190adf76822998 ......
	 orig commit -> c28218d4abbf4f2035495334d8bfcba64bda4787 ......
checking a299c074951665af5c20b3650a343722bbb70f5b ......
	 orig commit -> ebcd1bfc33c7a90df941df68a6e5d4018c022fba ......
checking a96e47d164fc386cafbc2344d2833980ca9fa04e ......
	 orig commit -> 406d2b6ae3420f5bb2b3db6986dc6f0b6dbb637b ......
checking 37336b688f91a2010418c3c0158ae3dc74ce3ac2 ......
	 orig commit -> af375eefbfb27cbb5b831984e66d724a40d26b5c ......
checking 2f8703f281e114cfab0856024f54dc1ff3ef1f36 ......
	 orig commit -> 179ab1cbf883575c3a585bcfc0f2160f1d22a149 ......
checking 1ec00d224fb3931bfbb6e57473aeadee5d7455d4 ......
	 orig commit -> 6453b532f2c8856a80381e6b9a1f5ea2f12294df ......
checking 78749d1a7a08c21510d457fe27d5a14b1181a85b ......
	 orig commit -> cf175dc315f90185128fb061dc05b6fbb211aa2f ......
checking ee617f5807c7a3722c2b9c19ab227deb7a0ff3c0 ......
	 orig commit -> 6d44acae1937b81cf8115ada8958e04f601f3f2e ......
checking f7493c9818df017a945621ea9b57ae54801fb9b7 ......
	 orig commit -> a377514519b9a20fa1ea9adddbb4129573129cef ......
checking 86dfa514c79cf1779a932256e78ce3e055ee58b0 ......
	 orig commit -> 51973a815c6b46d7b23b68d6af371ad1c9d503ca ......
checking 86341b2fea2cae64807135859fa499537d5ddede ......
	 orig commit -> ddf35cf3764b5a182b178105f57515b42e2634f8 ......
checking e1217b4a5acec3da22eee7088b2649bc827eb14e ......
	 orig commit -> cb3d6759a93c6d0aea1c10deb6d00e111c29c19c ......
checking 73b0f626499c15b268f7d49d6871d49508edaa56 ......
	 orig commit -> 815069ca57c142eb71d27439bc27f41a433a67b3 ......
checking 1c38a84d45862be06ac418618981631eddbda741 ......
	 orig commit -> 51c3c62b58b357e8d35e4cc32f7b4ec907426fe3 ......
		 51c3c62b58b357e8d35e4cc32f7b4ec907426fe3 has problem. Fixes commit -> b45ba4a51cde29b2939365ef0c07ad34c8321789
checking f3286f1a71e3ccb80c53add0e6b322fc73544b77 ......
	 orig commit -> 2eea7f067f495e33b8b116b35b5988ab2b8aec55 ......
checking 4314e774ce40e08e763996fc6f6220a1ef1dbc2c ......
	 orig commit -> a6b3964ad71a61bb7c61d80a60bea7d42187b2eb ......
checking 10f1dea70f7ed207b5f0f05416bcae2eaf4672ef ......
	 orig commit -> 8a583c0a8d316d8ea52ea78491174ab1a3e9ef9d ......
checking 7eceaf5bbfc0ecc0efc89b1f7318e44ea87391cc ......
	 orig commit -> 5f074f3e192f10c9fade898b9b3b8812e3d83342 ......
checking 408d67a0fecf4cfe7869f518211ae278ee44376e ......
checking 94c0c4f033eee2304a98cf30a141f9dae35d3a62 ......
checking 1347aa2a4d9a5ebd6b4fb7720c43e5e5be68c198 ......
	 orig commit -> ad15006cc78459d059af56729c4d9bed7c7fd860 ......
checking 4d8b1fd22eacd0ba4ae9a9c547094690b4487b65 ......
	 orig commit -> 897bc3df8c5aebb54c32d831f917592e873d0559 ......
checking 39dbf53c9bb89bebae8aac458eaa806e578d267c ......
	 orig commit -> 7ee18d677989e99635027cee04c878950e0752b9 ......
checking d72b48521648fc9ffc7c1299da519e905f83aab2 ......
	 orig commit -> 896c80bef4d3b357814a476663158aaf669d0fb3 ......
checking 61f1e184f2a9fe0df7ba491734f7dcba0a384db0 ......
	 orig commit -> 090edbe23ff57940fca7f57d9165ce57a826bd7a ......
checking 57578e52610a65386aade4db21059604537f4ed0 ......
	 orig commit -> 5b06bbcfc2c621da3009da8decb7511500c293ed ......
		 5b06bbcfc2c621da3009da8decb7511500c293ed has problem. Fixes commit -> 7ee18d677989e99635027cee04c878950e0752b9
commit 39dbf53c9bb89bebae8aac458eaa806e578d267c
Author: Andy Lutomirski <luto@kernel.org>
Date:   Thu Dec 14 13:19:07 2017 -0800

    x86/power: Make restore_processor_context() sane
    
    [ Upstream commit 7ee18d677989e99635027cee04c878950e0752b9 ]
    
    My previous attempt to fix a couple of bugs in __restore_processor_context():
    
      5b06bbcfc2c6 ("x86/power: Fix some ordering bugs in __restore_processor_context()")
    
    ... introduced yet another bug, breaking suspend-resume.
    
    Rather than trying to come up with a minimal fix, let's try to clean it up
    for real.  This patch fixes quite a few things:
    
     - The old code saved a nonsensical subset of segment registers.
       The only registers that need to be saved are those that contain
       userspace state or those that can't be trivially restored without
       percpu access working.  (On x86_32, we can restore percpu access
       by writing __KERNEL_PERCPU to %fs.  On x86_64, it's easier to
       save and restore the kernel's GSBASE.)  With this patch, we
       restore hardcoded values to the kernel state where applicable and
       explicitly restore the user state after fixing all the descriptor
       tables.
    
     - We used to use an unholy mix of inline asm and C helpers for
       segment register access.  Let's get rid of the inline asm.
    
    This fixes the reported s2ram hangs and make the code all around
    more logical.
    
    Analyzed-by: Linus Torvalds <torvalds@linux-foundation.org>
    Reported-by: Jarkko Nikula <jarkko.nikula@linux.intel.com>
    Reported-by: Pavel Machek <pavel@ucw.cz>
    Tested-by: Jarkko Nikula <jarkko.nikula@linux.intel.com>
    Tested-by: Pavel Machek <pavel@ucw.cz>
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Acked-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rafael J. Wysocki <rjw@rjwysocki.net>
    Cc: Zhang Rui <rui.zhang@intel.com>
    Fixes: 5b06bbcfc2c6 ("x86/power: Fix some ordering bugs in __restore_processor_context()")
    Link: http://lkml.kernel.org/r/398ee68e5c0f766425a7b746becfc810840770ff.1513286253.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
