Check from v4.9.88 to v4.9.89
Commit count: 238
checking a779add58a837fbd5156e0fab0aca5e3b53754ef ......
checking 9fad15931cc5bc42a8cd4739d58ebab527ac1d42 ......
	 orig commit -> c8e4e5bdb62a5ac6f860ebcaaf7b467b62f453f1 ......
checking ecb1886f9b4fea6408f4d9c6defcc7ba3db88c29 ......
	 orig commit -> b16ea8b9492e99e03b1269fe93ebdbf8e4eabf8a ......
checking 30fe81cca111c22bc6048ef8998691c8e51b0d7a ......
	 orig commit -> 8874ae5f15f3feef3b4a415b9aed51edcf449aa1 ......
checking 9f4a71db144905a41c795e5a67236e36cb20bb16 ......
	 orig commit -> 4cd3b6ebff8510b2139d64024411207090cfe0a9 ......
checking 8ae7720cf90b952b9dba9b1d31062068d29137ff ......
	 orig commit -> fd649f10c3d21ee9d7542c609f29978bdf73ab94 ......
checking 8890bae03f4dba1c2292e5445682b556af4e8f1b ......
	 orig commit -> 92e222df7b8f05c565009c7383321b593eca488b ......
checking 887cb857e5122a72caa02a3bea402b1c8bf4056b ......
	 orig commit -> f930c7043663188429cd9b254e9d761edfc101ce ......
checking cbdcbd909efe41bbb10b7c15ff1ff15c1b4971a0 ......
	 orig commit -> 14074aba4bcda3764c9a702b276308b89901d5b6 ......
checking 691db1857ee784f026e4d2c267229db4885494ad ......
	 orig commit -> 68c59fcea1f2c6a54c62aa896cc623c1b5bc9b47 ......
checking 43166185da4a7802dd011d629fcdb4e1df0d2bd3 ......
	 orig commit -> 4f2c7583e33eb08dc09dd2e25574b80175ba7d93 ......
checking aa14f4bd6c4f32b19cdbfe37d918d1cb3baaf260 ......
	 orig commit -> d0264c01e7587001a8c4608a5d1818dba9a4c11a ......
checking 48226104275c0d8ddf307e432de8f6e6c5316bff ......
	 orig commit -> a6d7cff472eea87d96899a20fa718d2bab7109f3 ......
		 a6d7cff472eea87d96899a20fa718d2bab7109f3 has problem. Fixes commit -> baf10564fbb66ea222cae66fbff11c444590ffd9
commit b14cfa26071daa8ad8c58aae85773e7e78647f31
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Sun May 20 16:46:23 2018 -0400

    aio: fix io_destroy(2) vs. lookup_ioctx() race
    
    commit baf10564fbb66ea222cae66fbff11c444590ffd9 upstream.
    
    kill_ioctx() used to have an explicit RCU delay between removing the
    reference from ->ioctx_table and percpu_ref_kill() dropping the refcount.
    At some point that delay had been removed, on the theory that
    percpu_ref_kill() itself contained an RCU delay.  Unfortunately, that was
    the wrong kind of RCU delay and it didn't care about rcu_read_lock() used
    by lookup_ioctx().  As the result, we could get ctx freed right under
    lookup_ioctx().  Tejun has fixed that in a6d7cff472e ("fs/aio: Add explicit
    RCU grace period when freeing kioctx"); however, that fix is not enough.
    
    Suppose io_destroy() from one thread races with e.g. io_setup() from another;
    CPU1 removes the reference from current->mm->ioctx_table[...] just as CPU2
    has picked it (under rcu_read_lock()).  Then CPU1 proceeds to drop the
    refcount, getting it to 0 and triggering a call of free_ioctx_users(),
    which proceeds to drop the secondary refcount and once that reaches zero
    calls free_ioctx_reqs().  That does
            INIT_RCU_WORK(&ctx->free_rwork, free_ioctx);
            queue_rcu_work(system_wq, &ctx->free_rwork);
    and schedules freeing the whole thing after RCU delay.
    
    In the meanwhile CPU2 has gotten around to percpu_ref_get(), bumping the
    refcount from 0 to 1 and returned the reference to io_setup().
    
    Tejun's fix (that queue_rcu_work() in there) guarantees that ctx won't get
    freed until after percpu_ref_get().  Sure, we'd increment the counter before
    ctx can be freed.  Now we are out of rcu_read_lock() and there's nothing to
    stop freeing of the whole thing.  Unfortunately, CPU2 assumes that since it
    has grabbed the reference, ctx is *NOT* going away until it gets around to
    dropping that reference.
    
    The fix is obvious - use percpu_ref_tryget_live() and treat failure as miss.
    It's not costlier than what we currently do in normal case, it's safe to
    call since freeing *is* delayed and it closes the race window - either
    lookup_ioctx() comes before percpu_ref_kill() (in which case ctx->users
    won't reach 0 until the caller of lookup_ioctx() drops it) or lookup_ioctx()
    fails, ctx->users is unaffected and caller of lookup_ioctx() doesn't see
    the object in question at all.
    
    Cc: stable@kernel.org
    Fixes: a6d7cff472e "fs/aio: Add explicit RCU grace period when freeing kioctx"
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 05f16fe9ae8c18f461b25fd6f31c77333c739f58 ......
	 orig commit -> 3b821409632ab778d46e807516b457dfa72736ed ......
checking eaa9592678a9553ba51493bbe0257f51e6638abd ......
	 orig commit -> 95dd77580ccd66a0da96e6d4696945b8cea39431 ......
checking 16c809b7daebfbd8a547d731df88a35a85c1fd12 ......
	 orig commit -> 7d617264eb22b18d979eac6e85877a141253034e ......
checking 0ca43b0aa033dc7240f8e94d01fa69cb16c89cb8 ......
	 orig commit -> 342038d92403b3efa1138a8599666b9f026279d6 ......
checking c706deff725737d307a3ce149205ee9362d2e0c1 ......
	 orig commit -> a2ff19f7b70118ced291a28d5313469914de451b ......
checking 1a3e9385ddf2e77d97b8bace4792a4b3a50797fd ......
	 orig commit -> d0f833065221cbfcbadf19fd4102bcfa9330006a ......
checking 20cbd5198e28bf3ddb07f079b2ebe73cb68356bc ......
	 orig commit -> 40088dc4e1ead7df31728c73f5b51d71da18831d ......
checking 238ba452eb4bbd6378f9d4857e0532a806b79013 ......
	 orig commit -> 01c0b4265cc16bc1f43f475c5944c55c10d5768f ......
checking 8f6cfbea4e1621f078a08dfb2b444162ba2f7441 ......
	 orig commit -> 9ef0f88fe5466c2ca1d2975549ba6be502c464c1 ......
checking d3b0e9891b1f85aa623f8b6f8205015fe394ac3a ......
	 orig commit -> 18a955219bf7d9008ce480d4451b6b8bf4483a22 ......
checking ed82505913ccd47369fecb8fefb27abd32fb2e50 ......
	 orig commit -> e3b3121fa8da94cb20f9e0c64ab7981ae47fd085 ......
checking a999c6095e73377b2b513437707a7a2a53d101ff ......
	 orig commit -> a14bff131108faf50cc0cf864589fd71ee216c96 ......
checking 990a63c518ff4d7b670a3ef276ec4029aabaca19 ......
	 orig commit -> b5069782453459f6ec1fdeb495d9901a4545fcb5 ......
checking 403e064ebc48ce3a5fea28ab904d0780a18f168e ......
	 orig commit -> 78393fdde2a456cafa414b171c90f26a3df98b20 ......
checking 028c1fadf4a98e344d268c0d01a8fbecef4d01f8 ......
	 orig commit -> a9e017d5619eb371460c8e516f4684def62bef3a ......
checking 497f33ae317cc6f77e7cb69670e3ef433cf94bcf ......
	 orig commit -> 9390afebe1d3f5a0be18b1afdd0ce09d67cebf9e ......
checking 940bdec8b13bf018bd530292cf276c103c568fa7 ......
	 orig commit -> 327d53d005ca47b10eae940616ed11c569f75a9b ......
checking aa9c22f8ea24c509c705ace6ab905d76d866528c ......
	 orig commit -> 7958b2246fadf54b7ff820a2a5a2c5ca1554716f ......
checking 60845c87579a51a186868c7a42dd390a10840434 ......
	 orig commit -> d2b6dc61a8dd3c429609b993778cb54e75a5c5f0 ......
checking 691ac858a381049c3e49d4a84b4d0fa8a1cad201 ......
	 orig commit -> b4957ab0826f6f7efdfdc648521e1c4c3fc6ceda ......
checking 27a0856c212bd6a741bf058f3e5aed6964feba87 ......
	 orig commit -> b7e27bc1d42e8e0cc58b602b529c25cd0071b336 ......
checking ad11afd59d4c3308aeb61c7d61caa77875fa9bda ......
	 orig commit -> 2ce77d16db4240dd2e422fc0a5c26d3e2ec03446 ......
checking 992cfe9506d42ed7deff2bd09fe522c97179240a ......
	 orig commit -> 2adfa4210f8f35cdfb4e08318cc06b99752964c2 ......
checking 283b46fcece41113f4b11cde33d86e336db4bde6 ......
	 orig commit -> 92ff42645028fa6f9b8aa767718457b9264316b4 ......
checking 67f62d6ea4fc64a8f1460639233d240cedb711ff ......
	 orig commit -> 65a12b3aafed5fc59f4ce41b22b752b1729e6701 ......
checking c1ad3ae74614d08336cb15bce8e16bf0ed9ccc6b ......
	 orig commit -> c7976f5272486e4ff406014c4b43e2fa3b70b052 ......
checking d8f060c2a8c0f81eede6a7775998e3afd91fea6f ......
	 orig commit -> e16ea4bb516bc21ea2202f2107718b29218bea59 ......
checking 678131a9cbeb64c50e347edcc9171b9feedb2c0d ......
	 orig commit -> 8516673a996870ea0ceb337ee4f83c33c5ec3111 ......
checking f6edf95e54cb18ef12e82298e44eebad2fb9aa7d ......
	 orig commit -> b9eab08d012fa093947b230f9a87257c27fb829b ......
checking 049cff8555d41211c3dfbdcfc46cbb818d32eeae ......
	 orig commit -> 5108d768408abc80e4e8d99f5b406a73cb04056b ......
checking c3fd4d3c1966b34bad24ecd6629ebe55b865df10 ......
	 orig commit -> 72d24955b44a4039db54a1c252b5031969eeaac3 ......
checking ff54d5e95ad2ba7067ddd4764136bbded8a8129c ......
	 orig commit -> d5ac225c7d64c9c3ef821239edc035634e594ec9 ......
checking 947e2e9bd754b68bb4379b67ef3cb44879ad2ee9 ......
	 orig commit -> a17d2d6cd9985ca09a9e384f1bc71d710f7e5203 ......
checking 1b2981c3cba7fdd0b3f48c7a52fcc69aa11bb5e9 ......
	 orig commit -> 4b3aec2bbbce1c35f50e7475a9fd78d24b9ea4ea ......
checking 5f3e85ab6ac55b37ddce0cbbecb222a12831b1e7 ......
	 orig commit -> b369a0471503130cfc74f9f62071db97f48948c3 ......
checking f2e152e2b04717f5d449256317afb9c0670f0fdd ......
	 orig commit -> a44c9d36509c83cf64f33b93f6ab2e63822c01eb ......
checking c3dec92f3d792d9180d29b29b2da88d8b861b03d ......
	 orig commit -> a8168b6cee6e9334dfebb4b9108e8d73794f6088 ......
checking 26cae37274f3ea5dad4c4b7e8db08caaf502f14f ......
	 orig commit -> 2d9bbd02c54094ceffa555143b0d68cd06504d63 ......
checking c485b111e69c76a39d5535c0d53050635f0e3314 ......
	 orig commit -> 77be4c878c72e411ad22af96b6f81dd45c26450a ......
checking 7f4d2f7547010aeded32f0269a206f8dac0cf88b ......
	 orig commit -> 8cec57f5277ef0e354e37a0bf909dc71bc1f865b ......
checking 128e61839d68dee6bfccf9b64e80a041e85789fb ......
	 orig commit -> c61cfe49f0f0f0d1f8b56d0b045838d597e8c3a3 ......
checking a40eb9e8aaf6799a632de003c7231b6307ed47fc ......
	 orig commit -> d8e488e8242ecf129eebc440c92d800a99ca109d ......
checking 93f092f2c3c4d8f091f4b59b930283a8b4c5d6c0 ......
	 orig commit -> 8472b529e113e0863ea064fdee51bf73c3f86fd6 ......
checking c6656ab87a0ea6185591d30ee965e5afa49e8c7f ......
	 orig commit -> 9c0a50022b8ac7e863e6ec8342fa476fe5d1d75c ......
checking 103188787d9c1ceb3a0aceeaa37a2f252c58111f ......
	 orig commit -> 424ea0d174e82365f85c6770225dba098b8f1d5f ......
checking 7c3632572ab2dbc399f61aca8156b3c18ecf4651 ......
	 orig commit -> 09edcb647542487864e23aa8d2ef26be3e08978a ......
checking 4aac8ff4c4d85603629ede10ca569e4e27a1e1ea ......
	 orig commit -> bf59fddde1c3eab89eb8dca8f3d3dc097887d2bb ......
checking c21a7793a743dec2cdb7538168a6758b3bef165b ......
	 orig commit -> 8f52df50d9366f770a894d14ef724e5e04574e98 ......
checking 708f90af5f2277ddd412583b873c7fc4ce7a20ce ......
	 orig commit -> bbc3e471011417598e598707486f5d8814ec9c01 ......
checking 88347216d8e493d2a8bdcc3eb45beb55a8c0e4ef ......
	 orig commit -> bccb06c353af3764ca86d9da47652458e6c2eb41 ......
		 bccb06c353af3764ca86d9da47652458e6c2eb41 has problem. Fixes commit -> 843c3a59997f18060848b8632607dd04781b52d1
commit eca95cb6b47a4190d3cf110d51ba186eb40e3a44
Author: Jagdish Gediya <jagdish.gediya@nxp.com>
Date:   Wed Mar 21 05:51:46 2018 +0530

    mtd: nand: fsl_ifc: Fix eccstat array overflow for IFC ver >= 2.0.0
    
    commit 843c3a59997f18060848b8632607dd04781b52d1 upstream.
    
    Number of ECC status registers i.e. (ECCSTATx) has been increased in IFC
    version 2.0.0 due to increase in SRAM size. This is causing eccstat
    array to over flow.
    
    So, replace eccstat array with u32 variable to make it fail-safe and
    independent of number of ECC status registers or SRAM size.
    
    Fixes: bccb06c353af ("mtd: nand: ifc: update bufnum mask for ver >= 2.0.0")
    Cc: stable@vger.kernel.org # 3.18+
    Signed-off-by: Prabhakar Kushwaha <prabhakar.kushwaha@nxp.com>
    Signed-off-by: Jagdish Gediya <jagdish.gediya@nxp.com>
    Signed-off-by: Boris Brezillon <boris.brezillon@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking e5ca83f556925b86133af12ef7f17c1a52c39d7e ......
	 orig commit -> 7be4b5dc7ffa9499ac6ef33a5ffa9ff43f9b7057 ......
checking 272b5eef085c23cd71eec30fe040fb1592682508 ......
	 orig commit -> e153db03c6b7a035c797bcdf35262586f003ee93 ......
checking 7c865a3d27274733a680bcd8be8cd50d3841d133 ......
	 orig commit -> 87de083857aa269fb171ef0b39696b2888361c58 ......
checking da2ad1d8d47adb3fb0dbc86bdf27d0f84d5b0a59 ......
	 orig commit -> df467899da0b71465760b4e35127bce837244eee ......
checking 5eef9b51114fcc65651d671add52f267f91b9451 ......
	 orig commit -> be8f8284cd897af2482d4e54fbc2bdfc15557259 ......
checking 6f8e8ec3d1bd6333f6af8ada6d092314bc9f73c6 ......
	 orig commit -> 388b3b2b03701f3b3c10975c272892d7f78080df ......
checking db699dcd8e7af2c497678bed4463f80f75addadc ......
	 orig commit -> 65c79230576873b312c3599479c1e42355c9f349 ......
		 65c79230576873b312c3599479c1e42355c9f349 has problem. Fixes commit -> e538409257d0217a9bc715686100a5328db75a15
commit b70f9d27eab5c23e668350927a358621071bc415
Author: Ben Hutchings <ben.hutchings@codethink.co.uk>
Date:   Wed Apr 4 22:38:49 2018 +0200

    test_firmware: fix setting old custom fw path back on exit, second try
    
    commit e538409257d0217a9bc715686100a5328db75a15 upstream.
    
    Commit 65c79230576 tried to clear the custom firmware path on exit by
    writing a single space to the firmware_class.path parameter.  This
    doesn't work because nothing strips this space from the value stored
    and fw_get_filesystem_firmware() only ignores zero-length paths.
    
    Instead, write a null byte.
    
    Fixes: 0a8adf58475 ("test: add firmware_class loader test")
    Fixes: 65c79230576 ("test_firmware: fix setting old custom fw path back on exit")
    Signed-off-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Acked-by: Luis R. Rodriguez <mcgrof@kernel.org>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking cce2b93fd35194558e23582c858c4a9ce90c798c ......
	 orig commit -> a0982dfa03efca6c239c52cabebcea4afb93ea6b ......
checking bac7bb1849a683ed64343ec86f24d5403363fe57 ......
	 orig commit -> 2fe2582649aa2355f79acddb86bd4d6c5363eb63 ......
checking 7667c53f6f9adace76fd791039145de081e9f774 ......
	 orig commit -> 1b377924841df1e13ab5b225be3a83f807a92b52 ......
checking 05fafb80ba2412da75ef8e23f37bec2285ac7f6f ......
	 orig commit -> 75eccf5ed83250c0aeaeeb76f7288254ac0a87b4 ......
checking e95928a6407f32c716f11a4483e6438f88a0ed9f ......
	 orig commit -> 992172e3aec19e5b0ea5b757ba40a146b9282d1e ......
checking 8e93b348ca667484b40c0dffceb50ae405540851 ......
	 orig commit -> 9abd04af951e5734c9d5cfee9b49790844b734cf ......
checking 088d552d986e18f0a03a5367cf11b7841597c210 ......
	 orig commit -> 593f4b19a094c4426bd1e1e3cbab87a48bd13c71 ......
checking 9bf2ce49d3d4cea17e8597f7f9f0379280247113 ......
	 orig commit -> 1d1c36650752b7fb81cee515a9bba4131cac4b7c ......
checking ac09628e707f00a95effed606fa7f013cef77e52 ......
	 orig commit -> ecd7eb7c2bcf99f6c23d68ad56ce15949da848a1 ......
checking 46eae02ef6d9d9172d0cf4628f720b8673bdcc7d ......
	 orig commit -> db49a71798a38f3ddf3f3462703328dca39b1ac7 ......
checking d546045ebfe80880e57be141d33a89176ec4713f ......
	 orig commit -> 0f6edfe2bbbb59d161580cb4870fcc46f5490f85 ......
checking c7fd50a893f31450bafba5ccd0adb09a2de1ab55 ......
	 orig commit -> b819447dfc4bd120c9d6cd8521252d544fce8fe7 ......
checking 0a83f6943ae16a73a3f6af5c89f2a453129406f4 ......
	 orig commit -> 62ca0690cd495bb7c1414cdf0cf790c2922a1d79 ......
checking 6335d2350f4273c5ed4ff82929958ebf8b635aa2 ......
	 orig commit -> 1d5e9f80ab021e3e1f9436627a4ad07a143ccb2c ......
checking b7ac7e479ae38810bc06fb662fe6e7e1ac7df3cf ......
	 orig commit -> d2891c4d071d807f01cc911dc42a68f4568d65cf ......
checking f3fa28a381b8a61cd2f3631936e6aa6c48363cb9 ......
	 orig commit -> 27bfbc21a0c0f711fa5382de026c7c0700c9ea28 ......
checking 59665fc5e5f5ff1275d1adb4fa63ec1a707e7e89 ......
	 orig commit -> a62ca337b36e31621b582cbe8f17d9404a48e120 ......
checking 99f3e3b0a8dbbf72173b18fe8b8df625c94cc7df ......
	 orig commit -> 250b76f43f57d578ebff5e7211eb2c73aa5cd6ca ......
checking d0cab8cae1618e9c6d4b16560321c57ed1321bac ......
	 orig commit -> d0381c81c2f782fa2131178d11e0cfb23d50d631 ......
		 d0381c81c2f782fa2131178d11e0cfb23d50d631 has problem. Fixes commit -> c93f5cf571e7795f97d49ef51b766cf25e328545
commit fd2f070985ea0eefdd503efbb9a5b9275161b893
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Thu May 25 19:38:17 2017 +0900

    kprobes/x86: Fix to set RWX bits correctly before releasing trampoline
    
    commit c93f5cf571e7795f97d49ef51b766cf25e328545 upstream.
    
    Fix kprobes to set(recover) RWX bits correctly on trampoline
    buffer before releasing it. Releasing readonly page to
    module_memfree() crash the kernel.
    
    Without this fix, if kprobes user register a bunch of kprobes
    in function body (since kprobes on function entry usually
    use ftrace) and unregister it, kernel hits a BUG and crash.
    
    Link: http://lkml.kernel.org/r/149570868652.3518.14120169373590420503.stgit@devbox
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Fixes: d0381c81c2f7 ("kprobes/x86: Set kprobes pages read-only")
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 96d0c4c4674705677ee6dbfecc468da439dadf01 ......
	 orig commit -> bd0b90676c30fe640e7ead919b3e38846ac88ab7 ......
checking 1ab6efa2d4d6e785e6701fd319cc3044ede2fadf ......
	 orig commit -> 12ee4022f67f8854061b46e5c0a7ad6258ab66c2 ......
checking ae9b6ae2e77947534e255903627cc62746ea77e2 ......
	 orig commit -> 97d27b0dd015e980ade63fda111fd1353276e28b ......
checking 602f933e0314b6ec4fca46e57127a08f917ed7c5 ......
	 orig commit -> 28676d869bbb5257b5f14c0c95ad3af3a7019dd5 ......
		 28676d869bbb5257b5f14c0c95ad3af3a7019dd5 has problem. Fixes commit -> f930c7043663188429cd9b254e9d761edfc101ce
68c59fcea1f2c6a54c62aa896cc623c1b5bc9b47
commit 691db1857ee784f026e4d2c267229db4885494ad
Author: Johannes Thumshirn <jthumshirn@suse.de>
Date:   Fri Jul 7 10:56:38 2017 +0200

    scsi: sg: fix SG_DXFER_FROM_DEV transfers
    
    commit 68c59fcea1f2c6a54c62aa896cc623c1b5bc9b47 upstream.
    
    SG_DXFER_FROM_DEV transfers do not necessarily have a dxferp as we set
    it to NULL for the old sg_io read/write interface, but must have a
    length bigger than 0. This fixes a regression introduced by commit
    28676d869bbb ("scsi: sg: check for valid direction before starting the
    request")
    
    Signed-off-by: Johannes Thumshirn <jthumshirn@suse.de>
    Fixes: 28676d869bbb ("scsi: sg: check for valid direction before starting the request")
    Reported-by: Chris Clayton <chris2553@googlemail.com>
    Tested-by: Chris Clayton <chris2553@googlemail.com>
    Cc: Douglas Gilbert <dgilbert@interlog.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Tested-by: Chris Clayton <chris2553@googlemail.com>
    Acked-by: Douglas Gilbert <dgilbert@interlog.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Cc: Cristian Crinteanu <crinteanu.cristian@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 887cb857e5122a72caa02a3bea402b1c8bf4056b
Author: Johannes Thumshirn <jthumshirn@suse.de>
Date:   Thu Jul 27 09:11:26 2017 +0200

    scsi: sg: only check for dxfer_len greater than 256M
    
    commit f930c7043663188429cd9b254e9d761edfc101ce upstream.
    
    Don't make any assumptions on the sg_io_hdr_t::dxfer_direction or the
    sg_io_hdr_t::dxferp in order to determine if it is a valid request. The
    only way we can check for bad requests is by checking if the length
    exceeds 256M.
    
    Signed-off-by: Johannes Thumshirn <jthumshirn@suse.de>
    Fixes: 28676d869bbb (scsi: sg: check for valid direction before starting the request)
    Reported-by: Jason L Tibbitts III <tibbs@math.uh.edu>
    Tested-by: Jason L Tibbitts III <tibbs@math.uh.edu>
    Suggested-by: Doug Gilbert <dgilbert@interlog.com>
    Cc: Doug Gilbert <dgilbert@interlog.com>
    Cc: <stable@vger.kernel.org>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 691db1857ee784f026e4d2c267229db4885494ad
Author: Johannes Thumshirn <jthumshirn@suse.de>
Date:   Fri Jul 7 10:56:38 2017 +0200

    scsi: sg: fix SG_DXFER_FROM_DEV transfers
    
    commit 68c59fcea1f2c6a54c62aa896cc623c1b5bc9b47 upstream.
    
    SG_DXFER_FROM_DEV transfers do not necessarily have a dxferp as we set
    it to NULL for the old sg_io read/write interface, but must have a
    length bigger than 0. This fixes a regression introduced by commit
    28676d869bbb ("scsi: sg: check for valid direction before starting the
    request")
    
    Signed-off-by: Johannes Thumshirn <jthumshirn@suse.de>
    Fixes: 28676d869bbb ("scsi: sg: check for valid direction before starting the request")
    Reported-by: Chris Clayton <chris2553@googlemail.com>
    Tested-by: Chris Clayton <chris2553@googlemail.com>
    Cc: Douglas Gilbert <dgilbert@interlog.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Tested-by: Chris Clayton <chris2553@googlemail.com>
    Acked-by: Douglas Gilbert <dgilbert@interlog.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Cc: Cristian Crinteanu <crinteanu.cristian@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking bab8ac1b274eb835a6ac33501dbd010fc0262822 ......
	 orig commit -> 3393af24b665cb0aea7353b05e522b03ab1e7d73 ......
checking 5d7601dcb29d4b51cc32da4a744533f524a6fc8a ......
	 orig commit -> 1282ba7fc28dbc66c3f0e4aaafaaa228361d1ae5 ......
checking 4c885c35463fac9e11055ce447de05bc996b4c4c ......
	 orig commit -> 0973ad97c187e06aece61f685b9c3b2d93290a73 ......
checking 8c4e5168dd2776147acb4a94f941508809262365 ......
	 orig commit -> 9269e5560b261eb9ee157497890dc0948db76cf8 ......
checking d9f8b1cc5aa6453a5735c216cb80c6c00da20926 ......
	 orig commit -> 1e0d4f0200e4dbdfc38d818f329d8a0955f7c6f5 ......
checking 80e1caf00d148ff8034861551d41faa6c537df8c ......
	 orig commit -> 7654137071fa706e5c91f4f27bc2a5cd7e435a9b ......
checking 3efaebb3bbc1a5d702ed0a943b91cd14f78d0bab ......
	 orig commit -> 5cddd05c9cbe420436799716d009bc0372ef8268 ......
checking 02db6c7024e15904e508070455cdefd1f73a859d ......
	 orig commit -> 32ccb130f5325abc81b32b1a538390f46e4860f6 ......
checking d9586e4a882a054e1abd41f3eeb224ecb94e2632 ......
	 orig commit -> 9f20dfb44d03745d0d3cef2ffb3abf8d8024fa61 ......
checking 813bd8c7e5a0a02c6f9bb332d5b44ec20db02ab0 ......
	 orig commit -> dad3f793f20fbb5c0c342f0f5a0bdf69a4d76089 ......
checking 708def5dbf38803b4f6cc370c494f15f15a46aa4 ......
	 orig commit -> 4868e3508d1934d28961f940ed6b9f1e347ab52c ......
checking 1f8fe98e0e096728a47bda7bf9a632b3e89970b5 ......
	 orig commit -> b670883bb9e55ba63a278d83e034faefc01ce2cf ......
checking b42b97a5657f49c51f523f691e8a867708a38b80 ......
	 orig commit -> 7471fb77ce4dc4cb81291189947fcdf621a97987 ......
checking f9ab125d20efab348f5652d3cf80c8cc9bb0c960 ......
	 orig commit -> 0c08aaf873174c95e674cf21ffcd041c589d2e5b ......
checking d7928e10b468c465b597d738bc93e30aa4b34dff ......
	 orig commit -> 1531a208ed861e4bd287444f9466ffcf98383de2 ......
checking 735b0f043d484a535a7a8f57157e32bade8ae1ef ......
	 orig commit -> 4461c84b52b4a952c657505ef7e4e06b016783df ......
checking c86742fc38993fd42672c55cec0ae537279e3fbb ......
	 orig commit -> 411dac79cc2ed80f7e348ccc23eb4d8b0ba9f6d5 ......
checking 198142acc08546013a45f1aebcaf72a68561dcd8 ......
	 orig commit -> 5bba7aa4958e271c3ffceb70d47d3206524cf489 ......
checking 5b52c8c195c43981557474528fa0b9340b3176ca ......
	 orig commit -> a81507c79f4ae9a0f9fb1054b59b62a090620dd9 ......
checking e50c396af21ca45061f8550563825c8b84556075 ......
	 orig commit -> 1ef0910cfd681f0bd0b81f8809935b2006e9cfb9 ......
checking 57a84887bc773d937bc87a558ffdf2f21f91c786 ......
	 orig commit -> e61c38d85b7392e033ee03bca46f1d6006156175 ......
		 e61c38d85b7392e033ee03bca46f1d6006156175 has problem. Fixes commit -> 6df765dca378bddf994cfd2044acafa501bd800f
commit aa6b517e74512ef8373ff66a40f4925f9b6edab6
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Wed May 24 21:38:46 2017 +0200

    serial: imx: ensure UCR3 and UFCR are setup correctly
    
    commit 6df765dca378bddf994cfd2044acafa501bd800f upstream.
    
    Commit e61c38d85b73 ("serial: imx: setup DCEDTE early and ensure DCD and
    RI irqs to be off") has a flaw: While UCR3 and UFCR were modified using
    read-modify-write before it switched to write register values
    independent of the previous state. That's a good idea in principle (and
    that's why I did it) but needs more care.
    
    This patch reinstates read-modify-write for UFCR and for UCR3 ensures
    that RXDMUXSEL and ADNIMP are set for post imx1.
    
    Fixes: e61c38d85b73 ("serial: imx: setup DCEDTE early and ensure DCD and RI irqs to be off")
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Acked-by: Mika Penttilä <mika.penttila@nextfour.com>
    Tested-by: Mika Penttilä <mika.penttila@nextfour.com>
    Acked-by: Steve Twiss <stwiss.opensource@diasemi.com>
    Tested-by: Steve Twiss <stwiss.opensource@diasemi.com>
    Cc: Chris Ruehl <chris.ruehl@gtsys.com.hk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 7d257fe12895703db6a7f0b47b2fe2a918512310 ......
	 orig commit -> 7d05587c9e0e4611650bb403812e2d492c178a9f ......
checking ad8d41ba596be6c054e5956b145fa223a5bb8b37 ......
	 orig commit -> 7064dc7fc13b2994d33ae540ffb7a3a05ac463bf ......
checking b1a579996f63e2b6a88e8360953884bb6f965ced ......
	 orig commit -> eeedc5421dd3b51de73e6106405c5c77f920f281 ......
checking a9a100b20d71c2a2a959418bebdb651379f99b6a ......
	 orig commit -> 004eb614c4d2fcc12a98714fd887a860582f203a ......
checking 543a1817e58005b5db834a5aa60a78d9095cad81 ......
	 orig commit -> 5e570373c015b60a68828b1cd9d475cb33d3be4b ......
checking 3820303837014a00e40e69f9a648aed6cc78f92a ......
	 orig commit -> 1769152ac64b0b07583f696b621624df2ca4c840 ......
checking 7d6140b4de8b7e41f5cc9fab01fd7a91f72108f9 ......
	 orig commit -> a294043b2fbd8de69d161457ed0c7a4026bbfa5a ......
checking b8c231ebced08cc005e164ad841cc6395596189e ......
	 orig commit -> 9a1c779e6b06855e41099caa6f15b3b584dfa88c ......
checking afd9ccdd1422d0c1b2e19afbcab7780026114f76 ......
	 orig commit -> 28d06353881939703c34d82a1465136af176c620 ......
checking b0d7b1af256cedf0cd1af08c32c56279e15b601e ......
	 orig commit -> 74f169090b6f36b867c9df0454366dd9af6f62d1 ......
checking 79a6866647f91c27af165aa1223d305b2c118e44 ......
	 orig commit -> 5016bdb796b3726eec043ca0ce3be981f712c756 ......
checking d55a55bc8889f360a686e91fe740048cb7733da6 ......
	 orig commit -> 622f6e3265707ebf02ba776ac6e68003bcc31213 ......
checking b07b26448103a94bd6353a38af0e039488201c23 ......
	 orig commit -> 2f78227874754b1e10cd348fd6e7693b0dabb3f6 ......
checking 7cd70b3f8ce3ee9ff06bebbbdeb87e38f26ec1aa ......
	 orig commit -> 75106523f39751390b5789b36ee1d213b3af1945 ......
checking d4894a600657ccf2d58ebf9af37a69b0a756f773 ......
	 orig commit -> 25b223ddfe2a557307c05fe673e09d94ae950877 ......
checking 1f7b46d22802e7adefd2c4f3d13773cb8cb35b92 ......
	 orig commit -> 540fca35e38d15777b310f450f63f056e63039f5 ......
checking 6818b4da096857cea8d9143cd3e0eeeb602ad862 ......
	 orig commit -> 8820a4cf0cb4cd5c6540a9a18b2cedbdfd5a6891 ......
checking ea5ac4090686a015d8ae0f461c30cd079dab2c21 ......
	 orig commit -> 13e005f9f933a35b5e55c9d36f151efe2a8383ec ......
checking f530c1f0025213f9942297e7ddc6f1b838b7deba ......
	 orig commit -> fb897ad315643e5dc1092a115b3cec914b66df9d ......
checking 6073a164923809f024963bf1177e3780bc669ae7 ......
	 orig commit -> 7b87463edf3e2c16d72eeea3d1cf3c12bb5487c6 ......
checking 304c1e93c0206bd62ba828824ec0e09b79a2e05f ......
	 orig commit -> 71b0576bdb862e964a82c73327cdd1a249c53e67 ......
checking 7322cf6294aa867a86926b7441105e938c6f26b3 ......
	 orig commit -> ebf06af55c7594ed1fc18469a5cddf911c40e687 ......
checking a24c058d89cb18c861c2dcad92f808bb40fdd03e ......
	 orig commit -> 6dd47cfd03a058d08b8caffb06194aa0eb109cf1 ......
checking b5fa6d91433740c1a4e44e860e088fa10dbcca45 ......
	 orig commit -> 257ab443118bffc7fdcef38f49cf59be68a3e362 ......
checking 0e6661b400404028aed71e80b785a3a42b1d85e1 ......
	 orig commit -> e0aad5b44ff5d28ac1d6ae70cdf84ca228e889dc ......
checking d45d7c94f8acb226a626840b378d2a5bba3758c4 ......
	 orig commit -> 44531ba45dbf3c23cc7ae0934ec9b33ef340ac56 ......
checking 6e09b864df341b5c9321593514f173d8a049952b ......
	 orig commit -> d39004ab136ebb6949a7dda9d24376f3d6209295 ......
checking 9c1e8b472b48421e8a698bd63cda283960ef5279 ......
	 orig commit -> 64ec10dc2ab8ef5bc6e76b1d4bc8203c08a6da1e ......
checking a61cd7e00d99f1c2bc6d6932d5e46a48419e233a ......
	 orig commit -> a7a9dcd882a67b68568868b988289fce5ffd8419 ......
checking 8131f4ddbdee477da77683cdac7e28684dfb423d ......
	 orig commit -> 1cd9028027c7a7c10b774df698c3cfafec6aa67d ......
checking dc65685aa3a488d1944c7870ef8838dd86867e3d ......
	 orig commit -> 16fe68dcab5702a024d85229ff7e98979cb701a5 ......
checking 26cd77067fb3839393807760330177a7f1b90344 ......
	 orig commit -> d13d4e063d4a08eb1686e890e9183dde709871bf ......
checking 75280515507bb41a2d7a52971f3a60070060b364 ......
	 orig commit -> 91a7c50cb4fabfba218549dfa84356069918bfbf ......
checking 14c63f375b9a94cb39f9b8a669a9d6e530e6bfa9 ......
	 orig commit -> 068a496c4525c638ffab56449d905b88ef97fe32 ......
checking 8f2c9f6c575969c7d5336cae0c73f7f45ffbfd73 ......
	 orig commit -> ca42fb9e52d155547e6cf18cf26bce3e1a6af4ea ......
checking c95acb7bbefb4267c8df48b963d977262268de0a ......
	 orig commit -> d916d923724d59cde99ee588f15eec59dd863bbd ......
checking 441f5af65244dd6585f1c364f1f4fbd00aacb64b ......
	 orig commit -> d6acfeb17d030bb3907e77c048b0e7783ad8e5a9 ......
checking 399a4f3c2b3f0c1812a04a4a9994ced8d1704c3d ......
	 orig commit -> aa74f0687cfe998e59b20d6454f45e8aa4403c45 ......
checking ca9c60742b20452b821ac69ad4115d0a681597a3 ......
	 orig commit -> 2ed2b8621be2708c0f6d61fe9841e9ad8b9753f0 ......
checking 66db324639335681f510ee8720d22ac237412564 ......
	 orig commit -> a525108cf1cc14651602d678da38fa627a76a724 ......
checking aad6ccac0e4fddcfd1b04a2cbd95b550c59da23e ......
	 orig commit -> b77d537d00d08fcf0bf641cd3491dd7df0ad1475 ......
checking 8c989a6803e4e235cd50d789a7ebe6fad10f747d ......
	 orig commit -> 142c6594acbcc32391af9c15f8cd65c6c177698f ......
checking 508126005146f7a8d0c44c2acd02f0fce1665ccd ......
	 orig commit -> c2c139cf435b18939204800fa72c53a7207bdd68 ......
checking 68c2353e3bebd9337d3f38cbbaf9699647e0b765 ......
	 orig commit -> c13ff37e359bb3eacf4e1760dcea8d9760aa7459 ......
checking 73f2c66447bb1514518879f7e260636eba7376ff ......
	 orig commit -> fd2b2975149f5f7099693027cece81b16842964a ......
checking e2afbcdeb61503683b16cf90b98da187f33c6d39 ......
	 orig commit -> fd086045559d90cd7854818b4c60a7119eda6231 ......
checking 94b3df54ad6d451a0158681758a0996947b5134d ......
	 orig commit -> 06cceedcca67a93ac7f7aa93bbd9980c7496d14e ......
checking 0030b37be54786e156df0ce8ad99b4c1ead682aa ......
	 orig commit -> 403fe77e22eb72c962c3889efc9d4fa62e454737 ......
checking 27b7275721c498befcb57b5936c79f88366f78eb ......
	 orig commit -> 89675f36c9e17512812b9d14d9824f8ef92782c3 ......
checking dab825106b376cc8f3c4e948175c23cf383566da ......
	 orig commit -> 1764f8081f1524bf629e0744b277db751281ff56 ......
checking 90a6ae1eadf11e73fe4c6dbaa0fbd888bb1b48d4 ......
	 orig commit -> 2128f78f75a36a34dfef0e127273c2f820c5c904 ......
checking 5bf86f30e2a2648cff3346ace5d26208d6a3e001 ......
	 orig commit -> 591a3d7c09fa08baff48ad86c2347dbd28a52753 ......
checking 851eb3187617dcaacf6162626dd750850d5abef1 ......
	 orig commit -> c4adfc822bf5d8e97660b6114b5a8892530ce8cb ......
		 c4adfc822bf5d8e97660b6114b5a8892530ce8cb has problem. Fixes commit -> ad729bc9acfb7c47112964b4877ef5404578ed13
3f3c278c94dd994fe0d9f21679ae19b9c0a55292
commit bc5ad405837a9e89595cd603a8d329ec9d96dde9
Author: Mahesh Bandewar <maheshb@google.com>
Date:   Mon Apr 3 18:38:39 2017 -0700

    bonding: fix active-backup transition
    
    commit 3f3c278c94dd994fe0d9f21679ae19b9c0a55292 upstream.
    
    Earlier patch c4adfc822bf5 ("bonding: make speed, duplex setting
    consistent with link state") made an attempt to keep slave state
    consistent with speed and duplex settings. Unfortunately link-state
    transition is used to change the active link especially when used
    in conjunction with mii-mon. The above mentioned patch broke that
    logic. Also when speed and duplex settings for a link are updated
    during a link-event, the link-status should not be changed to
    invoke correct transition logic.
    
    This patch fixes this issue by moving the link-state update outside
    of the bond_update_speed_duplex() fn and to the places where this fn
    is called and update link-state selectively.
    
    Fixes: c4adfc822bf5 ("bonding: make speed, duplex setting consistent
    with link state")
    Signed-off-by: Mahesh Bandewar <maheshb@google.com>
    Reviewed-by: Andy Gospodarek <andy@greyhouse.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Nate Clark <nate@neworld.us>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit ae0c8eeb66045ea2e327b23d21788622ca510627
Author: Andreas Born <futur.andy@googlemail.com>
Date:   Thu Aug 10 06:41:44 2017 +0200

    bonding: require speed/duplex only for 802.3ad, alb and tlb
    
    commit ad729bc9acfb7c47112964b4877ef5404578ed13 upstream.
    
    The patch c4adfc822bf5 ("bonding: make speed, duplex setting consistent
    with link state") puts the link state to down if
    bond_update_speed_duplex() cannot retrieve speed and duplex settings.
    Assumably the patch was written with 802.3ad mode in mind which relies
    on link speed/duplex settings. For other modes like active-backup these
    settings are not required. Thus, only for these other modes, this patch
    reintroduces support for slaves that do not support reporting speed or
    duplex such as wireless devices. This fixes the regression reported in
    bug 196547 (https://bugzilla.kernel.org/show_bug.cgi?id=196547).
    
    Fixes: c4adfc822bf5 ("bonding: make speed, duplex setting consistent
    with link state")
    Signed-off-by: Andreas Born <futur.andy@googlemail.com>
    Acked-by: Mahesh Bandewar <maheshb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Nate Clark <nate@neworld.us>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bc5ad405837a9e89595cd603a8d329ec9d96dde9
Author: Mahesh Bandewar <maheshb@google.com>
Date:   Mon Apr 3 18:38:39 2017 -0700

    bonding: fix active-backup transition
    
    commit 3f3c278c94dd994fe0d9f21679ae19b9c0a55292 upstream.
    
    Earlier patch c4adfc822bf5 ("bonding: make speed, duplex setting
    consistent with link state") made an attempt to keep slave state
    consistent with speed and duplex settings. Unfortunately link-state
    transition is used to change the active link especially when used
    in conjunction with mii-mon. The above mentioned patch broke that
    logic. Also when speed and duplex settings for a link are updated
    during a link-event, the link-status should not be changed to
    invoke correct transition logic.
    
    This patch fixes this issue by moving the link-state update outside
    of the bond_update_speed_duplex() fn and to the places where this fn
    is called and update link-state selectively.
    
    Fixes: c4adfc822bf5 ("bonding: make speed, duplex setting consistent
    with link state")
    Signed-off-by: Mahesh Bandewar <maheshb@google.com>
    Reviewed-by: Andy Gospodarek <andy@greyhouse.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Nate Clark <nate@neworld.us>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 3a8649e6c5b28b4bb72ce94a9b1967ffdd70481d ......
	 orig commit -> 6faecba0b3da7b617bf72bef422bf0d3bb6dfe7d ......
checking 13cc05b621bfde13f6afa5ccbc8e5bd88f26399b ......
	 orig commit -> eb419229be58dc6d4a3a814116a265908e088c39 ......
checking 55b22830b97ecccafc58df9a0f9824ece3add663 ......
	 orig commit -> 741b8b832a57402380be79d7d11a59eaf57fff3b ......
checking da1a974e27c7aea0b1859be3774ea7577f4ffd95 ......
	 orig commit -> 5a2342111c68e623e27ee7ea3d0492d8dad6bda0 ......
checking 58f8d0c05a734ff4071db3f2cf444570ce69236f ......
	 orig commit -> 6ebd2547dd24daf95a21b2bc59931de8502afcc3 ......
		 6ebd2547dd24daf95a21b2bc59931de8502afcc3 has problem. Fixes commit -> 3619ef76b37d4803bc9daee9d03d82c8526db378
checking 9ad2abe6d02c34d7212cead081a7c4b9155be46e ......
	 orig commit -> 10b6c0c2e2bb8cd1be682f8d36ef597e3419cb88 ......
checking c582696e096064d43d953fd576712d95fcab6702 ......
	 orig commit -> 1966b8657d058ecb95031809b607bf3fd1e01c10 ......
checking 61ed2d27b87fe5b01fa867492e75495b96a41456 ......
	 orig commit -> 7f3ff14b7eb1ffad132117f08a1973b48e653d43 ......
checking 694f219a606f80811ea384044b9845c80d688bb3 ......
	 orig commit -> c48367427a39ea0b85c7cf018fe4256627abfd9e ......
checking 84353d9d99cf6793f6f28e948f2973681d63806c ......
	 orig commit -> 812613591cb652344186c4cd912304ed02138566 ......
checking 28fdd86eb53f36eea98de4cd50441f92d60281c9 ......
	 orig commit -> 6b8530cc056efd4a11b034ca5b1e9f7e9563f553 ......
checking 422fcc97747961709f9faa97b5d1f3f4305b67b8 ......
	 orig commit -> 414428c5da1c71986727c2fa5cdf1ed071e398d7 ......
checking fd15bade786ee8d2db6fe45b5b7784a1ec9ca2b7 ......
	 orig commit -> d3a78d8bf759d8848339dcc367c4c1678b57a08b ......
checking ae34475dfc0d6ad8c0b5cb25ab43a612ef223fb6 ......
	 orig commit -> add641e7dee31b36aee83412c29e39dd1f5e0c9c ......
checking 997de25b0aa87077afd340d4f7aae9903ac8fb6d ......
	 orig commit -> cf5cd9d4480a87da78768718cac194a71079b5cb ......
checking 00c001fbdad55884d4316f528ffc6a0017ca88dd ......
	 orig commit -> 0107042768658fea9f5f5a9c00b1c90f5dab6a06 ......
checking ae0258a81896f9a26b1a84102fe71dd71662b727 ......
	 orig commit -> 1b8955bc5ac575009835e371ae55e7f3af2197a9 ......
checking bc88d1bee232c2a514877dd078ed2fd42cde959f ......
	 orig commit -> 54449af0e0b2ea43a8166611c95b730c850c3184 ......
checking 2f1b0a81b1b39e8eb2a79b667fc17bf76f24b788 ......
	 orig commit -> 66a0d59cdd12546ddf01d229de28b07ccf6d637f ......
checking 3dda4b42a8f971d3d3896f14ca5f7185a29ae067 ......
	 orig commit -> 7ef539c88d7d394410d547c9f082d477093a2a22 ......
checking 86b684fcd6fe24586263e978aba79d136511f0b8 ......
	 orig commit -> 23b2a4ddebdd17fad265b4bb77256c2e4ec37dee ......
checking 078c1a50e189829e0279764f245970a3d2b461fd ......
	 orig commit -> 6e4c8480bd2eb95309ad3c875e11d2cad98f9188 ......
checking 6ba32c648a9fc27993330632e84c4cbdceef5d57 ......
	 orig commit -> bcf54d5385abaea9c8026aae6f4eeb348671a52d ......
checking 1fb9c2f41e199e97b811981901d9de4a9d7729bf ......
	 orig commit -> a3a5129e122709306cfa6409781716c2933df99b ......
checking 84f876e346377a3ff16775781879981d8eb1aaf6 ......
	 orig commit -> ca260ece6a57dc7d751e0685f51fa2c55d851873 ......
checking 58a1452cef23409aa42b67acf5c3e4284f88dba3 ......
	 orig commit -> 4fd4dd8bffb112d1e6549e0ff09e9fa3c8cc2b96 ......
checking 82ca25fbd07c8572526ef6e584c09a4260b610c3 ......
	 orig commit -> e50728effe1126eae39445ba144078b1305b7047 ......
checking 814e2b3462083ab336a4cc1d442f272ab8165d24 ......
	 orig commit -> c2a736b698008d296c5010ec39077eeb5796109f ......
checking 4c484f758c180c6f8374fada0d9872fe8557e41d ......
	 orig commit -> 88997e4208aea117627898e5f6f9801cf3cd42d2 ......
checking 3582c4b4df1d7f2ff219b6367976e31d7dfbada1 ......
	 orig commit -> c3883fe06488a483658ba5d849b70e49bee15e7c ......
checking 7fd66ee795c6fce0897a5731ec011b17eef63901 ......
	 orig commit -> 70946723eeb859466f026274b29c6196e39149c4 ......
checking f49cfde843314302a2dc7913e6a3183585a92d60 ......
	 orig commit -> f0a30dca5f84fe8048271799b56677ac2279de66 ......
checking a124c8751f2288ef328fba9544634af9a4021d9f ......
	 orig commit -> 0348aaa34412e24ebe622a2b1b013e68d6ae5412 ......
checking d5721f4b3423bb669ad04114a03fa60085c078e1 ......
	 orig commit -> 5204bf17031b69fa5faa4dc80a9dc1e2446d74f9 ......
checking 3649d93cb4e9df98d48a3860a6da7575478f0dd9 ......
	 orig commit -> 5080f39e8c72e01cf37e8359023e7018e2a4901e ......
checking 09bcb120a27be242f35432ddb671ba11786d8790 ......
	 orig commit -> 2f771399a3a2c371c140ff33544a583c6fbc5fd9 ......
checking 056a442ef49544193148f7a449a1e72cb0d9635e ......
	 orig commit -> bdd3c25423cb42171446940bca0946e0443e1a84 ......
checking e6e868c7504502cda721c0a814d3eac2594760f0 ......
	 orig commit -> c4ba329cabca7c839ab48fb58b5bcc2582951a48 ......
checking 84b63638ca812f02f9fc79ee358146f9f8d310ab ......
	 orig commit -> a28f6f27a88f047f03f04b9246ca260ebc91455e ......
checking 6a528ebdf3ce081204854cea4b33aea37539b9c4 ......
	 orig commit -> ca07baab0b1e627ae1d4a55d190fb1c9d32a3445 ......
checking 80ec67573b9508bce7f10a80f01b78fb7c9cb1c2 ......
	 orig commit -> 608b20506941969ea30d8c08dc9ae02bb87dbf7d ......
checking 671eeac5358a15b9bb69d146ef5a3d4d54eb7b5b ......
	 orig commit -> 0a0400c3094b5d5cedd479ddbf1329de74c09c4b ......
checking 67622b81288413e28fca6d94338c66a0b08797a5 ......
	 orig commit -> 11623fce0f9afef30c45e3f2120b063de3809a8f ......
checking 054221c210227e3b8b325c1459443518eeea2cd1 ......
	 orig commit -> 4b72436dc3dd2457056b22d6f147777368c869fa ......
checking c82b5831a27319b7f3793bdd17145b3551963d21 ......
	 orig commit -> e026e700d940a1ea3d3bc84d92ac668b1f015462 ......
checking f0dd1b26deb476853f0f8ae87695a73e348f5ca8 ......
	 orig commit -> 3c51b9c7f1fae00c25f1e34da649a288e3fea1ae ......
checking ceb6ef4e333e064307a79877c7b23b891a8d95ff ......
	 orig commit -> 88b897a30c525c2eee6e7f16e1e8d0f18830845e ......
checking daf88438c5a30b24b784a3b7cb95a780d733dc12 ......
	 orig commit -> c271dd6c391b535226cf1a81aaad9f33cb5899d3 ......
checking 6297c56c5e7fe3dd1ade273774f3ffc8451b6d71 ......
	 orig commit -> 96a39aed25e6559b160786117df124084feb9080 ......
		 96a39aed25e6559b160786117df124084feb9080 has problem. Fixes commit -> 09f79fd49d94cda5837e9bfd0cb222232b3b6d9f
commit 78ba91de8325aebe39dce2a389511e1e704e00d4
Author: Anjali Singhai Jain <anjali.singhai@intel.com>
Date:   Fri Sep 1 13:42:49 2017 -0700

    i40e: avoid NVM acquire deadlock during NVM update
    
    [ Upstream commit 09f79fd49d94cda5837e9bfd0cb222232b3b6d9f ]
    
    X722 devices use the AdminQ to access the NVM, and this requires taking
    the AdminQ lock. Because of this, we lock the AdminQ during
    i40e_read_nvm(), which is also called in places where the lock is
    already held, such as the firmware update path which wants to lock once
    and then unlock when finished after performing several tasks.
    
    Although this should have only affected X722 devices, commit
    96a39aed25e6 ("i40e: Acquire NVM lock before reads on all devices",
    2016-12-02) added locking for all NVM reads, regardless of device
    family.
    
    This resulted in us accidentally causing NVM acquire timeouts on all
    devices, causing failed firmware updates which left the eeprom in
    a corrupt state.
    
    Create unsafe non-locked variants of i40e_read_nvm_word and
    i40e_read_nvm_buffer, __i40e_read_nvm_word and __i40e_read_nvm_buffer
    respectively. These variants will not take the NVM lock and are expected
    to only be called in places where the NVM lock is already held if
    needed.
    
    Since the only caller of i40e_read_nvm_buffer() was in such a path,
    remove it entirely in favor of the unsafe version. If necessary we can
    always add it back in the future.
    
    Additionally, we now need to hold the NVM lock in i40e_validate_checksum
    because the call to i40e_calc_nvm_checksum now assumes that the NVM lock
    is held. We can further move the call to read I40E_SR_SW_CHECKSUM_WORD
    up a bit so that we do not need to acquire the NVM lock twice.
    
    This should resolve firmware updates and also fix potential raise that
    could have caused the driver to report an invalid NVM checksum upon
    driver load.
    
    Reported-by: Stefan Assmann <sassmann@kpanic.de>
    Fixes: 96a39aed25e6 ("i40e: Acquire NVM lock before reads on all devices", 2016-12-02)
    Signed-off-by: Anjali Singhai Jain <anjali.singhai@intel.com>
    Signed-off-by: Jacob Keller <jacob.e.keller@intel.com>
    Tested-by: Andrew Bowers <andrewx.bowers@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
checking 41beba9840d7967ac4b6636b42bad6af3fb18fa5 ......
	 orig commit -> 6f051e4a685b768f3704c7c069aa1edee3010622 ......
checking fdfc3fa74511d687dbf626248b671cbe861c7c04 ......
	 orig commit -> 5bc329503e8191c91c4c40836f062ef771d8ba83 ......
checking 56eac6842374eea81ce30147124cc005d491d722 ......
	 orig commit -> 4b0b3aa6a2756e6115fdf275c521e4552a7082f3 ......
checking 45142b2857789947a5f3d0e5fdfbb93ecac9eaf0 ......
	 orig commit -> 3e6ef9c80946f781fc25e8490c9875b1d2b61158 ......
checking b243aa88a72263289f962844e8665157a53669d1 ......
	 orig commit -> e2f586bd83177d22072b275edd4b8b872daba924 ......
checking bae359c00b391644ebf813ee3dfb17549e09b5ef ......
	 orig commit -> fda78d7a0ead144f4b2cdb582dcba47911f4952c ......
checking 4d2c5e9a5a4d64d416ff30a0f29994b6341b22b6 ......
	 orig commit -> 4c7f16d14a33a9cfb4af9cb780d8a73bcca64a92 ......
		 4c7f16d14a33a9cfb4af9cb780d8a73bcca64a92 has problem. Fixes commit -> 92411f6d7f1afcc95e54295d40e96a75385212ec
checking 5d2db0dbb1939cbd08c02e225795459fdfccc948 ......
	 orig commit -> c73f8c00330f59ce9b1ace9ff698aca83390d358 ......
checking c1315eea94ea76395918d6f5e9285de82ca023f7 ......
	 orig commit -> 7544860733d158e3edbf309f27e79e258c8f66bd ......
checking 7c4b9440c5c3490fb702ff3029f3e54ee9a2be91 ......
	 orig commit -> 9d56defb44b15427f4342c543a70fb7886fc06f5 ......
checking 3aa10f5387fa55a94f312524e11e05d972ad06cd ......
	 orig commit -> 57a4fd420c6e8a04b6a87ff24d34250cd7c48f15 ......
checking b54a9bb7efdf146aa8a643f3ac40784394198333 ......
	 orig commit -> 65d0b7ed40f8a3a41a0ac5ed5ca4d1874c6aaf2d ......
checking c62dc6051d854d99202d2fdced543e8706a6c219 ......
	 orig commit -> beffa8872a3680ef804eb0320ec77037170f4686 ......
checking ba2f98696ad210f01d86751f3b3898c062d44d8a ......
	 orig commit -> a0504f0880c11da301dc2b5a5135bd02376e367e ......
checking 88787c040211d0a809c71c444e05208d825ad614 ......
	 orig commit -> 5d6a2165abd4635ecf5ece3d02fe8677f00d32c5 ......
checking 23c475fa7124f1174d417cd378e6b4d363856081 ......
	 orig commit -> 861078381ba56b56808113736000d9e7ead349c8 ......
checking 953468bda711fe7ab68235a9a4ae3ca67698736f ......
	 orig commit -> 3f3752705dbd50b66b66ad7b4d54fe33d2f746ed ......
checking 8f6cd2d0c0f37b272833d88604ce7f82fd05b167 ......
	 orig commit -> 6cc0c259d034c6ab48f4e12f505213988e73d380 ......
checking 74cf9ab7d1de72a022519991a9b27ea1510c4c9f ......
	 orig commit -> d351c2db5420bb17dcd2d9aac7ddb5f64c6d04b3 ......
checking b0119cd440cbe54e82f2a1b2e62ba9b38231fe2f ......
	 orig commit -> 02d492e5dcb72c004d213756eb87c9d62a6d76a7 ......
checking 3ec4b846a5dda7fe983015e6310c3d551b029329 ......
	 orig commit -> 934df23171e7c5b71d937104d4957891c39748ff ......
checking 7bd2d0c746f1fac2fb7f2ee972767cbc8be60962 ......
	 orig commit -> 9b54d816e00425c3a517514e0d677bb3cec49258 ......
