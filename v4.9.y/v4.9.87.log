Check from v4.9.87 to v4.9.88
Commit count: 87
checking 46e076f0dad02f5c445a5c27adbd3f06147e33ed ......
checking 0e2bc507f242e10c544243b53d8613133cd741d9 ......
	 orig commit -> fc110ebdd014dd1368c98e7685b47789c31fab42 ......
checking bd0d673023edfeaedf57b68e39e7795cdcee4e45 ......
	 orig commit -> 1f66dd36bb18437397ea0d7882c52f7e3c476e15 ......
checking fbe1ad9742d3e20e403fa09083d815e20fbf0e9b ......
	 orig commit -> 714569064adee3c114a2a6490735b94abe269068 ......
checking 46d16d6e758b3ff34ad8641e1b4e736ffd9a44ac ......
	 orig commit -> 9f2068f35729948bde84d87a40d135015911345d ......
checking dddf4650cf649d741a83d6cac148718171ab60d6 ......
	 orig commit -> 1a087f032111a88e826877449dfb93ceb22b78b9 ......
checking 63f3bac3bedcf415d789ff3ae8fb1361e4ab104e ......
	 orig commit -> a5f596830e27e15f7a0ecd6be55e433d776986d8 ......
checking b2708e1e30e02ef4170266d20d90774cce4419e8 ......
	 orig commit -> cb88a0588717ba6c756cb5972d75766b273a6817 ......
checking b7661e9af851da7f5cba97749591080f78dacbca ......
	 orig commit -> df3334c223a033f562645712e832ca4cbb326bbf ......
checking 3fad4ea9283da98cd02d7b30e7a5e96e0a414ae1 ......
	 orig commit -> 5126a504b63d82785eaece3a9c30c660b313785a ......
checking 1d47c874cd72dec1fabff5ecdb766d364467ff56 ......
	 orig commit -> cb57469c9573f6018cd1302953dd45d6e05aba7b ......
checking 137cb4fd3f57dc39666c68f0e0b948ac83480201 ......
	 orig commit -> a42ae5905140c324362fe5036ae1dbb16e4d359c ......
checking 438fd54e0527633facedaf195db2755cca28bffd ......
	 orig commit -> 9a513c905bb95bef79d96feb08621c1ec8d8c4bb ......
checking 85afaf5e2e7c354a60d06ad6ffbd10f5d28bf0e9 ......
	 orig commit -> fd63a8903a2c40425a9811c3371dd4d0f42c0ad3 ......
checking 4afade73b70a47b17718133d0421c03b6ec8d10b ......
	 orig commit -> 7842055bfce4bf0170d0f61df8b2add8399697be ......
checking 24a401dd0fb61b2edc8209ed9577c35f4f25f7fc ......
	 orig commit -> 2d30e9494f1ea320aaaad0cff9ddd92c87eac355 ......
checking d156461370d52eacca83404d6ed40ce4288af088 ......
	 orig commit -> a8992973edbb2555e956b90f6fe97c4bc14d761d ......
checking 941bfd125c78713649eefb338e52300585fd6ec7 ......
	 orig commit -> b21ebf2fb4cde1618915a97cc773e287ff49173e ......
checking cd696744d6d71fbb8b5f2728b25afb51cc3811d7 ......
	 orig commit -> eda9cec4c9a12208a6f69fbe68f72a6311d50032 ......
checking 2a28923bb5b8a0a485c7a3a424e6a2c9f01038a3 ......
	 orig commit -> c4f24df942a181699c5bab01b8e5e82b925f77f3 ......
checking fb1f410daf56ecab5c33c9685c868b43023ea833 ......
	 orig commit -> d9ee65539d3eabd9ade46cca1780e3309ad0f907 ......
checking 05d42c517250653f53e296e3d59d0b0db1a87296 ......
	 orig commit -> 063b36d6b0ad74c748d536f5cb47bac2f850a0fa ......
checking cde0b3af90c7edc198956a45a66e5fc92bd04b6c ......
	 orig commit -> a51a0c8d213594bc094cb8e54aad0cb6d7f7b9a6 ......
checking b496b24aa586e4b528b4ac4f39362bc94f502b6d ......
	 orig commit -> ec00022030da5761518476096626338bd67df57a ......
checking db6a0cbeb940898dd56167241f68972b50890566 ......
	 orig commit -> ae0ac0ed6fcf5af3be0f63eb935f483f44a402d2 ......
		 ae0ac0ed6fcf5af3be0f63eb935f483f44a402d2 has problem. Fixes commit -> 9ba5c404bf1d6284f0269411b33394362b7ff405
checking dac4448faf499b2597536aecfdb46eeace17a243 ......
	 orig commit -> f28e15bacedd444608e25421c72eb2cf4527c9ca ......
checking 61346e20c0017abf77bd133f80c35ca9224fbd96 ......
	 orig commit -> 4d31eef5176df06f218201bc9c0ce40babb41660 ......
checking 60962e98c38a563b22df67b3e55fd88837d53b83 ......
	 orig commit -> b078556aecd791b0e5cb3a59f4c3a14273b52121 ......
checking 280ef7b83b3220e12ee72857b35465f79670b33b ......
	 orig commit -> c4585a2823edf4d1326da44d1524ecbfda26bb37 ......
		 c4585a2823edf4d1326da44d1524ecbfda26bb37 has problem. Fixes commit -> c8d70a700a5b486bfa8e5a7d33d805389f6e59f9
commit ccf38b31223edd9dd1852e43dafe347308629a46
Author: Florian Westphal <fw@strlen.de>
Date:   Fri Mar 9 14:27:31 2018 +0100

    netfilter: bridge: ebt_among: add more missing match size checks
    
    commit c8d70a700a5b486bfa8e5a7d33d805389f6e59f9 upstream.
    
    ebt_among is special, it has a dynamic match size and is exempt
    from the central size checks.
    
    commit c4585a2823edf ("bridge: ebt_among: add missing match size checks")
    added validation for pool size, but missed fact that the macros
    ebt_among_wh_src/dst can already return out-of-bound result because
    they do not check value of wh_src/dst_ofs (an offset) vs. the size
    of the match that userspace gave to us.
    
    v2:
    check that offset has correct alignment.
    Paolo Abeni points out that we should also check that src/dst
    wormhash arrays do not overlap, and src + length lines up with
    start of dst (or vice versa).
    v3: compact wormhash_sizes_valid() part
    
    NB: Fixes tag is intentionally wrong, this bug exists from day
    one when match was added for 2.6 kernel. Tag is there so stable
    maintainers will notice this one too.
    
    Tested with same rules from the earlier patch.
    
    Fixes: c4585a2823edf ("bridge: ebt_among: add missing match size checks")
    Reported-by: <syzbot+bdabab6f1983a03fc009@syzkaller.appspotmail.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 21ff147189ff0692d203282c1dced02f83dcf785 ......
	 orig commit -> b71812168571fa55e44cdd0254471331b9c4c4c6 ......
		 b71812168571fa55e44cdd0254471331b9c4c4c6 has problem. Fixes commit -> 932909d9b28d27e807ff8eecb68c7748f6701628
commit cb5ce10a27d5a55c50072dfdeb12c9b62d140563
Author: Florian Westphal <fw@strlen.de>
Date:   Thu Mar 8 12:54:19 2018 +0100

    netfilter: ebtables: fix erroneous reject of last rule
    
    [ Upstream commit 932909d9b28d27e807ff8eecb68c7748f6701628 ]
    
    The last rule in the blob has next_entry offset that is same as total size.
    This made "ebtables32 -A OUTPUT -d de:ad:be:ef:01:02" fail on 64 bit kernel.
    
    Fixes: b71812168571fa ("netfilter: ebtables: CONFIG_COMPAT: don't trust userland offsets")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 034ad9d2eadf3d6696674b46d1e497adc14f92c3 ......
	 orig commit -> cfc2c740533368b96e2be5e0a4e8c3cace7d9814 ......
checking 7d105756b4eecf95905eff37001d61ac70049d72 ......
	 orig commit -> db57ccf0f2f4624b4c4758379f8165277504fbd7 ......
checking af4b424a412b7f7a8ba2e9f1af9b6920a60130b4 ......
	 orig commit -> 10414014bc085aac9f787a5890b33b5605fbcfc4 ......
checking f506da51bdf6602ec942f25d682a4de9b59760da ......
	 orig commit -> 57ebd808a97d7c5b1e1afb937c2db22beba3c1f8 ......
checking b323768e610b3108bd8ad48329f420d91e7b336b ......
	 orig commit -> f2c61f98e0b5f8b53b8fb860e5dcdd661bde7d0b ......
checking c9763bfc7d27dca13d4b6ac93207b98cbd46dda8 ......
	 orig commit -> 9dd46c02532a6bed6240101ecf4bbc407f8c6adf ......
checking c20eb490e7381c83f99922831cb74a6730d40ce0 ......
	 orig commit -> 863204cfdae98626a92535ac928ad79f4d6b74ff ......
checking 25d576732bc52416497734610b9324b3ceaf17ce ......
	 orig commit -> 2b3d89b402b085b08498e896c65267a145bed486 ......
checking 6cda76dc3f86d5dc6839cd894a9465a13eb91501 ......
	 orig commit -> aeebc6ba88ba3758ad95467ff6191fabf2074c13 ......
checking c387231337fbc4633bd7f42fca8d05e9ee5c18a8 ......
	 orig commit -> 838534e50e2e5c1e644e30ab6cb28da88eb31368 ......
checking 3f55635c749e6fce40e1d7f547398c1269edb68f ......
	 orig commit -> c42cbe41727a138905a28f8e0b00c147be77ee93 ......
checking bb6155123c9caae207b45fa979554736ba5528ed ......
	 orig commit -> 3010a0663fd949d122eca0561b06b0a9453f7866 ......
		 3010a0663fd949d122eca0561b06b0a9453f7866 has problem. Fixes commit -> 5800dc5c19f34e6e03b5adab1282535cb102fafd
commit 640fe070d801b91081b7c9e3575b1ed2f0018eeb
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Fri Aug 3 16:41:39 2018 +0200

    x86/paravirt: Fix spectre-v2 mitigations for paravirt guests
    
    commit 5800dc5c19f34e6e03b5adab1282535cb102fafd upstream.
    
    Nadav reported that on guests we're failing to rewrite the indirect
    calls to CALLEE_SAVE paravirt functions. In particular the
    pv_queued_spin_unlock() call is left unpatched and that is all over the
    place. This obviously wrecks Spectre-v2 mitigation (for paravirt
    guests) which relies on not actually having indirect calls around.
    
    The reason is an incorrect clobber test in paravirt_patch_call(); this
    function rewrites an indirect call with a direct call to the _SAME_
    function, there is no possible way the clobbers can be different
    because of this.
    
    Therefore remove this clobber check. Also put WARNs on the other patch
    failure case (not enough room for the instruction) which I've not seen
    trigger in my (limited) testing.
    
    Three live kernel image disassemblies for lock_sock_nested (as a small
    function that illustrates the problem nicely). PRE is the current
    situation for guests, POST is with this patch applied and NATIVE is with
    or without the patch for !guests.
    
    PRE:
    
    (gdb) disassemble lock_sock_nested
    Dump of assembler code for function lock_sock_nested:
       0xffffffff817be970 <+0>:     push   %rbp
       0xffffffff817be971 <+1>:     mov    %rdi,%rbp
       0xffffffff817be974 <+4>:     push   %rbx
       0xffffffff817be975 <+5>:     lea    0x88(%rbp),%rbx
       0xffffffff817be97c <+12>:    callq  0xffffffff819f7160 <_cond_resched>
       0xffffffff817be981 <+17>:    mov    %rbx,%rdi
       0xffffffff817be984 <+20>:    callq  0xffffffff819fbb00 <_raw_spin_lock_bh>
       0xffffffff817be989 <+25>:    mov    0x8c(%rbp),%eax
       0xffffffff817be98f <+31>:    test   %eax,%eax
       0xffffffff817be991 <+33>:    jne    0xffffffff817be9ba <lock_sock_nested+74>
       0xffffffff817be993 <+35>:    movl   $0x1,0x8c(%rbp)
       0xffffffff817be99d <+45>:    mov    %rbx,%rdi
       0xffffffff817be9a0 <+48>:    callq  *0xffffffff822299e8
       0xffffffff817be9a7 <+55>:    pop    %rbx
       0xffffffff817be9a8 <+56>:    pop    %rbp
       0xffffffff817be9a9 <+57>:    mov    $0x200,%esi
       0xffffffff817be9ae <+62>:    mov    $0xffffffff817be993,%rdi
       0xffffffff817be9b5 <+69>:    jmpq   0xffffffff81063ae0 <__local_bh_enable_ip>
       0xffffffff817be9ba <+74>:    mov    %rbp,%rdi
       0xffffffff817be9bd <+77>:    callq  0xffffffff817be8c0 <__lock_sock>
       0xffffffff817be9c2 <+82>:    jmp    0xffffffff817be993 <lock_sock_nested+35>
    End of assembler dump.
    
    POST:
    
    (gdb) disassemble lock_sock_nested
    Dump of assembler code for function lock_sock_nested:
       0xffffffff817be970 <+0>:     push   %rbp
       0xffffffff817be971 <+1>:     mov    %rdi,%rbp
       0xffffffff817be974 <+4>:     push   %rbx
       0xffffffff817be975 <+5>:     lea    0x88(%rbp),%rbx
       0xffffffff817be97c <+12>:    callq  0xffffffff819f7160 <_cond_resched>
       0xffffffff817be981 <+17>:    mov    %rbx,%rdi
       0xffffffff817be984 <+20>:    callq  0xffffffff819fbb00 <_raw_spin_lock_bh>
       0xffffffff817be989 <+25>:    mov    0x8c(%rbp),%eax
       0xffffffff817be98f <+31>:    test   %eax,%eax
       0xffffffff817be991 <+33>:    jne    0xffffffff817be9ba <lock_sock_nested+74>
       0xffffffff817be993 <+35>:    movl   $0x1,0x8c(%rbp)
       0xffffffff817be99d <+45>:    mov    %rbx,%rdi
       0xffffffff817be9a0 <+48>:    callq  0xffffffff810a0c20 <__raw_callee_save___pv_queued_spin_unlock>
       0xffffffff817be9a5 <+53>:    xchg   %ax,%ax
       0xffffffff817be9a7 <+55>:    pop    %rbx
       0xffffffff817be9a8 <+56>:    pop    %rbp
       0xffffffff817be9a9 <+57>:    mov    $0x200,%esi
       0xffffffff817be9ae <+62>:    mov    $0xffffffff817be993,%rdi
       0xffffffff817be9b5 <+69>:    jmpq   0xffffffff81063aa0 <__local_bh_enable_ip>
       0xffffffff817be9ba <+74>:    mov    %rbp,%rdi
       0xffffffff817be9bd <+77>:    callq  0xffffffff817be8c0 <__lock_sock>
       0xffffffff817be9c2 <+82>:    jmp    0xffffffff817be993 <lock_sock_nested+35>
    End of assembler dump.
    
    NATIVE:
    
    (gdb) disassemble lock_sock_nested
    Dump of assembler code for function lock_sock_nested:
       0xffffffff817be970 <+0>:     push   %rbp
       0xffffffff817be971 <+1>:     mov    %rdi,%rbp
       0xffffffff817be974 <+4>:     push   %rbx
       0xffffffff817be975 <+5>:     lea    0x88(%rbp),%rbx
       0xffffffff817be97c <+12>:    callq  0xffffffff819f7160 <_cond_resched>
       0xffffffff817be981 <+17>:    mov    %rbx,%rdi
       0xffffffff817be984 <+20>:    callq  0xffffffff819fbb00 <_raw_spin_lock_bh>
       0xffffffff817be989 <+25>:    mov    0x8c(%rbp),%eax
       0xffffffff817be98f <+31>:    test   %eax,%eax
       0xffffffff817be991 <+33>:    jne    0xffffffff817be9ba <lock_sock_nested+74>
       0xffffffff817be993 <+35>:    movl   $0x1,0x8c(%rbp)
       0xffffffff817be99d <+45>:    mov    %rbx,%rdi
       0xffffffff817be9a0 <+48>:    movb   $0x0,(%rdi)
       0xffffffff817be9a3 <+51>:    nopl   0x0(%rax)
       0xffffffff817be9a7 <+55>:    pop    %rbx
       0xffffffff817be9a8 <+56>:    pop    %rbp
       0xffffffff817be9a9 <+57>:    mov    $0x200,%esi
       0xffffffff817be9ae <+62>:    mov    $0xffffffff817be993,%rdi
       0xffffffff817be9b5 <+69>:    jmpq   0xffffffff81063ae0 <__local_bh_enable_ip>
       0xffffffff817be9ba <+74>:    mov    %rbp,%rdi
       0xffffffff817be9bd <+77>:    callq  0xffffffff817be8c0 <__lock_sock>
       0xffffffff817be9c2 <+82>:    jmp    0xffffffff817be993 <lock_sock_nested+35>
    End of assembler dump.
    
    
    Fixes: 63f70270ccd9 ("[PATCH] i386: PARAVIRT: add common patching machinery")
    Fixes: 3010a0663fd9 ("x86/paravirt, objtool: Annotate indirect calls")
    Reported-by: Nadav Amit <namit@vmware.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking e21257ad836df1ae91c37a7c6f99eddf7d97148e ......
	 orig commit -> d72f4e29e6d84b7ec02ae93088aa459ac70e733b ......
checking f7d3a80ffe97fb089368c64a39a472e67ba790c1 ......
	 orig commit -> bd89004f6305cbf7352238f61da093207ee518d6 ......
checking a65655d40c823528a4f9a86e137a4909f1dfa649 ......
	 orig commit -> 9e0e3c5130e949c389caabc8033e9799b129e429 ......
checking 6123a6becd80a9bb146ff9562095a9e54429fe01 ......
	 orig commit -> 87358710c1fb4f1bf96bbe2349975ff9953fc9b2 ......
checking a27ede1bedcb21b8514f9bd9fcfc37773b816701 ......
	 orig commit -> dd84441a797150dcc49298ec95c459a8891d8bb1 ......
		 dd84441a797150dcc49298ec95c459a8891d8bb1 has problem. Fixes commit -> 6f6060a5c9cc76fdbc22748264e6aa3779ec2427
commit 6ac85d22332118d2dc449536110a31a5ca3956b0
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Mon Jul 9 16:35:34 2018 +0300

    x86/apm: Don't access __preempt_count with zeroed fs
    
    commit 6f6060a5c9cc76fdbc22748264e6aa3779ec2427 upstream.
    
    APM_DO_POP_SEGS does not restore fs/gs which were zeroed by
    APM_DO_ZERO_SEGS. Trying to access __preempt_count with
    zeroed fs doesn't really work.
    
    Move the ibrs call outside the APM_DO_SAVE_SEGS/APM_DO_RESTORE_SEGS
    invocations so that fs is actually restored before calling
    preempt_enable().
    
    Fixes the following sort of oopses:
    [    0.313581] general protection fault: 0000 [#1] PREEMPT SMP
    [    0.313803] Modules linked in:
    [    0.314040] CPU: 0 PID: 268 Comm: kapmd Not tainted 4.16.0-rc1-triton-bisect-00090-gdd84441a7971 #19
    [    0.316161] EIP: __apm_bios_call_simple+0xc8/0x170
    [    0.316161] EFLAGS: 00210016 CPU: 0
    [    0.316161] EAX: 00000102 EBX: 00000000 ECX: 00000102 EDX: 00000000
    [    0.316161] ESI: 0000530e EDI: dea95f64 EBP: dea95f18 ESP: dea95ef0
    [    0.316161]  DS: 007b ES: 007b FS: 0000 GS: 0000 SS: 0068
    [    0.316161] CR0: 80050033 CR2: 00000000 CR3: 015d3000 CR4: 000006d0
    [    0.316161] Call Trace:
    [    0.316161]  ? cpumask_weight.constprop.15+0x20/0x20
    [    0.316161]  on_cpu0+0x44/0x70
    [    0.316161]  apm+0x54e/0x720
    [    0.316161]  ? __switch_to_asm+0x26/0x40
    [    0.316161]  ? __schedule+0x17d/0x590
    [    0.316161]  kthread+0xc0/0xf0
    [    0.316161]  ? proc_apm_show+0x150/0x150
    [    0.316161]  ? kthread_create_worker_on_cpu+0x20/0x20
    [    0.316161]  ret_from_fork+0x2e/0x38
    [    0.316161] Code: da 8e c2 8e e2 8e ea 57 55 2e ff 1d e0 bb 5d b1 0f 92 c3 5d 5f 07 1f 89 47 0c 90 8d b4 26 00 00 00 00 90 8d b4 26 00 00 00 00 90 <64> ff 0d 84 16 5c b1 74 7f 8b 45 dc 8e e0 8b 45 d8 8e e8 8b 45
    [    0.316161] EIP: __apm_bios_call_simple+0xc8/0x170 SS:ESP: 0068:dea95ef0
    [    0.316161] ---[ end trace 656253db2deaa12c ]---
    
    Fixes: dd84441a7971 ("x86/speculation: Use IBRS if available before calling into firmware")
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: stable@vger.kernel.org
    Cc:  David Woodhouse <dwmw@amazon.co.uk>
    Cc:  "H. Peter Anvin" <hpa@zytor.com>
    Cc:  x86@kernel.org
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Link: https://lkml.kernel.org/r/20180709133534.5963-1-ville.syrjala@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking afb9851d3d1b10e8445196a8be449193568d27ae ......
	 orig commit -> d1c99108af3c5992640aa2afa7d2e88c3775c06e ......
checking 6310a11fce7b9c5c0ac7654f40d6fcc9f48a1240 ......
	 orig commit -> eb6174f6d1be16b19cfa43dac296bfed003ce1a6 ......
checking 244a6d39d68b3729cf63a2d7b137c7e975e83300 ......
	 orig commit -> 1d91c1d2c80cb70e2e553845e278b87a960c04da ......
checking 5b8dce7403a4b13d5ef1a4d87a6591bba44f4165 ......
	 orig commit -> 099fd6ca0ad25bc19c5ade2ea4b25b8fadaa11b3 ......
checking 5614f3a69d8b43776960595a7bc8e9d4802c0fdc ......
	 orig commit -> aea808172018ca01abf53db808323aed23281835 ......
checking ec0011620b81d701151b10e108e6cd9e374f8759 ......
	 orig commit -> 7bd80091567789f1c0cb70eb4737aac8bcd2b6b9 ......
checking 0d7252d33dcb8e79d3d46da96e43ce3d56f29c2e ......
	 orig commit -> d85739367c6d56e475c281945c68fdb05ca74b4c ......
checking 5191f41745f84eee6f95dd834635dcb83a36926e ......
	 orig commit -> e4c07b3b66b7d6a24c2fe3b1ddeff5cd9b378b3a ......
checking b992e8f506f808a8df7f4fd1745e0c9461dadb6c ......
	 orig commit -> e312a869cd726c698a75caca0d9e5c22fd3f1534 ......
checking f8521dba646dfa3401521967cbfd7f54a1c4c76f ......
	 orig commit -> 85981dfd6b0a0fd9ed87ca4a525981b67c21f098 ......
checking 502a2780ac1113064e550c17d6852b4fb921ee9b ......
	 orig commit -> 36268223c1e9981d6cfc33aff8520b3bde4b8114 ......
checking 9ed6e56e4fef2896b601c5f06b70e64f15ff9499 ......
	 orig commit -> de19e5c3c51fdb1ff20d0f61d099db902ff7494b ......
checking 2cc98fddf0f4a746071e098075a832fbec4bbfff ......
	 orig commit -> b3b7c4795ccab5be71f080774c45bbbcc75c2aaf ......
		 b3b7c4795ccab5be71f080774c45bbbcc75c2aaf has problem. Fixes commit -> fbdb328c6bae0a7c78d75734a738b66b86dffc96
commit 91b6b9d0bf39443d708352c193c597a01e9b0004
Author: Dewet Thibaut <thibaut.dewet@nokia.com>
Date:   Mon Jul 16 10:49:27 2018 +0200

    x86/MCE: Remove min interval polling limitation
    
    commit fbdb328c6bae0a7c78d75734a738b66b86dffc96 upstream.
    
    commit b3b7c4795c ("x86/MCE: Serialize sysfs changes") introduced a min
    interval limitation when setting the check interval for polled MCEs.
    However, the logic is that 0 disables polling for corrected MCEs, see
    Documentation/x86/x86_64/machinecheck. The limitation prevents disabling.
    
    Remove this limitation and allow the value 0 to disable polling again.
    
    Fixes: b3b7c4795c ("x86/MCE: Serialize sysfs changes")
    Signed-off-by: Dewet Thibaut <thibaut.dewet@nokia.com>
    Signed-off-by: Alexander Sverdlin <alexander.sverdlin@nokia.com>
    [ Massage commit message. ]
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: linux-edac <linux-edac@vger.kernel.org>
    Cc: stable@vger.kernel.org
    Link: http://lkml.kernel.org/r/20180716084927.24869-1-alexander.sverdlin@nokia.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking d4f80945828c025e43273cc094f09fb6fe353dbf ......
	 orig commit -> 86755b7a96faed57f910f9e6b8061e019ac1ec08 ......
checking 35d9c9eac24fefeb01a8d74959785bd249f3aeb7 ......
	 orig commit -> cc40daf91bdddbba72a4a8cd0860640e06668309 ......
checking e749262f1dcdf70687a432df29a6d70b6b0246a7 ......
	 orig commit -> da343b6d90e11132f1e917d865d88ee35d6e6d00 ......
checking 333cdd174ca62f1640cc04eebb96adc2d76be599 ......
	 orig commit -> 55fe6da9efba102866e2fb5b40b04b6a4b26c19e ......
checking 6687863c4e45b4f6bf2a65d9eece23f494c1b06f ......
	 orig commit -> f07afa0462b76a5b9c4f3a43d5ac24fdb86a90c2 ......
checking 4c5579483bd56aab3e009c8dac047b2051947299 ......
	 orig commit -> e82df670235138575b37ff0ec24412a471efd97f ......
checking c0fac97933c1da286e770e1cf5d4419191401fdc ......
	 orig commit -> 1d037577c323e5090ce281e96bc313ab2eee5be2 ......
checking 236ff4dd7cf973076ab46ff62bb6d0087d0f7ed1 ......
	 orig commit -> ea4f7bd2aca9f68470e9aac0fc9432fd180b1fe7 ......
checking a9fbf7a26088fb2765b1d41cb44da8e39128959c ......
	 orig commit -> 902f4d067a50ccf645a58dd5fb1d113b6e0f9b5b ......
checking 407795ea0ead051a6d3263054a5eb28b97840394 ......
	 orig commit -> 1b22b4b28fd5fbc51855219e3238b3ab81da8466 ......
checking 4bd523ffe14578c9d840ec59e640cc4757ff37d2 ......
	 orig commit -> 06a3f0c9f2725f5d7c63c4203839373c9bd00c28 ......
checking eea86015a5400f94ab8858e1cc7d90ea3639c447 ......
	 orig commit -> f8bee6135e167f5b35b7789c74c2956dad14d0d5 ......
checking 957cfa6f9bdec9fde07d034f94a44b708e3bf09b ......
	 orig commit -> 0e5ee33d2a54e4c55fe92857f23e1cbb0440d6de ......
checking 74d5d735a75b5d018c8275d899b023f1fab26598 ......
	 orig commit -> 545b0bcde7fbd3ee408fa842ea0731451dc4bd0a ......
checking a32168f9ba6e5e1f02548696528530808c7cb78b ......
	 orig commit -> 0b58d90f89545e021d188c289fa142e5ff9e708b ......
checking 5bf82a32ac88ce9dcf118159fb3743dff29f096f ......
	 orig commit -> 1bced75f4ab04bec55aecb57d99435dc6d0ae5a0 ......
checking 3a7c3cab42a05d8a1428eb0186a8757b50e85202 ......
	 orig commit -> aa0aad57909eb321746325951d66af88a83bc956 ......
checking bacc51c36ebdc39013c12d02cc9090e387c768ac ......
	 orig commit -> 15734feff2bdac24aa3266c437cffa42851990e3 ......
checking 24f82eef049e4caba0fbf6831dbc1dd255d97967 ......
	 orig commit -> d61a5c1063515e855bedb1b81e20e50b0ac3541e ......
checking d006d9047c483f1cb0963cd4794d46eb2ff3fd07 ......
	 orig commit -> 25c058ccaf2ebbc3e250ec1e199e161f91fe27d4 ......
checking 225ce6d7f2133071973c3fd5a006d58dd750a5a5 ......
	 orig commit -> 27d4ee03078aba88c5e07dcc4917e8d01d046f38 ......
checking e9ca26c52280da324f5b4511ace7eb074f616920 ......
	 orig commit -> d13a8479f3584613b6aacbb793eae64578b8f69a ......
checking 8f16e7d01b5f4f149d3cd7d5bf38a3e53792acf6 ......
	 orig commit -> 1514839b366417934e2f1328edb50ed1e8a719f5 ......
		 1514839b366417934e2f1328edb50ed1e8a719f5 has problem. Fixes commit -> 3a9910d7b686546dcc9986e790af17e148f1c888
commit 9388bd235b271f0c67084d6dd52a80440550e585
Author: Ben Hutchings <ben.hutchings@codethink.co.uk>
Date:   Tue Mar 20 21:05:48 2018 +0000

    scsi: qla2xxx: Avoid double completion of abort command
    
    [ Upstream commit 3a9910d7b686546dcc9986e790af17e148f1c888 ]
    
    qla2x00_tmf_sp_done() now deletes the timer that will run
    qla2x00_tmf_iocb_timeout(), but doesn't check whether the timer already
    expired.  Check the return value from del_timer() to avoid calling
    complete() a second time.
    
    Fixes: 4440e46d5db7 ("[SCSI] qla2xxx: Add IOCB Abort command asynchronous ...")
    Fixes: 1514839b3664 ("scsi: qla2xxx: Fix NULL pointer crash due to active ...")
    Signed-off-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Acked-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
checking 84e1a8afc7dba0bca8986faba01032e46eae82f9 ......
	 orig commit -> 90024a5951029685acc5396258f1b0de9b23cf4a ......
checking 1bb454527e18b04437c41b2b4dfe31678fb4146d ......
	 orig commit -> 28e9091e3119933c38933cb8fc48d5618eb784c8 ......
checking b063d53d7a1d209da183d72ac0fda85a449d5810 ......
	 orig commit -> a5880b84430316e3e1c1f5d23aa32ec6000cc717 ......
checking e126e3eaa219534530bedadb21d16482d538e344 ......
	 orig commit -> 6a21dfc0d0db7b7e0acedce67ca533a6eb19283c ......
		 6a21dfc0d0db7b7e0acedce67ca533a6eb19283c has problem. Fixes commit -> ef95a90ae6f4f21990e1f7ced6719784a409e811
5f3e3b85cc0a5eae1c46d72e47d3de7bf208d9e2
commit 8d1d56d9384d4f86052df55f82e70ea99f3b5906
Author: Chien Tin Tung <chien.tin.tung@intel.com>
Date:   Wed Mar 21 13:09:25 2018 -0500

    RDMA/ucma: Correct option size check using optlen
    
    [ Upstream commit 5f3e3b85cc0a5eae1c46d72e47d3de7bf208d9e2 ]
    
    The option size check is using optval instead of optlen
    causing the set option call to fail. Use the correct
    field, optlen, for size check.
    
    Fixes: 6a21dfc0d0db ("RDMA/ucma: Limit possible option size")
    Signed-off-by: Chien Tin Tung <chien.tin.tung@intel.com>
    Signed-off-by: Shiraz Saleem <shiraz.saleem@intel.com>
    Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
