Check from v4.9.42 to v4.9.43
Commit count: 18
checking 6da35f43acde8f718b53f6f05fc865bffa709fc5 ......
checking 1166e3e03342d179dff806457d4f76cf90490d18 ......
	 orig commit -> 1e9e71782f3462d5aecb0720d26298253bdbeca7 ......
	 orig commit -> 661ccdc1a95f18ab6c1373322fde09afd5b90a1f ......
checking 3f0075cdbdd8ec09cd04034c87d1d1fb9069571e ......
	 orig commit -> 7e5a672289c9754d07e1c3b33649786d3d70f5e4 ......
checking 6309eb77d823393ff427312bfd53e2b7f1bdcab2 ......
	 orig commit -> fc290a114fc6034b0f6a5a46e2fb7d54976cf87a ......
checking 33dc6a6a85f1d6ce71e7056d009b8a5fcbf10f70 ......
	 orig commit -> 85f1bd9a7b5a79d5baa8bf44af19658f7bf77bfa ......
checking 4688f042599f8eabe45713f7d5e88a4da5a89765 ......
	 orig commit -> f102bb7164c9020e12662998f0fd99c3be72d4f6 ......
	 orig commit -> 0a28cfd51e17f4f0a056bcf66bfbe492c3b99f38 ......
checking 53eed8aadc58a5c2b1563d8755d8546c88222f0c ......
	 orig commit -> ef09c9ff343122a0b245416066992d096416ff19 ......
	 orig commit -> a5cb659bbc1c8644efa0c3138a757a1e432a4880 ......
checking e5841355061332f8b326e098949490345dba776b ......
	 orig commit -> c27927e372f0785f3303e8fad94b85945e2c97b7 ......
checking f628c9df047b132b2c3eba997bf06ab1dcbbeea6 ......
	 orig commit -> 1714020e42b17135032c8606f7185b3fb2ba5d78 ......
checking 69ffc9644ffec424cd3f74794b2d616405576e1e ......
	 orig commit -> 8d63bee643f1fb53e472f0e135cae4eb99d62d19 ......
checking 87fdcfe211956379d57092a6b7a4e669d318fc0b ......
	 orig commit -> 8ba60924710cde564a3905588b6219741d6356d0 ......
checking e392e305af01c4512a7d78b6ca47d9cf57f68d0d ......
	 orig commit -> 96d9703050a0036a3360ec98bb41e107c90664fe ......
checking 35d90144e2ceb19a8c649fd1422d507eac946893 ......
	 orig commit -> e718fe450e616227b74d27a233cdf37b4df0c82b ......
checking 1b582a2c366da54463e3dc97360751f21fa46453 ......
	 orig commit -> b0a0c2566f28e71e5e32121992ac8060cec75510 ......
checking 05046af36302083abb9ee501cd3ae3822c55701a ......
	 orig commit -> 2dda640040876cd8ae646408b69eea40c24f9ae9 ......
checking 3914a7eccbc742ab87c5be1acd3006e051e33710 ......
	 orig commit -> ed254971edea92c3ac5c67c6a05247a92aa6075e ......
checking 6ec6ec3bbb878bf2e4cea54028fc412c3ed6514b ......
	 orig commit -> 0a0e1a85c83775a648041be2b15de6d0a2f2b8eb ......
checking 3b25bfc11cf95c75a52e2ca3745b5bffb5fb02dc ......
	 orig commit -> e5dadc65f9e0177eb649bcd9d333f1ebf871223e ......
		 e5dadc65f9e0177eb649bcd9d333f1ebf871223e has problem. Fixes commit -> 5a59a3a0ef0e546626a762d49dc06feaa204bab3
0a0e1a85c83775a648041be2b15de6d0a2f2b8eb
commit 6ec6ec3bbb878bf2e4cea54028fc412c3ed6514b
Author: Guillaume Nault <g.nault@alphalink.fr>
Date:   Tue Aug 8 11:43:24 2017 +0200

    ppp: fix xmit recursion detection on ppp channels
    
    
    [ Upstream commit 0a0e1a85c83775a648041be2b15de6d0a2f2b8eb ]
    
    Commit e5dadc65f9e0 ("ppp: Fix false xmit recursion detect with two ppp
    devices") dropped the xmit_recursion counter incrementation in
    ppp_channel_push() and relied on ppp_xmit_process() for this task.
    But __ppp_channel_push() can also send packets directly (using the
    .start_xmit() channel callback), in which case the xmit_recursion
    counter isn't incremented anymore. If such packets get routed back to
    the parent ppp unit, ppp_xmit_process() won't notice the recursion and
    will call ppp_channel_push() on the same channel, effectively creating
    the deadlock situation that the xmit_recursion mechanism was supposed
    to prevent.
    
    This patch re-introduces the xmit_recursion counter incrementation in
    ppp_channel_push(). Since the xmit_recursion variable is now part of
    the parent ppp unit, incrementation is skipped if the channel doesn't
    have any. This is fine because only packets routed through the parent
    unit may enter the channel recursively.
    
    Finally, we have to ensure that pch->ppp is not going to be modified
    while executing ppp_channel_push(). Instead of taking this lock only
    while calling ppp_xmit_process(), we now have to hold it for the full
    ppp_channel_push() execution. This respects the ppp locks ordering
    which requires locking ->upl before ->downl.
    
    Fixes: e5dadc65f9e0 ("ppp: Fix false xmit recursion detect with two ppp devices")
    Signed-off-by: Guillaume Nault <g.nault@alphalink.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
