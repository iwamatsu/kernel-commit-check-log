Check from v4.9.156 to v4.9.157
Commit count: 25
checking b7ec3f91215a87cbb2fdbbf58e301a5db9cbbc9f ......
checking 1474d65b85cfdb60aed3fdf095887f9d8232f121 ......
	 orig commit -> 9114daa825fc3f335f9bea3313ce667090187280 ......
checking a5a1ce4c3f088d13178a029327a1eb3452298957 ......
	 orig commit -> 955d3411a17f590364238bd0d3329b61f20c1cd2 ......
checking a19fd85be28ed815e0e0226e3e3735965f219b6c ......
	 orig commit -> 35e6103861a3a970de6c84688c6e7a1f65b164ca ......
checking f3f0a9d17f2a6ed44e0813084efecfd9afdcb90e ......
	 orig commit -> 4aac9228d16458cedcfd90c7fb37211cf3653ac3 ......
checking 80000148ea5862674bcd7002c12e6066f497babe ......
	 orig commit -> 4cd376638c893cf5bf1072eeaac884f62b7ac71e ......
	 orig commit -> 6e785302dad32228819d8066e5376acd15d0e6ba ......
checking 64a9f5f2e45b7241bd753b6cd57a8249a7e52639 ......
	 orig commit -> 13054abbaa4f1fd4e6f3b4b63439ec033b4c8035 ......
checking 877362fd15f050a0ca063e5759acafd69b6bdb66 ......
	 orig commit -> 53da6a53e1d414e05759fa59b7032ee08f4e22d7 ......
checking f92c45b79824435ef7e2884222122a90908f2374 ......
	 orig commit -> 085def3ade52f2ffe3e31f42e98c27dcc222dd37 ......
checking f3ced0ff7ec99b661466b7725bb98e2a618bc5c5 ......
	 orig commit -> 728354c005c36eaf44b6e5552372b67e60d17f56 ......
checking f3009c4a951249069977d269c3ac33c7d0bf5f8d ......
	 orig commit -> 4cbfa1e6c09e98450aab3240e5119b0ab2c9795b ......
checking 716d3ddd0d50767d3c5cd2de845572922edfe700 ......
	 orig commit -> a2fcd5c84f7a7825e028381b10182439067aa90d ......
checking 0bf7aef10298b9db5882bd300beabce8859475f0 ......
	 orig commit -> 9d0f50b80222dc273e67e4e14410fcfa4130a90c ......
checking 215821b4d4496f7b789f420cc2a96cd4b6653301 ......
	 orig commit -> d0f9f16788e15d9eb40f68b047732d49658c5a3a ......
checking 2e4d7b6eb0452f9d4005a9299bf769b32d2a2e49 ......
	 orig commit -> db4090920ba2d61a5827a23e441447926a02ffee ......
checking f16d21d81263facf926eafb0e536209fca4a2907 ......
	 orig commit -> 67fc5dc8a541e8f458d7f08bf88ff55933bf9f9d ......
checking 2b3836e420fc44352d9e3b8362860c2b168347c8 ......
	 orig commit -> dcf300a69ac307053dfb35c2e33972e754a98bce ......
checking 88f4d261ce6a8d30f203edfcef8faac8165d1901 ......
	 orig commit -> 05dc6001af0630e200ad5ea08707187fe5537e6d ......
checking b01311758a1d845399f13c008f818ed66fa3dcaf ......
	 orig commit -> d88c93f090f708c18195553b352b9f205e65418f ......
checking 1c33604eb0d2a7efe801393c6d3dcd85a1ec0553 ......
	 orig commit -> c4a46acf1db3ce547d290c29e55b3476c78dd76c ......
checking c0b3665009aa52c91829804ee997c563ad60340f ......
	 orig commit -> f8a70d8b889f180e6860cb1f85fed43d37844c5a ......
checking 181f1f0db85f29c67c5c26b316f3dd11dbef2940 ......
	 orig commit -> 7146db3317c67b517258cb5e1b08af387da0618b ......
checking 39beaea03e0bf4e3eb05779a4e640554f5ecc79d ......
	 orig commit -> 35634ffa1751b6efd8cf75010b509dcb0263e29b ......
		 35634ffa1751b6efd8cf75010b509dcb0263e29b has problem. Fixes commit -> cf43a757fd49442bc38f76088b70c2299eed2c2f
commit aa74f266c064f10e05d65b2f2ea271787425f112
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Mon Feb 11 23:27:42 2019 -0600

    signal: Restore the stop PTRACE_EVENT_EXIT
    
    commit cf43a757fd49442bc38f76088b70c2299eed2c2f upstream.
    
    In the middle of do_exit() there is there is a call
    "ptrace_event(PTRACE_EVENT_EXIT, code);" That call places the process
    in TACKED_TRACED aka "(TASK_WAKEKILL | __TASK_TRACED)" and waits for
    for the debugger to release the task or SIGKILL to be delivered.
    
    Skipping past dequeue_signal when we know a fatal signal has already
    been delivered resulted in SIGKILL remaining pending and
    TIF_SIGPENDING remaining set.  This in turn caused the
    scheduler to not sleep in PTACE_EVENT_EXIT as it figured
    a fatal signal was pending.  This also caused ptrace_freeze_traced
    in ptrace_check_attach to fail because it left a per thread
    SIGKILL pending which is what fatal_signal_pending tests for.
    
    This difference in signal state caused strace to report
    strace: Exit of unknown pid NNNNN ignored
    
    Therefore update the signal handling state like dequeue_signal
    would when removing a per thread SIGKILL, by removing SIGKILL
    from the per thread signal mask and clearing TIF_SIGPENDING.
    
    Acked-by: Oleg Nesterov <oleg@redhat.com>
    Reported-by: Oleg Nesterov <oleg@redhat.com>
    Reported-by: Ivan Delalande <colona@arista.com>
    Cc: stable@vger.kernel.org
    Fixes: 35634ffa1751 ("signal: Always notice exiting tasks")
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 80aec980a73f608448980417f4d5ef203469987c ......
	 orig commit -> 0808831dc62e90023ad14ff8da4804c7846e904b ......
checking 6d31200e0c9be406f50d63b47464cc6bc73705c8 ......
	 orig commit -> d5d27fd9826b59979b184ec288e4812abac0e988 ......
