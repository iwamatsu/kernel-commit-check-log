Check from v4.9.50 to v4.9.51
Commit count: 81
checking 089d7720383d7bc9ca6b8824a05dfa66f80d1f41 ......
checking 7829684088a216b8b53894768cd4f483c246cb94 ......
	 orig commit -> 3614364527daa870264f6dde77f02853cdecd02c ......
checking ae04a8c4c6fc5b4aabfb166588045e2845b4d4e7 ......
	 orig commit -> 7bf7a193a90cadccaad21c5970435c665c40fe27 ......
checking 7b5fcb7fc05bdbce87e5bec9e358b059317ffb5f ......
	 orig commit -> 9c72a18e46ebe0f09484cce8ebf847abdab58498 ......
checking 81cb6f1a2a1964ed4d93604d1a3d49d92db2a01b ......
	 orig commit -> 6c370590cfe0c36bcd62d548148aa65c984540b7 ......
checking 772003c6a4282211487c9d33958594d7f2be7dd2 ......
	 orig commit -> 8353a814f2518dcfa79a5bb77afd0e7dfa391bb1 ......
checking bb69e8a228a74c9aa7b70f6624e5c4fa1af70533 ......
	 orig commit -> dd60687ee541ca3f6df8758f38e6f22f57c42a37 ......
checking f46a61f686b0a8042ee4b7cb108ece81e3fb9401 ......
	 orig commit -> 47c7d0b19502583120c3f396c7559e7a77288a68 ......
checking 0e8d7e364ec546c44762664d30f4b1f6fd912197 ......
	 orig commit -> 742d84290739ae908f1b61b7d17ea382c8c0073a ......
checking a46cf59265cf5282be0a488abc913e94db924e87 ......
	 orig commit -> 2dd3d709fc4338681a3aa61658122fa8faa5a437 ......
checking e2bb92633615ad801c4ab56fdb3eba3c701b2a3c ......
	 orig commit -> a5814bceea48ee1c57c4db2bd54b0c0246daf54a ......
checking a51e3e2cf3cbb306faa16784fd4f1791ee304816 ......
	 orig commit -> 6fb10d6d22094bc4062f92b9ccbcee2f54033d04 ......
checking f9e583edf1a71b7b40d5c5c492319a07ebe82d71 ......
	 orig commit -> 99c794c639a65cc7b74f30a674048fd100fe9ac8 ......
checking fe211e1744db41fb23b0a85f7cda87de8fab5ea2 ......
	 orig commit -> 8dc518dfa7dbd079581269e51074b3c55a65a880 ......
checking 19a87a9407654b6e46fff9f325cac0a11dec75f7 ......
	 orig commit -> 9684010d38eccda733b61106765e9357cf436f65 ......
checking 93b64516019249fa196cc3cf4c9040270cf4106f ......
	 orig commit -> e9385cc6fb7edf23702de33a2dc82965d92d9392 ......
checking ba986b3c84987bbc5e52d8ab83a851e613ce4001 ......
	 orig commit -> 6453c65d3576bc3e602abb5add15f112755c08ca ......
checking 0f5af7eae8846fd73d01ecbe0d60309560084a74 ......
	 orig commit -> a4f6cf6b2b6b60ec2a05a33a32e65caa4149aa2b ......
checking 81286ade81f73e895fe2edf89f3e8054a595ebe5 ......
	 orig commit -> f2e9ad212def50bcf4c098c6288779dd97fff0f0 ......
		 f2e9ad212def50bcf4c098c6288779dd97fff0f0 has problem. Fixes commit -> 962cc1ad6caddb5abbb9f0a43e5abe7131a71f18
commit 1eeb1edfd3c95f1826be3349f7dc0b41c396b469
Author: Darrick J. Wong <darrick.wong@oracle.com>
Date:   Tue Nov 14 16:34:44 2017 -0800

    xfs: fix forgotten rcu read unlock when skipping inode reclaim
    
    
    [ Upstream commit 962cc1ad6caddb5abbb9f0a43e5abe7131a71f18 ]
    
    In commit f2e9ad21 ("xfs: check for race with xfs_reclaim_inode"), we
    skip an inode if we're racing with freeing the inode via
    xfs_reclaim_inode, but we forgot to release the rcu read lock when
    dumping the inode, with the result that we exit to userspace with a lock
    held.  Don't do that; generic/320 with a 1k block size fails this
    very occasionally.
    
    ================================================
    WARNING: lock held when returning to user space!
    4.14.0-rc6-djwong #4 Tainted: G        W
    ------------------------------------------------
    rm/30466 is leaving the kernel with locks still held!
    1 lock held by rm/30466:
     #0:  (rcu_read_lock){....}, at: [<ffffffffa01364d3>] xfs_ifree_cluster.isra.17+0x2c3/0x6f0 [xfs]
    ------------[ cut here ]------------
    WARNING: CPU: 1 PID: 30466 at kernel/rcu/tree_plugin.h:329 rcu_note_context_switch+0x71/0x700
    Modules linked in: deadline_iosched dm_snapshot dm_bufio ext4 mbcache jbd2 dm_flakey xfs libcrc32c dax_pmem device_dax nd_pmem sch_fq_codel af_packet [last unloaded: scsi_debug]
    CPU: 1 PID: 30466 Comm: rm Tainted: G        W       4.14.0-rc6-djwong #4
    Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.10.2-1ubuntu1djwong0 04/01/2014
    task: ffff880037680000 task.stack: ffffc90001064000
    RIP: 0010:rcu_note_context_switch+0x71/0x700
    RSP: 0000:ffffc90001067e50 EFLAGS: 00010002
    RAX: 0000000000000001 RBX: ffff880037680000 RCX: ffff88003e73d200
    RDX: 0000000000000002 RSI: ffffffff819e53e9 RDI: ffffffff819f4375
    RBP: 0000000000000000 R08: 0000000000000000 R09: ffff880062c900d0
    R10: 0000000000000000 R11: 0000000000000000 R12: ffff880037680000
    R13: 0000000000000000 R14: ffffc90001067eb8 R15: ffff880037680690
    FS:  00007fa3b8ce8700(0000) GS:ffff88003ec00000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007f69bf77c000 CR3: 000000002450a000 CR4: 00000000000006e0
    Call Trace:
     __schedule+0xb8/0xb10
     schedule+0x40/0x90
     exit_to_usermode_loop+0x6b/0xa0
     prepare_exit_to_usermode+0x7a/0x90
     retint_user+0x8/0x20
    RIP: 0033:0x7fa3b87fda87
    RSP: 002b:00007ffe41206568 EFLAGS: 00000246 ORIG_RAX: ffffffffffffff02
    RAX: 0000000000000000 RBX: 00000000010e88c0 RCX: 00007fa3b87fda87
    RDX: 0000000000000000 RSI: 00000000010e89c8 RDI: 0000000000000005
    RBP: 0000000000000000 R08: 0000000000000003 R09: 0000000000000000
    R10: 000000000000015e R11: 0000000000000246 R12: 00000000010c8060
    R13: 00007ffe41206690 R14: 0000000000000000 R15: 0000000000000000
    ---[ end trace e88f83bf0cfbd07d ]---
    
    Fixes: f2e9ad212def50bcf4c098c6288779dd97fff0f0
    Cc: Omar Sandoval <osandov@fb.com>
    Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Omar Sandoval <osandov@fb.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 63d184d2955bab0584acc10b502e415ce23394b1 ......
	 orig commit -> 799ea9e9c59949008770aab4e1da87f10e99dbe4 ......
checking 536932f39e93411c48a165c9c859e806c8989301 ......
	 orig commit -> 2d32311cf19bfb8c1d2b4601974ddd951f9cfd0b ......
checking 6b6505d90b77f98b0ce08a8332f03cb62f97c78f ......
	 orig commit -> e67d3d4246e5fbb0c7c700426d11241ca9c6f473 ......
checking 7549e7c01fb0220e47515ad3ee52f46e2742f178 ......
	 orig commit -> a4c9b34d6a17081005ec459b57b8effc08f4c731 ......
checking 47db1fc608b89820f712ab7806b0bd4d4ed69c16 ......
	 orig commit -> 4a4f66eac4681378996a1837ad1ffec3a2e2981f ......
checking e34b72a2381e6432b9eab07a3ec285b59a80e45f ......
	 orig commit -> 5297ac1f6d7cbf45464a49b9558831f271dfc559 ......
checking 35093926c2f8bd259e50b73685f638095cc59c89 ......
	 orig commit -> 284f1c2c9bebf871861184b0e2c40fa921dd380b ......
checking 0800356def7f3ede34986adeeb03235176297eb0 ......
	 orig commit -> d3a304b6292168b83b45d624784f973fdc1ca674 ......
checking 7942f605c3086abe6c9f61f29e9326c48d5c8095 ......
	 orig commit -> 0b80ae6ed13169bd3a244e71169f2cc020b0c57a ......
checking 1ba04933408e4b4567f557d363f7bdecfabe9399 ......
	 orig commit -> 27af1bbf524459962d1477a38ac6e0b7f79aaecc ......
checking 9a3f752290907e7bfa80a333e4965574932f5670 ......
	 orig commit -> 6f4a1eefdd0ad4561543270a7fceadabcca075dd ......
checking 01d38e380746e5880d744c634f0c459ea6646dd9 ......
	 orig commit -> 757a69ef6cf2bf839bd4088e5609ddddd663b0c4 ......
checking ec0d46ef8b7e35b4f7c82bcf12afbe96b711350f ......
	 orig commit -> e28ae8e428fefe2facd72cea9f29906ecb9c861d ......
checking e1a7b7e1f6c294f64602b9cb1c15d44432f48561 ......
	 orig commit -> 77aff8c76425c8f49b50d0b9009915066739e7d2 ......
checking 7fb3e5e373bb45342c6909ea8320010c461b4082 ......
	 orig commit -> 8204f8ddaafafcae074746fcf2a05a45e6827603 ......
checking 8edd73a13dc03d4bdcb25d9273908a901f880d09 ......
	 orig commit -> c44245b3d5435f533ca8346ece65918f84c057f9 ......
checking f90756d75d69cb05d82a061c799c54dc46e1db1b ......
	 orig commit -> 56bdf855e676f1f2ed7033f288f57dfd315725ba ......
checking 229980158f95098ba82e7bec91ce8ada18335bdc ......
	 orig commit -> 5b094d6dac0451ad89b1dc088395c7b399b7e9e8 ......
checking 81e27c94f9ab86c04ba4ca5f1d2bcf9e61f7b5af ......
	 orig commit -> cfaf2d034360166e569a4929dd83ae9698bed856 ......
checking 01bc132048cf9505ed49152cc82e583b18c5538d ......
	 orig commit -> 10479e2dea83d4c421ad05dfc55d918aa8dfc0cd ......
checking c32b1ec8a266476494f04843434538cdb25d9190 ......
	 orig commit -> 4c1a67bd3606540b9b42caff34a1d5cd94b1cf65 ......
checking a6247b0189fab0edbe065ab42e76eddb2a03a631 ......
	 orig commit -> 1e86eabe73b73c82e1110c746ed3ec6d5e1c0a0d ......
checking e76496fa85543c48858c537c1a6465068e18db8b ......
	 orig commit -> cd87d867920155911d0d2e6485b769d853547750 ......
checking b46382f02aff8d9ac141714bc6ae4f972836816f ......
	 orig commit -> cf2cb7845d6e101cb17bd62f8aa08cd514fc8988 ......
checking 171192c92da616d5848e0e70c6cab4f14351d275 ......
	 orig commit -> 39775431f82f890f4aaa08860a30883d081bffc7 ......
checking 621d0b75a3476bce5f1d4e13bb99deaf57b9289d ......
	 orig commit -> 61d819e7bcb7f33da710bf3f5dcb2bcf1e48203c ......
checking 8913492d12b1e71bd89bb234408483b7c56700e0 ......
	 orig commit -> 3d4b4a3e30ae7a949c31e1e10268a3da4723d290 ......
checking 6c0ecde201d796363b92de79553b75089760d9a4 ......
	 orig commit -> 79e641ce29cfae5b8fc55fb77ac62d11d2d849c0 ......
checking ce83e494d1bbbdd045aae236dcbb412cdd721319 ......
	 orig commit -> e1a4e37cc7b665b6804fba812aca2f4d7402c249 ......
checking 7cb011bbacef6fcf1d26fe8cd8cc8079404b01f8 ......
	 orig commit -> 7912e7fef2aebe577f0b46d3cba261f2783c5695 ......
checking 85ab1b23d2d865049299f3c197ce550e80228fac ......
	 orig commit -> 95989c46d2a156365867b1d795fdefce71bce378 ......
checking 4c1d33c4cf864cd1fa14868440daa300a8494900 ......
	 orig commit -> a54fba8f5a0dc36161cacdf2aa90f007f702ec1a ......
checking 3fddeb80034b2be27179cdc4e23167bc78d304d1 ......
	 orig commit -> e137a4d8f4dd2e277e355495b6b2cb241a8693c3 ......
checking 0caec70692a0f19538ed4ebb816df0d5585c8bd0 ......
	 orig commit -> 9584d98bed7a7a904d0702ad06bbcc94703cb5b4 ......
checking c7d1ddec251d39415cd488c29e9d60b22d4b61b7 ......
	 orig commit -> 767d035d838f4fd6b5a5bbd7a3f6d293b7f65a49 ......
checking cc9618c9fffe6bd362f048928e15effe04e5b6cd ......
	 orig commit -> 125c9fb1ccb53eb2ea9380df40f3c743f3fb2fed ......
checking 0f90297cba9ba37eb37723423c2df022ce77704a ......
	 orig commit -> afd2b4da40b3b567ef8d8e6881479345a2312a03 ......
checking 60b94125a1fe4988f5392d8537305dad441ef43d ......
	 orig commit -> 0f693f1995cf002432b70f43ce73f79bf8d0b6c9 ......
checking 3f60dadbe1781e292b560dd353d4a5a637ed192d ......
	 orig commit -> 7906b00f5cd1cd484fced7fcda892176e3202c8a ......
checking bf8ed95d2ca9c99f0237fb3cf56c381b19130610 ......
	 orig commit -> 32a805baf0fb70b6dbedefcd7249ac7f580f9e3b ......
checking c9335db792c04be68e553c6d0537c9df8b20e557 ......
	 orig commit -> ba1cc08d9488c94cb8d94f545305688b72a2a300 ......
		 ba1cc08d9488c94cb8d94f545305688b72a2a300 has problem. Fixes commit -> 32a805baf0fb70b6dbedefcd7249ac7f580f9e3b
commit bf8ed95d2ca9c99f0237fb3cf56c381b19130610
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Sep 8 15:48:47 2017 -0700

    ipv6: fix typo in fib6_net_exit()
    
    
    [ Upstream commit 32a805baf0fb70b6dbedefcd7249ac7f580f9e3b ]
    
    IPv6 FIB should use FIB6_TABLE_HASHSZ, not FIB_TABLE_HASHSZ.
    
    Fixes: ba1cc08d9488 ("ipv6: fix memory leak with multiple tables during netns destruction")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking ca7d8a337bd3e3eda49ab1b4dfa09ac9b335a56b ......
	 orig commit -> 5c25f30c93fdc5bf25e62101aeaae7a4f9b421b3 ......
checking f5755c0e870056dd35c95a0b5c0a038cdb4382ee ......
	 orig commit -> 8b949bef9172ca69d918e93509a4ecb03d0355e0 ......
checking 90406e68e42fa50c41b69a5d607fa979d0ab562b ......
	 orig commit -> 5d621672bc1a1e5090c1ac5432a18c79e0e13e03 ......
checking 1bcf18718ec63ad5fb025b75a5d2439e1dcf1213 ......
	 orig commit -> 5a63643e583b6a9789d7a225ae076fb4e603991c ......
checking 5a7a40bad254d2571d93059ba4b3963dc448cdb0 ......
	 orig commit -> fb452a1aa3fd4034d7999e309c5466ff2d7005aa ......
checking b5a3ae8b127e692d6ebf4707c4ec6db68c413024 ......
	 orig commit -> 79e99bdd60b484af9afe0147e85a13e66d5c1cdb ......
checking 73ee5a73e75f3c0e5d4ca0c5a362424e93413bb0 ......
	 orig commit -> 25cc72a33835ed8a6f53180a822cadab855852ac ......
		 25cc72a33835ed8a6f53180a822cadab855852ac has problem. Fixes commit -> 90045fc9c78855bdc625a0ab185d97b72a937613
checking a10c510179b369f7d1e8cf77f43ee2db900c1ac9 ......
	 orig commit -> 499350a5a6e7512d9ed369ed63a4244b6536f4f8 ......
checking a6e51fda71a205fbd8f7b98da799c46e563c3db1 ......
	 orig commit -> ebc8254aeae34226d0bc8fda309fd9790d4dccfe ......
	 orig commit -> 7ad813f208533cebfcc32d3d7474dc1677d1b09a ......
		 7ad813f208533cebfcc32d3d7474dc1677d1b09a has problem. Fixes commit -> ebc8254aeae34226d0bc8fda309fd9790d4dccfe
commit a6e51fda71a205fbd8f7b98da799c46e563c3db1
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Wed Aug 30 17:49:29 2017 -0700

    Revert "net: phy: Correctly process PHY_HALTED in phy_stop_machine()"
    
    
    [ Upstream commit ebc8254aeae34226d0bc8fda309fd9790d4dccfe ]
    
    This reverts commit 7ad813f208533cebfcc32d3d7474dc1677d1b09a ("net: phy:
    Correctly process PHY_HALTED in phy_stop_machine()") because it is
    creating the possibility for a NULL pointer dereference.
    
    David Daney provide the following call trace and diagram of events:
    
    When ndo_stop() is called we call:
    
     phy_disconnect()
        +---> phy_stop_interrupts() implies: phydev->irq = PHY_POLL;
        +---> phy_stop_machine()
        |      +---> phy_state_machine()
        |              +----> queue_delayed_work(): Work queued.
        +--->phy_detach() implies: phydev->attached_dev = NULL;
    
    Now at a later time the queued work does:
    
     phy_state_machine()
        +---->netif_carrier_off(phydev->attached_dev): Oh no! It is NULL:
    
     CPU 12 Unable to handle kernel paging request at virtual address
    0000000000000048, epc == ffffffff80de37ec, ra == ffffffff80c7c
    Oops[#1]:
    CPU: 12 PID: 1502 Comm: kworker/12:1 Not tainted 4.9.43-Cavium-Octeon+ #1
    Workqueue: events_power_efficient phy_state_machine
    task: 80000004021ed100 task.stack: 8000000409d70000
    $ 0   : 0000000000000000 ffffffff84720060 0000000000000048 0000000000000004
    $ 4   : 0000000000000000 0000000000000001 0000000000000004 0000000000000000
    $ 8   : 0000000000000000 0000000000000000 00000000ffff98f3 0000000000000000
    $12   : 8000000409d73fe0 0000000000009c00 ffffffff846547c8 000000000000af3b
    $16   : 80000004096bab68 80000004096babd0 0000000000000000 80000004096ba800
    $20   : 0000000000000000 0000000000000000 ffffffff81090000 0000000000000008
    $24   : 0000000000000061 ffffffff808637b0
    $28   : 8000000409d70000 8000000409d73cf0 80000000271bd300 ffffffff80c7804c
    Hi    : 000000000000002a
    Lo    : 000000000000003f
    epc   : ffffffff80de37ec netif_carrier_off+0xc/0x58
    ra    : ffffffff80c7804c phy_state_machine+0x48c/0x4f8
    Status: 14009ce3        KX SX UX KERNEL EXL IE
    Cause : 00800008 (ExcCode 02)
    BadVA : 0000000000000048
    PrId  : 000d9501 (Cavium Octeon III)
    Modules linked in:
    Process kworker/12:1 (pid: 1502, threadinfo=8000000409d70000,
    task=80000004021ed100, tls=0000000000000000)
    Stack : 8000000409a54000 80000004096bab68 80000000271bd300 80000000271c1e00
            0000000000000000 ffffffff808a1708 8000000409a54000 80000000271bd300
            80000000271bd320 8000000409a54030 ffffffff80ff0f00 0000000000000001
            ffffffff81090000 ffffffff808a1ac0 8000000402182080 ffffffff84650000
            8000000402182080 ffffffff84650000 ffffffff80ff0000 8000000409a54000
            ffffffff808a1970 0000000000000000 80000004099e8000 8000000402099240
            0000000000000000 ffffffff808a8598 0000000000000000 8000000408eeeb00
            8000000409a54000 00000000810a1d00 0000000000000000 8000000409d73de8
            8000000409d73de8 0000000000000088 000000000c009c00 8000000409d73e08
            8000000409d73e08 8000000402182080 ffffffff808a84d0 8000000402182080
            ...
    Call Trace:
    [<ffffffff80de37ec>] netif_carrier_off+0xc/0x58
    [<ffffffff80c7804c>] phy_state_machine+0x48c/0x4f8
    [<ffffffff808a1708>] process_one_work+0x158/0x368
    [<ffffffff808a1ac0>] worker_thread+0x150/0x4c0
    [<ffffffff808a8598>] kthread+0xc8/0xe0
    [<ffffffff808617f0>] ret_from_kernel_thread+0x14/0x1c
    
    The original motivation for this change originated from Marc Gonzales
    indicating that his network driver did not have its adjust_link callback
    executing with phydev->link = 0 while he was expecting it.
    
    PHYLIB has never made any such guarantees ever because phy_stop() merely just
    tells the workqueue to move into PHY_HALTED state which will happen
    asynchronously.
    
    Reported-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reported-by: David Daney <ddaney.cavm@gmail.com>
    Fixes: 7ad813f20853 ("net: phy: Correctly process PHY_HALTED in phy_stop_machine()")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking af33da0ed95f6a7b652f774fbb07fb52d2c21a97 ......
	 orig commit -> 351050ecd6523374b370341cc29fe61e2201556b ......
checking 8c623e5d03692dc478277185a0b907d53aea1b43 ......
	 orig commit -> edbd58be15a957f6a760c4a514cd475217eb97fd ......
checking 2b3bd5972a5ce434b3f2211181e72033efe018d9 ......
	 orig commit -> 0f3086868e8889a823a6e0f3d299102aa895d947 ......
checking de2ecec26dba848c729e51faaf2b4daf35096330 ......
	 orig commit -> 9b4e946ce14e20d7addbfb7d9139e604f9fda107 ......
checking 64dfc67548da52fe7891decf725342a8e87e32d8 ......
	 orig commit -> e58f95831e7468d25eb6e41f234842ecfe6f014f ......
checking 08d56d8a99bb82e134ba7704e4cfdabbcc16fc4f ......
	 orig commit -> ee6c88bb754e3d363e568da78086adfedb692447 ......
checking 4d8ee1935bcd666360311dfdadeee235d682d69a ......
	 orig commit -> a1a50c8e4c241a505b7270e1a3c6e50d94e794b1 ......
checking 1e39e5c6a2ea1f488ad13d351d6c55a5ef530666 ......
	 orig commit -> fd6055a806edc4019be1b9fb7d25262599bca5b1 ......
checking 4b4a194a10e2a2dd7bf3f90016b56ac495a1d37e ......
	 orig commit -> 78362998f58c7c271e2719dcd0aaced435c801f9 ......
checking 43c792a8488087668f7e1052201e2eeb32150141 ......
	 orig commit -> 4e587ea71bf924f7dac621f1351653bd41e446cb ......
checking 7f8f23fc8026a7a4f29f49c18a2ebbb529ee3916 ......
	 orig commit -> c5cff8561d2d0006e972bd114afd51f082fee77c ......
		 c5cff8561d2d0006e972bd114afd51f082fee77c has problem. Fixes commit -> 4e587ea71bf924f7dac621f1351653bd41e446cb
3614364527daa870264f6dde77f02853cdecd02c
commit 7829684088a216b8b53894768cd4f483c246cb94
Author: Steffen Klassert <steffen.klassert@secunet.com>
Date:   Fri Aug 25 09:05:42 2017 +0200

    ipv6: Fix may be used uninitialized warning in rt6_check
    
    commit 3614364527daa870264f6dde77f02853cdecd02c upstream.
    
    rt_cookie might be used uninitialized, fix this by
    initializing it.
    
    Fixes: c5cff8561d2d ("ipv6: add rcu grace period before freeing fib6_node")
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43c792a8488087668f7e1052201e2eeb32150141
Author: Wei Wang <weiwan@google.com>
Date:   Fri Aug 25 15:03:10 2017 -0700

    ipv6: fix sparse warning on rt6i_node
    
    
    [ Upstream commit 4e587ea71bf924f7dac621f1351653bd41e446cb ]
    
    Commit c5cff8561d2d adds rcu grace period before freeing fib6_node. This
    generates a new sparse warning on rt->rt6i_node related code:
      net/ipv6/route.c:1394:30: error: incompatible types in comparison
      expression (different address spaces)
      ./include/net/ip6_fib.h:187:14: error: incompatible types in comparison
      expression (different address spaces)
    
    This commit adds "__rcu" tag for rt6i_node and makes sure corresponding
    rcu API is used for it.
    After this fix, sparse no longer generates the above warning.
    
    Fixes: c5cff8561d2d ("ipv6: add rcu grace period before freeing fib6_node")
    Signed-off-by: Wei Wang <weiwan@google.com>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Martin KaFai Lau <kafai@fb.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 7829684088a216b8b53894768cd4f483c246cb94
Author: Steffen Klassert <steffen.klassert@secunet.com>
Date:   Fri Aug 25 09:05:42 2017 +0200

    ipv6: Fix may be used uninitialized warning in rt6_check
    
    commit 3614364527daa870264f6dde77f02853cdecd02c upstream.
    
    rt_cookie might be used uninitialized, fix this by
    initializing it.
    
    Fixes: c5cff8561d2d ("ipv6: add rcu grace period before freeing fib6_node")
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43c792a8488087668f7e1052201e2eeb32150141
Author: Wei Wang <weiwan@google.com>
Date:   Fri Aug 25 15:03:10 2017 -0700

    ipv6: fix sparse warning on rt6i_node
    
    
    [ Upstream commit 4e587ea71bf924f7dac621f1351653bd41e446cb ]
    
    Commit c5cff8561d2d adds rcu grace period before freeing fib6_node. This
    generates a new sparse warning on rt->rt6i_node related code:
      net/ipv6/route.c:1394:30: error: incompatible types in comparison
      expression (different address spaces)
      ./include/net/ip6_fib.h:187:14: error: incompatible types in comparison
      expression (different address spaces)
    
    This commit adds "__rcu" tag for rt6i_node and makes sure corresponding
    rcu API is used for it.
    After this fix, sparse no longer generates the above warning.
    
    Fixes: c5cff8561d2d ("ipv6: add rcu grace period before freeing fib6_node")
    Signed-off-by: Wei Wang <weiwan@google.com>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Martin KaFai Lau <kafai@fb.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking dccb31be7ef8984b8fa636b65f74b662db6b3cb3 ......
	 orig commit -> 3de33e1ba0506723ab25734e098cf280ecc34756 ......
