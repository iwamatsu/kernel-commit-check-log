Check from v4.9.151 to v4.9.152
Commit count: 55
checking ef50e3059ac91e7b035bce1a89e5b49771ed353a ......
checking f3fc88992633572bd94996f73c4f9db5988b48b5 ......
	 orig commit -> c8a83a6b54d0ca078de036aafb3f6af58c1dc5eb ......
checking eb1087513a4969cb221b96d8c0e6901c9e1471b8 ......
	 orig commit -> e544541b0765c341174613b416d4b074fa7571c2 ......
checking ef32aca7c63c1b144f99cf8f087be07a56931eac ......
	 orig commit -> c06ef2e9acef4cda1feee2ce055b8086e33d251a ......
checking 5cf3e5ff95876087ad241131955a244dd01726d5 ......
	 orig commit -> 63f3655f950186752236bb88a22f8252c11ce394 ......
checking a5a0bcbc58943c6e07b138c38aa5e92d41ac18dd ......
	 orig commit -> 66a8d5bfb518f9f12d47e1d2dce1732279f9451e ......
checking 5d3cf50105d007adc54949e0caeca1e944549723 ......
	 orig commit -> 628bd85947091830a8c4872adfd5ed1d515a9cf2 ......
checking 6a8f1d8d701462937ce01a3f2219af5435372af7 ......
	 orig commit -> 0a42e99b58a208839626465af194cfe640ef9493 ......
		 0a42e99b58a208839626465af194cfe640ef9493 has problem. Fixes commit -> 628bd85947091830a8c4872adfd5ed1d515a9cf2
commit 86af0f992e2a5cfabcd431ec107bea0400cddb04
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Feb 27 14:58:58 2019 +0100

    Revert "loop: Fix double mutex_unlock(&loop_ctl_mutex) in loop_control_ioctl()"
    
    This reverts commit 5d3cf50105d007adc54949e0caeca1e944549723 which is
    commit 628bd85947091830a8c4872adfd5ed1d515a9cf2 upstream.
    
    It does not work properly in the 4.9.y tree and causes more problems
    than it fixes, so revert it.
    
    Reported-by: Thomas Lindroth <thomas.lindroth@gmail.com>
    Reported-by: Jan Kara <jack@suse.cz>
    Cc: syzbot <syzbot+c0138741c2290fc5e63f@syzkaller.appspotmail.com>
    Cc: Ming Lei <ming.lei@redhat.com>
    Cc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Cc: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5d3cf50105d007adc54949e0caeca1e944549723
Author: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Date:   Mon Nov 12 08:42:14 2018 -0700

    loop: Fix double mutex_unlock(&loop_ctl_mutex) in loop_control_ioctl()
    
    commit 628bd85947091830a8c4872adfd5ed1d515a9cf2 upstream.
    
    Commit 0a42e99b58a20883 ("loop: Get rid of loop_index_mutex") forgot to
    remove mutex_unlock(&loop_ctl_mutex) from loop_control_ioctl() when
    replacing loop_index_mutex with loop_ctl_mutex.
    
    Fixes: 0a42e99b58a20883 ("loop: Get rid of loop_index_mutex")
    Reported-by: syzbot <syzbot+c0138741c2290fc5e63f@syzkaller.appspotmail.com>
    Reviewed-by: Ming Lei <ming.lei@redhat.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 7d839c10b848aa66ca1290a21ee600bd17c2dcb4 ......
	 orig commit -> 967d1dc144b50ad005e5eecdfadfbcfb399ffff6 ......
checking 3ae3d167f5ec2c7bb5fcd12b7772cfadc93b2305 ......
	 orig commit -> 310ca162d779efee8a2dc3731439680f3e9c1e86 ......
checking 02862eb9171c0fc51dac60ce29725599ac61e1fc ......
	 orig commit -> 2753ca5d9009c180dbfd4c802c80983b4b6108d1 ......
checking 4c559fb7e111077b56f62ccf833a52d8169cde19 ......
	 orig commit -> 974cb0e3e7c963ced06c4e32c5b2884173fa5e01 ......
checking 3644c53015fbbc7a08f2d41af9b870266e46ed5d ......
	 orig commit -> edf5ff04a45750ac8ce2435974f001dc9cfbf055 ......
checking 7d0cb25a8189d1212b1cb92f7f21728c514d2ffe ......
	 orig commit -> 0762216c0ad2a2fccd63890648eca491f2c83d9a ......
checking 4cd995a95bd70fcf22c6ad67bb07d19374fb33c6 ......
	 orig commit -> 8b66fee7f8ee18f9c51260e7a43ab37db5177a05 ......
checking 269958f4758ea153c0de35ccb0102002f923c76e ......
	 orig commit -> 400b8b9a2a17918f8ce00786f596f530e7f30d50 ......
checking 428ca580bf33ef6c8cf80ea197b3adfe0010a0bb ......
	 orig commit -> 04906b2f542c23626b0ef6219b808406f8dddbe9 ......
checking aedbb45f8f6fa41cd2146221c98e2e7d9a3fee05 ......
	 orig commit -> 5b0e7310a2a33c06edc7eb81ffc521af9b2c5610 ......
checking c6c0e52ab3fbe3915066eca7f072ee5977957eb5 ......
	 orig commit -> e2c8d550a973bb34fc28bc8d0ec996f84562fb8a ......
checking c30a3b5f1c52fb5d679b275165c3031aaab3b1a0 ......
	 orig commit -> 81c88b18de1f11f70c97f28ced8d642c00bb3955 ......
checking e89662f06a17ff0cfc2037d397683df04d95905f ......
	 orig commit -> cd26d1c4d1bc947b56ae404998ae2276df7b39b7 ......
		 cd26d1c4d1bc947b56ae404998ae2276df7b39b7 has problem. Fixes commit -> c06ef2e9acef4cda1feee2ce055b8086e33d251a
commit ef32aca7c63c1b144f99cf8f087be07a56931eac
Author: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
Date:   Fri Nov 23 07:05:58 2018 -0500

    media: vb2: be sure to unlock mutex on errors
    
    commit c06ef2e9acef4cda1feee2ce055b8086e33d251a upstream.
    
    As reported by smatch:
    drivers/media/common/videobuf2/videobuf2-core.c: drivers/media/common/videobuf2/videobuf2-core.c:2159 vb2_mmap() warn: inconsistent returns 'mutex:&q->mmap_lock'.
      Locked on:   line 2148
      Unlocked on: line 2100
                   line 2108
                   line 2113
                   line 2118
                   line 2156
                   line 2159
    
    There is one error condition that doesn't unlock a mutex.
    
    Fixes: cd26d1c4d1bc ("media: vb2: vb2_mmap: move lock up")
    Reviewed-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking a017e3968242552056ffeb9e803a8d9650c40159 ......
	 orig commit -> a5795fd38ee8194451ba3f281f075301a3696ce2 ......
checking eafdb5029c0697e79b852ff3de31b49368d7f20e ......
	 orig commit -> 9729d6d282a6d7ce88e64c9119cecdf79edf4e88 ......
checking 63f7a4a68e8de3b438a76fec14f25079a24ed1b9 ......
	 orig commit -> 701f49bc028edb19ffccd101997dd84f0d71e279 ......
checking f5a7973c32a39b2e16ef31f0f95ba47fcdac5b76 ......
	 orig commit -> a01421e4484327fe44f8e126793ed5a48a221e24 ......
checking 2e0f35c035ba2a51d3fc63a7459e94a396129911 ......
	 orig commit -> a214720cbf50cd8c3f76bbb9c3f5c283910e9d33 ......
		 a214720cbf50cd8c3f76bbb9c3f5c283910e9d33 has problem. Fixes commit -> dcf300a69ac307053dfb35c2e33972e754a98bce
commit 2b3836e420fc44352d9e3b8362860c2b168347c8
Author: Aaro Koskinen <aaro.koskinen@iki.fi>
Date:   Sun Jan 27 23:28:33 2019 +0200

    MIPS: OCTEON: don't set octeon_dma_bar_type if PCI is disabled
    
    commit dcf300a69ac307053dfb35c2e33972e754a98bce upstream.
    
    Don't set octeon_dma_bar_type if PCI is disabled. This avoids creation
    of the MSI irqchip later on, and saves a bit of memory.
    
    Signed-off-by: Aaro Koskinen <aaro.koskinen@iki.fi>
    Signed-off-by: Paul Burton <paul.burton@mips.com>
    Fixes: a214720cbf50 ("Disable MSI also when pcie-octeon.pcie_disable on")
    Cc: stable@vger.kernel.org # v3.3+
    Cc: linux-mips@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 3ec9b7754262ae006356be964b6c05169bb8ad7a ......
	 orig commit -> 1598ecda7b239e9232dda032bfddeed9d89fab6c ......
checking fbd5a135cbec467de2e99f59b534b86154f33365 ......
	 orig commit -> ac4ca4b9f4623ba5e1ea7a582f286567c611e027 ......
checking b6f87294d9b66e4787f664d07e2a6942d5bbdfdd ......
	 orig commit -> 5a9372f751b5350e0ce3d2ee91832f1feae2c2e5 ......
checking adcbf71074ce94efbae5e2df48c0313df81011a0 ......
	 orig commit -> 1bea445b0a022ee126ca328b3705cd4df18ebc14 ......
checking 47fbc54bbe52709fbdc50f5578acf964962942b2 ......
	 orig commit -> c56c2e173773097a248fd3bace91ac8f6fc5386d ......
checking 9da8e0f4bbeb2dff0e3171987a21e3bf5e52fe5b ......
	 orig commit -> 44759979a49bfd2d20d789add7fa81a21eb1a4ab ......
checking 1539a7b5651a47f75f08c2d7bddfa0cc20d9d531 ......
	 orig commit -> 3f7e62bba0003f9c68f599f5997c4647ef5b4f4e ......
checking 4fd72a17760fa68385906c58efb9d3ba96488101 ......
	 orig commit -> 9474f4e7cd71a633fa1ef93b7daefd44bbdfd482 ......
checking fa9b170733abf93d888608b8b179b2e3e026d8c0 ......
	 orig commit -> 74d5d229b1bf60f93bff244b2dfc0eb21ec32a07 ......
checking 6ddfcf0b4c6ce7cfeb5d9e36d991345f3fe6e600 ......
	 orig commit -> 8f9c469348487844328e162db57112f7d347c49f ......
checking 5e743eae172558a1895f59a2ac4d2b2a8ed36317 ......
	 orig commit -> a7773363624b034ab198c738661253d20a8055c2 ......
checking 00ef69322750b9dd9fa589c135c2f27a64c459c7 ......
	 orig commit -> 04e6d25c5bb244c1a37eb9fe0b604cc11a04e8c5 ......
checking 9cd05630f7a44639a665ce526dbc5f424835c2be ......
	 orig commit -> 4a06fa67c4da20148803525151845276cdb995c1 ......
checking 59a70d1e7a4e5daf72a785ca3eb8bb25cb6341d1 ......
	 orig commit -> 001e465f09a18857443489a57e74314a3368c805 ......
checking 2525133d394f2cf31fc014dcf59704f298c6bc8c ......
	 orig commit -> d972f3dce8d161e2142da0ab1ef25df00e2f21a9 ......
checking 80711e653b772ae43a7681069652e28c62fc5ad7 ......
	 orig commit -> 4c84edc11b76590859b1e45dd676074c59602dc4 ......
checking 7492dfeab6782ea02099b6caf66461b6081ed59a ......
	 orig commit -> 7d033c9f6a7fd3821af75620a0257db87c2b552a ......
checking 605127ada0406e4a0502a1afa62342a610119f01 ......
	 orig commit -> b3669b1e1c09890d61109a1a8ece2c5b66804714 ......
checking cd350ae3c8923b7ab625283d59178c0debf5687e ......
	 orig commit -> 4eaed6aa2c628101246bcabc91b203bfac1193f8 ......
checking 2d9e05ba09c0a8ce647d769b2804647dbbca9ac2 ......
	 orig commit -> ed076c55b359cc9982ca8b065bcc01675f7365f6 ......
checking 9c86678f67b8080e827829d22d6b6ec41acad62c ......
checking f311b6cd351b540955cf415b17dba4d38886bbeb ......
checking 52befa071a5ec62920e3320c73f550270f948180 ......
checking fe6b4e4083b24dc8a98a3493068a5fb3cde6a865 ......
	 orig commit -> d47b8715953ad0cf82bb0a9d30d7b11d83bc9c11 ......
checking d379b338387e3d5a9b5ebe5ab16656a9c65c988d ......
	 orig commit -> 0aaa81377c5a01f686bcdb8c7a6929a7bf330c68 ......
checking a172c5d82643f18080af2aba21c897467e5cf1de ......
	 orig commit -> d3736d82e8169768218ee0ef68718875918091a0 ......
checking 383cf6479d489b7becc64b4860cef94dfd19ca5e ......
	 orig commit -> cf62a1a13749db0d32b5cdd800ea91a4087319de ......
checking b4ff011f6748d5bfb217abce7055a6101e443322 ......
	 orig commit -> 83d817f41070c48bc3eb7ec18e43000a548fca5c ......
		 83d817f41070c48bc3eb7ec18e43000a548fca5c has problem. Fixes commit -> d3736d82e8169768218ee0ef68718875918091a0
commit a172c5d82643f18080af2aba21c897467e5cf1de
Author: Dmitry Safonov <dima@arista.com>
Date:   Wed Jan 9 01:17:40 2019 +0000

    tty: Don't hold ldisc lock in tty_reopen() if ldisc present
    
    commit d3736d82e8169768218ee0ef68718875918091a0 upstream.
    
    Try to get reference for ldisc during tty_reopen().
    If ldisc present, we don't need to do tty_ldisc_reinit() and lock the
    write side for line discipline semaphore.
    Effectively, it optimizes fast-path for tty_reopen(), but more
    importantly it won't interrupt ongoing IO on the tty as no ldisc change
    is needed.
    Fixes user-visible issue when tty_reopen() interrupted login process for
    user with a long password, observed and reported by Lukas.
    
    Fixes: c96cf923a98d ("tty: Don't block on IO when ldisc change is pending")
    Fixes: 83d817f41070 ("tty: Hold tty_ldisc_lock() during tty_reopen()")
    Cc: Jiri Slaby <jslaby@suse.com>
    Reported-by: Lukas F. Hartmann <lukas@mntmn.com>
    Tested-by: Lukas F. Hartmann <lukas@mntmn.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Dmitry Safonov <dima@arista.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 6e8dba394f06e9c84f89ed0284825f67720bb3a3 ......
	 orig commit -> 231f8fd0cca078bd4396dd7e380db813ac5736e2 ......
