Check from v4.9.160 to v4.9.161
Commit count: 64
checking 5507839a723e4edeed4efda2fa2249c4713fe0bb ......
checking 8ff3c2ecc1a4b79d6ee2b0e705784e2619ccaf7d ......
	 orig commit -> 238bcbc4e07fad2fff99c5b157d0c37ccd4d093c ......
checking 9eea082f762f7f71c0d0373d821b1aac22f719e3 ......
	 orig commit -> a9903f04e0a4ea522d959c2f287cdf0ab029e324 ......
checking ffd36a6801880a1f42ca769327fd9ff30f25e577 ......
	 orig commit -> a0dd6773038f3fd2bd1b4f7ec193887cffc49046 ......
checking 87e964d19fdb95867eb05525bed8594f4de84e2b ......
	 orig commit -> 1f60652dd586d1b3eee7c4602892a97a62fa937a ......
checking deba234596ead92e6d65de42fa5345e3e02d73dc ......
	 orig commit -> 23b7ca4f745f21c2b9cfcb67fdd33733b3ae7e66 ......
checking 0b6633d1f19b7dc99066b96731daf451dbe9aaf7 ......
	 orig commit -> 278e2148c07559dd4ad8602f22366d61eb2ee7b7 ......
checking 5ac69185d4641c8215353a8a5f2d9f58a5e75ff5 ......
	 orig commit -> 3457f4147675108aa83f9f33c136f06bb9f8518f ......
checking d069e8ca02afdb5ca9e2b60a580e521e73493291 ......
	 orig commit -> 3eb95feac113d8ebad5b7b5189a65efcbd95a749 ......
checking 411b7ca7f67a373b8001496f022cf1f12cd750a1 ......
	 orig commit -> d44ffa5ae70a15a15190aa9ffa6f6acdeae1d25c ......
checking c95a870d1cdeda811c9ba4a16c16c4d1e2baa701 ......
	 orig commit -> dbe27a002ef8573168cb64e181458ea23a74e2b6 ......
checking e1e7f343ea57be71cf6b57caae43e123033ee1e5 ......
	 orig commit -> 0f0e8de334c54c38818a4a5390a39aa09deff5bf ......
checking 9362c0885a48d5c4ffefc0bac9ff81bf3f6bac38 ......
	 orig commit -> 0a5f41767444cc3b4fc5573921ab914b4f78baaa ......
checking b018806f8ab17dcd789ecfb6656569a0b0097990 ......
	 orig commit -> df16aaac26e92e97ab7234d3f93c953466adc4b5 ......
checking 3f46fe4a39fd0634abdd60294706aa005c6d8b0c ......
	 orig commit -> bb3f38c3c5b759163e09b9152629cc789731de47 ......
checking b098b0228598af3ca2fd02892c4b976185988e7d ......
	 orig commit -> cfe17c9bbe6a673fdafdab179c32b355ed447f66 ......
		 cfe17c9bbe6a673fdafdab179c32b355ed447f66 has problem. Fixes commit -> 0f0e8de334c54c38818a4a5390a39aa09deff5bf
commit e1e7f343ea57be71cf6b57caae43e123033ee1e5
Author: Stefan Agner <stefan@agner.ch>
Date:   Mon Mar 19 22:12:53 2018 +0100

    kbuild: set no-integrated-as before incl. arch Makefile
    
    commit 0f0e8de334c54c38818a4a5390a39aa09deff5bf upstream.
    
    In order to make sure compiler flag detection for ARM works
    correctly the no-integrated-as flags need to be set before
    including the arch specific Makefile.
    
    Fixes: cfe17c9bbe6a ("kbuild: move cc-option and cc-disable-warning after incl. arch Makefile")
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    [nc: Backport to 4.9; adjust context due to a previous backport]
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking ebf4753ab1c83883bb67b4a74685a59322012dd9 ......
	 orig commit -> 41c32e5da3ff3922490341a988b2a3ae46d0b6a8 ......
checking 01e081790f150581b875e3da256083ffd02e9e81 ......
	 orig commit -> a21960339c8c107eae99d68c85e6355189b22192 ......
		 a21960339c8c107eae99d68c85e6355189b22192 has problem. Fixes commit -> 034263a3b9a9d02de81ebafe40e77c6cde80d23f
41c32e5da3ff3922490341a988b2a3ae46d0b6a8
2901215920aa7f984a273104d97ac808a8cbc090
commit ebf4753ab1c83883bb67b4a74685a59322012dd9
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Fri Sep 1 17:31:23 2017 +0300

    drm/i915: Fix enum pipe vs. enum transcoder for the PCH transcoder
    
    commit 41c32e5da3ff3922490341a988b2a3ae46d0b6a8 upstream.
    
    Use enum pipe for PCH transcoders also in the FIFO underrun code.
    
    Fixes the following new sparse warnings:
    intel_fifo_underrun.c:340:49: warning: mixing different enum types
    intel_fifo_underrun.c:340:49:     int enum pipe  versus
    intel_fifo_underrun.c:340:49:     int enum transcoder
    intel_fifo_underrun.c:344:49: warning: mixing different enum types
    intel_fifo_underrun.c:344:49:     int enum pipe  versus
    intel_fifo_underrun.c:344:49:     int enum transcoder
    intel_fifo_underrun.c:397:57: warning: mixing different enum types
    intel_fifo_underrun.c:397:57:     int enum pipe  versus
    intel_fifo_underrun.c:397:57:     int enum transcoder
    intel_fifo_underrun.c:398:17: warning: mixing different enum types
    intel_fifo_underrun.c:398:17:     int enum pipe  versus
    intel_fifo_underrun.c:398:17:     int enum transcoder
    
    Cc: Matthias Kaehlcke <mka@chromium.org>
    Fixes: a21960339c8c ("drm/i915: Consistently use enum pipe for PCH transcoders")
    Signed-off-by: "Ville Syrjälä" <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20170901143123.7590-3-ville.syrjala@linux.intel.com
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    [nc: Backport to 4.9, drop unneeded hunks]
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit ebf4753ab1c83883bb67b4a74685a59322012dd9
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Fri Sep 1 17:31:23 2017 +0300

    drm/i915: Fix enum pipe vs. enum transcoder for the PCH transcoder
    
    commit 41c32e5da3ff3922490341a988b2a3ae46d0b6a8 upstream.
    
    Use enum pipe for PCH transcoders also in the FIFO underrun code.
    
    Fixes the following new sparse warnings:
    intel_fifo_underrun.c:340:49: warning: mixing different enum types
    intel_fifo_underrun.c:340:49:     int enum pipe  versus
    intel_fifo_underrun.c:340:49:     int enum transcoder
    intel_fifo_underrun.c:344:49: warning: mixing different enum types
    intel_fifo_underrun.c:344:49:     int enum pipe  versus
    intel_fifo_underrun.c:344:49:     int enum transcoder
    intel_fifo_underrun.c:397:57: warning: mixing different enum types
    intel_fifo_underrun.c:397:57:     int enum pipe  versus
    intel_fifo_underrun.c:397:57:     int enum transcoder
    intel_fifo_underrun.c:398:17: warning: mixing different enum types
    intel_fifo_underrun.c:398:17:     int enum pipe  versus
    intel_fifo_underrun.c:398:17:     int enum transcoder
    
    Cc: Matthias Kaehlcke <mka@chromium.org>
    Fixes: a21960339c8c ("drm/i915: Consistently use enum pipe for PCH transcoders")
    Signed-off-by: "Ville Syrjälä" <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20170901143123.7590-3-ville.syrjala@linux.intel.com
    Reviewed-by: Chris Wilson <chris@chris-wilson.co.uk>
    [nc: Backport to 4.9, drop unneeded hunks]
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking e81c46456bfbd1a7fb8d6d03efcd79d3b13509c3 ......
	 orig commit -> 20c6c189045539d29f4854d92b7ea9c329e1edfc ......
checking 8bd71286fde0fe25024c0cc97a91962ec68a74b2 ......
	 orig commit -> 4dbbe2d8e95c351157f292ece067f985c30c7b53 ......
checking 64696ba9577f7742358cd7be42da2a4eb4877244 ......
	 orig commit -> 0c3a8f8b8fabff4f3ad2dd7b95ae0e90cdd1aebb ......
checking 146558f0d27f299d607973574e33000f3c8aa87d ......
	 orig commit -> 0773cea37470f8e080c510fe720fc356cf35df3a ......
checking 62c0e9c3dd464d94020d6d7a3c6f7a3354286783 ......
	 orig commit -> 5cd5e6ad0ede862432e1e766bfe02a9ad447533e ......
checking 9e3bd8686189d87e72f44965537a81ec3831f5f7 ......
	 orig commit -> b6835ea77729e7faf4656ca637ba53f42b8ee3fd ......
checking 036df538627b97a17fbb9233a2c443fb3e46cae2 ......
	 orig commit -> a66f2e57bd566240d8b3884eedf503928fbbe557 ......
checking 812224d6b1fddb567fcbd480f9e35d94d7dad321 ......
	 orig commit -> 252f6e8eae909bc075a1b1e3b9efb095ae4c0b56 ......
checking e9f06133d7ddd4788371ec5613f9c577bba8c103 ......
	 orig commit -> b7dc5a071ddf69c0350396b203cba32fe5bab510 ......
	 orig commit -> 910cd32e552ea09caa89cdbe328e468979b030dd ......
		 910cd32e552ea09caa89cdbe328e468979b030dd has problem. Fixes commit -> b7dc5a071ddf69c0350396b203cba32fe5bab510
commit e9f06133d7ddd4788371ec5613f9c577bba8c103
Author: Dmitry V. Levin <ldv@altlinux.org>
Date:   Sat Feb 16 16:10:39 2019 +0300

    parisc: Fix ptrace syscall number modification
    
    commit b7dc5a071ddf69c0350396b203cba32fe5bab510 upstream.
    
    Commit 910cd32e552e ("parisc: Fix and enable seccomp filter support")
    introduced a regression in ptrace-based syscall tampering: when tracer
    changes syscall number to -1, the kernel fails to initialize %r28 with
    -ENOSYS and subsequently fails to return the error code of the failed
    syscall to userspace.
    
    This erroneous behaviour could be observed with a simple strace syscall
    fault injection command which is expected to print something like this:
    
    $ strace -a0 -ewrite -einject=write:error=enospc echo hello
    write(1, "hello\n", 6) = -1 ENOSPC (No space left on device) (INJECTED)
    write(2, "echo: ", 6) = -1 ENOSPC (No space left on device) (INJECTED)
    write(2, "write error", 11) = -1 ENOSPC (No space left on device) (INJECTED)
    write(2, "\n", 1) = -1 ENOSPC (No space left on device) (INJECTED)
    +++ exited with 1 +++
    
    After commit 910cd32e552ea09caa89cdbe328e468979b030dd it loops printing
    something like this instead:
    
    write(1, "hello\n", 6../strace: Failed to tamper with process 12345: unexpectedly got no error (return value 0, error 0)
    ) = 0 (INJECTED)
    
    This bug was found by strace test suite.
    
    Fixes: 910cd32e552e ("parisc: Fix and enable seccomp filter support")
    Cc: stable@vger.kernel.org # v4.5+
    Signed-off-by: Dmitry V. Levin <ldv@altlinux.org>
    Tested-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking fcfa562a61a9f52d54bba7a539ac7180121e0089 ......
	 orig commit -> 29dded89e80e3fff61efb34f07a8a3fba3ea146d ......
checking 176ef96c1900432ba7ef659f435a7320bf026ca6 ......
	 orig commit -> fc228abc2347e106a44c0e9b29ab70b712c4ca51 ......
checking 2b0925f939cbf8e74f6c342fc0eedf45ade967c8 ......
	 orig commit -> 173656accaf583698bac3f9e269884ba60d51ef4 ......
checking 03ad40df95398ed7eaa647b5d2e2ff747945ae8b ......
	 orig commit -> 2fdeee2549231b1f989f011bb18191f5660d3745 ......
checking 3b70317bf9298f50511ce77857ccccb7a7ddf000 ......
	 orig commit -> fc62814d690cf62189854464f4bd07457d5e9e50 ......
		 fc62814d690cf62189854464f4bd07457d5e9e50 has problem. Fixes commit -> 398f0132c14754fcd03c1c4f8e7176d001ce8ea1
commit 49190e418795b9bdcd31497f2d0a6687be536bad
Author: Christoph Paasch <cpaasch@apple.com>
Date:   Mon Mar 18 23:14:52 2019 -0700

    net/packet: Set __GFP_NOWARN upon allocation in alloc_pg_vec
    
    [ Upstream commit 398f0132c14754fcd03c1c4f8e7176d001ce8ea1 ]
    
    Since commit fc62814d690c ("net/packet: fix 4gb buffer limit due to overflow check")
    one can now allocate packet ring buffers >= UINT_MAX. However, syzkaller
    found that that triggers a warning:
    
    [   21.100000] WARNING: CPU: 2 PID: 2075 at mm/page_alloc.c:4584 __alloc_pages_nod0
    [   21.101490] Modules linked in:
    [   21.101921] CPU: 2 PID: 2075 Comm: syz-executor.0 Not tainted 5.0.0 #146
    [   21.102784] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 0.5.1 01/01/2011
    [   21.103887] RIP: 0010:__alloc_pages_nodemask+0x2a0/0x630
    [   21.104640] Code: fe ff ff 65 48 8b 04 25 c0 de 01 00 48 05 90 0f 00 00 41 bd 01 00 00 00 48 89 44 24 48 e9 9c fe 3
    [   21.107121] RSP: 0018:ffff88805e1cf920 EFLAGS: 00010246
    [   21.107819] RAX: 0000000000000000 RBX: ffffffff85a488a0 RCX: 0000000000000000
    [   21.108753] RDX: 0000000000000000 RSI: dffffc0000000000 RDI: 0000000000000000
    [   21.109699] RBP: 1ffff1100bc39f28 R08: ffffed100bcefb67 R09: ffffed100bcefb67
    [   21.110646] R10: 0000000000000001 R11: ffffed100bcefb66 R12: 000000000000000d
    [   21.111623] R13: 0000000000000000 R14: ffff88805e77d888 R15: 000000000000000d
    [   21.112552] FS:  00007f7c7de05700(0000) GS:ffff88806d100000(0000) knlGS:0000000000000000
    [   21.113612] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   21.114405] CR2: 000000000065c000 CR3: 000000005e58e006 CR4: 00000000001606e0
    [   21.115367] Call Trace:
    [   21.115705]  ? __alloc_pages_slowpath+0x21c0/0x21c0
    [   21.116362]  alloc_pages_current+0xac/0x1e0
    [   21.116923]  kmalloc_order+0x18/0x70
    [   21.117393]  kmalloc_order_trace+0x18/0x110
    [   21.117949]  packet_set_ring+0x9d5/0x1770
    [   21.118524]  ? packet_rcv_spkt+0x440/0x440
    [   21.119094]  ? lock_downgrade+0x620/0x620
    [   21.119646]  ? __might_fault+0x177/0x1b0
    [   21.120177]  packet_setsockopt+0x981/0x2940
    [   21.120753]  ? __fget+0x2fb/0x4b0
    [   21.121209]  ? packet_release+0xab0/0xab0
    [   21.121740]  ? sock_has_perm+0x1cd/0x260
    [   21.122297]  ? selinux_secmark_relabel_packet+0xd0/0xd0
    [   21.123013]  ? __fget+0x324/0x4b0
    [   21.123451]  ? selinux_netlbl_socket_setsockopt+0x101/0x320
    [   21.124186]  ? selinux_netlbl_sock_rcv_skb+0x3a0/0x3a0
    [   21.124908]  ? __lock_acquire+0x529/0x3200
    [   21.125453]  ? selinux_socket_setsockopt+0x5d/0x70
    [   21.126075]  ? __sys_setsockopt+0x131/0x210
    [   21.126533]  ? packet_release+0xab0/0xab0
    [   21.127004]  __sys_setsockopt+0x131/0x210
    [   21.127449]  ? kernel_accept+0x2f0/0x2f0
    [   21.127911]  ? ret_from_fork+0x8/0x50
    [   21.128313]  ? do_raw_spin_lock+0x11b/0x280
    [   21.128800]  __x64_sys_setsockopt+0xba/0x150
    [   21.129271]  ? lockdep_hardirqs_on+0x37f/0x560
    [   21.129769]  do_syscall_64+0x9f/0x450
    [   21.130182]  entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    We should allocate with __GFP_NOWARN to handle this.
    
    Cc: Kal Conley <kal.conley@dectris.com>
    Cc: Andrey Konovalov <andreyknvl@google.com>
    Fixes: fc62814d690c ("net/packet: fix 4gb buffer limit due to overflow check")
    Signed-off-by: Christoph Paasch <cpaasch@apple.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking af9a0dba3a879ea466a3b9b9ed39dd01267081ee ......
	 orig commit -> 4ffcbfac60642f63ae3d80891f573ba7e94a265c ......
checking dc070cdb427e42a6b6b503427a029083e307ed34 ......
	 orig commit -> ede0fa98a900e657d1fcd80b50920efc896c1a4c ......
checking acf476e026ee99e6cf2ad169f938b4668112582b ......
	 orig commit -> cc1780fc42c76c705dd07ea123f1143dc5057630 ......
checking 8a7a605e10863a633e7abd85c29cb54cebd40dc1 ......
	 orig commit -> 48396e80fb6526ea5ed267bd84f028bae56d2f9e ......
checking cbc9ea4fc2dd1a1b8d59b99cc1bb8df79c8c8b07 ......
	 orig commit -> f8be0d78be6e7f199116a5e644ee20ff0ce413f7 ......
checking 1767f6cdfc06d5afc70b6007a754e38f82f7fa22 ......
	 orig commit -> 7afa81c55fca0cad589722cb4bce698b4803b0e1 ......
checking 85992a31427d6129608d6c857d885915eadb2540 ......
	 orig commit -> 7fdc1adc52d3975740547a78c2df329bb207f15d ......
checking a1953b40c6b4749f157cc73a78b6b0a6be100538 ......
	 orig commit -> 64254a2054611205798e6bde634639bc704573ac ......
checking 38ad9f0362b2f79786c65c26c92e09f788512864 ......
	 orig commit -> 248b57015f35c94d4eae2fdd8c6febf5cd703900 ......
checking 364f3761461395230ee45ed54c1962649df9e640 ......
	 orig commit -> cb12d72b27a6f41325ae23a11033cf5fedfa1b97 ......
checking 46154d295b82ff4f470dd3934440433ce333825b ......
	 orig commit -> 2ff33d6637393fe9348357285931811b76e1402f ......
checking ee3cf5aee221029dce651ab0cf4c736ba92ade62 ......
	 orig commit -> 6dea7e1881fd86b80da64e476ac398008daed857 ......
checking 8b5c7892fc8474030e84c4097687af7055a574a9 ......
	 orig commit -> 41af167fbc0032f9d7562854f58114eaa9270336 ......
checking 0acf907103554dedc51dbb3e976367967988b8f8 ......
	 orig commit -> cc29a1b0a3f2597ce887d339222fa85b9307706d ......
checking 73d21cdbe2c2ce8e78a6ca31a4df08377a118661 ......
	 orig commit -> 72b4a0465f995175a2e22cf4a636bf781f1f28a7 ......
checking ef5cb2ef9d046369e6c79c33c923afc7abd14cc4 ......
	 orig commit -> 565dc8a4f55e491935bfb04866068d21784ea9a4 ......
checking 80459778c5cecf039b4758a9fee1c0d6b4da77c8 ......
	 orig commit -> bb989501abcafa0de5f18b0ec0ec459b5b817908 ......
checking 351d66319845a1751ba9bb757077f0d259f05e14 ......
	 orig commit -> 46721c3d9e273aea880e9ff835b0e1271e1cd2fb ......
checking f98bcfadc81aaa38711b119f920dce3448b5782c ......
	 orig commit -> 9e28989d41c0eab57ec0bb156617a8757406ff8a ......
checking 33e081e80d7947212ca9e6bf3ddd29da6e6ac573 ......
	 orig commit -> 04c801c18ded421845324255e660147a6f58dcd6 ......
checking 7955783d5b7f3621959e0f6bf28c0e3b3a768f3d ......
	 orig commit -> 504e4175829c44328773b96ad9c538e4783a8d22 ......
checking a688b8b61767d03c140aa2b7cc3265dbc7697b9f ......
	 orig commit -> 10628e3ecf544fa2e4e24f8e112d95c37884dc98 ......
checking 91e6613e22921b4e975608f83785a48f28eac65d ......
	 orig commit -> a177276aa098aa47a100d51a13eaaef029604b6d ......
checking 5b3bcee0775f90a43f5be733166dcdaacc2cf32e ......
	 orig commit -> a3888f62fe66429fad3be7f2ba962e1e08c26fd6 ......
checking c42ae90ce5ee137854ab8445bbdddc4642d9e79c ......
	 orig commit -> 8838555089f0345b87f4277fe5a8dd647dc65589 ......
checking fcbdbda22d97b8b7a4dd140776f573e3a1ffaec4 ......
	 orig commit -> b40ee006fe6a8a25093434e5d394128c356a48f3 ......
checking 6704b9d8a075227b018959f5acd2aac3dfcd2e2e ......
	 orig commit -> a08bf91ce28ed3ae7b6fef35d843fef8dc8c2cd9 ......
checking 2d182ba4345814dc332bfb0f78d6210f6c7de6f7 ......
	 orig commit -> b2b469939e93458753cfbf8282ad52636495965e ......
checking 17ef08517a03b5c7f51e09856b35e6051e84a2d8 ......
	 orig commit -> 050c17f239fd53adb55aa768d4f41bc76c0fe045 ......
checking 79e3959b68cb08f086c6a65f3b3a36348e0cc5fd ......
	 orig commit -> 04242ff3ac0abbaa4362f97781dac268e6c3541a ......
checking a1f11de42378ef4c9fab701f6f2ff21b266a5c87 ......
	 orig commit -> 0fd3fd0a9bb0b02b6435bb7070e9f7b82a23f068 ......
checking efbc76008c119f20faca5bc478b3c227b801c8c5 ......
	 orig commit -> 4ff3a9d14c6c06eaa4e5976c61599ea2bd9e81b2 ......
