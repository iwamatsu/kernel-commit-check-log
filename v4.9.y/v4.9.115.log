Check from v4.9.115 to v4.9.116
Commit count: 34
checking 94c67449c7550597e86f15cce923055f7b2c8e09 ......
checking b9dd13488acb680c5f141f5c077880317c9749cf ......
	 orig commit -> 3756f6401c302617c5e091081ca4d26ab604bec5 ......
checking b1a1d9bdb1b5123924956f069920bf4b9c4b11c4 ......
checking b2019f0f7021b5ca9da3173ace7fcf97aa1d4923 ......
	 orig commit -> 83997997252f5d3fc7f04abc24a89600c2b504ab ......
checking 9f7308434ed6922545e00562a9a6ccd0aa3759da ......
	 orig commit -> 2f4f0f338cf453bfcdbcf089e177c16f35f023c8 ......
checking bee7ff7eaade2f51d0a4b485642e06b6d2b2d125 ......
	 orig commit -> 620050d9c2be15c47017ba95efe59e0832e99a56 ......
checking 1fd9fa57c1d97938b877018324809bafd59e15f5 ......
	 orig commit -> 2574fe54515ed3487405de329e4e9f13d7098c10 ......
checking c98f577204b4bdc46453c2f64fa760fa17721046 ......
	 orig commit -> 877e0b75947e2c7acf5624331bb17ceb093c98ae ......
checking 1fadfbd9f593903e84f66d4e6902193886c5de1c ......
	 orig commit -> 8ebd83bdb027f29870d96649dba18b91581ea829 ......
checking de2219a86c0ba1d07e16e81011b0749b867f76c5 ......
	 orig commit -> 32852c561bffd613d4ed7ec464b1e03e1b7b6c5c ......
checking bf0070e2f56eb3da708978da5dab5d36bbed1bf6 ......
	 orig commit -> 722e5f2b1eec7de61117b7c0a7914761e3da2eda ......
checking 9e10043b6bdcc1a991a029de8a0bc745950345c6 ......
	 orig commit -> 4d644abf25698362bd33d17c9ddc8f7122c30f17 ......
checking e2996cf59ebf6564002f6bdf9ebb16336cae62e1 ......
	 orig commit -> 249a32b7eeb3edb6897dd38f89651a62163ac4ed ......
checking b0bd06a4757e4356569c2a73bc535f090dec5fa8 ......
	 orig commit -> 1445cbe476fc3dd09c0b380b206526a49403c071 ......
checking 94623c7463f3424776408df2733012c42b52395a ......
	 orig commit -> 8541b21e781a22dce52a74fef0b9bed00404a1cd ......
checking a878681484a0992ee3dfbd7826439951f9f82a69 ......
	 orig commit -> 3d4bf93ac12003f9b8e1e2de37fe27983deebdcf ......
checking fdf258ed5dd85b57cf0e0e66500be98d38d42d02 ......
	 orig commit -> f4a3313d8e2ca9fd8d8f45e40a2903ba782607e7 ......
checking 2d08921c8da26bdce3d8848ef6f32068f594d7d4 ......
	 orig commit -> 72cd43ba64fc172a443410ce01645895850844c8 ......
checking 8736711f4e55a50e0ec89edd366256f8edb5f9c3 ......
	 orig commit -> a0496ef2c23b3b180902dd185d0d63ccbc624cf8 ......
checking 57ec8824b14d76089d1fd0d963ccc2d084070e57 ......
	 orig commit -> 27cde44a259c380a3c09066fc4b42de7dde9b1ad ......
checking 1fcccc57866bd5c31ec09df7accdfecb0d222a85 ......
	 orig commit -> 2987babb6982306509380fc11b450227a844493b ......
checking 841778018235f7328a8be29cbdaa36c7703d064c ......
	 orig commit -> b0c05d0e99d98d7f0cd41efc1eeec94efdc3325d ......
checking 19b74799159ab6f780fedd568adf00cdee9edd5a ......
	 orig commit -> 5025f7f7d506fba9b39e7fe8ca10f6f34cb9bc2d ......
		 5025f7f7d506fba9b39e7fe8ca10f6f34cb9bc2d has problem. Fixes commit -> 56a49d7048703f5ffdb84d3a0ee034108fba6850
checking c6ac36be72e46082bedd4433ccba9925bbf6a322 ......
	 orig commit -> 215d08a85b9acf5e1fe9dbf50f1774cde333efef ......
checking cc403d5dc140ba74400335b84b91f97d07dbd569 ......
checking b7e37add79bf1a2c9f4a7574b0d7f53f0f6df663 ......
	 orig commit -> 2630bae8018823c3b88788b69fb9f16ea3b4a11e ......
checking d9d580121617d95aade9aa839d4e405521eafcb8 ......
	 orig commit -> d2e1c57bcf9a07cbb67f30ecf238f298799bce1c ......
checking adcecd4ab150f4e2dfdb2fcbf3f1394de6f9dd7a ......
	 orig commit -> 33180bee86a8940a84950edca46315cd9dd6deb5 ......
checking e2ffdd646cf61ae1444d376d1ea1e756a495eff8 ......
	 orig commit -> ff907a11a0d68a749ce1a321f4505c03bf72190c ......
checking 444987d535bf65b109b60f45406abe1d7f11f1f7 ......
	 orig commit -> 958c696f5a7274d9447a458ad7aa70719b29a50a ......
checking 03fbf2b8237a3f1689848cf9f2d9bc7c1869e834 ......
	 orig commit -> 2efd4fca703a6707cad16ab486eaab8fc7f0fd49 ......
		 2efd4fca703a6707cad16ab486eaab8fc7f0fd49 has problem. Fixes commit -> 4a06fa67c4da20148803525151845276cdb995c1
64199fc0a46ba211362472f7f942f900af9492fd
commit 9cd05630f7a44639a665ce526dbc5f424835c2be
Author: Willem de Bruijn <willemb@google.com>
Date:   Mon Jan 7 16:47:33 2019 -0500

    ip: on queued skb use skb_header_pointer instead of pskb_may_pull
    
    [ Upstream commit 4a06fa67c4da20148803525151845276cdb995c1 ]
    
    Commit 2efd4fca703a ("ip: in cmsg IP(V6)_ORIGDSTADDR call
    pskb_may_pull") avoided a read beyond the end of the skb linear
    segment by calling pskb_may_pull.
    
    That function can trigger a BUG_ON in pskb_expand_head if the skb is
    shared, which it is when when peeking. It can also return ENOMEM.
    
    Avoid both by switching to safer skb_header_pointer.
    
    Fixes: 2efd4fca703a ("ip: in cmsg IP(V6)_ORIGDSTADDR call pskb_may_pull")
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Suggested-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c476a441f873729e4b8b63d73b6f5b7b37f39e42
Author: Eric Dumazet <edumazet@google.com>
Date:   Sun Sep 30 11:33:39 2018 -0700

    ipv4: fix use-after-free in ip_cmsg_recv_dstaddr()
    
    [ Upstream commit 64199fc0a46ba211362472f7f942f900af9492fd ]
    
    Caching ip_hdr(skb) before a call to pskb_may_pull() is buggy,
    do not do it.
    
    Fixes: 2efd4fca703a ("ip: in cmsg IP(V6)_ORIGDSTADDR call pskb_may_pull")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Willem de Bruijn <willemb@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Acked-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 9cd05630f7a44639a665ce526dbc5f424835c2be
Author: Willem de Bruijn <willemb@google.com>
Date:   Mon Jan 7 16:47:33 2019 -0500

    ip: on queued skb use skb_header_pointer instead of pskb_may_pull
    
    [ Upstream commit 4a06fa67c4da20148803525151845276cdb995c1 ]
    
    Commit 2efd4fca703a ("ip: in cmsg IP(V6)_ORIGDSTADDR call
    pskb_may_pull") avoided a read beyond the end of the skb linear
    segment by calling pskb_may_pull.
    
    That function can trigger a BUG_ON in pskb_expand_head if the skb is
    shared, which it is when when peeking. It can also return ENOMEM.
    
    Avoid both by switching to safer skb_header_pointer.
    
    Fixes: 2efd4fca703a ("ip: in cmsg IP(V6)_ORIGDSTADDR call pskb_may_pull")
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Suggested-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 93d94fec94c7df51c7f36f45fdc18994073f47ee ......
	 orig commit -> 3dd1c9a1270736029ffca670e9bd0265f4120600 ......
checking 650321fe96150898c69c58c6684b33edbe689de1 ......
	 orig commit -> 38c0a74fe06da3be133cae3fb7bde6a9438e698b ......
checking 92f724130fac801b97aef580ae5e185a699661c4 ......
	 orig commit -> bc88ad2efd11f29e00a4fd60fcd1887abfe76833 ......
