Check from v4.9.95 to v4.9.96
Commit count: 95
checking 5cd35f3eb5384f30d1a10d87f088bacd8839c22b ......
checking 8d7f1fde9d8df8ae9393c6902470222305ac03b0 ......
	 orig commit -> 51d638b1f56a0bfd9219800620994794a1a2b219 ......
checking 18484eb932e2bdbdab83700c6d7d68f9f743f4c8 ......
	 orig commit -> 2e898e4c0a3897ccd434adac5abb8330194f527b ......
checking 71f24a91305670bb4f22f214608c2e75aa45f99e ......
	 orig commit -> 54a307ba8d3cd00a3902337ffaae28f436eeb1a4 ......
checking f4c86fa0e2c3ed3eb4fbbb145ce9dabeec12c2c7 ......
	 orig commit -> abc1be13fd113ddef5e2d807a466286b864caed3 ......
checking 858052b1f2f2d6a07af920b670a31fc8d5043755 ......
	 orig commit -> 1e6306652ba18723015d1b4967fe9de55f042499 ......
checking 3f68e22e9bd1f06a0b752c742bfab530fcd8bd74 ......
	 orig commit -> 16a34adb9392b2fe4195267475ab5b472e55292c ......
checking 463f845986289852fa7a38a5ae78216a64b569c6 ......
	 orig commit -> 4a3877c4cedd95543f8726b0a98743ed8db0c0fb ......
checking e2210c5414a8e05e14c5864180ec215dec343828 ......
	 orig commit -> 659038428cb43a66e3eff71e2c845c9de3611a98 ......
checking f3ba3eaaee8bc8c07d58d2a6050f9892ba01c306 ......
	 orig commit -> a24cd490739586a7d2da3549a1844e1d7c4f4fc4 ......
checking 02d20e670e6ba449ff2d75c3c91771b68543bb71 ......
	 orig commit -> c66b23c2840446a82c389e4cb1a12eb2a71fa2e4 ......
checking 8c72cf489860f43bc974de9ecbc594c567bbe49a ......
	 orig commit -> 44f06ba8297c7e9dfd0e49b40cbe119113cca094 ......
checking 22578e220a870d7e677839eab207185faec3144a ......
	 orig commit -> b8858581febb050688e276b956796bc4a78299ed ......
checking 73de98fb50b077934776563c97b75d6f764a2066 ......
	 orig commit -> 13a83eac373c49c0a081cbcd137e79210fe78acd ......
checking 95a9a529aeb82d88ca25449e1ebb25e5ecdafade ......
	 orig commit -> c96eebf07692e53bf4dd5987510d8b550e793598 ......
checking 6cd712bfbbf1957289ad906d4d6191c1a3fc31a1 ......
	 orig commit -> daf70d89f80c6e1772233da9e020114b1254e7e0 ......
checking 7177f0b3a8585687abf28234edb80fe209ac2f62 ......
	 orig commit -> 8a8158c85e1e774a44fbe81106fa41138580dfd1 ......
		 8a8158c85e1e774a44fbe81106fa41138580dfd1 has problem. Fixes commit -> 2f7619ae90bf78cf576b5e72087aab0435266fdb
148b9aba99e0bbadf361747d21456e1589015f74
checking 1179774213638107fcaf8745435e39cd27babddb ......
	 orig commit -> b3d7e55c3f886493235bfee08e1e5a4a27cbcce8 ......
checking d385cc6917c4fb27f883694b5f53253a289b60c8 ......
	 orig commit -> a955358d54695e4ad9f7d6489a7ac4d69a8fc711 ......
checking 1d49e2ab766df649c540959a96f1ab839471fbe8 ......
	 orig commit -> d848e5f8e1ebdb227d045db55fe4f825e82965fa ......
checking befd00cfc189672adfdf6850cf460a7f53c56cf0 ......
	 orig commit -> 0bb29a849a6433b72e249eea7695477b02056e94 ......
checking 4dfb3442bb7e1fb80515df4a199ca5a7a8edf900 ......
	 orig commit -> 43838a23a05fbd13e47d750d3dfd77001536dd33 ......
checking 2e2389a07923a888d6e22337391b08092f213416 ......
	 orig commit -> af52f9982e410edac21ca4b49563053ffc9da1eb ......
checking b291c272c1ff23206e8338444735e3825f757b35 ......
	 orig commit -> 8a56ef4f3ffba9ebf4967b61ef600b0a7ba10f11 ......
checking f93f5adacfd2cd1e4234b5c5fd6316124c728dc0 ......
	 orig commit -> 7ecb46e9ee9af18e304eb9e7d6804c59a408e846 ......
checking 9607290a18352cba4a7d015d826c1ce40bdb25bb ......
	 orig commit -> 85e290d92b4b794d0c758c53007eb4248d385386 ......
checking 7c320edaa4c8b5c864b11c5e5c51b9dfd36a19c4 ......
	 orig commit -> 5f9e93fed4d45e9a8f84728aff1a8f2ab8922902 ......
checking aab59482e65969b176e97bb6cff7e443d3115ec8 ......
	 orig commit -> 41212e2fe72b26ded7ed78224d9eab720c2891e2 ......
checking 267e6921ca7c7e776804a8be6aa53fca37d68fd6 ......
	 orig commit -> a20ee0b1f8b42e2568f3a4408003d22b2dfcc706 ......
checking 54279928a84d5fc6f9e15d43ad31170c7eae1c1d ......
	 orig commit -> 13b40935cf64f59b93cf1c716a2033488e5a228c ......
checking 68e3579a5fef4b45e14802808476baac5797e741 ......
	 orig commit -> 18db4b4e6fc31eda838dd1c1296d67dbcb3dc957 ......
checking ad811550b1248d19af77724b77cb83bf0ab8b5dc ......
	 orig commit -> e15dc99dbb9cf99f6432e8e3c0b3a8f7a3403a86 ......
checking 24fd21ae8ea69d9f9d25efb4292c46d5bc19e15d ......
	 orig commit -> f6d297df4dd47ef949540e4a201230d0c5308325 ......
checking 3724f9c7dd1e7373d5db4098b1e17a48b2fe2421 ......
	 orig commit -> 40cab6e88cb0b6c56d3f30b7491a20e803f948f6 ......
		 40cab6e88cb0b6c56d3f30b7491a20e803f948f6 has problem. Fixes commit -> f6d297df4dd47ef949540e4a201230d0c5308325
commit 24fd21ae8ea69d9f9d25efb4292c46d5bc19e15d
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Mar 27 14:32:23 2018 +0200

    ALSA: pcm: Fix mutex unbalance in OSS emulation ioctls
    
    commit f6d297df4dd47ef949540e4a201230d0c5308325 upstream.
    
    The previous fix 40cab6e88cb0 ("ALSA: pcm: Return -EBUSY for OSS
    ioctls changing busy streams") introduced some mutex unbalance; the
    check of runtime->oss.rw_ref was inserted in a wrong place after the
    mutex lock.
    
    This patch fixes the inconsistency by rewriting with the helper
    functions to lock/unlock parameters with the stream check.
    
    Fixes: 40cab6e88cb0 ("ALSA: pcm: Return -EBUSY for OSS ioctls changing busy streams")
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 159a13647f3fafa26809b939bd9a5f0a54c87118 ......
	 orig commit -> 02a5d6925cd34c3b774bdb8eefb057c40a30e870 ......
		 02a5d6925cd34c3b774bdb8eefb057c40a30e870 has problem. Fixes commit -> e15dc99dbb9cf99f6432e8e3c0b3a8f7a3403a86
5607dddbfca774fb38bffadcb077fe03aa4ac5c6
commit 43320b2902ab09647bab768ba00fbfdee14b66b6
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Mar 27 16:07:52 2018 +0300

    ALSA: pcm: potential uninitialized return values
    
    commit 5607dddbfca774fb38bffadcb077fe03aa4ac5c6 upstream.
    
    Smatch complains that "tmp" can be uninitialized if we do a zero size
    write.
    
    Fixes: 02a5d6925cd3 ("ALSA: pcm: Avoid potential races between OSS ioctls and read/write")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit ad811550b1248d19af77724b77cb83bf0ab8b5dc
Author: Takashi Iwai <tiwai@suse.de>
Date:   Sat Apr 7 11:48:58 2018 +0200

    ALSA: pcm: Fix endless loop for XRUN recovery in OSS emulation
    
    commit e15dc99dbb9cf99f6432e8e3c0b3a8f7a3403a86 upstream.
    
    The commit 02a5d6925cd3 ("ALSA: pcm: Avoid potential races between OSS
    ioctls and read/write") split the PCM preparation code to a locked
    version, and it added a sanity check of runtime->oss.prepare flag
    along with the change.  This leaded to an endless loop when the stream
    gets XRUN: namely, snd_pcm_oss_write3() and co call
    snd_pcm_oss_prepare() without setting runtime->oss.prepare flag and
    the loop continues until the PCM state reaches to another one.
    
    As the function is supposed to execute the preparation
    unconditionally, drop the invalid state check there.
    
    The bug was triggered by syzkaller.
    
    Fixes: 02a5d6925cd3 ("ALSA: pcm: Avoid potential races between OSS ioctls and read/write")
    Reported-by: syzbot+150189c103427d31a053@syzkaller.appspotmail.com
    Reported-by: syzbot+7e3f31a52646f939c052@syzkaller.appspotmail.com
    Reported-by: syzbot+4f2016cf5185da7759dc@syzkaller.appspotmail.com
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 43320b2902ab09647bab768ba00fbfdee14b66b6
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Mar 27 16:07:52 2018 +0300

    ALSA: pcm: potential uninitialized return values
    
    commit 5607dddbfca774fb38bffadcb077fe03aa4ac5c6 upstream.
    
    Smatch complains that "tmp" can be uninitialized if we do a zero size
    write.
    
    Fixes: 02a5d6925cd3 ("ALSA: pcm: Avoid potential races between OSS ioctls and read/write")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 8ede8ba723630f9200f72f5cb63900a42b5799f8 ......
	 orig commit -> c64ed5dd9feba193c76eb460b451225ac2a0d87b ......
checking 502b50e87038e63011dbe83f210292b1c505b6c9 ......
	 orig commit -> cf0d53ba4947aad6e471491d5b20a567cbe92e56 ......
checking 4076d92cc204fde02b07ca3a399c89d217c9ff0f ......
	 orig commit -> 977f6f68331f94bb72ad84ee96b7b87ce737d89d ......
checking e58d3bccad82019ec63a628dd52756c298bd2be1 ......
	 orig commit -> 55a5fcafe3a94e8a0777bb993d09107d362258d2 ......
checking a84a584c08783919a0e138e1e15ee2c45cdc0751 ......
	 orig commit -> cf1ba1d73a33944d8c1a75370a35434bf146b8a7 ......
checking f6ed0ff4c7de070c630eac654627ce5a402712db ......
	 orig commit -> 6225f9c64b40bc8a22503e9cda70f55d7a9dd3c6 ......
checking 6af2423153c430055c39947550ca341d75d0120f ......
	 orig commit -> 753872373b599384ac7df809aa61ea12d1c4d5d1 ......
checking 5971ee251010e1ce4969cded71800ce993a36a33 ......
	 orig commit -> ce33f284935e08229046b30635e6aadcbab02b53 ......
checking b2c89d89eefa43ab6dbfd09b3dc18f14125877f6 ......
	 orig commit -> 6a4a4595804548e173f0763a0e7274a3521c59a9 ......
checking 1b22bdc3a303d26329abf3abbb441f97cfaecc3b ......
	 orig commit -> 9593f4f56cf5d1c443f66660a0c7f01de38f979d ......
checking 4685f789b234f7e5e19f45b430becf1a723ce1d6 ......
	 orig commit -> a04f0017c22453613d5f423326b190c61e3b4f98 ......
checking 94911a0cded960b5e85f9ef33e9861007e84cd16 ......
	 orig commit -> bbe4b3af9d9e3172fb9aa1f8dcdfaedcb381fc64 ......
checking 2413ed888ab4c43311e5a16df3abdea2ab2df983 ......
	 orig commit -> 4d1a535b8ec5e74b42dfd9dc809142653b2597f6 ......
checking 8280752089fb63d8c8043878a2bb68ba6854a54b ......
	 orig commit -> 530ba6c7cb3c22435a4d26de47037bb6f86a5329 ......
checking 1c72e231eb06499e376842defa03e1e295d63ba0 ......
	 orig commit -> 78727137fdf49edf9f731bde79d7189067b4047a ......
checking a1ada79437d7120050c38db6501ac1de62474da9 ......
	 orig commit -> 4f8672201b7e7ed4f5f6c3cf6dcd080648580582 ......
checking 5d151871b1cb6338daac36e5c7c375c1f4b83ded ......
	 orig commit -> c5637476bbf9bb86c7f0413b8f4822a73d8d2d07 ......
checking 16757e775dd6db0fda7cf7da1eaa31d8e5a11ff1 ......
	 orig commit -> 3a148896b24adf8688dc0c59af54531931677a40 ......
checking f4374991ddd73e1b23a62decb9548a2d599716a4 ......
	 orig commit -> e68088e78d82920632eba112b968e49d588d02a2 ......
checking dd34b663a8a63050d87da428061b07a8253fa7ac ......
	 orig commit -> a820ccbe21e8ce8e86c39cd1d3bc8c7d1cbb949b ......
checking 4b37ec8703b3131c3f8b39735046c64d33ccb921 ......
	 orig commit -> a6544a624c3ff92a64e4aca3931fa064607bd3da ......
checking 8e455917885613ce6fdbbfb981364c983b29060d ......
	 orig commit -> 8435168d50e66fa5eae01852769d20a36f9e5e83 ......
checking 6b289a7c34d72212bcd5a8ab9b6a657f2f44f0ee ......
	 orig commit -> 8e4b5eae5decd9dfe5a4ee369c22028f90ab4c44 ......
checking c636feb8ffe56f1cc1fafce87a67b1020761d24d ......
	 orig commit -> 73fdad00b208b139cf43f3163fbc0f67e4c6047c ......
checking a06b798c309ed8c919522c639e89613a013c13c4 ......
	 orig commit -> 044e6e3d74a3d7103a0c8a9305dfd94d64000660 ......
checking 82aad4a72f154f48aacc6592779700b1bad0ae07 ......
	 orig commit -> 85e0c4e89c1b864e763c4e3bb15d0b6d501ad5d9 ......
checking bb6f26a637b4da6cb752c55635baa425d803f02d ......
	 orig commit -> 9f886f4d1d292442b2f22a0a33321eae821bde40 ......
checking 910d84009977441fcb5661683528f88ed1dcca93 ......
	 orig commit -> aa08192a254d362a4d5317647a81de6996961aef ......
checking c9bb6fb2df18eda60e8dc125232338a76ffb7163 ......
	 orig commit -> f2a659f7d8d5da803836583aa16df06bdf324252 ......
checking 2e9feaf9feb84ab387ee10d8ced7d77b745b25d9 ......
	 orig commit -> a01df75ce737951ad13a08d101306e88c3f57cb2 ......
checking 4b43f4139e4054bc06a1f92be3018ebb6326f73f ......
	 orig commit -> 6de0b13cc0b4ba10e98a9263d7a83b940720b77a ......
checking 10ab7c947d4921b962c7c2a6bffa2486d0cd127d ......
	 orig commit -> 3064a03b94e60388f0955fcc29f3e8a978d28f75 ......
checking 5aa8b5b8846e519015742c9592e50d2d13fa83de ......
	 orig commit -> 3b8070335f751aac9f1526ae2e012e6f5b8b0f21 ......
		 3b8070335f751aac9f1526ae2e012e6f5b8b0f21 has problem. Fixes commit -> c1d2a31397ec51f0370f6bd17b19b39152c263cb
commit 96c83fb2de4d45a9da51668e4a2f9aa0ac2c74ba
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Tue May 15 01:59:47 2018 +1000

    powerpc/powernv: Fix NVRAM sleep in invalid context when crashing
    
    commit c1d2a31397ec51f0370f6bd17b19b39152c263cb upstream.
    
    Similarly to opal_event_shutdown, opal_nvram_write can be called in
    the crash path with irqs disabled. Special case the delay to avoid
    sleeping in invalid context.
    
    Fixes: 3b8070335f75 ("powerpc/powernv: Fix OPAL NVRAM driver OPAL_BUSY loops")
    Cc: stable@vger.kernel.org # v3.2
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 892314137104e42fefab454e09de6c2e8ae4fabb ......
	 orig commit -> 34dd25de9fe3f60bfdb31b473bf04b28262d0896 ......
checking 59f404e2f21ce5d1de156a17a411b00591ea89b7 ......
	 orig commit -> 0bfdf598900fd62869659f360d3387ed80eb71cf ......
checking f3ccc325ffa4e966a44019fe1a679f251ff206b9 ......
	 orig commit -> 741de617661794246f84a21a02fc5e327bffc9ad ......
checking b599902c30803a6b7f9818e6dc4710d4a64f55af ......
	 orig commit -> ac75a041048b8c1f7418e27621ca5efda8571043 ......
		 ac75a041048b8c1f7418e27621ca5efda8571043 has problem. Fixes commit -> ef6eaf27274c0351f7059163918f3795da13199c
commit 814b4302fda0c4fc09b023e18ca813d88c3350b6
Author: Jason Andryuk <jandryuk@gmail.com>
Date:   Fri Jun 22 12:25:49 2018 -0400

    HID: i2c-hid: Fix "incomplete report" noise
    
    commit ef6eaf27274c0351f7059163918f3795da13199c upstream.
    
    Commit ac75a041048b ("HID: i2c-hid: fix size check and type usage") started
    writing messages when the ret_size is <= 2 from i2c_master_recv.  However, my
    device i2c-DLL07D1 returns 2 for a short period of time (~0.5s) after I stop
    moving the pointing stick or touchpad.  It varies, but you get ~50 messages
    each time which spams the log hard.
    
    [  95.925055] i2c_hid i2c-DLL07D1:01: i2c_hid_get_input: incomplete report (83/2)
    
    This has also been observed with a i2c-ALP0017.
    
    [ 1781.266353] i2c_hid i2c-ALP0017:00: i2c_hid_get_input: incomplete report (30/2)
    
    Only print the message when ret_size is totally invalid and less than 2 to cut
    down on the log spam.
    
    Fixes: ac75a041048b ("HID: i2c-hid: fix size check and type usage")
    Reported-by: John Smith <john-s-84@gmx.net>
    Cc: stable@vger.kernel.org
    Signed-off-by: Jason Andryuk <jandryuk@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking c4bc658f90b8e6614c6d55d211005d9c49b0c317 ......
	 orig commit -> 7ea884c77e5c97f1e0a1a422d961d27f78ca2745 ......
		 7ea884c77e5c97f1e0a1a422d961d27f78ca2745 has problem. Fixes commit -> 3995bbf53bd2047f2720c6fdd4bf38f6d942a0c0
commit a2b9a0def3e99bfa064364dc6c21b5eccb06db2e
Author: Geert Uytterhoeven <geert@linux-m68k.org>
Date:   Thu Apr 5 14:57:11 2018 +0200

    cifs: Use ULL suffix for 64-bit constant
    
    [ Upstream commit 3995bbf53bd2047f2720c6fdd4bf38f6d942a0c0 ]
    
    On 32-bit (e.g. with m68k-linux-gnu-gcc-4.1):
    
        fs/cifs/inode.c: In function ‘simple_hashstr’:
        fs/cifs/inode.c:713: warning: integer constant is too large for ‘long’ type
    
    Fixes: 7ea884c77e5c97f1 ("smb3: Fix root directory when server returns inode number of zero")
    Signed-off-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Steve French <stfrench@microsoft.com>
    Reviewed-by: Aurelien Aptel <aaptel@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
checking cd93ff92e1d71a2f13447ecc36e17e74bf897ef4 ......
	 orig commit -> cabdf83dadfb3d83eec31e0f0638a92dbd716435 ......
checking 73300bd1fdedcb4f0e78aab61737bda5bf7b0c24 ......
	 orig commit -> 64627388b50158fd24d6ad88132525b95a5ef573 ......
checking b3b0809ac25c3ffedc58e7f83bc01a03193e7834 ......
	 orig commit -> 7fafcfdf6377b18b2a726ea554d6e593ba44349f ......
checking a59ba739a13f010eaecdd7a97e94dd94edefbfd8 ......
	 orig commit -> 13d3047c81505cc0fb9bdae7810676e70523c8bf ......
checking e324a44b0443ec91c86b417f3a34792d1bf58f14 ......
	 orig commit -> bbf038618a24d72e2efc19146ef421bb1e1eda1a ......
checking cddf0e1ce6c7d68e2f6e004079396a238de5f86a ......
	 orig commit -> f00e71091ab92eba52122332586c6ecaa9cd1a56 ......
checking 9c78aeef4272a6ded4bbf500ae611050904daaa9 ......
	 orig commit -> c2d2e6738a209f0f9dffa2dc8e7292fc45360d61 ......
checking 34023ca384a75c064544b92bad7bd347afdb3067 ......
	 orig commit -> ce99319a182fe766be67f96338386f3ec73e321c ......
checking 61ec8502373923c3bcad5e3b35155922bfc07d75 ......
	 orig commit -> 9a06757dcc8509c162ac00488c8c82fc98e04227 ......
checking 50b4737023740a76641561ae9182485b998b1d85 ......
	 orig commit -> 6f4870753f29edf7dc39444246f9e39987b8b158 ......
checking 078728522c49bb3bc0413cf265d1c72b6c4bf81c ......
	 orig commit -> e8fd0adf105e132fd84545997bbef3d5edc2c9c1 ......
checking ba260ce74cb8acef791563a7d3f1445fe06d6805 ......
	 orig commit -> eaa358c7790338d83bb6a31258bdc077de120414 ......
checking a576d7fea68be666b2a0d2104ddf936d587e65de ......
	 orig commit -> af6f8529098aeb0e56a68671b450cf74e7a64fcd ......
checking 75e6359a1be39ae7cc964603a112f38b9110655a ......
	 orig commit -> a9f2a846f0503e7d729f552e3ccfe2279010fe94 ......
checking 570ef10de6304dc20239d30a47b36c12e341d4be ......
	 orig commit -> 3f05317d9889ab75c7190dcd39491d2a97921984 ......
checking 0df9b12d7790ccf259c24e8ad92abcfa8da2e0f7 ......
	 orig commit -> 60bb83b81169820c691fbfa33a6a4aef32aa4b0b ......
checking 52b329d678e8495bda4d943df6444403f41c57ff ......
	 orig commit -> 9ad553abe66f8be3f4755e9fa0a6ba137ce76341 ......
checking c64c4c81aed52fc84be225ce47863a41eb4f7bb6 ......
	 orig commit -> b5094b7f135be34630e3ea8a98fa215715d0f29d ......
checking 434a1dd2c0e4f6af3fa4ca9cc3e88bbf07b8f41c ......
	 orig commit -> 78a8dfbabbece22bee58ac4cb26cab10e7a19c5d ......
checking 00f308c0eea4d2f7bc5bb3b9d0947f2219f53760 ......
	 orig commit -> 29b7a6fa1ec07e8480b0d9caf635a4498a438bf4 ......
		 29b7a6fa1ec07e8480b0d9caf635a4498a438bf4 has problem. Fixes commit -> 6e7d80161066c99d12580d1b985cb1408bb58cf1
commit 9eb99e738beb405cb69ce0c244e6bb0ee9666588
Author: Richard Weinberger <richard@nod.at>
Date:   Wed May 16 22:17:03 2018 +0200

    ubi: fastmap: Cancel work upon detach
    
    commit 6e7d80161066c99d12580d1b985cb1408bb58cf1 upstream.
    
    Ben Hutchings pointed out that 29b7a6fa1ec0 ("ubi: fastmap: Don't flush
    fastmap work on detach") does not really fix the problem, it just
    reduces the risk to hit the race window where fastmap work races against
    free()'ing ubi->volumes[].
    
    The correct approach is making sure that no more fastmap work is in
    progress before we free ubi data structures.
    So we cancel fastmap work right after the ubi background thread is
    stopped.
    By setting ubi->thread_enabled to zero we make sure that no further work
    tries to wake the thread.
    
    Fixes: 29b7a6fa1ec0 ("ubi: fastmap: Don't flush fastmap work on detach")
    Fixes: 74cdaf24004a ("UBI: Fastmap: Fix memory leaks while closing the WL sub-system")
    Cc: stable@vger.kernel.org
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Cc: Martin Townsend <mtownsend1973@gmail.com>
    
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking cf1595d865e78fa2f5ecf314e403aa539d71529c ......
	 orig commit -> aac17948a7ce01fb60b9ee6cf902967a47b3ce26 ......
checking a7e19062d115e3acf71649a1fba6d5c7d65be3d1 ......
	 orig commit -> 28b0f8a6962a24ed21737578f3b1b07424635c9e ......
