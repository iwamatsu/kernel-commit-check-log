Check from v4.9.70 to v4.9.71
Commit count: 177
checking b632d710149f1a638ffa6e999cfbd9ee9fbdada6 ......
checking ed70a2212526bb26b5850f538b5a53793fdd4abf ......
	 orig commit -> ee0a47186e2fa9aa1c56cadcea470ca0ba8c8692 ......
checking 8f23eb16afd8f230f15ee020159469275adabd15 ......
	 orig commit -> 258bbb1b0e594ad5f5652cb526b3c63e6a7fad3d ......
checking 2eb165b9fbb722416252c054ac2ef2c3eb777460 ......
	 orig commit -> b4b678b06f6eef18bff44a338c01870234db0bc9 ......
		 b4b678b06f6eef18bff44a338c01870234db0bc9 has problem. Fixes commit -> 1f80bd6a6cc8358b81194e1f5fc16449947396ec
commit 2e6474b253556343e9b0f685a5824c86aebae763
Author: Alex Vesker <valex@mellanox.com>
Date:   Thu Dec 21 17:38:27 2017 +0200

    IB/ipoib: Fix lockdep issue found on ipoib_ib_dev_heavy_flush
    
    [ Upstream commit 1f80bd6a6cc8358b81194e1f5fc16449947396ec ]
    
    The locking order of vlan_rwsem (LOCK A) and then rtnl (LOCK B),
    contradicts other flows such as ipoib_open possibly causing a deadlock.
    To prevent this deadlock heavy flush is called with RTNL locked and
    only then tries to acquire vlan_rwsem.
    This deadlock is possible only when there are child interfaces.
    
    [  140.941758] ======================================================
    [  140.946276] WARNING: possible circular locking dependency detected
    [  140.950950] 4.15.0-rc1+ #9 Tainted: G           O
    [  140.954797] ------------------------------------------------------
    [  140.959424] kworker/u32:1/146 is trying to acquire lock:
    [  140.963450]  (rtnl_mutex){+.+.}, at: [<ffffffffc083516a>] __ipoib_ib_dev_flush+0x2da/0x4e0 [ib_ipoib]
    [  140.970006]
    but task is already holding lock:
    [  140.975141]  (&priv->vlan_rwsem){++++}, at: [<ffffffffc0834ee1>] __ipoib_ib_dev_flush+0x51/0x4e0 [ib_ipoib]
    [  140.982105]
    which lock already depends on the new lock.
    [  140.990023]
    the existing dependency chain (in reverse order) is:
    [  140.998650]
    -> #1 (&priv->vlan_rwsem){++++}:
    [  141.005276]        down_read+0x4d/0xb0
    [  141.009560]        ipoib_open+0xad/0x120 [ib_ipoib]
    [  141.014400]        __dev_open+0xcb/0x140
    [  141.017919]        __dev_change_flags+0x1a4/0x1e0
    [  141.022133]        dev_change_flags+0x23/0x60
    [  141.025695]        devinet_ioctl+0x704/0x7d0
    [  141.029156]        sock_do_ioctl+0x20/0x50
    [  141.032526]        sock_ioctl+0x221/0x300
    [  141.036079]        do_vfs_ioctl+0xa6/0x6d0
    [  141.039656]        SyS_ioctl+0x74/0x80
    [  141.042811]        entry_SYSCALL_64_fastpath+0x1f/0x96
    [  141.046891]
    -> #0 (rtnl_mutex){+.+.}:
    [  141.051701]        lock_acquire+0xd4/0x220
    [  141.055212]        __mutex_lock+0x88/0x970
    [  141.058631]        __ipoib_ib_dev_flush+0x2da/0x4e0 [ib_ipoib]
    [  141.063160]        __ipoib_ib_dev_flush+0x71/0x4e0 [ib_ipoib]
    [  141.067648]        process_one_work+0x1f5/0x610
    [  141.071429]        worker_thread+0x4a/0x3f0
    [  141.074890]        kthread+0x141/0x180
    [  141.078085]        ret_from_fork+0x24/0x30
    [  141.081559]
    
    other info that might help us debug this:
    [  141.088967]  Possible unsafe locking scenario:
    [  141.094280]        CPU0                    CPU1
    [  141.097953]        ----                    ----
    [  141.101640]   lock(&priv->vlan_rwsem);
    [  141.104771]                                lock(rtnl_mutex);
    [  141.109207]                                lock(&priv->vlan_rwsem);
    [  141.114032]   lock(rtnl_mutex);
    [  141.116800]
     *** DEADLOCK ***
    
    Fixes: b4b678b06f6e ("IB/ipoib: Grab rtnl lock on heavy flush when calling ndo_open/stop")
    Signed-off-by: Alex Vesker <valex@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
checking 0c70b35bf1583fa5fc9134b87d32cf0bc27d5023 ......
	 orig commit -> c0b64f58e8d49570aa9ee55d880f92c20ff0166b ......
checking 31eb4108e107aefc9cd5d662b3624533327848fd ......
	 orig commit -> dd6b9c2c332b40f142740d1b11fb77c653ff98ea ......
checking b64ab3ca9d31162cbdbd8acc2d5b68cf37302527 ......
	 orig commit -> abdc0eb06964fe1d2fea6dd1391b734d0590365d ......
checking 91e0cf85caea7f977361f662941100821370d74e ......
	 orig commit -> 3e351275655d3c84dc28abf170def9786db5176d ......
checking 64da4e8d00f16bc7db25f6d819c4beac2656a90f ......
	 orig commit -> 658e9a6dc1126f21fa417cd213e1cdbff8be0ba2 ......
checking 1cafdac8919136bd2ee6e0f607c49aacb9bb854b ......
	 orig commit -> 623401ee33e42cee64d333877892be8db02951eb ......
checking 8315bcf841ae26d266dbaecd8a47956632478799 ......
	 orig commit -> 08880f8e08cbd814e870e9d3ab9530abc1bce226 ......
checking 6641d3e307f5b42237a99f2aa961051a71c50393 ......
	 orig commit -> 2bf9806d4228f7a6195f8e03eda0479d2a93b411 ......
checking 28e006e14ff9b2fe55078c02bb92212b09664517 ......
	 orig commit -> 42c8eb3f6e15367981b274cb79ee4657e2c6949d ......
checking 04d5a2d5d2d079ce5966d7e67324c9c4f648c951 ......
	 orig commit -> 99260132fde7bddc6e0132ce53da94d1c9ccabcb ......
checking c744ecec01ae6a92541c381d3548f8753aa50ba2 ......
	 orig commit -> 909cf3e16a5274fe2127cf3cea5c8dba77b2c412 ......
checking f39486bd37ee3edd8658aff1226337c47e4ba32e ......
	 orig commit -> 235b6003fb28f0dd8e7ed8fbdb088bb548291766 ......
checking 4fdb10391bcafe698f06dd105b0d829744eb1926 ......
	 orig commit -> 1c363531dd814dc4fe10865722bf6b0f72ce4673 ......
checking afeeff4d6156b4965af9cf30ba05b05f04b9c7b0 ......
	 orig commit -> bd3486ded7a0c313a6575343e6c2b21d14476645 ......
checking 92ad6c13e17ebea6175b978dc0f5b485e7e68cf1 ......
	 orig commit -> c79dde629d2027ca80329c62854a7635e623d527 ......
checking 421910e924b63f2ccd4d433c77c5cd88063546ba ......
	 orig commit -> fb2c1934f30577756e55e24e8870b45c78da3bc2 ......
checking 7745382fe86ce5354dc459948c086d3b5778fb9d ......
	 orig commit -> 05c14c03138532a3cb2aa29c2960445c8753343b ......
checking ab9d2571149322120efcf3d6ce9c24003c946ca1 ......
	 orig commit -> dfb2e6f46b3074eb85203d8f0888b71ec1c2e37a ......
checking 1723d6668df5107c6026cbbf7afd2c615d74e006 ......
	 orig commit -> 55ca38b4255bb336c2d35990bdb2b368e19b435a ......
checking 237e053346f1b049ca9f571040c51c61f0740766 ......
	 orig commit -> 16b6c8bb687cc3bec914de09061fcb8411951fda ......
checking 8f84f861f99c44f03f5ed57b40e3bfe951cbae3a ......
	 orig commit -> 35fb2a88ed4b77356fa679a8525c869a3594e287 ......
checking 769bca9339f0775aa2985d4cae9be0e0d72092af ......
	 orig commit -> 5e422f5e4fd71d18bc6b851eeb3864477b3d842e ......
checking c82209949bba864177300a681e0c736f982c87ab ......
	 orig commit -> 9f2a4505800607e537e9dd9dea4f55c4b0c30c7a ......
checking fc4177eacfa6e95a243402790b362736879f1cfd ......
	 orig commit -> 4dc12ffeaeac939097a3f55c881d3dc3523dff0c ......
checking 6a559523ee6626d191be1da9031845c368e4a6a9 ......
	 orig commit -> 2dd4122854f697afc777582d18548dded03ce5dd ......
checking e2fce5a5578d175cd61822473228ab454782bec7 ......
	 orig commit -> 163ca80013aafb6dc9cb295de3db7aeab9ab43f8 ......
checking 7fab68e1f7308b2b7e3ebdd2483eb7a9572ccec5 ......
	 orig commit -> 9ca2e97fa3c3216200afe35a3b111ec51cc796d2 ......
checking b7ada2c0ea291e7bf22b51745afd9f1ccfc91292 ......
	 orig commit -> fd9dde6abcb9bfe6c6bee48834e157999f113971 ......
checking 52aaa748a948a1bd50fa2ef0d2b9ffad11b0e672 ......
	 orig commit -> 00f9203119dd2774564407c7a67b17d81916298b ......
checking 9102ed6a5f6a53434f69264ac8457994fde14a88 ......
	 orig commit -> c157313791a999646901b3e3c6888514ebc36d62 ......
checking c2a0531f59c363fd5b50be46b97248091b13484b ......
	 orig commit -> 330a4db89d39a6b43f36da16824eaa7a7509d34d ......
checking 75f66eeae657688f1e600214ae297422834d3c43 ......
	 orig commit -> cc555b09d8c3817aeebda43a14ab67049a5653f7 ......
checking 026ffaf65879b3ecc12ffa9c45dfa5894370bd60 ......
	 orig commit -> e33d7c56450b0a5c7290cbf9e1581fab5174f552 ......
checking d8914530f247900885850af7cccf81a2b33907b9 ......
	 orig commit -> 07209fcf33542c1ff1e29df2dbdf8f29cdaacb10 ......
checking 019433db872f9032cabd2a4a0fbd3df2bb14f539 ......
	 orig commit -> 21781e87881f9c420871b1d1f3f29d4cd7bffb10 ......
checking cf16dac8bd9868cf22203ac498e8e997ad7b0ca1 ......
	 orig commit -> f02b2320b27c16b644691267ee3b5c110846f49e ......
checking 27f5597c98590cdd01f2c9bebbf36cb4bce28253 ......
	 orig commit -> 54eff2264d3e9fd7e3987de1d7eba1d3581c631e ......
checking 54809e38a6298fde41c0b72c2423f5d7c9e847fe ......
	 orig commit -> d2a3671ebe6479483a12f94fcca63c058d95ad64 ......
checking 47b63ea40ee158fbd032047935cf8b4d388ccd24 ......
	 orig commit -> c68ee58d9ee7b856ac722f18f4f26579c8fbd2b4 ......
checking d6b6302c36b5459f3f2fa8d5e978b3e25f7e2723 ......
	 orig commit -> c955bf3998efa3355790a4d8c82874582f1bc727 ......
checking 2850c3ec0d25a4f729bd7f2212e178c9303e697a ......
	 orig commit -> 592e254502041f953e84d091eae2c68cba04c10b ......
checking 18498f1c7089035faba2bc9ba64c5c96542ae0c4 ......
	 orig commit -> 7aacbfcb331ceff3ac43096d563a1f93ed46e35e ......
checking 2ed46cbf23fc48ea63e3a3eaa820de5d54534cb6 ......
	 orig commit -> c7f5828bf77dcbd61d51f4736c1d5aa35663fbb4 ......
checking c843e9f8f97ff0d7c3a8232a314b20c1328ba697 ......
	 orig commit -> 350976ae21873b0d36584ea005076356431b8f79 ......
checking 03bfadfb0d7990bf558dabd6b26e4f06bc32c45b ......
	 orig commit -> b92b4fb5c14257c0e7eae291ecc1f7b1962e1699 ......
checking cb0acb37010c216e4781224ad4ab4c12ca9cb5fe ......
	 orig commit -> 39b4954c0a1556f8f7f1fdcf59a227117fcd8a0b ......
checking dcdca123814c5303f0e4d0fba67756d35bb0fd1f ......
	 orig commit -> 594e25e73440863981032d76c9b1e33409ceff6e ......
checking 998201fdc5c9144a2dfaec8811a722c3c5e731d3 ......
	 orig commit -> 24528f089d0a444070aa4f715ace537e8d6bf168 ......
	 orig commit -> d2843c173ee53cf4c12e7dfedc069a5bc76f0ac5 ......
checking a4f54ec403da9f5eafaba60d67ae8b2613a1bae5 ......
	 orig commit -> 12d5a43b2dffb6cd28062b4e19024f7982393288 ......
checking e086a82a926ace86fc14da0442437c2024d68001 ......
	 orig commit -> cfe2b621bb18d86e93271febf8c6e37622da2d14 ......
checking abc4b4420af8d2d31fe38dddf998855f5cf9d8dc ......
	 orig commit -> 6cc8cbbc8868033f279b63e98b26b75eaa0006ab ......
checking 6e5a846d5172c5225bda764797a07c828b5b2650 ......
	 orig commit -> 6b148a7ce72a7f87c81cbcde48af014abc0516a9 ......
checking d7e7c431d62101505a6a0321986dba498252fd7f ......
	 orig commit -> 71e24d7731a2903b1ae2bba2b2971c654d9c2aa6 ......
checking a463f9c5dfd1bb62f128e6883103117af6f3db1f ......
	 orig commit -> c5504f724c86ee925e7ffb80aa342cfd57959b13 ......
checking b3b6d1eea0de7115353a3706e5b0c3ff56be0663 ......
	 orig commit -> 395df08d2e1de238a9c8c33fdcd0e2160efd63a9 ......
checking 9a4bf05126f42c2632729ab0da503021d74ed454 ......
	 orig commit -> a20c7f36bd3d20d245616ae223bb9d05dfb6f050 ......
		 a20c7f36bd3d20d245616ae223bb9d05dfb6f050 has problem. Fixes commit -> fc110ebdd014dd1368c98e7685b47789c31fab42
c2deae44616dab0112d965a0dc72d053b5727b4b
commit 0e2bc507f242e10c544243b53d8613133cd741d9
Author: Koen Vandeputte <koen.vandeputte@ncentric.com>
Date:   Wed Mar 7 10:46:39 2018 -0600

    PCI: dwc: Fix enumeration end when reaching root subordinate
    
    commit fc110ebdd014dd1368c98e7685b47789c31fab42 upstream.
    
    The subordinate value indicates the highest bus number which can be
    reached downstream though a certain device.
    
    Commit a20c7f36bd3d ("PCI: Do not allocate more buses than available in
    parent") ensures that downstream devices cannot assign busnumbers higher
    than the upstream device subordinate number, which was indeed illogical.
    
    By default, dw_pcie_setup_rc() inits the Root Complex subordinate to a
    value of 0x01.
    
    Due to this combined with above commit, enumeration stops digging deeper
    downstream as soon as bus num 0x01 has been assigned, which is always the
    case for a bridge device.
    
    This results in all devices behind a bridge bus remaining undetected, as
    these would be connected to bus 0x02 or higher.
    
    Fix this by initializing the RC to a subordinate value of 0xff, which is
    not altering hardware behaviour in any way, but informs probing function
    pci_scan_bridge() later on which reads this value back from register.
    
    The following nasty errors during boot are also fixed by this:
    
      pci_bus 0000:02: busn_res: can not insert [bus 02-ff] under [bus 01] (conflicts with (null) [bus 01])
      ...
      pci_bus 0000:03: [bus 03] partially hidden behind bridge 0000:01 [bus 01]
      ...
      pci_bus 0000:04: [bus 04] partially hidden behind bridge 0000:01 [bus 01]
      ...
      pci_bus 0000:05: [bus 05] partially hidden behind bridge 0000:01 [bus 01]
      pci_bus 0000:02: busn_res: [bus 02-ff] end is updated to 05
      pci_bus 0000:02: busn_res: can not insert [bus 02-05] under [bus 01] (conflicts with (null) [bus 01])
      pci_bus 0000:02: [bus 02-05] partially hidden behind bridge 0000:01 [bus 01]
    
    Fixes: a20c7f36bd3d ("PCI: Do not allocate more buses than available in
    parent")
    Tested-by: Niklas Cassel <niklas.cassel@axis.com>
    Tested-by: Fabio Estevam <fabio.estevam@nxp.com>
    Tested-by: Sebastian Reichel <sebastian.reichel@collabora.co.uk>
    Signed-off-by: Koen Vandeputte <koen.vandeputte@ncentric.com>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Acked-by: Lucas Stach <l.stach@pengutronix.de>
    Cc: stable@vger.kernel.org      # v4.15+
    Cc: Binghui Wang <wangbinghui@hisilicon.com>
    Cc: Jesper Nilsson <jesper.nilsson@axis.com>
    Cc: Jianguo Sun <sunjianguo1@huawei.com>
    Cc: Jingoo Han <jingoohan1@gmail.com>
    Cc: Kishon Vijay Abraham I <kishon@ti.com>
    Cc: Lucas Stach <l.stach@pengutronix.de>
    Cc: Mika Westerberg <mika.westerberg@linux.intel.com>
    Cc: Minghuan Lian <minghuan.Lian@freescale.com>
    Cc: Mingkai Hu <mingkai.hu@freescale.com>
    Cc: Murali Karicheri <m-karicheri2@ti.com>
    Cc: Pratyush Anand <pratyush.anand@gmail.com>
    Cc: Richard Zhu <hongxing.zhu@nxp.com>
    Cc: Roy Zang <tie-fei.zang@freescale.com>
    Cc: Shawn Guo <shawn.guo@linaro.org>
    Cc: Stanimir Varbanov <svarbanov@mm-sol.com>
    Cc: Thomas Petazzoni <thomas.petazzoni@free-electrons.com>
    Cc: Xiaowei Song <songxiaowei@hisilicon.com>
    Cc: Zhou Wang <wangzhou1@hisilicon.com>
    [fabio: adapted to the file location of 4.9 kernel]
    Signed-off-by: Fabio Estevam <fabio.estevam@nxp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 29a404be7b30237e0894057422407722d3f8bf45 ......
	 orig commit -> cd77b5ce208c153260ed7882d8910f2395bfaabd ......
		 cd77b5ce208c153260ed7882d8910f2395bfaabd has problem. Fixes commit -> 349524bc0da698ec77f2057cf4a4948eb6349265
commit 0c8b8d37c85805ebc47a3e6a5f799bad4de8328e
Author: Benjamin Herrenschmidt <benh@kernel.crashing.org>
Date:   Wed Jan 10 17:10:12 2018 +1100

    powerpc: Don't preempt_disable() in show_cpuinfo()
    
    commit 349524bc0da698ec77f2057cf4a4948eb6349265 upstream.
    
    This causes warnings from cpufreq mutex code. This is also rather
    unnecessary and ineffective. If we really want to prevent concurrent
    unplug, we could take the unplug read lock but I don't see this being
    critical.
    
    Fixes: cd77b5ce208c ("powerpc/powernv/cpufreq: Fix the frequency read by /proc/cpuinfo")
    Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Acked-by: Michal Suchanek <msuchanek@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking f44d28e0348dbb081784ab02be57954d75efa13e ......
	 orig commit -> 3ad3f8ce50914288731a3018b27ee44ab803e170 ......
checking 5a7192bc389ea5ac194d046d6a218b7431680a31 ......
	 orig commit -> 288e7560e4d3e259aa28f8f58a8dfe63627a1bf6 ......
checking 03a48dc96505f5b900e44d50e69ea3ee3686c279 ......
	 orig commit -> f8e066521192c7debe59127d90abbe2773577e25 ......
checking 9146b10f8cd64c2e467c8f98ccb19dcb15812e83 ......
	 orig commit -> a3350f9c57ffad569c40f7320b89da1f3061c5bb ......
checking cf53526f3312f972043d0c6fa745cfb9f777a0c9 ......
	 orig commit -> 8cae353e6b01ac3f18097f631cdbceb5ff28c7f3 ......
checking 90e2591f6f3fd15ac766ffbaed119f43f01fef33 ......
	 orig commit -> 451f130602619a17c8883dd0b71b11624faffd51 ......
checking 92c3c7db8336f6678b31ee0d08ecf3bab81a80ff ......
	 orig commit -> c98769475575c8a585f5b3952f4b5f90266f699b ......
checking aecce5fc047a99c057931f08977ba6042bb931c4 ......
	 orig commit -> ac831a379d34109451b3c41a44a20ee10ecb615f ......
checking 0312ab0f0e437cadb9eabef72a1e26a676d2dd64 ......
	 orig commit -> cbad52e92ad7f01f0be4ca58bde59462dc1afe3a ......
checking da73389e8aa7975a46b9e85234fcbd7885d0eabd ......
	 orig commit -> 7da85fbf1c87d4f73621e0e7666a3387497075a9 ......
checking e15628b293a7dad278d5bbf7d56a539858b0be8f ......
	 orig commit -> c962cff17dfa11f4a8227ac16de2b28aea3312e4 ......
checking 25b0b3f2373d31d40151b0fbdf35c0035d332a61 ......
	 orig commit -> 760bf578edf8122f2503a3a6a3f4b0de3b6ce0bb ......
checking 892e4f9bc2e218b0126bb4ae7191be366fb4b421 ......
	 orig commit -> d7175373f2745ed4abe5b388d5aabd06304f801e ......
checking 0d34f4770ea11c92af2c6a15c73aaebc75ea94ed ......
	 orig commit -> 207ee84133c00a8a2a5bdec94df4a5b37d78881c ......
checking 8f60ef94477cb0dd3023b337640ea634886ac1d1 ......
	 orig commit -> e1699d2d7bf6e6cce3e1baff19f9dd4595a58664 ......
checking 5d460d359abefe59e1cac738d37296f3cd4bc1f8 ......
	 orig commit -> 033853325fe3bdc70819a8b97915bd3bca41d3af ......
		 033853325fe3bdc70819a8b97915bd3bca41d3af has problem. Fixes commit -> 943cff67b842839f4f35364ba2db5c2d3f025d94
commit 65f27a3fac4c1c43cd334df47c70a7ca4658d40c
Author: Trond Myklebust <trond.myklebust@hammerspace.com>
Date:   Tue Sep 18 10:07:44 2018 -0400

    NFSv4.1: Fix the r/wsize checking
    
    commit 943cff67b842839f4f35364ba2db5c2d3f025d94 upstream.
    
    The intention of nfs4_session_set_rwsize() was to cap the r/wsize to the
    buffer sizes negotiated by the CREATE_SESSION. The initial code had a
    bug whereby we would not check the values negotiated by nfs_probe_fsinfo()
    (the assumption being that CREATE_SESSION will always negotiate buffer values
    that are sane w.r.t. the server's preferred r/wsizes) but would only check
    values set by the user in the 'mount' command.
    
    The code was changed in 4.11 to _always_ set the r/wsize, meaning that we
    now never use the server preferred r/wsizes. This is the regression that
    this patch fixes.
    Also rename the function to nfs4_session_limit_rwsize() in order to avoid
    future confusion.
    
    Fixes: 033853325fe3 (NFSv4.1 respect server's max size in CREATE_SESSION")
    Cc: stable@vger.kernel.org # v4.11+
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 88af4e34771c88a09ed722bbf4346a2ddfee6dbe ......
	 orig commit -> 822f5845f710e57d7e2df1fd1ee00d6e19d334fe ......
checking e30b840d466898a02df6986dbb633b967f0ea594 ......
	 orig commit -> e7ede72a6d40cb3a30c087142d79381ca8a31dab ......
checking 2a47e7de0822ec4794c6a44d8a43c66c49f4d355 ......
	 orig commit -> a4a3e061149f09c075f108b6f1cf04d9739a6bc2 ......
checking 70f450fc8610464d4ac2274b403b8b15797c27af ......
	 orig commit -> 5362544bebe85071188dd9e479b5a5040841c895 ......
		 5362544bebe85071188dd9e479b5a5040841c895 has problem. Fixes commit -> a8983d01f9b7d600fbdb3916899edf395954cc83
checking 3d57ec51d204d220d0eff1e903fb58af86a889de ......
	 orig commit -> 4d4a6ac73e7466c2085c307fac41f74ce4568a45 ......
checking 42b6d6e824d349eef8a3d1925a2667564a31b8b8 ......
	 orig commit -> 61733c91c454a61be0ffc93fe46a5d5f2f048c1c ......
checking fd27dbcae9371d0f15b3f0fcb69a544e41d819ba ......
	 orig commit -> 4cbe4dac82e423ecc9a0ba46af24a860853259f4 ......
checking 65bfe003dcebd1144edacedb43c2f96d813bab79 ......
	 orig commit -> b25634e2a051bef4b2524b11adddfbfa6448f6cd ......
checking 571e47760de55281834f28a54f75d51285e7787d ......
	 orig commit -> d11ea004a458b982e19b188c386e25a9b66ec446 ......
checking af0cee086b0920612de5d6ad2a8f406792b5aa9d ......
	 orig commit -> e4c5d3762e2d6d274bd1cc948c47063becfa2103 ......
checking a8939aac82b0802fa66ca6455ed8bc88913556cf ......
	 orig commit -> 954cd6dc02a65065aecb7150962c0870c5b0e322 ......
checking d43dda072544ecf7890eab6a920fb602c9aafa63 ......
	 orig commit -> 7286a35e893176169b09715096a4aca557e2ccd2 ......
checking 856bb4b609ee1cac2a5c74a30c40ad82e782dabf ......
	 orig commit -> 6d06b0d25209c80e99c1e89700f1e09694a3766b ......
checking 833acb3e09dba37c277ed16bc46792c310066264 ......
	 orig commit -> ab94f5d0dd6fd82e7eeca5e7c8096eaea0a0261f ......
checking a3e7a29abf0bf205292ee63bd5d1de54aaa6d18f ......
	 orig commit -> 70af0e3bd65142f9e674961c975451638a7ce1d5 ......
checking ab239061161929a3aa048cb514b0183b8742b04c ......
	 orig commit -> 1157f153f37a8586765034470e4f00a4a6c4ce6f ......
checking 972e7b7cbf5c82e9b0b963c9443a30dd3354687b ......
	 orig commit -> 146a1192783697810b63a1e41c4d59fc93387340 ......
checking 9329ae4cb10e2563b8ec15a3d6a2a15dfe16fd3d ......
	 orig commit -> 56e714312e7dbd6bb83b2f78d3ec19a404c7649f ......
checking 7da1b85a75d4dd9b090a242ea162f27d2aea7518 ......
	 orig commit -> 8a79790bf0b7da216627ffb85f52cfb4adbf1e4e ......
checking 7286fad1570444b924568b13994843ab28b55dd4 ......
	 orig commit -> 58fed94dfb17e89556b5705f20f90e5b2971b6a1 ......
checking eaaad7646d3de73ca30653e635261827242be124 ......
	 orig commit -> bcd89270d93b7edebb5de5e5e7dca1a77a33496e ......
checking 900048089cc135fea39452ec32aa44415e1c8dba ......
	 orig commit -> 627f46943ff90bcc32ddeb675d881c043c6fa2ae ......
checking ba47c159748068a3371fdc0d77c7c1dcef2b7271 ......
	 orig commit -> 6186f0788b31f44affceeedc7b48eb10faea120d ......
checking c250fae9ad4bb1d629b8451c2e07b300e0fb8bb8 ......
	 orig commit -> 29c8bbbd6e21daa0997d1c3ee886b897ee7ad652 ......
checking b29c7b7c62d5aa8ba3748c6dfebeee19c279fc14 ......
	 orig commit -> 66822d815ae61ecb2d9dba9031517e8a8476969d ......
checking 2a84fce9b0396b62c6e3020b5fb9f5378697b6ae ......
	 orig commit -> 40ceda09c8c84694c2ca6b00bcc6dc71e8e62d96 ......
checking 28714e962a719d1898b6cff5d51352bac2135534 ......
	 orig commit -> 2317d5f1c34913bac5971d93d69fb6c31bb74670 ......
checking a2e29113f1abe5299c0af6ab841cbdddfd427fcf ......
	 orig commit -> df8eac8cafce7d086be3bd5cf5a838fa37594dfb ......
		 df8eac8cafce7d086be3bd5cf5a838fa37594dfb has problem. Fixes commit -> ae83b56a56f8d9643dedbee86b457fa1c5d42f59
commit 1ad4f2872c3b93216313a18bbf6e9f6d90e573d3
Author: Xunlei Pang <xlpang@redhat.com>
Date:   Wed May 10 21:03:37 2017 +0800

    sched/deadline: Zero out positive runtime after throttling constrained tasks
    
    commit ae83b56a56f8d9643dedbee86b457fa1c5d42f59 upstream.
    
    When a contrained task is throttled by dl_check_constrained_dl(),
    it may carry the remaining positive runtime, as a result when
    dl_task_timer() fires and calls replenish_dl_entity(), it will
    not be replenished correctly due to the positive dl_se->runtime.
    
    This patch assigns its runtime to 0 if positive after throttling.
    
    Signed-off-by: Xunlei Pang <xlpang@redhat.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Acked-by: Daniel Bristot de Oliveira <bristot@redhat.com>
    Cc: Juri Lelli <juri.lelli@arm.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Luca Abeni <luca.abeni@santannapisa.it>
    Cc: Mike Galbraith <efault@gmx.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: df8eac8cafce ("sched/deadline: Throttle a constrained deadline task activated after the deadline)
    Link: http://lkml.kernel.org/r/1494421417-27550-1-git-send-email-xlpang@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 9cc56a00eab7604f2c99ce27665dbb4fa9fa3280 ......
	 orig commit -> 5ac69d37784b237707a7b15d199cdb6c6fdb6780 ......
checking 0a4d4dac5e342889331a88e70ee24f29c7b64873 ......
	 orig commit -> dcc3b5ffe1b32771c9a22e2c916fb94c4fcf5b79 ......
checking 8d3a318194ec6a3c52384cbc63894e8dfcc15c9b ......
	 orig commit -> 9a3fcf912ef7f5c6e18f9af6875dd13f7311f7aa ......
checking a524bb57dd367c299b6c61ff39df6328ae49ed08 ......
	 orig commit -> e9c18ae6eb2b312f16c63e34b43ea23926daa398 ......
checking da626b13ce329cb2629897251226ca8be54ab919 ......
	 orig commit -> 0f424de1fd9bc4ab24bd1fe5430ab5618e803e31 ......
checking 1867eb805091fbcd654161dbb15acfe3b92f1599 ......
	 orig commit -> fe8daf5fa715f7214952f06a387e4b7de818c5be ......
checking 91510a623baa8c3be2033e42634ebc837e819635 ......
	 orig commit -> 2ef2884980873081a4edae92f9d88dd580c85f6e ......
checking 0f07e7611184cd78a26dd1fbf13513264896cdac ......
	 orig commit -> 87b9e6aa87d9411f1059aa245c0c79976bc557ac ......
checking c81410a4353d45766564ba6af9a067d33d1525d7 ......
	 orig commit -> 85b29008d8af6d94a0723aaa8d93cfb6e041158b ......
		 85b29008d8af6d94a0723aaa8d93cfb6e041158b has problem. Fixes commit -> eb94588dabec82e012281608949a860f64752914
commit 997231f9fd7a4a8ad7c862736ab571e99d3800cb
Author: Tomas Henzl <thenzl@redhat.com>
Date:   Mon Mar 20 16:42:48 2017 +0100

    scsi: hpsa: fix volume offline state
    
    commit eb94588dabec82e012281608949a860f64752914 upstream.
    
    In a previous patch a hpsa_scsi_dev_t.volume_offline update line has
    been removed, so let us put it back..
    
    Fixes: 85b29008d8 (hpsa: update check for logical volume status)
    Signed-off-by: Tomas Henzl <thenzl@redhat.com>
    Acked-by: Don Brace <don.brace@microsemi.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 8652baa5a31d9f65f93464d27d9a330e3dee6191 ......
	 orig commit -> 62a10498afb27370ec6018e9d802b74850fd8d9a ......
checking fd2530a4ee62c17bc8e8715cc6f449c1a1f7f212 ......
	 orig commit -> 154e67cd8e8f964809d0e75e44bb121b169c75b3 ......
checking 18b39b61b2c66556396f8584f0769f221d3383f6 ......
	 orig commit -> 340837f985c2cb87ca0868d4aa9ce42b0fab3a21 ......
checking 3544f57578a6110f14e837c2a002a8eadad510cf ......
	 orig commit -> 655d9ca9ac075da1ef2a45012ba48a39f6eb1f58 ......
checking 4c9c0971271dfcc5f0e74232446f938e2bed717b ......
	 orig commit -> 1df2adedcce17ad4a39fba74f0e2b611f797fe10 ......
checking ac04ab9624b5337628a8a5b96eee81a6fee704e5 ......
	 orig commit -> 752ecb2da11124a948567076b60767dc8034cfa5 ......
checking 8de6d7b28d2f135838275258b715a52db27fdb1c ......
	 orig commit -> f3e48119b97f56fb09310c95d49da122a27003d7 ......
checking fddc3df7647e796c8947215a281db95109d17ac1 ......
	 orig commit -> e9093b1183bbac462d2caef3eac165778c0b1bf1 ......
checking 4c8b4e60b5755b65c39db2adcb3cc5ba293e118e ......
	 orig commit -> f004ec065b4879d6bc9ba0211af2169b3ce3097f ......
checking 6c548e90a0bcfc8beb29ccb0de5d7d40efb41da9 ......
	 orig commit -> 37c343b4f4e70e9dc328ab04903c0ec8d154c1a4 ......
checking 889163d75fe5e0cb4ead674851e08c4e706d645c ......
	 orig commit -> fa23b9d1b89fdc34f296f02e496a20aeff5736be ......
checking e30ccb5f1c7e00ee189a0991e633b3034801899c ......
	 orig commit -> 23f963e91fd81f44f6b316b1c24db563354c6be8 ......
checking 46cbe3f51c511b648de0220b14ab4f5832f00020 ......
	 orig commit -> 6e526fdff7be4f13b24f929a04c0e9ae6761291e ......
checking 2e70c4d5de8751df5d14a578459a58ef0471e1ef ......
	 orig commit -> 4a3a485b1ed0e109718cc8c9d094fa0f552de9b2 ......
checking d28046fb8c435fc63f51dca30cdeb423d8ab4479 ......
	 orig commit -> 0067d4b020ea07a58540acb2c5fcd3364bf326e0 ......
checking 143d13d1e6c0a9ea7e6e86a0279907b174a42b4d ......
	 orig commit -> a1c2ff53726907aff5feb37e4cfd45c1ff626431 ......
checking 97b75dad9dd1bc352e199d15516978edb06792fd ......
	 orig commit -> 4ca60d08cbe65f501baad64af50fceba79c19fbb ......
checking 38780b9ae45a40f0f39f0279c381397fb910b072 ......
	 orig commit -> 9fa1d7537242bd580ffa99c4725a0407096aad26 ......
checking 8fb782bbd21214a211e8e05dd0230ddd9b255e5e ......
	 orig commit -> a4c2a13129f7c5bcf81704c06851601593303fd5 ......
checking 817f60ccf72cf7d98c4a96d408660bbbcb495489 ......
	 orig commit -> 800a938f0bf9130c8256116649c0cc5806bfb2fd ......
checking 0154269f9c122440b841e06c2c16cde10c26bf7b ......
	 orig commit -> 928c6fb3a9bfd6c5b287aa3465226add551c13c0 ......
checking 063c753ef78bee13265bf02df185704e8fdff1f9 ......
	 orig commit -> 607523d19c9d67ba4cf7bdaced644f11ed04992c ......
checking 3d40364d333e3de4cc2e49c80ad8ddb242c46315 ......
	 orig commit -> a03849e7210277fa212779b7cd9c30e1ab6194b2 ......
checking 721c136ac2780e519cd44940ba47f08cdeafec9d ......
	 orig commit -> 5d47f6c89d568ab61712d8c40676fbb020b68752 ......
checking 248cbd97be813adfa675d48e1e702f9d5e7ffca8 ......
	 orig commit -> af36370569eb37420e1e78a2e60c277b781fcd00 ......
checking 515d78dc0a89a14c10ce3b3f007c99508aa65e61 ......
	 orig commit -> 702f2ac87a9a8da23bf8506466bc70175fc970b2 ......
checking e85b9bc29b04bbde927c2c556e0832327bc62279 ......
	 orig commit -> 6be371b053dc86f11465cc1abce2e99bda0a0574 ......
checking f9ac24794f2e688336c64686129df6d2133c9c0b ......
	 orig commit -> 07c52d6a0b955a8a28834f9354793cfc4b81d0e9 ......
checking 4c3727f6add57b03197b25af01dd1aa26090ed00 ......
	 orig commit -> 7627409cc4970e8c8b9de6945ad86a575290a94e ......
checking 66e522ab02cc7ae47cb8f1247e7b74efdc16072e ......
	 orig commit -> eca4bad73409aedc6ff22f823c18b67a4f08c851 ......
checking dc8d63c43af042d5740c29f23906788ffbb6eaf4 ......
	 orig commit -> 1ad3d225e5a40ca6c586989b4baaca710544c15a ......
checking bb5c42a5b1d2b484939c1a1d18306853db8fcba9 ......
	 orig commit -> ffff71328a3c321f7c14cc1edd33577717037744 ......
checking 72cd0c3f66165cce2c91012382a57800f54e3bff ......
	 orig commit -> 520ad89a54edea84496695d528f73ddcf4a52ea4 ......
checking ae0ebdba96674c278674d2b12eedde0681e42f91 ......
	 orig commit -> 9f138fa609c47403374a862a08a41394be53d461 ......
checking 6783015096dc66dee0035baeec410f16b6ee2d84 ......
	 orig commit -> 46aa6a302b53f543f8e8b8e1714dc5e449ad36a6 ......
checking 275314e90c5e84c972be2da278cee60279e07fc7 ......
	 orig commit -> 6bbc4a4144b1a69743022ac68dfaf6e7d993abb9 ......
checking 9bcd15bdfb6151e0418fa9321d4dce2b2eb0cb16 ......
	 orig commit -> 9c8043f337f14d1743006dfc59c03e80a42e3884 ......
checking 9841d7b08ff6285123663acddd0ec7aa292402b7 ......
	 orig commit -> 94a631d91ad341b3b4bdac72d1104d9f090e0ca9 ......
checking 215df1f35542081485cff549830ff01af98c5279 ......
	 orig commit -> 05d8d34611139f8435af90ac54b65eb31e82e388 ......
checking 50fc2d4152fb03bfbdec186403ce5c49fd0ff77e ......
	 orig commit -> fd567653bdb908009b650f079bfd4b63169e2ac4 ......
		 fd567653bdb908009b650f079bfd4b63169e2ac4 has problem. Fixes commit -> a7f12a21f6b32bdd8d76d3af81eef9e72ce41ec0
checking bf864220a59c51a676717cbee7f346a400c5ab47 ......
	 orig commit -> 57629915d568c522ac1422df7bba4bee5b5c7a7c ......
checking 32e2ae03283b4047f5af9fd1178fe24f38e96601 ......
	 orig commit -> 9d5afec6b8bd46d6ed821aa1579634437f58ef1f ......
checking 6a851bb99e5c6569e51eb798d6a38b759fdb3302 ......
	 orig commit -> c894aa97577e47d3066b27b32499ecf899bfa8b0 ......
checking 679dbeac0b6bb551e1f3b95673695b22b2ac953d ......
	 orig commit -> 6f6a23a213be51728502b88741ba6a10cda2441d ......
		 6f6a23a213be51728502b88741ba6a10cda2441d has problem. Fixes commit -> 66b3bd2356e0a1531c71a3dcf96944621e25c17c
commit 297c7cc4b5651b174a62925b6c961085f04979fd
Author: Yang Shunyong <shunyong.yang@hxt-semitech.com>
Date:   Mon Jan 29 14:40:11 2018 +0800

    dmaengine: dmatest: fix container_of member in dmatest_callback
    
    commit 66b3bd2356e0a1531c71a3dcf96944621e25c17c upstream.
    
    The type of arg passed to dmatest_callback is struct dmatest_done.
    It refers to test_done in struct dmatest_thread, not done_wait.
    
    Fixes: 6f6a23a213be ("dmaengine: dmatest: move callback wait ...")
    Signed-off-by: Yang Shunyong <shunyong.yang@hxt-semitech.com>
    Acked-by: Adam Wallis <awallis@codeaurora.org>
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 744cb5ab337218e7a258d2a82c6f5d7afc72cd16 ......
	 orig commit -> 7f6d2ecd3d7acaf205ea7b3e96f9ffc55b92298b ......
checking d266817f5028fef8ff521a77777ef1c4b8de890e ......
	 orig commit -> f73c52a5bcd1710994e53fbccc378c42b97a06b6 ......
checking 9c537f06d61ada88ccc8080be79213ffce1ebf15 ......
	 orig commit -> dc4fd9ab01ab379ae5af522b3efd4187a7c30a31 ......
		 dc4fd9ab01ab379ae5af522b3efd4187a7c30a31 has problem. Fixes commit -> c4f24df942a181699c5bab01b8e5e82b925f77f3
commit 2a28923bb5b8a0a485c7a3a424e6a2c9f01038a3
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Wed Mar 7 15:22:31 2018 -0500

    NFS: Fix unstable write completion
    
    commit c4f24df942a181699c5bab01b8e5e82b925f77f3 upstream.
    
    We do want to respect the FLUSH_SYNC argument to nfs_commit_inode() to
    ensure that all outstanding COMMIT requests to the inode in question are
    complete. Currently we may exit early from both nfs_commit_inode() and
    nfs_write_inode() even if there are COMMIT requests in flight, or unstable
    writes on the commit list.
    
    In order to get the right semantics w.r.t. sync_inode(), we don't need
    to have nfs_commit_inode() reset the inode dirty flags when called from
    nfs_wb_page() and/or nfs_wb_all(). We just need to ensure that
    nfs_write_inode() leaves them in the right state if there are outstanding
    commits, or stable pages.
    
    Reported-by: Scott Mayhew <smayhew@redhat.com>
    Fixes: dc4fd9ab01ab ("nfs: don't wait on commit in nfs_commit_inode()...")
    Cc: stable@vger.kernel.org # v4.14+
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 3bdb508d686e4943bfb761d78dc915dd825f811f ......
	 orig commit -> 5d9b70f7d52eb14bb37861c663bae44de9521c35 ......
checking 7336f5481f6cf913a2d29d98c6e11f4bbe19d3b2 ......
	 orig commit -> a0085f2510e8976614ad8f766b209448b385492f ......
checking cdfe4c0091a8fa5e0a25d82fa0d4684382ac880d ......
	 orig commit -> 72b663a99c074a8d073e7ecdae446cfb024ef551 ......
checking e081bd0d70bddbf912f6f7f0f82e3e1ac2c52ae6 ......
	 orig commit -> 040d786032bf59002d374b86d75b04d97624005c ......
checking 14513e49c43cd3149a03ff9e1c223c3d5803ad09 ......
	 orig commit -> be6123df1ea8f01ee2f896a16c2b7be3e4557a5a ......
checking f3e957266ae56c200fb13a42309c50f84576c64a ......
	 orig commit -> c6688ef9f29762e65bce325ef4acd6c675806366 ......
		 c6688ef9f29762e65bce325ef4acd6c675806366 has problem. Fixes commit -> c409ca3be3c6ff3a1eeb303b191184e80d412862
commit 616ba129e17606f485dc325e0eef745c5e069e48
Author: Malte Leip <malte@leip.net>
Date:   Sun Apr 14 12:00:12 2019 +0200

    usb: usbip: fix isoc packet num validation in get_pipe
    
    commit c409ca3be3c6ff3a1eeb303b191184e80d412862 upstream.
    
    Change the validation of number_of_packets in get_pipe to compare the
    number of packets to a fixed maximum number of packets allowed, set to
    be 1024. This number was chosen due to it being used by other drivers as
    well, for example drivers/usb/host/uhci-q.c
    
    Background/reason:
    The get_pipe function in stub_rx.c validates the number of packets in
    isochronous mode and aborts with an error if that number is too large,
    in order to prevent malicious input from possibly triggering large
    memory allocations. This was previously done by checking whether
    pdu->u.cmd_submit.number_of_packets is bigger than the number of packets
    that would be needed for pdu->u.cmd_submit.transfer_buffer_length bytes
    if all except possibly the last packet had maximum length, given by
    usb_endpoint_maxp(epd) *  usb_endpoint_maxp_mult(epd). This leads to an
    error if URBs with packets shorter than the maximum possible length are
    submitted, which is allowed according to
    Documentation/driver-api/usb/URB.rst and occurs for example with the
    snd-usb-audio driver.
    
    Fixes: c6688ef9f297 ("usbip: fix stub_rx: harden CMD_SUBMIT path to handle malicious input")
    Signed-off-by: Malte Leip <malte@leip.net>
    Cc: stable <stable@vger.kernel.org>
    Acked-by: Shuah Khan <skhan@linuxfoundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking b6dbace92ed744a80af75036e93615324cd27aec ......
	 orig commit -> 541b6fe63023f3059cf85d47ff2767a3e42a8e44 ......
checking 20e825cdf7a1627f92371d45a5322ccecdebcb3b ......
	 orig commit -> 635f545a7e8be7596b9b2b6a43cab6bbd5a88e43 ......
checking 99542e468b76ae180675566692e0528c4c712661 ......
	 orig commit -> 48a4ff1c7bb5a32d2e396b03132d20d552c0eca7 ......
checking 0d29ae4f5033453ea86d60a736bed58fa4c15007 ......
	 orig commit -> 62354454625741f0569c2cbe45b2d192f8fd258e ......
checking d760f903419509d933b27d387854eb1e35f88cdf ......
	 orig commit -> 90e406f96f630c07d631a021fd4af10aac913e77 ......
checking d1175423ce67bd1903c4f876ba6774e3a48abdc1 ......
	 orig commit -> 302ec300ef8a545a7fc7f667e5fd743b091c2eeb ......
checking c32e053a11f231376f0899ef906fd43f8fc8dbd0 ......
	 orig commit -> ecaaab5649781c5a0effdaf298a925063020500e ......
checking 43259d07fceb8cc1f5ba7e8003ae19023e0620f5 ......
	 orig commit -> af3ff8045bbf3e32f1a448542e73abb4c8ceb6f1 ......
checking cd9b59861f9cad2f1b36eace975060cfc3bc46e4 ......
	 orig commit -> d2890c3778b164fde587bc16583f3a1c87233ec5 ......
checking 1fb73eae9624e2d3583581cd80bf408cc9b3916d ......
	 orig commit -> 18f77393796848e68909e65d692c1d1436f06e06 ......
