Check from v4.9.20 to v4.9.21
Commit count: 73
checking 37feaf8095d352014555b82adb4a04609ca17d3f ......
checking 02b23e059a9d4b862ea97c6f425a147c7780f212 ......
	 orig commit -> 6db28eda266052f86a6b402422de61eeb7d2e351 ......
checking a5e39a7f298546ee714b714f858e5255d5cafae8 ......
	 orig commit -> f33447b90e96076483525b21cc4e0a8977cdd07c ......
checking eb8c62a3848e8b1df75c66933fa6cb6e347e6273 ......
	 orig commit -> de5540d088fe97ad583cc7d396586437b32149a5 ......
checking 5959cded91e319524f4e09f747b03c477d9fbaef ......
	 orig commit -> f5fe1b51905df7cfe4fdfd85c5fb7bc5b71a094f ......
checking d5986e0078f25ee9862f3f13157f1421f18d6c64 ......
	 orig commit -> 79bd99596b7305ab08109a8bf44a6a4511dbf1cd ......
		 79bd99596b7305ab08109a8bf44a6a4511dbf1cd has problem. Fixes commit -> f5fe1b51905df7cfe4fdfd85c5fb7bc5b71a094f
commit 5959cded91e319524f4e09f747b03c477d9fbaef
Author: NeilBrown <neilb@suse.com>
Date:   Fri Mar 10 17:00:47 2017 +1100

    blk: Ensure users for current->bio_list can see the full list.
    
    commit f5fe1b51905df7cfe4fdfd85c5fb7bc5b71a094f upstream.
    
    Commit 79bd99596b73 ("blk: improve order of bio handling in generic_make_request()")
    changed current->bio_list so that it did not contain *all* of the
    queued bios, but only those submitted by the currently running
    make_request_fn.
    
    There are two places which walk the list and requeue selected bios,
    and others that check if the list is empty.  These are no longer
    correct.
    
    So redefine current->bio_list to point to an array of two lists, which
    contain all queued bios, and adjust various code to test or walk both
    lists.
    
    Signed-off-by: NeilBrown <neilb@suse.com>
    Fixes: 79bd99596b73 ("blk: improve order of bio handling in generic_make_request()")
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Cc: Jack Wang <jinpu.wang@profitbricks.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking e3a55294fc2048136de8a3f9c5154f5e4d3438d8 ......
	 orig commit -> 0cefabdaf757a6455d75f00cb76874e62703ed18 ......
checking 362721c4957dcda7b1fbd45380e7a6617a1d077c ......
	 orig commit -> 6c356eda225e3ee134ed4176b9ae3a76f793f4dd ......
checking 1b442f9bdf9a4d1b9ba28a977c426041b8acbb3e ......
	 orig commit -> 0c2bf9f95983fe30aa2f6463cb761cd42c2d521a ......
checking c1716f0c35cc0d8b58b4708af1f129440596edbc ......
	 orig commit -> c4a9b538ab2a109c5f9798bea1f8f4bf93aadfb9 ......
		 c4a9b538ab2a109c5f9798bea1f8f4bf93aadfb9 has problem. Fixes commit -> 6e98095f8fb6d98da34c4e6c34e69e7c638d79c0
commit 6e2a0259da7a6c772d5bd2e7475616055a39192d
Author: Joe Carnuccio <joe.carnuccio@cavium.com>
Date:   Wed Aug 23 15:04:55 2017 -0700

    scsi: qla2xxx: Correction to vha->vref_count timeout
    
    commit 6e98095f8fb6d98da34c4e6c34e69e7c638d79c0 upstream.
    
    Fix incorrect second argument for wait_event_timeout()
    
    Fixes: c4a9b538ab2a ("qla2xxx: Allow vref count to timeout on vport delete.")
    Signed-off-by: Joe Carnuccio <joe.carnuccio@cavium.com>
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 5ed56ca86f961f57370e7f9603cc9897654a482a ......
	 orig commit -> 09f3510fb70a46c8921f2cf4a90dbcae460a6820 ......
checking 40c5b99f8acede7f260bf3807cf59bc9bb6ff3f1 ......
	 orig commit -> c9d398fa237882ea07167e23bcfc5e6847066518 ......
checking b5707920e4d8f9df0ed2db4e6fce24ede50eb4a2 ......
	 orig commit -> 553af430e7c981e6e8fa5007c5b7b5773acc63dd ......
checking 673dfb6d1bb4e16cd6416f6a9a90c58908539bcf ......
	 orig commit -> 854fbd6e5f60fe99e8e3a569865409fca378f143 ......
checking af5ef6dafea0e9a9f6bd40ebf12c89366cd530ff ......
	 orig commit -> 26a37ab319a26d330bab298770d692bb9c852aff ......
		 26a37ab319a26d330bab298770d692bb9c852aff has problem. Fixes commit -> e883d09c9eb2ffddfd057c17e6a0cef446ec8c9b
commit 15541e64163c0c5a2d2e3e8d1b73057888170f62
Author: Arnaldo Carvalho de Melo <acme@redhat.com>
Date:   Mon Apr 24 11:58:54 2017 -0300

    tools arch: Sync arch/x86/lib/memcpy_64.S with the kernel
    
    commit e883d09c9eb2ffddfd057c17e6a0cef446ec8c9b upstream.
    
    Just a minor fix done in:
    
      Fixes: 26a37ab319a2 ("x86/mce: Fix copy/paste error in exception table entries")
    
    Cc: Tony Luck <tony.luck@intel.com>
    Link: http://lkml.kernel.org/n/tip-ni9jzdd5yxlail6pq8cuexw2@git.kernel.org
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 2211d19ac6dd8b3eb592360cda8023da2a573ca6 ......
	 orig commit -> a46f60d76004965e5669dbf3fc21ef3bc3632eb4 ......
checking 4366c7e346ce7988119fe7744983f245fe4e818e ......
	 orig commit -> f3cd1b064f1179d9e6188c6d67297a2360880e10 ......
		 f3cd1b064f1179d9e6188c6d67297a2360880e10 has problem. Fixes commit -> 45abdf35cf82e4270328c7237e7812de960ac560
commit fd3be7eaff1441cbc5c0a3abf50b519d721d6c0c
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Wed Apr 12 00:31:16 2017 +0000

    drm/etnaviv: fix missing unlock on error in etnaviv_gpu_submit()
    
    commit 45abdf35cf82e4270328c7237e7812de960ac560 upstream.
    
    Add the missing unlock before return from function etnaviv_gpu_submit()
    in the error handling case.
    
    lst: fixed label name.
    
    Fixes: f3cd1b064f11 ("drm/etnaviv: (re-)protect fence allocation with GPU mutex")
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Signed-off-by: Lucas Stach <l.stach@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 6acf5207085723e7a98233b3b6a02ecc4e6ab6cb ......
	 orig commit -> 6d6e500391875cc372336c88e9a8af377be19c36 ......
		 6d6e500391875cc372336c88e9a8af377be19c36 has problem. Fixes commit -> d08106796a78a4273e39e1bbdf538dc4334b2635
commit 420f8c09e45e4463ad732ef3029979237144445f
Author: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
Date:   Fri Mar 1 13:56:11 2019 +0100

    drm/vc4: Fix memory leak during gpu reset.
    
    commit d08106796a78a4273e39e1bbdf538dc4334b2635 upstream.
    
    __drm_atomic_helper_crtc_destroy_state does not free memory, it only
    cleans it up. Fix this by calling the functions own destroy function.
    
    Fixes: 6d6e50039187 ("drm/vc4: Allocate the right amount of space for boot-time CRTC state.")
    Cc: Eric Anholt <eric@anholt.net>
    Cc: <stable@vger.kernel.org> # v4.6+
    Reviewed-by: Eric Anholt <eric@anholt.net>
    Signed-off-by: Maarten Lankhorst <maarten.lankhorst@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20190301125627.7285-2-maarten.lankhorst@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking fa68e1d3cecc2f25c7ac0615950232b509121689 ......
	 orig commit -> ce4b4f228e51219b0b79588caf73225b08b5b779 ......
checking 1563625c717c3682f3dcbc12cb96ef4f7ce147f9 ......
	 orig commit -> 90db10434b163e46da413d34db8d0e77404cc645 ......
checking ef46a13b9c4e49db8aeb319ced36f2c6d34e6bad ......
	 orig commit -> df630b8c1e851b5e265dc2ca9c87222e342c093b ......
checking 5289f1ce39a798e46f31db8efc2e3f99eebf73df ......
	 orig commit -> a6040bc610554c66088fda3608ae5d6307c548e4 ......
checking 67e41b1368b146ff6508a4efe5552400412d2f32 ......
	 orig commit -> 1633682053a7ee8058e10c76722b9b28e97fb73f ......
checking 1f1c9e29651df61516b028c58632124b345ec85b ......
	 orig commit -> 497e1e16f45c70574dc9922c7f75c642c2162119 ......
checking e087ae68e87b8187666ceac1c13ed50273fcd1e6 ......
	 orig commit -> 31ca2c63fdc0aee725cbd4f207c1256f5deaabde ......
checking b3641939b1aeba3e11a855c5d0ab06bab39ec0f2 ......
	 orig commit -> 08f63d97749185fab942a3a47ed80f5bd89b8b7d ......
checking 000d2bb6c059bb638e31c7f84774a1d4af6d772d ......
	 orig commit -> 61b79e16c68d703dde58c25d3935d67210b7d71b ......
		 61b79e16c68d703dde58c25d3935d67210b7d71b has problem. Fixes commit -> fe8c470ab87d90e4b5115902dd94eced7e3305c3
commit 4420e5f323c408990834dddb61eb16e4a95a41e4
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Apr 19 19:47:04 2017 +0200

    ACPI / power: Avoid maybe-uninitialized warning
    
    commit fe8c470ab87d90e4b5115902dd94eced7e3305c3 upstream.
    
    gcc -O2 cannot always prove that the loop in acpi_power_get_inferred_state()
    is enterered at least once, so it assumes that cur_state might not get
    initialized:
    
    drivers/acpi/power.c: In function 'acpi_power_get_inferred_state':
    drivers/acpi/power.c:222:9: error: 'cur_state' may be used uninitialized in this function [-Werror=maybe-uninitialized]
    
    This sets the variable to zero at the start of the loop, to ensure that
    there is well-defined behavior even for an empty list. This gets rid of
    the warning.
    
    The warning first showed up when the -Os flag got removed in a bug fix
    patch in linux-4.11-rc5.
    
    I would suggest merging this addon patch on top of that bug fix to avoid
    introducing a new warning in the stable kernels.
    
    Fixes: 61b79e16c68d (ACPI: Fix incompatibility with mcount-based function graph tracing)
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 76343bfbcafa1b703b38746e8b39d15d31ab8957 ......
	 orig commit -> 554bfeceb8a22d448cd986fc9efce25e833278a1 ......
		 554bfeceb8a22d448cd986fc9efce25e833278a1 has problem. Fixes commit -> 409c1b250e30ad0e48b4d15d7319b4e18c046c4f
commit 1681bab7c450508b26f33368a8d1ec57d3fabfcc
Author: Mikulas Patocka <mpatocka@redhat.com>
Date:   Fri Apr 14 14:15:20 2017 -0400

    parisc: fix bugs in pa_memcpy
    
    commit 409c1b250e30ad0e48b4d15d7319b4e18c046c4f upstream.
    
    The patch 554bfeceb8a22d448cd986fc9efce25e833278a1 ("parisc: Fix access
    fault handling in pa_memcpy()") reimplements the pa_memcpy function.
    Unfortunatelly, it makes the kernel unbootable. The crash happens in the
    function ide_complete_cmd where memcpy is called with the same source
    and destination address.
    
    This patch fixes a few bugs in pa_memcpy:
    
    * When jumping to .Lcopy_loop_16 for the first time, don't skip the
      instruction "ldi 31,t0" (this bug made the kernel unbootable)
    * Use the COND macro when comparing length, so that the comparison is
      64-bit (a theoretical issue, in case the length is greater than
      0xffffffff)
    * Don't use the COND macro after the "extru" instruction (the PA-RISC
      specification says that the upper 32-bits of extru result are undefined,
      although they are set to zero in practice)
    * Fix exception addresses in .Lcopy16_fault and .Lcopy8_fault
    * Rename .Lcopy_loop_4 to .Lcopy_loop_8 (so that it is consistent with
      .Lcopy8_fault)
    
    Fixes: 554bfeceb8a2 ("parisc: Fix access fault handling in pa_memcpy()")
    Signed-off-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 99e354a59ac5e7920166e68903b4ad031ef933e3 ......
	 orig commit -> 476e75a44b56038bee9207242d4bc718f6b4de06 ......
checking 09b931fcb87c8aad178475a7db1d4bfc939f7faa ......
	 orig commit -> d19f5e41b344a057bb2450024a807476f30978d2 ......
checking 3967cf7e6a9180e09b42ecc154731a570efafa49 ......
	 orig commit -> c952cd4e949ab3d07287efc2e80246e03727d15d ......
checking 461bbb90942aea0fce1edfa271dee675cdec2029 ......
	 orig commit -> 0e3d3e5df07dcf8a50d96e0ecd6ab9a888f55dfc ......
		 0e3d3e5df07dcf8a50d96e0ecd6ab9a888f55dfc has problem. Fixes commit -> 994b15b983a72e1148a173b61e5b279219bb45ae
commit af412413c1d00bd10740007c2a499207f4343ba3
Author: Trond Myklebust <trondmy@gmail.com>
Date:   Wed Sep 5 14:07:14 2018 -0400

    NFSv4.1 fix infinite loop on I/O.
    
    commit 994b15b983a72e1148a173b61e5b279219bb45ae upstream.
    
    The previous fix broke recovery of delegated stateids because it assumes
    that if we did not mark the delegation as suspect, then the delegation has
    effectively been revoked, and so it removes that delegation irrespectively
    of whether or not it is valid and still in use. While this is "mostly
    harmless" for ordinary I/O, we've seen pNFS fail with LAYOUTGET spinning
    in an infinite loop while complaining that we're using an invalid stateid
    (in this case the all-zero stateid).
    
    What we rather want to do here is ensure that the delegation is always
    correctly marked as needing testing when that is the case. So we want
    to close the loophole offered by nfs4_schedule_stateid_recovery(),
    which marks the state as needing to be reclaimed, but not the
    delegation that may be backing it.
    
    Fixes: 0e3d3e5df07dc ("NFSv4.1 fix infinite loop on IO BAD_STATEID error")
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Cc: stable@vger.kernel.org # v4.11+
    Signed-off-by: Anna Schumaker <Anna.Schumaker@Netapp.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 80df2b3e185e5e0e4a507d21119208658294f750 ......
	 orig commit -> d0918764c17b94c30bbb2619929b1719ff52707a ......
checking fa3b4f4f574a6fd948da9377d94c3166030ee7dc ......
	 orig commit -> 923713b357455cfb9aca2cd3429cb0806a724ed2 ......
checking 8d6c33224261e426641df743250e85b1c6a80674 ......
	 orig commit -> 8b4073596997f2ccbf68d8e72e07b827388a4536 ......
checking e5a134739151594ef0981dce63b655cb5c912b74 ......
	 orig commit -> d1a6fe41d3c4ff0d26f0b186d774493555ca5282 ......
checking 7a042a4eeb8da48a2e934515326ef4d70c20e7fc ......
	 orig commit -> cd3ac9affc43b44f49d7af70d275f0bd426ba643 ......
checking 8aabccdc9d4f542a0b15c0fb82f6e2df77a2fc5d ......
	 orig commit -> 2f726aec19a9d2c63bec9a8a53a3910ffdcd09f8 ......
checking 74a2c1ff88a4e0960623d17f7db56ac5a60bb0cf ......
	 orig commit -> 2d7d54002e396c180db0c800c1046f0a3c471597 ......
checking 0dd5b335ed69d63bbda7234d6fca0e1c376129cf ......
	 orig commit -> 6e347b5e05ea2ac4ac467a5a1cfaebb2c7f06f80 ......
checking 8f9155989f12aae24bedfcec33f9226beb466574 ......
	 orig commit -> 7cb689fe42927281b8d98606ae5450173fcc66a9 ......
checking 68b275b7cbf065a8ea9b964cbb7d78d2b63c635f ......
	 orig commit -> 625fe857e4fac6518716f3c0ff5e5deb8ec6d238 ......
checking cf31d6d2155974a110eddf62f09f762f2546af8d ......
	 orig commit -> 9702c67c6066f583b629cf037d2056245bb7a8e6 ......
checking c2a869527865c35b605877f966cb5d514fdc5fbb ......
	 orig commit -> bf33f87dd04c371ea33feb821b60d63d754e3124 ......
checking d5dbd1c9592062ef170fb895f7aa483f781e63f6 ......
	 orig commit -> 2fcc319d2467a5f5b78f35f79fd6e22741a31b1e ......
checking da617af8f0c6fa9cd2694440529f5edf99c0c6d1 ......
	 orig commit -> f65e6fad293b3a5793b7fa2044800506490e7a2e ......
checking 77aedb0cbe6aa45338a6e59afa995fde37133bf0 ......
	 orig commit -> d5825712ee98d68a2c17bc89dad2c30276894cba ......
checking d07b5855ab7f55d780b84df4d53a5c1b349eb43e ......
	 orig commit -> 787eb485509f9d58962bd8b4dbc6a5ac6e2034fe ......
checking 3b83a02af271a290eed708246bf03ef7d41786ee ......
	 orig commit -> 3802a345321a08093ba2ddb1849e736f84e8d450 ......
checking a2402936943364e39ef5833db29387d019182ce7 ......
	 orig commit -> 410d17f67e583559be3a922f8b6cc336331893f3 ......
checking 9559c48c1a7d547a1c0aa369f2aaf6325aa805bb ......
	 orig commit -> 8ee9fdbebc84b39f1d1c201c5e32277c61d034aa ......
checking 5db7b41b607d3b268662f662e8c3dd403f648004 ......
	 orig commit -> 48af96ab92bc68fb645068b978ce36df2379e076 ......
checking e5e2e56fd4dd808dcd5a81244da2598290fb7782 ......
	 orig commit -> 93aaead52a9eebdc20dc8fa673c350e592a06949 ......
checking c251c6c2dec99562a0075c08d31257cff1bc1158 ......
	 orig commit -> 75d65361cf3c0dae2af970c305e19c727b28a510 ......
checking 2d7c1c7ffafd6dffa3400cce60174fe904982101 ......
	 orig commit -> 0e339ef8556d9e567aa7925f8892c263d79430d9 ......
checking 47d7d1ea6c5ff252728773c20129283ba64c8b7b ......
	 orig commit -> 5e30c23d13919a718b22d4921dc5c0accc59da27 ......
checking 5bbf5ba693ac6dc323d6608740311c34b978e986 ......
	 orig commit -> 54a4ef8af4e0dc5c983d17fcb9cf5fd25666d94e ......
checking 67eb7bf836af69b967ab437c6c84e81c4351b957 ......
	 orig commit -> c5ecb42342852892f978572ddc6dca703460f25a ......
checking e060f4884c93eb980c6e2cb3f19bf4b7582fd460 ......
	 orig commit -> 4dd2eb633598cb6a5a0be2fd9a2be0819f5eeb5f ......
checking e02f0ff252f2cd402063636ccea812a35034d6d7 ......
	 orig commit -> 5eda43000064a69a39fb7869cc63c9571535ad29 ......
checking 8370826f7d3274fe64de32c58aa49a7384f0c9e9 ......
	 orig commit -> 05a630d76bd3f39baf0eecfa305bed2820796dee ......
checking 3d2bd2fd5cbaf3d4e0f0642030cd7d21facb07e7 ......
	 orig commit -> de14c5f541e78c59006bee56f6c5c2ef1ca07272 ......
checking 4056a74aafba368f763d5dd7ab92a5d74e098c1e ......
	 orig commit -> b3bf607d58520ea8c0666aeb4be60dbb724cd3a2 ......
checking efab3ae29c154e6dd1e6c80e077bf3d51ad2829f ......
	 orig commit -> d5a91baeb6033c3392121e4d5c011cdc08dfa9f7 ......
checking 7e2dd1fb71020e12b60a886b06f2b7fe8c465eaa ......
	 orig commit -> 7a652bbe366464267190c2792a32ce4fff5595ef ......
checking 0a6844abacc1adf428f80ad1b4b1f4cce915d2b2 ......
	 orig commit -> 4b5bd5bf3fb182dc504b1b64e0331300f156e756 ......
checking 4127a5d9fb89fd74d2816456e309eb82a3d375a9 ......
	 orig commit -> e4229d6b0bc9280f29624faf170cf76a9f1ca60e ......
checking 4d725d7474dfddea00dca26f14b052c40d3444b0 ......
	 orig commit -> c3155097ad89a956579bc305856a1f2878494e52 ......
checking 798b1dc5cbdfbbb3ac0d45177a1fc1dd511e3469 ......
	 orig commit -> a36b926180cda375ac2ec89e1748b47137cfc51c ......
checking 08a2a26816825b2724fa6e2616df716b31e4a582 ......
	 orig commit -> 76d771b4cbe33c581bd6ca2710c120be51172440 ......
checking 9be1c33d4a995d6369b94c7bb6ae0e8d18e7d658 ......
	 orig commit -> 4dfa2b84118fd6c95202ae87e62adf5000ccd4d0 ......
checking 8b08aec62c247db69f5e2a813912f65a46797fc2 ......
	 orig commit -> 7ecec8503af37de6be4f96b53828d640a968705f ......
checking 8601537724611b724920fd397cc9fdb181e92ed3 ......
	 orig commit -> 633ee407b9d15a75ac9740ba9d3338815e1fcb95 ......
