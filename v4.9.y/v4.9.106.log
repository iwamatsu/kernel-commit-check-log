Check from v4.9.106 to v4.9.107
Commit count: 62
checking 3c3d05fc6e6653bdf9f7fb3fb6922b199c7ba3ec ......
checking 73172520675a093c01a95e02fcc4e00b4170065a ......
	 orig commit -> 10879ae5f12e9cab3c4e8e9504c1aaa8a033bde7 ......
		 10879ae5f12e9cab3c4e8e9504c1aaa8a033bde7 has problem. Fixes commit -> aea9a80ba98a0c9b4de88850260e9fbdcc98360b
checking 1724b70c4dfef1f38d67b9e05016f6a84086a31f ......
	 orig commit -> 79db795833bf5c3e798bcd7a5aeeee3fb0505927 ......
checking 93960f9d447467b9e6d9a8ee1d6ca7b5b6eb25b6 ......
	 orig commit -> 145e1a71e090575c74969e3daa8136d1e5b99fc8 ......
checking f01d1b571458ebc8ef6311eef27c8a513038975b ......
	 orig commit -> 4faa99965e027cc057c5145ce45fa772caa04e8d ......
checking d47c9f5c4e3ec194ec98d48ed59979e851cb1daa ......
	 orig commit -> 0fde7ad71ee371ede73b3f326e58f9e8d102feb6 ......
checking eab90eda9d707b5c0e8648e1b4c25364538d698a ......
	 orig commit -> b3fb22733ae61050f8d10a1d6a8af176c5c5db1a ......
checking 5ee69e647a86baf578a6571b9ba5a1869920f273 ......
	 orig commit -> bdcc02cf1bb508fc700df7662f55058f651f2621 ......
checking 83c0c8b7ceefeb79b4906c3d332e774f465b760c ......
	 orig commit -> a840c93ca7582bb6c88df2345a33f979b7a67874 ......
checking 6ba7b04c063c457691e9a30d4316035a1518b287 ......
	 orig commit -> 806e30873f0e74d9d41b0ef761bd4d3e55c7d510 ......
checking 994347096a53d69ce5c9791627a9b5334d77c477 ......
	 orig commit -> b5e2ced9bf81393034072dd4d372f6b430bc1f0a ......
		 b5e2ced9bf81393034072dd4d372f6b430bc1f0a has problem. Fixes commit -> 806e30873f0e74d9d41b0ef761bd4d3e55c7d510
commit 6ba7b04c063c457691e9a30d4316035a1518b287
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat May 26 08:49:24 2018 +0200

    hwtracing: stm: fix build error on some arches
    
    commit 806e30873f0e74d9d41b0ef761bd4d3e55c7d510 upstream.
    
    Commit b5e2ced9bf81 ("stm class: Use vmalloc for the master map") caused
    a build error on some arches as vmalloc.h was not explicitly included.
    
    Fix that by adding it to the list of includes.
    
    Fixes: b5e2ced9bf81 ("stm class: Use vmalloc for the master map")
    Reported-by: kbuild test robot <lkp@intel.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 3875d1b83b19c75e2db2c25ef3dcd78e3d2c1d5f ......
	 orig commit -> c9ddf73476ff4fffb7a87bd5107a0705bf2cf64b ......
checking ef1b8fbed6c717a3fa80d878bb05dec1efd94d08 ......
	 orig commit -> 28e4213dd331e944e7fca1954a946829162ed9d4 ......
checking 5826fc575b935a48c89be6a3fdc7a2f03aa76218 ......
	 orig commit -> c7e814628df65f424fe197dde73bfc67e4a244d7 ......
checking 8978f159e27c820c86003644be9eae4acf5255ee ......
	 orig commit -> 3d13de4b027d5f6276c0f9d3a264f518747d83f2 ......
checking 5d70bd5c98d0e655bde2aae2b5251bdd44df5e71 ......
checking e9b911a97bbd8d781d7281e913a1bc872e02f3cb ......
	 orig commit -> a048a07d7f4535baa4cbad6bc024f175317ab938 ......
checking 2149936d12894357af9f50cb3effb99f3b41b4ce ......
	 orig commit -> 501a78cbc17c329fabf8e9750a1e9ab810c88a0e ......
checking 9aa638676be49e9372f0b570cd729145ea122061 ......
	 orig commit -> 6232774f1599028a15418179d17f7df47ede770a ......
checking 4ec7e5e89fd4cdc0e2695a2e0d7541916193f6e2 ......
	 orig commit -> e7347a86830f38dc3e40c8f7e28c04412b12a2e7 ......
checking 9e337dcf2edc095971751bf55293f8a92d5e55e3 ......
	 orig commit -> 0f9bdfe3c77091e8704d2e510eb7c2c2c6cde524 ......
checking 1dc0f1f17539c3931c9e3613ce59aa37d3747c94 ......
	 orig commit -> d6fbe1c55c55c6937cbea3531af7da84ab7473c3 ......
		 d6fbe1c55c55c6937cbea3531af7da84ab7473c3 has problem. Fixes commit -> 6d44acae1937b81cf8115ada8958e04f601f3f2e
commit ee617f5807c7a3722c2b9c19ab227deb7a0ff3c0
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Thu Apr 11 21:46:05 2019 +1000

    powerpc64s: Show ori31 availability in spectre_v1 sysfs file not v2
    
    commit 6d44acae1937b81cf8115ada8958e04f601f3f2e upstream.
    
    When I added the spectre_v2 information in sysfs, I included the
    availability of the ori31 speculation barrier.
    
    Although the ori31 barrier can be used to mitigate v2, it's primarily
    intended as a spectre v1 mitigation. Spectre v2 is mitigated by
    hardware changes.
    
    So rework the sysfs files to show the ori31 information in the
    spectre_v1 file, rather than v2.
    
    Currently we display eg:
    
      $ grep . spectre_v*
      spectre_v1:Mitigation: __user pointer sanitization
      spectre_v2:Mitigation: Indirect branch cache disabled, ori31 speculation barrier enabled
    
    After:
    
      $ grep . spectre_v*
      spectre_v1:Mitigation: __user pointer sanitization, ori31 speculation barrier enabled
      spectre_v2:Mitigation: Indirect branch cache disabled
    
    Fixes: d6fbe1c55c55 ("powerpc/64s: Wire up cpu_show_spectre_v2()")
    Cc: stable@vger.kernel.org # v4.17+
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
checking ed50e032f7de992352d57e3dd9dd2f8a6a235e95 ......
	 orig commit -> 56986016cb8cd9050e601831fe89f332b4e3c46e ......
checking 76e0b304b38764497044fb064deafd79a0d92c14 ......
	 orig commit -> 2e4a16161fcd324b1f9bf6cb6856529f7eaf0689 ......
checking fe1a517821084cc8c80fc4d0bd9da86323868769 ......
	 orig commit -> 37c0bdd00d3ae83369ab60a6712c28e11e6458d5 ......
checking a8f6001c701d0619abe1d266f958b131ea767890 ......
	 orig commit -> ff348355e9c72493947be337bb4fae4fc1a41eba ......
checking 6f81254e77e238d04215dfa0d952f6af5819cc1d ......
	 orig commit -> 8ad33041563a10b34988800c682ada14b2612533 ......
checking bdcfeadf97700af96107929a92ceaf04beb323f9 ......
	 orig commit -> 77addf6e95c8689e478d607176b399a6242a777e ......
checking 7be06caae78e49812522422e3d3ed9c8b788999f ......
	 orig commit -> f636c14790ead6cc22cf62279b1f8d7e11a67116 ......
		 f636c14790ead6cc22cf62279b1f8d7e11a67116 has problem. Fixes commit -> 6232774f1599028a15418179d17f7df47ede770a
0f9bdfe3c77091e8704d2e510eb7c2c2c6cde524
commit 9e337dcf2edc095971751bf55293f8a92d5e55e3
Author: Mauricio Faria de Oliveira <mauricfo@linux.vnet.ibm.com>
Date:   Sat Jun 2 21:09:04 2018 +1000

    powerpc/pseries: Fix clearing of security feature flags
    
    commit 0f9bdfe3c77091e8704d2e510eb7c2c2c6cde524 upstream.
    
    The H_CPU_BEHAV_* flags should be checked for in the 'behaviour' field
    of 'struct h_cpu_char_result' -- 'character' is for H_CPU_CHAR_*
    flags.
    
    Found by playing around with QEMU's implementation of the hypercall:
    
      H_CPU_CHAR=0xf000000000000000
      H_CPU_BEHAV=0x0000000000000000
    
      This clears H_CPU_BEHAV_FAVOUR_SECURITY and H_CPU_BEHAV_L1D_FLUSH_PR
      so pseries_setup_rfi_flush() disables 'rfi_flush'; and it also
      clears H_CPU_CHAR_L1D_THREAD_PRIV flag. So there is no RFI flush
      mitigation at all for cpu_show_meltdown() to report; but currently
      it does:
    
      Original kernel:
    
        # cat /sys/devices/system/cpu/vulnerabilities/meltdown
        Mitigation: RFI Flush
    
      Patched kernel:
    
        # cat /sys/devices/system/cpu/vulnerabilities/meltdown
        Not affected
    
      H_CPU_CHAR=0x0000000000000000
      H_CPU_BEHAV=0xf000000000000000
    
      This sets H_CPU_BEHAV_BNDS_CHK_SPEC_BAR so cpu_show_spectre_v1() should
      report vulnerable; but currently it doesn't:
    
      Original kernel:
    
        # cat /sys/devices/system/cpu/vulnerabilities/spectre_v1
        Not affected
    
      Patched kernel:
    
        # cat /sys/devices/system/cpu/vulnerabilities/spectre_v1
        Vulnerable
    
    Brown-paper-bag-by: Michael Ellerman <mpe@ellerman.id.au>
    Fixes: f636c14790ea ("powerpc/pseries: Set or clear security feature flags")
    Signed-off-by: Mauricio Faria de Oliveira <mauricfo@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 9aa638676be49e9372f0b570cd729145ea122061
Author: Mauricio Faria de Oliveira <mauricfo@linux.vnet.ibm.com>
Date:   Sat Jun 2 21:09:06 2018 +1000

    powerpc/pseries: Restore default security feature flags on setup
    
    commit 6232774f1599028a15418179d17f7df47ede770a upstream.
    
    After migration the security feature flags might have changed (e.g.,
    destination system with unpatched firmware), but some flags are not
    set/clear again in init_cpu_char_feature_flags() because it assumes
    the security flags to be the defaults.
    
    Additionally, if the H_GET_CPU_CHARACTERISTICS hypercall fails then
    init_cpu_char_feature_flags() does not run again, which potentially
    might leave the system in an insecure or sub-optimal configuration.
    
    So, just restore the security feature flags to the defaults assumed
    by init_cpu_char_feature_flags() so it can set/clear them correctly,
    and to ensure safe settings are in place in case the hypercall fail.
    
    Fixes: f636c14790ea ("powerpc/pseries: Set or clear security feature flags")
    Depends-on: 19887d6a28e2 ("powerpc: Move default security feature flags")
    Signed-off-by: Mauricio Faria de Oliveira <mauricfo@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9e337dcf2edc095971751bf55293f8a92d5e55e3
Author: Mauricio Faria de Oliveira <mauricfo@linux.vnet.ibm.com>
Date:   Sat Jun 2 21:09:04 2018 +1000

    powerpc/pseries: Fix clearing of security feature flags
    
    commit 0f9bdfe3c77091e8704d2e510eb7c2c2c6cde524 upstream.
    
    The H_CPU_BEHAV_* flags should be checked for in the 'behaviour' field
    of 'struct h_cpu_char_result' -- 'character' is for H_CPU_CHAR_*
    flags.
    
    Found by playing around with QEMU's implementation of the hypercall:
    
      H_CPU_CHAR=0xf000000000000000
      H_CPU_BEHAV=0x0000000000000000
    
      This clears H_CPU_BEHAV_FAVOUR_SECURITY and H_CPU_BEHAV_L1D_FLUSH_PR
      so pseries_setup_rfi_flush() disables 'rfi_flush'; and it also
      clears H_CPU_CHAR_L1D_THREAD_PRIV flag. So there is no RFI flush
      mitigation at all for cpu_show_meltdown() to report; but currently
      it does:
    
      Original kernel:
    
        # cat /sys/devices/system/cpu/vulnerabilities/meltdown
        Mitigation: RFI Flush
    
      Patched kernel:
    
        # cat /sys/devices/system/cpu/vulnerabilities/meltdown
        Not affected
    
      H_CPU_CHAR=0x0000000000000000
      H_CPU_BEHAV=0xf000000000000000
    
      This sets H_CPU_BEHAV_BNDS_CHK_SPEC_BAR so cpu_show_spectre_v1() should
      report vulnerable; but currently it doesn't:
    
      Original kernel:
    
        # cat /sys/devices/system/cpu/vulnerabilities/spectre_v1
        Not affected
    
      Patched kernel:
    
        # cat /sys/devices/system/cpu/vulnerabilities/spectre_v1
        Vulnerable
    
    Brown-paper-bag-by: Michael Ellerman <mpe@ellerman.id.au>
    Fixes: f636c14790ea ("powerpc/pseries: Set or clear security feature flags")
    Signed-off-by: Mauricio Faria de Oliveira <mauricfo@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 62dfddfaf19a36dea650c192e7f5571e76bf1c0e ......
	 orig commit -> 9a868f634349e62922c226834aa23e3d1329ae7f ......
checking 45bc42bf044ab5c305d8edc935ab8bf42e5806bf ......
	 orig commit -> c4bc36628d7f8b664657d8bd6ad1c44c177880b7 ......
checking 82bfffedbda91ffdf7cebc210185fac3f6a2096b ......
	 orig commit -> 921bc6cf807ceb2ab8005319cf39f33494d6b100 ......
checking 2b2f103b689bb1f092ccbc5f03ce5ec77d319319 ......
	 orig commit -> 0063d61ccfc011f379a31acaeba6de7c926fed2c ......
checking 135b2c17cf252f539103fb4781133058be83a710 ......
	 orig commit -> 84749a58b6e382f109abf1e734bc4dd43c2c25bb ......
checking 5e9ea71d85bc33f869b4d8c9b5142ac30baa9118 ......
	 orig commit -> abf110f3e1cea40f5ea15e85f5d67c39c14568a7 ......
		 abf110f3e1cea40f5ea15e85f5d67c39c14568a7 has problem. Fixes commit -> 501a78cbc17c329fabf8e9750a1e9ab810c88a0e
commit 2149936d12894357af9f50cb3effb99f3b41b4ce
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Sat Jun 2 21:09:07 2018 +1000

    powerpc/64s: Fix section mismatch warnings from setup_rfi_flush()
    
    commit 501a78cbc17c329fabf8e9750a1e9ab810c88a0e upstream.
    
    The recent LPM changes to setup_rfi_flush() are causing some section
    mismatch warnings because we removed the __init annotation on
    setup_rfi_flush():
    
      The function setup_rfi_flush() references
      the function __init ppc64_bolted_size().
      the function __init memblock_alloc_base().
    
    The references are actually in init_fallback_flush(), but that is
    inlined into setup_rfi_flush().
    
    These references are safe because:
     - only pseries calls setup_rfi_flush() at runtime
     - pseries always passes L1D_FLUSH_FALLBACK at boot
     - so the fallback flush area will always be allocated
     - so the check in init_fallback_flush() will always return early:
       /* Only allocate the fallback flush area once (at boot time). */
       if (l1d_flush_fallback_area)
            return;
    
     - and therefore we won't actually call the freed init routines.
    
    We should rework the code to make it safer by default rather than
    relying on the above, but for now as a quick-fix just add a __ref
    annotation to squash the warning.
    
    Fixes: abf110f3e1ce ("powerpc/rfi-flush: Make it possible to call setup_rfi_flush() again")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking a1bbe5eb6c01fa47ab7fb2688183fd11ebc3e2bb ......
	 orig commit -> 1e2a9fc7496955faacbbed49461d611b704a7505 ......
checking 98df74652bfa95856f3ad8cf7b220b01e4a39aaf ......
	 orig commit -> eb0a2d2620ae431c543963c8c7f08f597366fc60 ......
checking 51cbb3b34c8972e0096ed8d5cd4abfa586567852 ......
	 orig commit -> 582605a429e20ae68fd0b041b2e840af296edd08 ......
checking 70e51fd51f00744dc9b7f017019da5d65bc32997 ......
checking b1d57084b6a2572c5f648c83dbd31100e73a4653 ......
	 orig commit -> 63a1e1c95e60e798fa09ab3c536fb555aa5bbf2b ......
checking fe64d7d6ab83b03c933d9f76643b810857774306 ......
	 orig commit -> a4023f682739439b434165b54af7cb3676a4766e ......
checking e1928457073c996ffc681be2b6f9576706fbcf8d ......
	 orig commit -> a4b0e8a4e92b1baa860e744847fbdb84a50a5071 ......
checking be4d66d6b6f2cdfec92f1bd2fd44edd633097afd ......
	 orig commit -> 93fdd5ac64bbe80dac6416f048405362d7ef0945 ......
checking b0a12b452a082ee2b29dfe9ce3818b3690c6f596 ......
	 orig commit -> bde44bb665d049468b6a1a2fa7d666434de4f83f ......
checking 7966e76f6a2484573e00e1661a37c974854f4367 ......
	 orig commit -> 607065bad9931e72207b0cac365d7d4abc06bd99 ......
checking c43b4ff972a986c85bdd8dc1aa05fe23b29ef99c ......
checking bb70de1f993b5a7fffe9d42c68907b60ef5319a6 ......
checking 474928b8f0a6ba49872ef2769610b80638820aad ......
	 orig commit -> 944e0fc51a89c9827b98813d65dc083274777c7f ......
checking 219270d70a8783ad067e7c471eefdf27cc93b1d1 ......
	 orig commit -> d3b56c566d4ba8cae688baf3cca94425d57ea783 ......
checking a38249d6dcfb6554f0765f9529d49f96454d9a1e ......
	 orig commit -> 271ef65b5882425d500e969e875c98e47a6b0c86 ......
checking fd9c9fff2fee867a42d83eca65eb5767d1837193 ......
	 orig commit -> fb239c1209bb0f0b4830cc72507cc2f2d63fadbd ......
checking ecfed29cc1951c5affac0cb5be9f50cfa1036700 ......
	 orig commit -> 531beb067c6185aceabfdee0965234c6a8fd133b ......
checking fa4724c51a898f64263ed06b4f76976b48debedf ......
	 orig commit -> 814596495dd2b9d4aab92d8f89cf19060d25d2ea ......
checking c738c806495e62e0eef6a2ee2eddb32b83751eb8 ......
	 orig commit -> efe3de79e0b52ca281ef6691480c8c68c82a4657 ......
checking dfc80dcea2b101828cb07654dcc797166d3e1292 ......
	 orig commit -> 86b389ff22bd6ad8fd3cb98e41cd271886c6d023 ......
checking 87efba9b5b558bd87c2a3bdd9f0193519fa7c3a7 ......
	 orig commit -> 40f7090bb1b4ec327ea1e1402ff5783af5b35195 ......
checking 28fffa9066d48794171a0cd8bf37c5d6ee0dd834 ......
	 orig commit -> f5acb3dcba1ffb7f0b8cbb9dba61500eea5d610b ......
checking 0f929c96926569416e9d1a1a81d1c4f59d8436aa ......
	 orig commit -> a27ba2607e60312554cbcd43fc660b2c7f29dc9c ......
checking 38accd6e50791d1136c0196f187523ba0eed6294 ......
	 orig commit -> 0bd77073e693e8f93ff6ddba65a9f426153221cb ......
	 orig commit -> a7aa75a2a7dba32594291a71c3704000a2fd7089 ......
checking 60a1dc530d3ab65ce07eb19d5bb630cef54a24bf ......
	 orig commit -> 009615ab7fd4e43b82a38e4e6adc5e23c1ee567f ......
checking 09ae0d2ec919b2cf2e6f7dd4be034b060f12c18f ......
	 orig commit -> faf37c44a105f3608115785f17cbbf3500f8bc71 ......
checking b27fb13e93b0b41d56706c1a577759ab69d80a3f ......
	 orig commit -> 32c3fa7cdf0c4a3eb8405fc3e13398de019e828b ......
