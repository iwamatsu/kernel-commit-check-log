Check from v4.9.10 to v4.9.11
Commit count: 35
checking eee1550b3e89217321b63efba64f03b2546180d6 ......
checking 724aedaa5ca6dfa31e54864f03215cce7ed663a0 ......
	 orig commit -> dffba9a31c7769be3231c420d4b364c92ba3f1ac ......
checking 0d4c19ee68c91f46905cbd393939d89237e6189c ......
	 orig commit -> 92e55f412cffd016cc245a74278cb4d7b89bb3bc ......
checking 0e0751cdfa466923218ff59a8624fa8d1050b6fb ......
	 orig commit -> 0fd758d6112f867b2cc6df0f6a856048ff99b211 ......
		 0fd758d6112f867b2cc6df0f6a856048ff99b211 has problem. Fixes commit -> 9b8c514291a83e53c073b473bdca6267f17a02c2
checking 7c4c32a2976e061f3cc9cecf54ad20dd8861a212 ......
	 orig commit -> bf99b4ded5f8a4767dbb9d180626f06c51f9881f ......
		 bf99b4ded5f8a4767dbb9d180626f06c51f9881f has problem. Fixes commit -> 92e55f412cffd016cc245a74278cb4d7b89bb3bc
commit 0d4c19ee68c91f46905cbd393939d89237e6189c
Author: Pablo Neira <pablo@netfilter.org>
Date:   Thu Jan 26 22:56:21 2017 +0100

    tcp: don't annotate mark on control socket from tcp_v6_send_response()
    
    commit 92e55f412cffd016cc245a74278cb4d7b89bb3bc upstream.
    
    Unlike ipv4, this control socket is shared by all cpus so we cannot use
    it as scratchpad area to annotate the mark that we pass to ip6_xmit().
    
    Add a new parameter to ip6_xmit() to indicate the mark. The SCTP socket
    family caches the flowi6 structure in the sctp_transport structure, so
    we cannot use to carry the mark unless we later on reset it back, which
    I discarded since it looks ugly to me.
    
    Fixes: bf99b4ded5f8 ("tcp: fix mark propagation with fwmark_reflect enabled")
    Suggested-by: Eric Dumazet <eric.dumazet@gmail.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 16a3fbe5239a5ca054b0544abdd661076ec4f1c5 ......
	 orig commit -> 9c8bb163ae784be4f79ae504e78c862806087c54 ......
checking 53a76d633b860f47f82f3ad821bc264306f9be69 ......
	 orig commit -> 1666d49e1d416fcc2cce708242a52fe3317ea8ba ......
		 1666d49e1d416fcc2cce708242a52fe3317ea8ba has problem. Fixes commit -> 08d3ffcc0cfaba36f6b86fd568cc3bc773061fa6
9c8bb163ae784be4f79ae504e78c862806087c54
commit 16a3fbe5239a5ca054b0544abdd661076ec4f1c5
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Wed Feb 8 21:16:45 2017 +0800

    igmp, mld: Fix memory leak in igmpv3/mld_del_delrec()
    
    [ Upstream commit 9c8bb163ae784be4f79ae504e78c862806087c54 ]
    
    In function igmpv3/mld_add_delrec() we allocate pmc and put it in
    idev->mc_tomb, so we should free it when we don't need it in del_delrec().
    But I removed kfree(pmc) incorrectly in latest two patches. Now fix it.
    
    Fixes: 24803f38a5c0 ("igmp: do not remove igmp souce list info when ...")
    Fixes: 1666d49e1d41 ("mld: do not remove mld souce list info when ...")
    Reported-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 5b1bb4cbd7ec562d1964d37d642ca836f2b83a2c ......
	 orig commit -> 72fb96e7bdbbdd4421b0726992496531060f3636 ......
checking 12758a282435c0ab4878ef163e82420a8e250b73 ......
	 orig commit -> 382e1eea2d983cd2343482c6a638f497bb44a636 ......
checking a700cf26a3be881e32573cb0e6373278fac2348a ......
	 orig commit -> 73d2c6678e6c3af7e7a42b1e78cd0211782ade32 ......
checking 82849541895fc355de23aad2ab1615969e50896f ......
	 orig commit -> 57031eb794906eea4e1c7b31dc1e2429c0af0c66 ......
checking 6ebde312a8ed469172fc9694ca0c8411994d47ff ......
	 orig commit -> 217e6fa24ce28ec87fca8da93c9016cb78028612 ......
checking 4cd0362114c826ef1b5ca12c04a3c288dd4d9ecd ......
	 orig commit -> d7426c69a1942b2b9b709bf66b944ff09f561484 ......
checking 2b7f50d67f5dd7b4f97e413dd8d4ecbf83d723ce ......
	 orig commit -> 2bd137de531367fb573d90150d1872cb2a2095f7 ......
checking 00eff2ebbd229758e90659907724c14dd5a18339 ......
	 orig commit -> 2dcab598484185dea7ec22219c76dcdd59e3cb90 ......
		 2dcab598484185dea7ec22219c76dcdd59e3cb90 has problem. Fixes commit -> dfcb9f4f99f1e9a49e43398a7bfbf56927544af1
commit 35b9d61ea910c1ebd4652b32cc7d713f6689b4f4
Author: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
Date:   Thu Feb 23 09:31:18 2017 -0300

    sctp: deny peeloff operation on asocs with threads sleeping on it
    
    commit dfcb9f4f99f1e9a49e43398a7bfbf56927544af1 upstream.
    
    commit 2dcab5984841 ("sctp: avoid BUG_ON on sctp_wait_for_sndbuf")
    attempted to avoid a BUG_ON call when the association being used for a
    sendmsg() is blocked waiting for more sndbuf and another thread did a
    peeloff operation on such asoc, moving it to another socket.
    
    As Ben Hutchings noticed, then in such case it would return without
    locking back the socket and would cause two unlocks in a row.
    
    Further analysis also revealed that it could allow a double free if the
    application managed to peeloff the asoc that is created during the
    sendmsg call, because then sctp_sendmsg() would try to free the asoc
    that was created only for that call.
    
    This patch takes another approach. It will deny the peeloff operation
    if there is a thread sleeping on the asoc, so this situation doesn't
    exist anymore. This avoids the issues described above and also honors
    the syscalls that are already being handled (it can be multiple sendmsg
    calls).
    
    Joint work with Xin Long.
    
    Fixes: 2dcab5984841 ("sctp: avoid BUG_ON on sctp_wait_for_sndbuf")
    Cc: Alexander Popov <alex.popov@linux.com>
    Cc: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 4400acce6881bc40380afa4c0559348a9feb7329 ......
	 orig commit -> bd4ce941c8d5b862b2f83364be5dbe8fc8ab48f8 ......
checking 970390fd5d53de0817b538350131edd2514a8321 ......
	 orig commit -> 2d6a0e9de03ee658a9adc3bfb2f0ca55dff1e478 ......
checking 61bf9f381c38821004bd514015487852021053a1 ......
	 orig commit -> d41149145f98fe26dcd0bfd1d6cc095e6e041418 ......
checking e898f6f008aa91c154c9c8fb7be3fb9ec4d333ec ......
	 orig commit -> 7926aff5c57b577ab0f43364ff0c59d968f6a414 ......
checking 878b015bcc726560b13be2d906caf6923428f05d ......
	 orig commit -> 5593523f968bc86d42a035c6df47d5e0979b5ace ......
checking b90cb484c068b3fd30aee322506d38bcc2f43838 ......
	 orig commit -> 837585a5375c38d40361cfe64e6fd11e1addb936 ......
checking 26989c9d9904e3626443336bcefab0b6e7077d99 ......
	 orig commit -> e1edab87faf6ca30cd137e0795bc73aa9a9a22ec ......
checking 0f895f51a831d73ce24158534784aba5b2a72a9e ......
	 orig commit -> ccf7abb93af09ad0868ae9033d1ca8108bdaec82 ......
checking 1e340bb22af3afc881db78c17b73eaf3d26fb8fe ......
	 orig commit -> ebf6c9cb23d7e56eec8575a88071dec97ad5c6e2 ......
checking ae1768bbbc469b75662c6714957fe5886cc960c4 ......
	 orig commit -> 7892032cfe67f4bde6fc2ee967e45a8fbaf33756 ......
checking 66cdd4347573027f95b4c7b50a7b20079ce66919 ......
	 orig commit -> d71b7896886345c53ef1d84bda2bc758554f5d61 ......
checking f5b54446630a973e1f27b68599366bbd0ac53066 ......
	 orig commit -> 34b2cef20f19c87999fff3da4071e66937db9644 ......
checking d5b6fd77519df03feae24c1409eafb95f347ee88 ......
	 orig commit -> 5fa8bbda38c668e56b0c6cdecced2eac2fe36dec ......
checking 455a457780b64e96189f715b1ef04dbcced7a284 ......
	 orig commit -> 0a764db103376cf69d04449b10688f3516cc0b88 ......
checking ca876dff1e8c04871d019c57016514df4cf04a25 ......
	 orig commit -> 06425c308b92eaf60767bc71d359f4cbc7a561f8 ......
checking e6fbace87c7b57ff6143df2bc18a9ca9ae919bbe ......
	 orig commit -> 63117f09c768be05a0bf465911297dc76394f686 ......
checking a7fe4e5d06338e1a82b1977eca37400951f99730 ......
	 orig commit -> fbfa743a9d2a0ffa24251764f10afc13eb21e739 ......
		 fbfa743a9d2a0ffa24251764f10afc13eb21e739 has problem. Fixes commit -> 63117f09c768be05a0bf465911297dc76394f686
commit e6fbace87c7b57ff6143df2bc18a9ca9ae919bbe
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Feb 1 11:46:32 2017 +0300

    ipv6: pointer math error in ip6_tnl_parse_tlv_enc_lim()
    
    [ Upstream commit 63117f09c768be05a0bf465911297dc76394f686 ]
    
    Casting is a high precedence operation but "off" and "i" are in terms of
    bytes so we need to have some parenthesis here.
    
    Fixes: fbfa743a9d2a ("ipv6: fix ip6_tnl_parse_tlv_enc_lim()")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 6c8556f6e11441c52f9593381c8be50f922f911f ......
	 orig commit -> fd62d9f5c575f0792f150109f1fd24a0d4b3f854 ......
		 fd62d9f5c575f0792f150109f1fd24a0d4b3f854 has problem. Fixes commit -> 0db6f8befc32c68bb13d7ffbb2e563c79e913e13
a51c76b4dfb30496dc65396a957ef0f06af7fb22
commit c4db09a6f60a4b70e3845ab9978cf61bcb2a456e
Author: Hangbin Liu <liuhangbin@gmail.com>
Date:   Tue Aug 14 17:28:26 2018 +0800

    cls_matchall: fix tcf_unbind_filter missing
    
    [ Upstream commit a51c76b4dfb30496dc65396a957ef0f06af7fb22 ]
    
    Fix tcf_unbind_filter missing in cls_matchall as this will trigger
    WARN_ON() in cbq_destroy_class().
    
    Fixes: fd62d9f5c575f ("net/sched: matchall: Fix configuration race")
    Reported-by: Li Shuang <shuali@redhat.com>
    Signed-off-by: Hangbin Liu <liuhangbin@gmail.com>
    Acked-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 64cc7ef5cf1d53ee084231b451d4c73c0cab3012 ......
	 orig commit -> a100ff3eef193d2d79daf98dcd97a54776ffeb78 ......
checking adf86d59bb9b08d9eb67054251d29484c5ec102c ......
	 orig commit -> f1712c73714088a7252d276a57126d56c7d37e64 ......
