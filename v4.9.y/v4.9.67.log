Check from v4.9.67 to v4.9.68
Commit count: 109
checking 3781db07c79e7e4c5273c902f9c4718795866a1c ......
checking 3671e6728f796dee5c557f0782725eeb6a9ad721 ......
	 orig commit -> d86b5672b1adb98b4cdd6fbf0224bbfb03db6e2e ......
checking 08dd03812e8b1dba97eb00092a8cfbe8a7ebc13c ......
	 orig commit -> 1d5a31582ef046d3b233f0da1a68ae26519b2f0a ......
checking 20c315ebabc5a63b0bb169ddd60455ee0b70633e ......
	 orig commit -> 446f666da9f019ce2ffd03800995487e79a91462 ......
checking 545c10375330c9212227a6a7efd84f49ccd6c9b2 ......
	 orig commit -> 57999d1107c1e60c2ca7088f2ac0f819e2f554b3 ......
checking d6ab871c432dbb30d8a186347f4d9ebd22041b6a ......
	 orig commit -> 1129d270cbfbb7e2b1ec3dede4a13930bdd10e41 ......
		 1129d270cbfbb7e2b1ec3dede4a13930bdd10e41 has problem. Fixes commit -> 57999d1107c1e60c2ca7088f2ac0f819e2f554b3
commit 545c10375330c9212227a6a7efd84f49ccd6c9b2
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Sep 22 23:43:25 2017 +0300

    USB: devio: Prevent integer overflow in proc_do_submiturb()
    
    commit 57999d1107c1e60c2ca7088f2ac0f819e2f554b3 upstream.
    
    There used to be an integer overflow check in proc_do_submiturb() but
    we removed it.  It turns out that it's still required.  The
    uurb->buffer_length variable is a signed integer and it's controlled by
    the user.  It can lead to an integer overflow when we do:
    
            num_sgs = DIV_ROUND_UP(uurb->buffer_length, USB_SG_SIZE);
    
    If we strip away the macro then that line looks like this:
    
            num_sgs = (uurb->buffer_length + USB_SG_SIZE - 1) / USB_SG_SIZE;
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    It's the first addition which can overflow.
    
    Fixes: 1129d270cbfb ("USB: Increase usbfs transfer limit")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Alan Stern <stern@rowland.harvard.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 05ffc7ed55279d659a3e6786e1ffa54eb280a80d ......
	 orig commit -> 81cf4a45360f70528f1f64ba018d61cb5767249a ......
		 81cf4a45360f70528f1f64ba018d61cb5767249a has problem. Fixes commit -> 07b9f12864d16c3a861aef4817eb1efccbc5d0e6
commit ab1fbfecd3300325c69b6dd2434329fadec26257
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Tue Dec 19 11:14:42 2017 +0200

    USB: Fix off by one in type-specific length check of BOS SSP capability
    
    commit 07b9f12864d16c3a861aef4817eb1efccbc5d0e6 upstream.
    
    USB 3.1 devices are not detected as 3.1 capable since 4.15-rc3 due to a
    off by one in commit 81cf4a45360f ("USB: core: Add type-specific length
    check of BOS descriptors")
    
    It uses USB_DT_USB_SSP_CAP_SIZE() to get SSP capability size which takes
    the zero based SSAC as argument, not the actual count of sublink speed
    attributes.
    
    USB3 spec 9.6.2.5 says "The number of Sublink Speed Attributes = SSAC + 1."
    
    The type-specific length check patch was added to stable and needs to be
    fixed there as well
    
    Fixes: 81cf4a45360f ("USB: core: Add type-specific length check of BOS descriptors")
    CC: Masakazu Mokuno <masakazu.mokuno@gmail.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 34ba2f04a480101c3d60918a45f68ff66973ef49 ......
	 orig commit -> 80e457699a8dbdd70f2d26911e46f538645c55fc ......
checking e328dff288e68a94ae1ef0c43e3f8c6ad9fbf297 ......
	 orig commit -> 973593a960ddac0f14f0d8877d2d0abe0afda795 ......
checking 0af23e49316d7870b8f2550a72052bf7d608f230 ......
	 orig commit -> 24a367348a017555f982a9ee137070a7a821fa97 ......
checking 3a83421d482e7d7c6f4251dcd825548e5262c054 ......
	 orig commit -> 30cd85dd6edc86ea8d8589efb813f1fad41ef233 ......
		 30cd85dd6edc86ea8d8589efb813f1fad41ef233 has problem. Fixes commit -> 24a367348a017555f982a9ee137070a7a821fa97
commit 0af23e49316d7870b8f2550a72052bf7d608f230
Author: Daniel Vetter <daniel.vetter@ffwll.ch>
Date:   Fri Dec 9 19:53:06 2016 +0100

    dma-buf: Update kerneldoc for sync_file_create
    
    commit 24a367348a017555f982a9ee137070a7a821fa97 upstream.
    
    This was missed when adding a dma_fence_get call. While at it also
    remove the kerneldoc for the static inline helper - no point
    documenting internals down to every detail.
    
    Fixes: 30cd85dd6edc ("dma-buf/sync_file: hold reference to fence when creating sync_file")
    Cc: Gustavo Padovan <gustavo.padovan@collabora.co.uk>
    Cc: Sean Paul <seanpaul@chromium.org>
    Cc: linux-doc@vger.kernel.org
    Cc: Jonathan Corbet <corbet@lwn.net>
    Cc: Sumit Semwal <sumit.semwal@linaro.org>
    Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
    Reviewed-by: Gustavo Padovan <gustavo.padovan@collabora.co.uk>
    Signed-off-by: Sumit Semwal <sumit.semwal@linaro.org>
    Link: http://patchwork.freedesktop.org/patch/msgid/20161209185309.1682-3-daniel.vetter@ffwll.ch
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 424bdc5df002f9f9d802f488f27696a68c0a5c59 ......
	 orig commit -> ea4d5a270b57fa8d4871f372ca9b97b7697fdfda ......
checking f5e0724e76c2c8efb4d3dc43c24228b409bbbfe9 ......
	 orig commit -> a009e975da5c7d42a7f5eaadc54946eb5f76c9af ......
checking d3b029a44e14f5226fd9b410a0a70eb9b7ed6beb ......
	 orig commit -> d6c99f4bf093a58d3ab47caaec74b81f18bc4e3f ......
checking f55d17e9c3af7bf2fdb38c52a9abe4d4cfc0137c ......
	 orig commit -> 83dd1376fd92f33bdeca9e83d479534a4e7f870b ......
checking 9ae85fabdfc0c74c2ac32219e116546e2a5a6309 ......
	 orig commit -> 3792b7c1a70815fe4e954221c096f9278638fd21 ......
checking 4496b88c06744a9a92088e1924c0b39e225898b2 ......
	 orig commit -> 150b6a9d7d6fffb95c0a5349960a10569e8218b5 ......
checking db767404ad09b419779704fff4709a25f1dc252b ......
	 orig commit -> f1e8c67123cf171e2b0357e885e426328b241d7d ......
		 f1e8c67123cf171e2b0357e885e426328b241d7d has problem. Fixes commit -> 99f828436788f0155798145853607ca8f0e6de93
db1fc97ca0c0d3fdeeadf314d99a26188438940a
checking e82ecb230924314b848b68f5dade1ccf38bea838 ......
	 orig commit -> d3862e44daa7a0c94d2f6193502a8c49379acfce ......
checking 1bf0b23c07f1e23f23c05d4f8223ebdebd13c3f1 ......
	 orig commit -> 3b52ce44e720c240afc4c4b03140d7b7811b23bd ......
checking f14ad42b8743897d140808467ed4ae3ce93bd0a5 ......
	 orig commit -> a6aa8fca4d792c72947e341d7842d2f700534335 ......
checking 985b5b238436f015e4368d82c032d3ce085efe17 ......
	 orig commit -> 8f66d3aa1735bc95ae58d846a157357e8d41abb8 ......
checking fc839ecb8edae9ec6fc757e6874f14ffecda7b3d ......
	 orig commit -> 61894b02716f122dd7662d5d89f5b2245ca551e2 ......
checking b53525eaac5590d06785f5fbdd8265b73ecbc911 ......
	 orig commit -> 8111477663813caa1a4469cfe6afaae36cd04513 ......
checking c13a05a8017b01cae73edf90098f1702a5aa1c77 ......
	 orig commit -> 01f8902bcf3ff124d0aeb88a774180ebcec20ace ......
checking a767c866735c0f23e53aa2a4153c7db76988d230 ......
	 orig commit -> ebf692f85ff78092cd238166d8d7ec51419f9c02 ......
checking 959b8e0ba293fe0fddf6bbd5c9c874b7ab1feeb8 ......
	 orig commit -> 42980da2eb7eb9695d8efc0c0ef145cbbb993b2c ......
checking 017a499be5746df215a664775b14e80c087bc941 ......
	 orig commit -> e2e004acc7cbe3c531e752a270a74e95cde3ea48 ......
checking c93c09a057b71fa152de9d56f971fd82248d6499 ......
	 orig commit -> 0911d0041c22922228ca52a977d7b0b0159fee4b ......
checking 3e550debcf7557ca966388d5462519063aa75524 ......
	 orig commit -> 2da64d20a0b20046d688e44f4033efd09157e29d ......
checking 6129fd98822520dccf60389a4e2ef5d0148aad78 ......
	 orig commit -> 4993b39ab04b083ff6ee1147e7e7f120feb6bf7f ......
checking 6a9ffb5a87d874b038a35e5687a502e5afe6dad4 ......
	 orig commit -> c73e44269369e936165f0f9b61f1f09a11dae01c ......
checking 3325615d2b500b9c84f908adbdb843a31acc3126 ......
	 orig commit -> cf626c3b252b2c9d131be0dd66096ec3bf729e54 ......
checking c8d6f83d3b6e2a16d542d44e757c67a4bbb35a28 ......
	 orig commit -> 3ab1b469e847ba425af3c5ad5068cc94b55b38d0 ......
checking d812be8288325ea28297e6bbbd8afb24b7d80f65 ......
	 orig commit -> c6ce1d08eede4c2968ed08aafa3165e8e183c5a1 ......
checking 3976dd677e891c0b2c63d08028d445663539472c ......
	 orig commit -> 06406d81a2d7cfb8abcc4fa6cdfeb8e5897007c5 ......
checking 6bd89953fb1f8e45dc9f93ab59f50c950ef44187 ......
	 orig commit -> 0e1929dedea36781e25902118c93edd8d8f09af1 ......
checking fe8bdc9b79ee644177715a9f72a7b332dd881847 ......
	 orig commit -> 56d806222ace4c3aeae516cd7a855340fb2839d8 ......
checking 49c3164e6d84ce32121d18f060bc05825001df8e ......
	 orig commit -> 91539eb1fda2d530d3b268eef542c5414e54bf1a ......
checking aad54ba21dd8742810f195527e62f99ee0a1cee1 ......
	 orig commit -> 35e22e49a5d6a741ebe7f2dd280b2052c3003ef7 ......
checking 6313adb8de021b841184115ca0e232cb0d533634 ......
	 orig commit -> 9dc3abdd1f7ea524e8552e0a3ef01219892ed1f4 ......
checking e8240244880b1a88ff9e0baf1fda8eccf6b7590b ......
	 orig commit -> af2b14b8b8ae21b0047a52c767ac8b44f435a280 ......
checking 8d4198f8c66bff208cf5c6191ce8d9ad71e2c048 ......
	 orig commit -> 865cea40b69741c3da2574176876463233b2b67c ......
checking dee48e57ae22d8dedb37eda71e029e731034b0e6 ......
	 orig commit -> 115865fa0826ed18ca04717cf72d0fe874c0fe7f ......
checking cab00a9c16c07045bdaaf9e6b4e92de81790f386 ......
	 orig commit -> 3a1d19a29670aa7eb58576a31883d0aa9fb77549 ......
checking b75e47cf84390b8be2d93a08977270166831a2b3 ......
	 orig commit -> 4c833368f0bf748d4147bf301b1f95bc8eccb3c0 ......
checking 05071c058d20c4b5e0b670c5c4fd6976e0547413 ......
	 orig commit -> 0e73fc9a56f22f2eec4d2b2910c649f7af67b74d ......
checking 2001ccb4dea45907e11b6e53888777d7d202beb9 ......
	 orig commit -> 11d8bcef7a0399e1d2519f207fd575fc404306b4 ......
checking 4ee340c06bf2b271641cf08792c5173f55736184 ......
	 orig commit -> e05208ded1905e500cd5b369d624b071951c68b9 ......
checking d8a544c920878780506ee757f11fc2076c0ba724 ......
	 orig commit -> bb1181c9a8b46b6f10e749d9ed94480336445d7f ......
checking 57e76dbbc5609c49c8abb2199561e92f54bdd7eb ......
	 orig commit -> 32b53c012e0bfe20b2745962a89db0dc72ef3270 ......
checking a88ff235e8adf50bb50f5243c242f5f82f7549fa ......
	 orig commit -> 475113d937adfd150eb82b5e2c5507125a68e7af ......
checking 72232a3bc5df33b6908a0590049c97158e2f9b58 ......
	 orig commit -> c6180a6237174f481dc856ed6e890d8196b6f0fb ......
checking cda72bbb7bac1b1ab0cd06051e7a223530689002 ......
	 orig commit -> dbef53621116474bb883f76f0ba6b7640bc42332 ......
checking ee01c59bf8386609fb87720c7c77e01b00941176 ......
	 orig commit -> 63e41226afc3f7a044b70325566fa86ac3142538 ......
checking 72afbf76344ff89272b9971716bb74855bc99157 ......
	 orig commit -> 821b40b79db7dedbfe15ab330dfd181e661a533f ......
checking cca6bca0097359468c635876d726c657df5733f0 ......
	 orig commit -> f65a7c9cb3770ed4d3e7c57c66d7032689081b5e ......
checking 9f800573a31b8993313a8c11eef4e0bd881c785a ......
	 orig commit -> 4b09ec4b14a168bf2c687e1f598140c3c11e9222 ......
checking c682ae717759622c32d3bbd720a6acfbd54c9726 ......
	 orig commit -> 18a3ed59d09cf81a6447aadf6931bf0c9ffec5e0 ......
checking bc13325a2410c5190478caa5c807e4c23edf4093 ......
	 orig commit -> 96aa2e7cf126773b16c6c19b7474a8a38d3c707e ......
		 96aa2e7cf126773b16c6c19b7474a8a38d3c707e has problem. Fixes commit -> 115865fa0826ed18ca04717cf72d0fe874c0fe7f
commit dee48e57ae22d8dedb37eda71e029e731034b0e6
Author: Johannes Berg <johannes.berg@intel.com>
Date:   Mon Jan 23 09:29:09 2017 +0100

    mac80211: don't try to sleep in rate_control_rate_init()
    
    
    [ Upstream commit 115865fa0826ed18ca04717cf72d0fe874c0fe7f ]
    
    In my previous patch, I missed that rate_control_rate_init() is
    called from some places that cannot sleep, so it cannot call
    ieee80211_recalc_min_chandef(). Remove that call for now to fix
    the context bug, we'll have to find a different way to fix the
    minimum channel width issue.
    
    Fixes: 96aa2e7cf126 ("mac80211: calculate min channel width correctly")
    Reported-by: Xiaolong Ye (via lkp-robot) <xiaolong.ye@intel.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking fae478cd9311b1e8bf85f318a2098defabfb71e5 ......
	 orig commit -> 2df26639e708a88dcc22171949da638a9998f3bc ......
checking 71ab86262b66a594976259e1be18879ecfb16c7c ......
	 orig commit -> 3512a1ad56174308a9fd3e10f4b1e3e152e9ec01 ......
checking c4081f91981b9db6ef27d4cbf9b475ccaf9a56fe ......
	 orig commit -> 75422726b0f717d67db3283c2eb5bc14fa2619c5 ......
checking d9a4e70f23c3b648a1cb60827f2580a897642963 ......
	 orig commit -> ce7e40c432ba84da104438f6799d460a4cad41bc ......
checking e3a252a9924cb80678092e841cada6c48773eef2 ......
	 orig commit -> 6052cd1af86f9833b6b0b60d5d4787c4a06d65ea ......
checking b4c3022e673a0c368e16d296691719a6f920ad74 ......
	 orig commit -> 1d0f110a2c6c4bca3dbcc4b0e27f1e3dc2d44a2c ......
checking 105b403ba0dedc930882e8aeae361d650b9c49d3 ......
	 orig commit -> 93e246f783e6bd1bc64fdfbfe68b18161f69b28e ......
checking 08bd389c9ef830e5463fa0dda69370b4e3b14de3 ......
	 orig commit -> 657279778af54f35e54b07b6687918f254a2992c ......
checking 9a777021eeb49279014e490835617dcb5f09d85c ......
	 orig commit -> a3ac350793d90d1da631c8beeee9352387974ed5 ......
checking a97b72427e5f30c0711605fa16eed070ddb0a1b7 ......
	 orig commit -> 38e5a85562a6cd911fc26d951d576551a688574c ......
checking bcc7511ef2566a1ca1945f449122e7e34d43de2a ......
	 orig commit -> bb7da333d0a9f3bddc08f84187b7579a3f68fd24 ......
checking 30bd002c454ad54ccca08dc056577c94021085af ......
	 orig commit -> a9a8cdb368d99bb655b5cdabea560446db0527cc ......
checking 5eb97be8798189ee1080b225d0c8f14f54736bca ......
	 orig commit -> 354bc45bf329494ef6051f3229ef50b9e2a7ea2a ......
checking 7468e767d8f2115427f2066203e5262f5dee8c5c ......
	 orig commit -> 57b5a32135c813f2ab669039fb4ec16b30cb3305 ......
checking 000e7180633f254aef401a8cbca7f470ead41fed ......
	 orig commit -> 7e96304d99477de1f70db42035071e56439da817 ......
checking d2d74d0e58b20d4464f9f24b33e083a3f6766aa6 ......
	 orig commit -> a9b2dff80be979432484afaf7f8d8e73f9e8838a ......
checking 55c050ae5165bbeff669aaf32c7ed4dfc8f513b4 ......
	 orig commit -> 61b6034c6cfdcb265bb453505c3d688e7567727a ......
checking 771c831c1bdef159ff6fa01a6c49f0890b1f3066 ......
	 orig commit -> e3fce68cdbed297d927e993b3ea7b8b1cee545da ......
checking 2383ba62b5352e02df75d3b6dff2dfd156ce8f1c ......
	 orig commit -> fe895ac88b9fbdf2026f0bfd56c82747bb9d7c48 ......
checking 7aa534b8a33f25dbaef0381c86b4c49bf0fedf25 ......
	 orig commit -> 6ae8eefc6c8fe050f057781b70a83262eb0a61ee ......
checking a65f24aac76b3834743ec1eaf9281cbd42658269 ......
	 orig commit -> 5bb4fc2d8641219732eb2bb654206775a4219aca ......
checking a730e156bb75094da4deb3d704a7b00c5fbff34e ......
	 orig commit -> 22905582f6dd4bbd0c370fe5732c607452010c04 ......
checking 8f6e33aad04888d65c3571986dc9b4e81a6f9a92 ......
	 orig commit -> c15562c0dcb2c7f26e891923b784cf1926b8c833 ......
checking 5840a285a1a2d21c27bb9443236b09220ba40679 ......
	 orig commit -> b00bebbc301c8e1f74f230dc82282e56b7e7a6db ......
checking 7f44b524a0ad75c5c7821d3cfb83e35dafbc5ab8 ......
	 orig commit -> a8e9b186f153a44690ad0363a56716e7077ad28c ......
checking 61b7a6f1cea31d5b96419e25054b0f4177e1f576 ......
	 orig commit -> da20ab35180780e4a6eadc804544f1fa967f3567 ......
checking a816a7e1e70b757bd54528240b34d3c9b6049e1e ......
	 orig commit -> 0ab84da2e076948c49d36197ee7d254125c53eab ......
checking 68dfd4dd09003e6171208ea12c521186c809d8db ......
	 orig commit -> ce035409bfa892a2fabb89720b542e1b335c3426 ......
checking de139e81d350526d2b44f5e5192a32443be08238 ......
	 orig commit -> c7ccee224d2d551f712752c4a16947f6529d6506 ......
checking e042fd0f03181475711c5350e88ac1f9ed5dce12 ......
	 orig commit -> 4d5e0689dc9d5640ad46cdfbe1896b74d8df1661 ......
checking b3d7cc5a84b438cf738fe89310cac92f7f8dc7fe ......
	 orig commit -> 36735783fdb599c94b9c86824583df367c65900b ......
checking ee08fca9a14d846120d5c00af803002dbac8223b ......
	 orig commit -> 123c0aab0050cd0e07ce18e453389fbbb0a5a425 ......
checking 946d33e1e6cd99e7191a6446c82ebc66d5432aab ......
	 orig commit -> 3236a965486ba0c6043cf2c7b51943d8b382ae29 ......
checking 510f6573ef5da5cc678e0fdb955f95c6125cd3bd ......
	 orig commit -> f55ab8f27548ff3431a6567d400c6757c49fd520 ......
checking e5f2421df13523e46697d453575c020af57c945b ......
	 orig commit -> 44b02da39210e6dd67e39ff1f48d30c56d384240 ......
checking 8a95afc485767641f712a46086b858e4c7ae2996 ......
	 orig commit -> fec8f5ae1715a01c72ad52cb2ecd8aacaf142302 ......
checking 63074a793d69d9fd56e1456d598f4df9d35d9b70 ......
	 orig commit -> 48070c73058be6de9c0d754d441ed7092dfc8f12 ......
checking b0a46089fe818d33b42fc7c399239db5e4f7bfcf ......
	 orig commit -> ebe7c0a7be92bbd34c6ff5b55810546a0ee05bee ......
checking e4f12192d9e2fae46661b4be364c3ec375d3d7c3 ......
	 orig commit -> c654b21ede93845863597de9ad774fd30db5f2ab ......
checking 232b47b3c88af1da737cd7760f247c4ed58168cf ......
	 orig commit -> 8d9047f8b967ce6181fd824ae922978e1b055cc0 ......
checking 65e6599937d1006a278d29d4b8e742759947ac8f ......
	 orig commit -> 3bfd1300abfe3adb18e84a89d97a0e82a22124bb ......
checking 6ad14c9c646b6d8accb48e8bbcfb201506a9884b ......
	 orig commit -> e43a12f1793ae1fe006e26fe9327a8840a92233c ......
checking 3789201628f5b2d58289682bc38f7a601807e2b3 ......
	 orig commit -> 7fee72d5e8f1e7b8d8212e28291b1a0243ecf2f1 ......
checking ee23ae915fa74956503507c1e55cbb2102f349ec ......
	 orig commit -> 687cb0884a714ff484d038e9190edc874edcf146 ......
checking 0de12a778b923807017d133ba5c0ef2d2a8444e1 ......
	 orig commit -> 2b163b5bce04546da72617bfb6c8bf07a45c4b17 ......
checking cffc01d24d2591cd2184c13fba32f50abfd20e68 ......
	 orig commit -> 9fd99f4f3f5e13ce959900ae57d64b1bdb51d823 ......
checking 48f4d1f7fe48627a4c5c9332bcdf0f2a906e2f20 ......
	 orig commit -> 9306e996574f7f57136a62e49cd0075f85713623 ......
checking 9db9b5f2b1b691c78b239a71a4b6a8d950323a78 ......
	 orig commit -> e393aa2446150536929140739f09c6ecbcbea7f0 ......
checking 322e659a03dcec9e19a2bbd116ee8f1c978a7030 ......
	 orig commit -> d59b23795933678c9638fd20c942d2b4f3cd6185 ......
		 d59b23795933678c9638fd20c942d2b4f3cd6185 has problem. Fixes commit -> e393aa2446150536929140739f09c6ecbcbea7f0
commit 9db9b5f2b1b691c78b239a71a4b6a8d950323a78
Author: Rui Hua <huarui.dev@gmail.com>
Date:   Fri Nov 24 15:14:26 2017 -0800

    bcache: recover data from backing when data is clean
    
    commit e393aa2446150536929140739f09c6ecbcbea7f0 upstream.
    
    When we send a read request and hit the clean data in cache device, there
    is a situation called cache read race in bcache(see the commit in the tail
    of cache_look_up(), the following explaination just copy from there):
    The bucket we're reading from might be reused while our bio is in flight,
    and we could then end up reading the wrong data. We guard against this
    by checking (in bch_cache_read_endio()) if the pointer is stale again;
    if so, we treat it as an error (s->iop.error = -EINTR) and reread from
    the backing device (but we don't pass that error up anywhere)
    
    It should be noted that cache read race happened under normal
    circumstances, not the circumstance when SSD failed, it was counted
    and shown in  /sys/fs/bcache/XXX/internal/cache_read_races.
    
    Without this patch, when we use writeback mode, we will never reread from
    the backing device when cache read race happened, until the whole cache
    device is clean, because the condition
    (s->recoverable && (dc && !atomic_read(&dc->has_dirty))) is false in
    cached_dev_read_error(). In this situation, the s->iop.error(= -EINTR)
    will be passed up, at last, user will receive -EINTR when it's bio end,
    this is not suitable, and wield to up-application.
    
    In this patch, we use s->read_dirty_data to judge whether the read
    request hit dirty data in cache device, it is safe to reread data from
    the backing device when the read request hit clean data. This can not
    only handle cache read race, but also recover data when failed read
    request from cache device.
    
    [edited by mlyle to fix up whitespace, commit log title, comment
    spelling]
    
    Fixes: d59b23795933 ("bcache: only permit to recovery read error when cache device is clean")
    Signed-off-by: Hua Rui <huarui.dev@gmail.com>
    Reviewed-by: Michael Lyle <mlyle@lyle.org>
    Reviewed-by: Coly Li <colyli@suse.de>
    Signed-off-by: Michael Lyle <mlyle@lyle.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
