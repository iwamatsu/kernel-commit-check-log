Check from v4.9.100 to v4.9.101
Commit count: 36
checking 6ba89b52ba6916bc7a3d390d70951e992c0ca39e ......
checking 04103c29b6cc1ffcf9efe167a07e882be68f8367 ......
	 orig commit -> dd83c161fbcc5d8be637ab159c0de015cbff5ba4 ......
checking a164009f480ecc0666bba193bdef0cea2c2a5546 ......
	 orig commit -> d70ef22892ed6c066e51e118b225923c9b74af34 ......
checking 6f1abf8628b750905606996fd5ff5ea22d149238 ......
	 orig commit -> 7f7ccc2ccc2e70c6054685f5e3522efa81556830 ......
checking 61e8f6676e598f173a540a27ce8ca09675a68535 ......
	 orig commit -> 46f1c52e66dbc0d7a99f7c2a3c9debb497fe7b7b ......
checking f21ad10b235b4d4399c5b3653ffbf9a33c69647d ......
	 orig commit -> de3b58bc359a861d5132300f53f95e83f71954b3 ......
checking eddf1b6325fee140bbe472f0a0c916053bec7090 ......
	 orig commit -> c53c4ad96242e868da492f424535bf4b45f80503 ......
	 orig commit -> 79935915300c5eb88a0e94fa9148a7505c14a02a ......
	 orig commit -> 570c70a60f53ca737ead4e5966c446bf0d39fac9 ......
checking 117dd2165ee791b5df888445d94b75c76923b44b ......
	 orig commit -> 3a2b19d1ee5633f76ae8a88da7bc039a5d1732aa ......
checking 3e54e1c3beecce02cf1256eabb8f71f1414be3aa ......
	 orig commit -> 75bf50f4aaa1c78d769d854ab3d975884909e4fb ......
checking 81da9f87ad9d5b77014f0d11946ffbc887bdec70 ......
	 orig commit -> 30d6e0a4190d37740e9447e4e4815f06992dd8c3 ......
		 30d6e0a4190d37740e9447e4e4815f06992dd8c3 has problem. Fixes commit -> d70ef22892ed6c066e51e118b225923c9b74af34
e78c38f6bdd900b2ad9ac9df8eff58b745dc5b3c
commit da92e8a2d986ac1c3a8c613b4760b6dccd359bb3
Author: Jiri Slaby <jslaby@suse.cz>
Date:   Mon Oct 23 13:41:51 2017 +0200

    futex: futex_wake_op, do not fail on invalid op
    
    [ Upstream commit e78c38f6bdd900b2ad9ac9df8eff58b745dc5b3c ]
    
    In commit 30d6e0a4190d ("futex: Remove duplicated code and fix undefined
    behaviour"), I let FUTEX_WAKE_OP to fail on invalid op.  Namely when op
    should be considered as shift and the shift is out of range (< 0 or > 31).
    
    But strace's test suite does this madness:
    
      futex(0x7fabd78bcffc, 0x5, 0xfacefeed, 0xb, 0x7fabd78bcffc, 0xa0caffee);
      futex(0x7fabd78bcffc, 0x5, 0xfacefeed, 0xb, 0x7fabd78bcffc, 0xbadfaced);
      futex(0x7fabd78bcffc, 0x5, 0xfacefeed, 0xb, 0x7fabd78bcffc, 0xffffffff);
    
    When I pick the first 0xa0caffee, it decodes as:
    
      0x80000000 & 0xa0caffee: oparg is shift
      0x70000000 & 0xa0caffee: op is FUTEX_OP_OR
      0x0f000000 & 0xa0caffee: cmp is FUTEX_OP_CMP_EQ
      0x00fff000 & 0xa0caffee: oparg is sign-extended 0xcaf = -849
      0x00000fff & 0xa0caffee: cmparg is sign-extended 0xfee = -18
    
    That means the op tries to do this:
    
      (futex |= (1 << (-849))) == -18
    
    which is completely bogus. The new check of op in the code is:
    
            if (encoded_op & (FUTEX_OP_OPARG_SHIFT << 28)) {
                    if (oparg < 0 || oparg > 31)
                            return -EINVAL;
                    oparg = 1 << oparg;
            }
    
    which results obviously in the "Invalid argument" errno:
    
      FAIL: futex
      ===========
    
      futex(0x7fabd78bcffc, 0x5, 0xfacefeed, 0xb, 0x7fabd78bcffc, 0xa0caffee) = -1: Invalid argument
      futex.test: failed test: ../futex failed with code 1
    
    So let us soften the failure to print only a (ratelimited) message, crop
    the value and continue as if it were right.  When userspace keeps up, we
    can switch this to return -EINVAL again.
    
    [v2] Do not return 0 immediatelly, proceed with the cropped value.
    
    Fixes: 30d6e0a4190d ("futex: Remove duplicated code and fix undefined behaviour")
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Darren Hart <dvhart@infradead.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
commit a164009f480ecc0666bba193bdef0cea2c2a5546
Author: Jiri Slaby <jslaby@suse.cz>
Date:   Thu Nov 30 15:35:44 2017 +0100

    futex: futex_wake_op, fix sign_extend32 sign bits
    
    commit d70ef22892ed6c066e51e118b225923c9b74af34 upstream.
    
    sign_extend32 counts the sign bit parameter from 0, not from 1.  So we
    have to use "11" for 12th bit, not "12".
    
    This mistake means we have not allowed negative op and cmp args since
    commit 30d6e0a4190d ("futex: Remove duplicated code and fix undefined
    behaviour") till now.
    
    Fixes: 30d6e0a4190d ("futex: Remove duplicated code and fix undefined behaviour")
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Darren Hart <dvhart@infradead.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 8c5e7b071be1b530fc9ce574c4ccd310387ad034 ......
	 orig commit -> c91261437985d481c472639d4397931d77f5d4e9 ......
checking 0e67ad52f9d181411918546f64f2c694dca53bbf ......
	 orig commit -> 59d8d4434f429b4fa8a346fd889058bda427a837 ......
checking db869e7dd670f2991030b226d44e5de3a82987b1 ......
	 orig commit -> ce402f044e4e432c296f90eaabb8dbe8f3624391 ......
checking 832978fced8c531ac2366c04a7d5a1124a631b0d ......
	 orig commit -> 16ae6aa1705299789f71fdea59bfb119c1fbd9c0 ......
checking d7bfa99fcc7fdc5a6669ef63c60dc4c3dacb7020 ......
	 orig commit -> 21706ee8a47d3ede7fdae0be6d7c0a0e31a83229 ......
checking 8274cb813b5dcb27de72bf7abf0a2ebad4cf95dd ......
	 orig commit -> 9c26f5f89d01ca21560c6b8a8e4054c271cc3a9c ......
checking 89f502a4c07ed6b9a69b6c81146f4db331224086 ......
	 orig commit -> 4fa8667ca3989ce14cf66301fa251544fbddbdd0 ......
checking d979320029f97adc7c2112d85fc626a71fe2366a ......
	 orig commit -> d89a2adb8bfe6f8949ff389acdb9fa298b6e8e12 ......
checking a9d361cfe203e283a8745d36f9ccde5895237b28 ......
	 orig commit -> e6e6a278b1eaffa19d42186bfacd1ffc15a50b3f ......
checking c832ac459e2dbce204e6a5e072f821eadc49d4f7 ......
	 orig commit -> 46e16d4b956867013e0bbd7f2bad206f4aa55752 ......
checking 1f2b77e868d9ff002a312fd93ee20e636f80614d ......
	 orig commit -> 6910e25de2257e2c82c7a2d126e3463cd8e50810 ......
checking f9a670e10d274274fda7fd74220dfd1048dd332e ......
	 orig commit -> d625329b06e46bd20baf9ee40847d11982569204 ......
checking 4a5de2f99caf699145691a0d55a8812c52a7c8df ......
	 orig commit -> 3148dedfe79e422f448a10250d3e2cdf8b7ee617 ......
checking 7b863f6bd3c29a3d6b6a0eb766f915d32a2104c4 ......
	 orig commit -> 5697db4a696c41601a1d15c1922150b4dbf5726c ......
checking 32a42d5fa1f0cd342009bd852088a67e1d7daf6d ......
	 orig commit -> 72f17baf2352ded6a1d3f4bb2d15da8c678cd2cb ......
checking 51d2a5e792863b77a077d8ca68b456a7406e8889 ......
	 orig commit -> 988bf7243e03ef69238381594e0334a79cef74a6 ......
checking c8b54621de5c0b50b4b8bef90901b645f7f92e01 ......
	 orig commit -> 7df40c2673a1307c3260aab6f9d4b9bf97ca8fd7 ......
checking a541ccf5688da9312f690d988db14f598a4e6b71 ......
	 orig commit -> 88d725bbb43cd63a40c8ef70dd373f1d38ead2e3 ......
checking a73d97e2ab241a867cbab2c511fb41163d1fef67 ......
	 orig commit -> 6ad4e91c6d796b38a7f0e724db1de28eeb122bad ......
checking b26c7becd7f0c4ac7c45e0ae69cbce3e7f7bf0a7 ......
	 orig commit -> 5e5add172ea81152d518b161ec5706503ad3d799 ......
checking 1ed74a5b26c9d5f6e2754008d12a5117f0ac1fc2 ......
	 orig commit -> 14224923c3600bae2ac4dcae3bf0c3d4dc2812be ......
checking cf7ef0af1a6a08e3ee3de640968768ed0a47e49c ......
	 orig commit -> 2c5d5b13c6eb79f5677e206b8aad59b3a2097f60 ......
checking d664986f9290792c6a564a046ed08fcc483a0eec ......
	 orig commit -> 1b97013bfb11d66f041de691de6f0fec748ce016 ......
checking aef419ef7754d22ea647d8a71825c9db0f5c4591 ......
	 orig commit -> a8d7aa17bbc970971ccdf71988ea19230ab368b1 ......
checking 0c2133c8b38c6c6ddfd2340c1aefa4844afd0e94 ......
	 orig commit -> e8238fc2bd7b4c3c7554fa2df067e796610212fc ......
checking 205cd52bbee7fe6452912fe01ceade970bccc926 ......
	 orig commit -> af3e0fcf78879f718c5f73df0814951bd7057d34 ......
