Check from v4.9.127 to v4.9.128
Commit count: 71
checking 70915e25e1cff60c32e79e5b02e9559c1ed7bab2 ......
checking 84580567f1f856d2c7a610273315852e345bc3ac ......
	 orig commit -> 7a9cdebdcc17e426fb5287e4a82db1dfe86339b2 ......
		 7a9cdebdcc17e426fb5287e4a82db1dfe86339b2 has problem. Fixes commit -> 28e2c4bb99aa40f9d5f07ac130cbc4da0ea93079
commit 44ccf71e9c13ceebc915daaf7b5645e17e77f47d
Author: Jann Horn <jannh@google.com>
Date:   Fri Oct 5 15:52:03 2018 -0700

    mm/vmstat.c: fix outdated vmstat_text
    
    commit 28e2c4bb99aa40f9d5f07ac130cbc4da0ea93079 upstream.
    
    7a9cdebdcc17 ("mm: get rid of vmacache_flush_all() entirely") removed the
    VMACACHE_FULL_FLUSHES statistics, but didn't remove the corresponding
    entry in vmstat_text.  This causes an out-of-bounds access in
    vmstat_show().
    
    Luckily this only affects kernels with CONFIG_DEBUG_VM_VMACACHE=y, which
    is probably very rare.
    
    Link: http://lkml.kernel.org/r/20181001143138.95119-1-jannh@google.com
    Fixes: 7a9cdebdcc17 ("mm: get rid of vmacache_flush_all() entirely")
    Signed-off-by: Jann Horn <jannh@google.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: Andrew Morton <akpm@linux-foundation.org>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Acked-by: Roman Gushchin <guro@fb.com>
    Cc: Davidlohr Bueso <dave@stgolabs.net>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: Christoph Lameter <clameter@sgi.com>
    Cc: Kemi Wang <kemi.wang@intel.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 4e7f07396a5f093859a29c83a4dfc9e8fd34b4e0 ......
	 orig commit -> 0633da48f0793aeba27f82d30605624416723a91 ......
checking 3fe958010928c6e5e6dee1e9cff9bd47939ea808 ......
	 orig commit -> 7233982ade15eeac05c6f351e8d347406e6bcd2f ......
checking 3ea051bcf2cd0860c97c7133e1a20923be7529fb ......
	 orig commit -> e466af75c074e76107ae1cd5a2823e9c61894ffb ......
checking 2679c2231bc3fb260f74e1faf7d6810427b1fc6e ......
	 orig commit -> 44a182b9d17765514fa2b1cc911e4e65134eef93 ......
		 44a182b9d17765514fa2b1cc911e4e65134eef93 has problem. Fixes commit -> d850c1658328e757635a46763783c6fd56390dcb
2278446e2b7cd33ad894b32e7eb63afc7db6c86e
commit 52f305530ab6e5915b5e5ee0cb9525df42f2b691
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Mon May 14 11:57:23 2018 +0300

    xhci: Fix USB3 NULL pointer dereference at logical disconnect.
    
    [ Upstream commit 2278446e2b7cd33ad894b32e7eb63afc7db6c86e ]
    
    Hub driver will try to disable a USB3 device twice at logical disconnect,
    racing with xhci_free_dev() callback from the first port disable.
    
    This can be triggered with "udisksctl power-off --block-device <disk>"
    or by writing "1" to the "remove" sysfs file for a USB3 device
    in 4.17-rc4.
    
    USB3 devices don't have a similar disabled link state as USB2 devices,
    and use a U3 suspended link state instead. In this state the port
    is still enabled and connected.
    
    hub_port_connect() first disconnects the device, then later it notices
    that device is still enabled (due to U3 states) it will try to disable
    the port again (set to U3).
    
    The xhci_free_dev() called during device disable is async, so checking
    for existing xhci->devs[i] when setting link state to U3 the second time
    was successful, even if device was being freed.
    
    The regression was caused by, and whole thing revealed by,
    Commit 44a182b9d177 ("xhci: Fix use-after-free in xhci_free_virt_device")
    which sets xhci->devs[i]->udev to NULL before xhci_virt_dev() returned.
    and causes a NULL pointer dereference the second time we try to set U3.
    
    Fix this by checking xhci->devs[i]->udev exists before setting link state.
    
    The original patch went to stable so this fix needs to be applied there as
    well.
    
    Fixes: 44a182b9d177 ("xhci: Fix use-after-free in xhci_free_virt_device")
    Cc: <stable@vger.kernel.org>
    Reported-by: Jordan Glover <Golden_Miller83@protonmail.ch>
    Tested-by: Jordan Glover <Golden_Miller83@protonmail.ch>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
checking 64b40135e41f677eeef1ad7de98cc1a02ea79ce3 ......
	 orig commit -> 643d213a9a034fa04f5575a40dfc8548e33ce04f ......
checking 8d917cba1273877d1be657a99059eab5cd22773a ......
	 orig commit -> d4da0e97baea8768b3d66ccef3967bebd50dfc3b ......
checking 8d4d075495d5afb99c5d18e118a3335aa253c973 ......
	 orig commit -> bd3d16a887b0c19a2a20d35ffed499e3a3637feb ......
checking a5ab2d3f810df02bd63c49aaad911f8d105e3957 ......
	 orig commit -> c77ec61ca0a49544ca81881cc5d5529858f7e196 ......
checking 1b6e019b0250fa112580b4affc3db6d2f6ae84bb ......
	 orig commit -> c2b1509c77a99a0dcea0a9051ca743cb88385f50 ......
checking 5092edd3dbfebf78b836f5000102e78736eefae6 ......
	 orig commit -> 46583e8c48c5a094ba28060615b3a7c8c576690f ......
checking 363bb035cb1d1bf42750c5428c83ff0978b504bc ......
	 orig commit -> 2a96d8ad94ce57cb0072f7a660b1039720c47716 ......
checking c1792b6d2b1d3f5e97ab578595415ae57658adbd ......
	 orig commit -> a00e5f074b3f3cd39d1ccdc53d4d805b014df3f3 ......
checking a4b41559e5d05d785d51ed47ec25a788ade3e7ff ......
	 orig commit -> 14cb2c8a6c5dae57ee3e2da10fa3db2b9087e39e ......
checking 6bccef1e7525b20d63cf38057cd01a9a14513696 ......
	 orig commit -> d43fdae7bac2def8c4314b5a49822cb7f08a45f1 ......
checking 2eea5a3344282c69561d3fe6b576c509b0eb2db8 ......
	 orig commit -> 4faeaf9c0f4581667ce5826f9c90c4fd463ef086 ......
checking 593071cd4be594821e9fdca8ca30f498f51dd781 ......
	 orig commit -> 36f5d9ef26e52edff046b4b097855db89bf0cd4a ......
checking e8a62a66aa82a9b24dab24bb24a70528e51f089a ......
	 orig commit -> 08193d1a893c802c4b807e4d522865061f4e9f4f ......
checking 19bf03fdbdcb9fff27faa05acad148992485f967 ......
	 orig commit -> 28ec2238f37e72a3a40a7eb46893e7651bcc40a6 ......
checking 819a8dae8e1b57fbf84de1dce839ece1dc65b34c ......
	 orig commit -> b1259519e618d479ede8a0db5474b3aff99f5056 ......
checking 7e0782ceebaaed70b0c4b775c27b81e8f8cf6ddb ......
	 orig commit -> 4dbe38dc386910c668c75ae616b99b823b59f3eb ......
checking 403c4772b150c14a36f4c5c1cc9c52833926d00b ......
	 orig commit -> bb853aac2c478ce78116128263801189408ad2a8 ......
checking cd4ae0b05126cc9461a2e50ccb745e5583cc91e2 ......
	 orig commit -> 1a339b658d9dbe1471f67b78237cf8fa08bbbeb5 ......
checking d15c7c8ea02b5cd795004ec607243d140839a6fb ......
	 orig commit -> 10d255c3540239c7920f52d2eb223756e186af56 ......
checking ddeaf5abf5e02bcf8adabd464968f9bfd95e5b5b ......
	 orig commit -> 4b270a8cc5047682f0a3f3f9af3b498408dbd2bc ......
checking c1a5920d394eb73bfdf5635dba4854e610eb58a9 ......
	 orig commit -> 8466baf788ec3e18836bd9c91ba0b1a07af25878 ......
checking 54216006bec6cd7bf6522f867dbba050a49077e2 ......
	 orig commit -> 4bf4eed44bfe288f459496eaf38089502ef91a79 ......
checking 7f6a39430c8f6fa21bc2cb3b58540e086427d1ed ......
	 orig commit -> 6863ea0cda8725072522cd78bda332d9a0b73150 ......
		 6863ea0cda8725072522cd78bda332d9a0b73150 has problem. Fixes commit -> a65c88e16f32aa9ef2e8caa68ea5c29bd5eb0ff0
checking 64a6f7bfb3bc685d450f138c4a9e4b6c48339100 ......
	 orig commit -> b3cadaa485f0c20add1644a5c877b0765b285c0c ......
checking 4f588278587c7b936790a212f9027123f87202eb ......
	 orig commit -> 673bc519c55843c68c3aecff71a4101e79d28d2b ......
checking 5563a9328527de219f331f06aa215d126f041ea4 ......
	 orig commit -> 4dc98c1995482262e70e83ef029135247fafe0f2 ......
checking c9b2ba4aed21ad77e8a953c2235b710db6a8a446 ......
	 orig commit -> 2dbb3ec29a6c069035857a2fc4c24e80e5dfe3cc ......
checking 65d84b6071408959be9204f2750d3b0867209a05 ......
	 orig commit -> 0494d7ffdcebc6935410ea0719b24ab626675351 ......
checking 38fb233a47f5016f996c53ebb90f7525b5eaaddf ......
	 orig commit -> 37a634f60fd6dfbda2c312657eec7ef0750546e7 ......
checking 7ffd72b91451f6247d03761ba4bb8adb66583596 ......
	 orig commit -> 3f259111583801013cb605bb4414aa529adccf1c ......
checking 37438532b656f4d0d0600988020fe5c794679d5c ......
	 orig commit -> 461d8a6bb9879b0e619752d040292e67aa06f1d2 ......
checking 6085dc4b592b66c1efbd56c3e5b989c01ed4d9a5 ......
	 orig commit -> 36e14a787dd0b459760de3622e9709edb745a6af ......
checking 93411827d70035dc3e3aa8964af341770ef3bc6f ......
	 orig commit -> 576d5290d678a651b9f36050fc1717e0573aca13 ......
checking 4bd667d1fd9bb42cd23b6e796b966255ba6fd2f7 ......
	 orig commit -> 32cd3ee511f4e07ca25d71163b50e704808d22f4 ......
checking 2a19b49acca3389e1089d19e9fba70d8f3c2415a ......
	 orig commit -> 21b8732eb4479b579bda9ee38e62b2c312c2a0e5 ......
checking 4af5560a83321334a895e88a51a622f94be07cf8 ......
	 orig commit -> 3611ce9911267cb93d364bd71ddea6821278d11f ......
checking 31b9fa898b8ff1ed8378333ce523ba87426a7cf6 ......
	 orig commit -> 0419056ec8fd01ddf5460d2dba0491aad22657dd ......
checking 2b6c7457d3e080d2374d083838877a26911d4b1b ......
	 orig commit -> f019f07ecf6a6b8bd6d7853bce70925d90af02d1 ......
		 f019f07ecf6a6b8bd6d7853bce70925d90af02d1 has problem. Fixes commit -> 432798195bbce1f8cd33d1c0284d0538835e25fb
commit bb5f531d73dab2bd3912a902365f0ba6559f0c7d
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Oct 26 10:19:51 2018 +0300

    uio: Fix an Oops on load
    
    commit 432798195bbce1f8cd33d1c0284d0538835e25fb upstream.
    
    I was trying to solve a double free but I introduced a more serious
    NULL dereference bug.  The problem is that if there is an IRQ which
    triggers immediately, then we need "info->uio_dev" but it's not set yet.
    
    This patch puts the original initialization back to how it was and just
    sets info->uio_dev to NULL on the error path so it should solve both
    the Oops and the double free.
    
    Fixes: f019f07ecf6a ("uio: potential double frees if __uio_register_device() fails")
    Reported-by: Mathias Thore <Mathias.Thore@infinera.com>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: stable <stable@vger.kernel.org>
    Tested-by: Mathias Thore <Mathias.Thore@infinera.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 4795df607a0eb863686e9262a50b55e9afecff14 ......
	 orig commit -> 81ae962d7f180c0092859440c82996cccb254976 ......
checking 05cb385f95f39151b47baa8cf8d486cba05354f5 ......
	 orig commit -> 363e934d8811d799c88faffc5bfca782fd728334 ......
checking 52ba71368e354b3d1710758d16d40a9ad6bf91c1 ......
	 orig commit -> d63e2fc804c46e50eee825c5d3a7228e07048b47 ......
checking b5f497996aa17b0019a9c9980c000bdf9257adb9 ......
	 orig commit -> 6a64f6e1591322beb8ce16e952a53582caf2a15c ......
checking 9e1a874f527777df3ab10d6f9de4747cae054773 ......
	 orig commit -> 77fefa93bfebe4df44f154f2aa5938e32630d0bf ......
checking d94bf3a4090bdcc8b45a079e76056e6cae16ad23 ......
	 orig commit -> 40b25bce0adbe641a744d1291bc0e51fb7f3c3d8 ......
checking b5c98d8ca8f93a4f73e9cbb53c7e6b8c78ed3f80 ......
	 orig commit -> 6c3711ec64fd23a9abc8aaf59a9429569a6282df ......
checking 45ad26e499276924639ee680623d34201f98c838 ......
	 orig commit -> d89d41556141a527030a15233135ba622ba3350d ......
checking ebce88a8a684956c7e286723f802f1b4fa9e7b76 ......
	 orig commit -> a39284ae9d2ad09975c8ae33f1bd0f05fbfbf6ee ......
checking 3b21adca3d1513f8996c7623596b329fc418a0a4 ......
	 orig commit -> c83532fb0fe053d2e43e9387354cb1b52ba26427 ......
checking bafc00f38958f4ba03370a8f5701b4299bc8adfe ......
	 orig commit -> 047d72c30eedcb953222810f1e7dcaae663aa452 ......
checking 4f39381a02f87a3702e08d45a7203e039af05281 ......
	 orig commit -> c2f83143f1c67d186520b72b6cefbf0aa07a34ee ......
checking 2009f1797bdfbccc6f4aafb93b8c0063dee72cad ......
	 orig commit -> 50972fe78f24f1cd0b9d7bbf1f87d2be9e4f412e ......
checking d1f534f11a39a3dc1a96cf8575f78ccad8fc9367 ......
	 orig commit -> 476accbe2f6ef69caeebe99f52a286e12ac35aee ......
checking 0cbde6c5b67307f353636f8074881fb4d1924709 ......
	 orig commit -> 9c29c31830a4eca724e137a9339137204bbb31be ......
checking 4fa029fc3500bac120df4f03fa9edd421ef53d3e ......
	 orig commit -> 265698d7e6132a2d41471135534f4f36ad15b09c ......
checking 07a6134db045493a6e932fdfdc48bcf1e201e4ca ......
	 orig commit -> e00f4f4d0ff7e13b9115428a245b49108d625f09 ......
checking bb2f46aa43f22235c8dc2881e556d662edfe3bb4 ......
	 orig commit -> 4c93496f18ce5044d78e4f7f9e018682a4f44b3d ......
checking 21a9426de89ecc1a459933ee39e36dfed81f8a24 ......
	 orig commit -> 88a5b39b69ab1828fd4130e2baadd184109cea69 ......
checking 11e085a7b9e8b4020e7882eeff785603a55f7d43 ......
	 orig commit -> 498c4b4e9c23855d17ecc2a108d949bb68020481 ......
checking 0d8f2274d5e7491fe4b95bcc799b78c1b30b0375 ......
	 orig commit -> b0f5a8f32e8bbdaae1abb8abe2d3cbafaba57e08 ......
checking a70e46bcead9c0b8d2a7d1aab1de2242fb97a6fc ......
	 orig commit -> 4d6501dce079c1eb6bf0b1d8f528a5e81770109e ......
		 4d6501dce079c1eb6bf0b1d8f528a5e81770109e has problem. Fixes commit -> b0f5a8f32e8bbdaae1abb8abe2d3cbafaba57e08
commit 0d8f2274d5e7491fe4b95bcc799b78c1b30b0375
Author: Vegard Nossum <vegard.nossum@oracle.com>
Date:   Mon May 29 09:22:07 2017 +0200

    kthread: fix boot hang (regression) on MIPS/OpenRISC
    
    commit b0f5a8f32e8bbdaae1abb8abe2d3cbafaba57e08 upstream.
    
    This fixes a regression in commit 4d6501dce079 where I didn't notice
    that MIPS and OpenRISC were reinitialising p->{set,clear}_child_tid to
    NULL after our initialisation in copy_process().
    
    We can simply get rid of the arch-specific initialisation here since it
    is now always done in copy_process() before hitting copy_thread{,_tls}().
    
    Review notes:
    
     - As far as I can tell, copy_process() is the only user of
       copy_thread_tls(), which is the only caller of copy_thread() for
       architectures that don't implement copy_thread_tls().
    
     - After this patch, there is no arch-specific code touching
       p->set_child_tid or p->clear_child_tid whatsoever.
    
     - It may look like MIPS/OpenRISC wanted to always have these fields be
       NULL, but that's not true, as copy_process() would unconditionally
       set them again _after_ calling copy_thread_tls() before commit
       4d6501dce079.
    
    Fixes: 4d6501dce079c1eb6bf0b1d8f528a5e81770109e ("kthread: Fix use-after-free if kthread fork fails")
    Reported-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Guenter Roeck <linux@roeck-us.net> # MIPS only
    Acked-by: Stafford Horne <shorne@gmail.com>
    Acked-by: Oleg Nesterov <oleg@redhat.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: linux-mips@linux-mips.org
    Cc: Jonas Bonn <jonas@southpole.se>
    Cc: Stefan Kristiansson <stefan.kristiansson@saunalahti.fi>
    Cc: openrisc@lists.librecores.org
    Cc: Jamie Iles <jamie.iles@oracle.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Vegard Nossum <vegard.nossum@oracle.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Amit Pundir <amit.pundir@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking a4187e923f5772bea630bbe803311160c1aa72fc ......
	 orig commit -> b3193bc0dca9bb69c8ba1ec1a318105c76eb4172 ......
checking 50cad8ddc49db7467dac9f243ad80ac026f938e5 ......
	 orig commit -> 16037643969e095509cd8446a3f8e406a6dc3a2c ......
checking 2fdd661abee33f83cb57c4bccf40c951a5d29cd3 ......
	 orig commit -> 204c97245612b6c255edf4e21e24d417c4a0c008 ......
checking 0894c653c83a79074816357f690224005c76e5ee ......
	 orig commit -> 851a15114895c5bce163a6f2d57e0aa4658a1be4 ......
checking 6c1a53fcf209abda8d1757a48824fa112b2f67a9 ......
	 orig commit -> ae7304c3ea28a3ba47a7a8312c76c654ef24967e ......
