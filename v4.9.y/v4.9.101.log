Check from v4.9.101 to v4.9.102
Commit count: 88
checking 2272cdd5d5bf42e3721430ae6076656a42043c34 ......
checking 3394ef1a7efc08e3c185ac2446f06284847ccb37 ......
	 orig commit -> 240da953fcc6a9008c92fae5b1f727ee5ed167ab ......
checking b965592a07a248ef254d9d421bd34a6b548db21f ......
	 orig commit -> bc226f07dcd3c9ef0b7f6236fe356ea4a9cb4769 ......
checking b0ef8c72b3d70505ba7fd72af6b1e3fc9b3ae9bc ......
	 orig commit -> 47c61b3955cf712cadfc25635bf9bc174af030ea ......
checking 0ec827f974e198c609c2f258a5a1f11f9af48bb2 ......
	 orig commit -> be6fcb5478e95bb1c91f489121238deb3abca46a ......
checking ec90464d96c50f90bfe1bde6dea748a6c962313c ......
	 orig commit -> 4b59bdb569453a60b752b274ca61f009e37f4dae ......
checking 599288ec9e20d9772e6e8a27aeae021f018c7336 ......
	 orig commit -> fa8ac4988249c38476f6ad678a4848a736373403 ......
checking ea99935b633bd4766a679e51b173197c750fb00b ......
	 orig commit -> cc69b34989210f067b2c51d5539b5f96ebcc3a01 ......
checking b7b84401576d3858e9573d69d8287e182444f8e9 ......
	 orig commit -> 0270be3e34efb05a88bc4c422572ece038ef3608 ......
checking 7c0b2dc44956533c5aac95f07575feef7b63344c ......
	 orig commit -> 11fb0683493b2da112cd64c9dada221b52463bf7 ......
checking 1189cbf52ad35cfd04a715016200ea81dd4c708f ......
	 orig commit -> ccbcd2674472a978b48c91c1fbfb66c0ff959f24 ......
checking d0cb78f5e4214db86b12a9448d8ccaa005f43cb9 ......
	 orig commit -> 1f50ddb4f4189243c05926b842dc1a0332195f31 ......
		 1f50ddb4f4189243c05926b842dc1a0332195f31 has problem. Fixes commit -> 2f5fb19341883bb6e37da351bc3700489d8506a7
024d83cadc6b2af027e473720f3c3da97496c318
74899d92e66663dc7671a8017b3146dcd4735f3b
commit cd4574c1b94c7158be372624a970e25c22583423
Author: Thomas Gleixner <tglx@xxxxxxxxxxxxx>
Date:   Sun Aug 12 20:41:45 2018 +0200

    KVM: x86: SVM: Call x86_spec_ctrl_set_guest/host() with interrupts disabled
    
    commit 024d83cadc6b2af027e473720f3c3da97496c318 upstream.
    
    Mikhail reported the following lockdep splat:
    
    WARNING: possible irq lock inversion dependency detected
    CPU 0/KVM/10284 just changed the state of lock:
      000000000d538a88 (&st->lock){+...}, at:
      speculative_store_bypass_update+0x10b/0x170
    
    but this lock was taken by another, HARDIRQ-safe lock
    in the past:
    
    (&(&sighand->siglock)->rlock){-.-.}
    
       and interrupts could create inverse lock ordering between them.
    
    Possible interrupt unsafe locking scenario:
    
        CPU0                    CPU1
        ----                    ----
       lock(&st->lock);
                               local_irq_disable();
                               lock(&(&sighand->siglock)->rlock);
                               lock(&st->lock);
        <Interrupt>
         lock(&(&sighand->siglock)->rlock);
         *** DEADLOCK ***
    
    The code path which connects those locks is:
    
       speculative_store_bypass_update()
       ssb_prctl_set()
       do_seccomp()
       do_syscall_64()
    
    In svm_vcpu_run() speculative_store_bypass_update() is called with
    interupts enabled via x86_virt_spec_ctrl_set_guest/host().
    
    This is actually a false positive, because GIF=0 so interrupts are
    disabled even if IF=1; however, we can easily move the invocations of
    x86_virt_spec_ctrl_set_guest/host() into the interrupt disabled region to
    cure it, and it's a good idea to keep the GIF=0/IF=1 area as small
    and self-contained as possible.
    
    Fixes: 1f50ddb4f418 ("x86/speculation: Handle HT correctly on AMD")
    Reported-by: Mikhail Gavrilov <mikhail.v.gavrilov@gmail.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Mikhail Gavrilov <mikhail.v.gavrilov@gmail.com>
    Cc: Joerg Roedel <joro@8bytes.org>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: Tom Lendacky <thomas.lendacky@amd.com>
    Cc: kvm@vger.kernel.org
    Cc: x86@kernel.org
    Cc: stable@vger.kernel.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 05a5d4baac9eb67de53df12d7c287492d80d674a
Author: Juergen Gross <jgross@suse.com>
Date:   Thu Jun 21 10:43:31 2018 +0200

    x86/xen: Add call of speculative_store_bypass_ht_init() to PV paths
    
    commit 74899d92e66663dc7671a8017b3146dcd4735f3b upstream.
    
    Commit:
    
      1f50ddb4f418 ("x86/speculation: Handle HT correctly on AMD")
    
    ... added speculative_store_bypass_ht_init() to the per-CPU initialization sequence.
    
    speculative_store_bypass_ht_init() needs to be called on each CPU for
    PV guests, too.
    
    Reported-by: Brian Woods <brian.woods@amd.com>
    Tested-by: Brian Woods <brian.woods@amd.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Cc: <stable@vger.kernel.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: boris.ostrovsky@oracle.com
    Cc: xen-devel@lists.xenproject.org
    Fixes: 1f50ddb4f4189243c05926b842dc1a0332195f31 ("x86/speculation: Handle HT correctly on AMD")
    Link: https://lore.kernel.org/lkml/20180621084331.21228-1-jgross@suse.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit cd4574c1b94c7158be372624a970e25c22583423
Author: Thomas Gleixner <tglx@xxxxxxxxxxxxx>
Date:   Sun Aug 12 20:41:45 2018 +0200

    KVM: x86: SVM: Call x86_spec_ctrl_set_guest/host() with interrupts disabled
    
    commit 024d83cadc6b2af027e473720f3c3da97496c318 upstream.
    
    Mikhail reported the following lockdep splat:
    
    WARNING: possible irq lock inversion dependency detected
    CPU 0/KVM/10284 just changed the state of lock:
      000000000d538a88 (&st->lock){+...}, at:
      speculative_store_bypass_update+0x10b/0x170
    
    but this lock was taken by another, HARDIRQ-safe lock
    in the past:
    
    (&(&sighand->siglock)->rlock){-.-.}
    
       and interrupts could create inverse lock ordering between them.
    
    Possible interrupt unsafe locking scenario:
    
        CPU0                    CPU1
        ----                    ----
       lock(&st->lock);
                               local_irq_disable();
                               lock(&(&sighand->siglock)->rlock);
                               lock(&st->lock);
        <Interrupt>
         lock(&(&sighand->siglock)->rlock);
         *** DEADLOCK ***
    
    The code path which connects those locks is:
    
       speculative_store_bypass_update()
       ssb_prctl_set()
       do_seccomp()
       do_syscall_64()
    
    In svm_vcpu_run() speculative_store_bypass_update() is called with
    interupts enabled via x86_virt_spec_ctrl_set_guest/host().
    
    This is actually a false positive, because GIF=0 so interrupts are
    disabled even if IF=1; however, we can easily move the invocations of
    x86_virt_spec_ctrl_set_guest/host() into the interrupt disabled region to
    cure it, and it's a good idea to keep the GIF=0/IF=1 area as small
    and self-contained as possible.
    
    Fixes: 1f50ddb4f418 ("x86/speculation: Handle HT correctly on AMD")
    Reported-by: Mikhail Gavrilov <mikhail.v.gavrilov@gmail.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Mikhail Gavrilov <mikhail.v.gavrilov@gmail.com>
    Cc: Joerg Roedel <joro@8bytes.org>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Cc: Matthew Wilcox <willy@infradead.org>
    Cc: Borislav Petkov <bp@suse.de>
    Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: Tom Lendacky <thomas.lendacky@amd.com>
    Cc: kvm@vger.kernel.org
    Cc: x86@kernel.org
    Cc: stable@vger.kernel.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 05a5d4baac9eb67de53df12d7c287492d80d674a
Author: Juergen Gross <jgross@suse.com>
Date:   Thu Jun 21 10:43:31 2018 +0200

    x86/xen: Add call of speculative_store_bypass_ht_init() to PV paths
    
    commit 74899d92e66663dc7671a8017b3146dcd4735f3b upstream.
    
    Commit:
    
      1f50ddb4f418 ("x86/speculation: Handle HT correctly on AMD")
    
    ... added speculative_store_bypass_ht_init() to the per-CPU initialization sequence.
    
    speculative_store_bypass_ht_init() needs to be called on each CPU for
    PV guests, too.
    
    Reported-by: Brian Woods <brian.woods@amd.com>
    Tested-by: Brian Woods <brian.woods@amd.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Cc: <stable@vger.kernel.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: boris.ostrovsky@oracle.com
    Cc: xen-devel@lists.xenproject.org
    Fixes: 1f50ddb4f4189243c05926b842dc1a0332195f31 ("x86/speculation: Handle HT correctly on AMD")
    Link: https://lore.kernel.org/lkml/20180621084331.21228-1-jgross@suse.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 53c434e735fffbf8715a1778ce44387131e0b080 ......
	 orig commit -> d1035d971829dcf80e8686ccde26f94b0a069472 ......
checking 5a63725cd18fcee2af6ec46ccb856b64ad3077b4 ......
	 orig commit -> f7f3dc00f61261cdc9ccd8b886f21bc4dffd6fd9 ......
checking f69e91f2c4ce59deb66bd30150e5153c08873ae9 ......
	 orig commit -> 52817587e706686fcdb27f14c1b000c92f266c96 ......
		 52817587e706686fcdb27f14c1b000c92f266c96 has problem. Fixes commit -> 0aa48468d00959c8a37cd3ac727284f4f7359151
commit 43462d908821d0af30ee3f5e74937034fa9453a5
Author: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
Date:   Mon May 21 17:54:49 2018 -0400

    KVM/VMX: Expose SSBD properly to guests
    
    commit 0aa48468d00959c8a37cd3ac727284f4f7359151 upstream.
    
    The X86_FEATURE_SSBD is an synthetic CPU feature - that is
    it bit location has no relevance to the real CPUID 0x7.EBX[31]
    bit position. For that we need the new CPU feature name.
    
    Fixes: 52817587e706 ("x86/cpufeatures: Disentangle SSBD enumeration")
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: kvm@vger.kernel.org
    Cc: "Radim Krčmář" <rkrcmar@redhat.com>
    Cc: stable@vger.kernel.org
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Link: https://lkml.kernel.org/r/20180521215449.26423-2-konrad.wilk@oracle.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking a7c343228e5c32802431e6cc5b855ae61eb4db72 ......
	 orig commit -> 7eb8956a7fec3c1f0abc2a5517dada99ccc8a961 ......
checking 4a58908fa1476c600548f82effc75bcfa890454a ......
	 orig commit -> e7c587da125291db39ddf1f49b18e5970adbac17 ......
checking 69e9b0b1e04001a743927489bb8b9a10344810d8 ......
	 orig commit -> 15e6c22fd8e5a42c5ed6d487b7c9fe44c2517765 ......
checking 3a684641619ff0e06b8d4cb8c2ffbef304c9bdb1 ......
	 orig commit -> 5f2b745f5e1304f438f9b2cd03ebc8120b6e0d3b ......
checking 6fdd277a9326c5ef3fe94999c9c319ad64333fdd ......
	 orig commit -> ffed645e3be0e32f8e9ab068d257aee8d0fe8eec ......
checking dbb264a253c8b07259d55fb3373b783fcb641b04 ......
	 orig commit -> 7bb4d366cba992904bffa4820d24e70a3de93e76 ......
		 7bb4d366cba992904bffa4820d24e70a3de93e76 has problem. Fixes commit -> ffed645e3be0e32f8e9ab068d257aee8d0fe8eec
commit 6fdd277a9326c5ef3fe94999c9c319ad64333fdd
Author: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
Date:   Fri May 11 16:50:35 2018 -0400

    x86/bugs: Fix the parameters alignment and missing void
    
    commit ffed645e3be0e32f8e9ab068d257aee8d0fe8eec upstream
    
    Fixes: 7bb4d366c ("x86/bugs: Make cpu_show_common() static")
    Fixes: 24f7fc83b ("x86/bugs: Provide boot parameters for the spec_store_bypass_disable mitigation")
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking eb7b5624be3e6249a880310be486245db15a5f5c ......
	 orig commit -> d66d8ff3d21667b41eddbe86b35ab411e40d8c5f ......
checking f79f0efe8e1816063f83926c946026d83b9b287f ......
	 orig commit -> dd0792699c4058e63c0715d9a7c2d40226fcdddc ......
checking f8cd89f5e05d49422315e60ec2db9fcb66d25aca ......
	 orig commit -> e96f46ee8587607a828f783daa6eb5b44d25004d ......
checking bf3da841edae882de545d2d19b1fae205cab8d98 ......
	 orig commit -> 9f65fb29374ee37856dbad847b4e121aab72b510 ......
checking 05a85a396f3989e9ac953785d9dccfc7cd0110f2 ......
	 orig commit -> f21b53b20c754021935ea43364dbf53778eeba32 ......
checking 094c2767c4f02c36eabc27309d78b04f4a216e88 ......
	 orig commit -> 8bf37d8c067bb7eb8e7c381bdadf9bd89182b6bc ......
checking ab677c2addbb128f334c4906f27a0285a67d2180 ......
	 orig commit -> 00a02d0c502a06d15e07b857f8ff921e3e402675 ......
checking c71def81cd07e1bd74da468ae6abe1ce62e3157b ......
	 orig commit -> b849a812f7eb92e96d1c8239b06581b2cfd8b275 ......
checking 036608d62a838aeb63cae0adaf8ac773cb53148c ......
	 orig commit -> 356e4bfff2c5489e016fdb925adbf12a1e3950ee ......
checking ea055f7d43fb3a9d56e80d0116104555d6dde3f7 ......
	 orig commit -> f9544b2b076ca90d887c5ae5d74fab4c21bb7c13 ......
checking 0a112f104548667f5618477ff0f2a54ee626addd ......
	 orig commit -> 5c3070890d06ff82eecb808d02d2ca39169533ef ......
checking 51ef9af2a35bbc21334c801fd15cbfe01210760f ......
	 orig commit -> fae1fa0fc6cca8beee3ab8ed71d54f9a78fa3f64 ......
		 fae1fa0fc6cca8beee3ab8ed71d54f9a78fa3f64 has problem. Fixes commit -> e96f46ee8587607a828f783daa6eb5b44d25004d
commit f8cd89f5e05d49422315e60ec2db9fcb66d25aca
Author: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
Date:   Wed May 9 21:41:38 2018 +0200

    proc: Use underscores for SSBD in 'status'
    
    commit e96f46ee8587607a828f783daa6eb5b44d25004d upstream
    
    The style for the 'status' file is CamelCase or this. _.
    
    Fixes: fae1fa0fc ("proc: Provide details on speculation flaw mitigations")
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 4272f528da381673a8e7845c93daa88b8aa4f4e9 ......
	 orig commit -> 7bbf1373e228840bb0295a2ca26d548ef37f448e ......
checking a078e3e81964c31079627dd32c3ea714d5b1531e ......
	 orig commit -> a73ec77ee17ec556fe7f165d00314cb7c047b1ac ......
checking 89c6e9b599c573802de1b2fff6a9ccd99c3c4e57 ......
	 orig commit -> 885f82bfbc6fefb6664ea27965c3ab9ac4194b8c ......
		 885f82bfbc6fefb6664ea27965c3ab9ac4194b8c has problem. Fixes commit -> 15e6c22fd8e5a42c5ed6d487b7c9fe44c2517765
commit 69e9b0b1e04001a743927489bb8b9a10344810d8
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Fri May 11 15:21:01 2018 +0200

    KVM: SVM: Move spec control call after restore of GS
    
    commit 15e6c22fd8e5a42c5ed6d487b7c9fe44c2517765 upstream
    
    svm_vcpu_run() invokes x86_spec_ctrl_restore_host() after VMEXIT, but
    before the host GS is restored. x86_spec_ctrl_restore_host() uses 'current'
    to determine the host SSBD state of the thread. 'current' is GS based, but
    host GS is not yet restored and the access causes a triple fault.
    
    Move the call after the host GS restore.
    
    Fixes: 885f82bfbc6f x86/process: Allow runtime control of Speculative Store Bypass
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Acked-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 5ed7788df973455378e987fe221bef0661fbe03a ......
	 orig commit -> 5a920155e388ec22a22e0532fb695b9215c9b34d ......
checking 439f2ef884306976f22b42f709c1ccdf04278987 ......
	 orig commit -> b9894a2f5bd18b1691cb6872c9afe32b148d0132 ......
checking fd01e82efa269b7e295533ec7b2d93aa8adf670a ......
	 orig commit -> af8b3cd3934ec60f4c2a420d19a9d416554f140b ......
checking 4812ffbbfcac35270b82292e84e8e7187088c8b8 ......
	 orig commit -> b617cfc858161140d69cc0b5cc211996b557a1c7 ......
checking 7a2d2358ba9b6de29be0a98c8290479df32604b6 ......
	 orig commit -> 28a2775217b17208811fa43a9e96bd1fdf417b86 ......
checking 99318eca2c7ab3250b9614043b9ac6077ff2cb46 ......
	 orig commit -> da39556f66f5cfe8f9c989206974f1cb16ca5d7c ......
checking f854434b37bbf8953900226acd6139081f60d3da ......
	 orig commit -> 764f3c21588a059cd783c6ba0734d4db2d72822d ......
checking 99b13116965f16b2e608e7796cd59198eee5bf06 ......
	 orig commit -> 1115a859f33276fe8afb31c60cf9d8e657872558 ......
checking 19e3a2bec95e966921689ae39117f9dbbaffd99b ......
	 orig commit -> 772439717dbf703b39990be58d8d4e3e4ad0598a ......
checking 6f70a553666dd8c4fa370eaaa41380eec593229c ......
	 orig commit -> 24f7fc83b9204d20f878c57cb77d261ae825e033 ......
		 24f7fc83b9204d20f878c57cb77d261ae825e033 has problem. Fixes commit -> ffed645e3be0e32f8e9ab068d257aee8d0fe8eec
d66d8ff3d21667b41eddbe86b35ab411e40d8c5f
commit eb7b5624be3e6249a880310be486245db15a5f5c
Author: Jiri Kosina <jkosina@suse.cz>
Date:   Thu May 10 22:47:18 2018 +0200

    x86/bugs: Fix __ssb_select_mitigation() return type
    
    commit d66d8ff3d21667b41eddbe86b35ab411e40d8c5f upstream
    
    __ssb_select_mitigation() returns one of the members of enum ssb_mitigation,
    not ssb_mitigation_cmd; fix the prototype to reflect that.
    
    Fixes: 24f7fc83b9204 ("x86/bugs: Provide boot parameters for the spec_store_bypass_disable mitigation")
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 6fdd277a9326c5ef3fe94999c9c319ad64333fdd
Author: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
Date:   Fri May 11 16:50:35 2018 -0400

    x86/bugs: Fix the parameters alignment and missing void
    
    commit ffed645e3be0e32f8e9ab068d257aee8d0fe8eec upstream
    
    Fixes: 7bb4d366c ("x86/bugs: Make cpu_show_common() static")
    Fixes: 24f7fc83b ("x86/bugs: Provide boot parameters for the spec_store_bypass_disable mitigation")
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit eb7b5624be3e6249a880310be486245db15a5f5c
Author: Jiri Kosina <jkosina@suse.cz>
Date:   Thu May 10 22:47:18 2018 +0200

    x86/bugs: Fix __ssb_select_mitigation() return type
    
    commit d66d8ff3d21667b41eddbe86b35ab411e40d8c5f upstream
    
    __ssb_select_mitigation() returns one of the members of enum ssb_mitigation,
    not ssb_mitigation_cmd; fix the prototype to reflect that.
    
    Fixes: 24f7fc83b9204 ("x86/bugs: Provide boot parameters for the spec_store_bypass_disable mitigation")
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking a80714172abca6413d2d6505be64723ae73a903b ......
	 orig commit -> 0cc5fa00b0a88dad140b4e5c2cead9951ad36822 ......
checking 24e4dd97af40afa4d45e85a32d9c2cc81425a62e ......
	 orig commit -> c456442cd3a59eeb1d60293c26cbe2ff2c4e42cf ......
checking cf21f58ae6f264e0a10d9736be97342627cf9837 ......
	 orig commit -> 5cf687548705412da47c9cec342fd952d71ed3d5 ......
checking 0f5dd651397b264903e8becc511af6cf384c273e ......
	 orig commit -> 1b86883ccb8d5d9506529d42dbe1a5257cb30b18 ......
checking 3effee64a9993dc5587fb39f0da4455769e53d26 ......
	 orig commit -> d1059518b4789cabe34bb4b714d07e6089c82ca1 ......
checking 88659d5fd9bea7f6afb227c6d404de750b368b45 ......
	 orig commit -> 4a28bfe3267b68e22c663ac26185aa16c9b879ef ......
checking 741c026d1a0c594f7ad509f44488ef29582fed74 ......
	 orig commit -> 1aa7a5735a41418d8e01fa7c9565eb2657e2ea3f ......
checking 298d5db170f7d8430498417fa96e7472b620dcea ......
	 orig commit -> 02a3307aa9c20b4f6626255b028f07f6cfa16feb ......
checking 944e0fc51a89c9827b98813d65dc083274777c7f ......
	 orig commit -> def9331a12977770cc6132d79f8e6565871e8e38 ......
checking b2d748b3a8d4e936a7e6e5fc9f04e2f9696efcc5 ......
	 orig commit -> 02ee654d3a04563c67bfe658a05384548b9bb105 ......
checking 92291247b6069bce1c9c695b0f3496be4303b9fc ......
	 orig commit -> 9a8fca62aacc1599fea8e813d01e1955513e4fad ......
checking 21cc684a31ef5f9290aaef48b1c9146b019d987d ......
	 orig commit -> 0d73c3f8e7f6ee2aab1bb350f60c180f5ae21a2c ......
checking b1690451d93fcd8af8edfa3b7fc6b966d330b0a8 ......
	 orig commit -> 70948c05fdde0aac32f9667856a88725c192fa40 ......
checking 70b4b1451086218a32122cf9fc7f92ccfb9ae4dc ......
	 orig commit -> 69af7e23a6870df2ea6fa79ca16493d59b3eebeb ......
checking f58b66165d556abcf7eb0375bcc85e9fec2de614 ......
	 orig commit -> 5596fe34495cf0f645f417eb928ef224df3e3cb4 ......
checking 10b408d6324b60fe2a949c2bac63fe9d5bd00851 ......
	 orig commit -> eb0146daefdde65665b7f076fbff7b49dade95b9 ......
checking dc7de9b203e844ecb143b32cc86a54bb528b8c5d ......
	 orig commit -> 0b3225ab9407f557a8e20f23f37aa7236c10a9b1 ......
checking 7925d9da8d189025b190ad43ff476cba240144f2 ......
	 orig commit -> 2fa9d1cfaf0e02f8abef0757002bff12dfcfa4e6 ......
checking a8330db3fb9b434471b861927e8e965835005929 ......
	 orig commit -> 0a0b152083cfc44ec1bb599b57b7aab41327f998 ......
checking 633b4eb03bab15247214eae6a544dabf01688511 ......
	 orig commit -> 9f18fff63cfd6f559daa1eaae60640372c65f84b ......
checking c79b01b8d4cb7c37c5da2299152c2ca9f22acc76 ......
	 orig commit -> 2e68adcd2fb21b7188ba449f0fab3bee2910e500 ......
checking a03e14f09b40a1a10ce464d906814bb85ecd71ab ......
	 orig commit -> 4bbaf2584b86b0772413edeac22ff448f36351b1 ......
checking 252bbeb9688a3c6ede9ea997e93ecb5d05e60209 ......
	 orig commit -> e521813468f786271a87e78e8644243bead48fad ......
checking 270693b978f345c34509676c0729d72c19b6d87e ......
	 orig commit -> ab1e8d8960b68f54af42b6484b5950bd13a4054b ......
checking 96c83fb2de4d45a9da51668e4a2f9aa0ac2c74ba ......
	 orig commit -> c1d2a31397ec51f0370f6bd17b19b39152c263cb ......
checking 895c53e10b91432d0e9a9662448f0c7fc40f79e1 ......
	 orig commit -> 06cb616b1bca7080824acfedb3d4c898e7a64836 ......
checking f32bb2aad27e5dac434a8fa1e12b1d6c25fe49f8 ......
	 orig commit -> 569ccae68b38654f04b6842b034aa33857f605fe ......
checking 1af681da78b748eba17ad244d08e8bbe1980bf5c ......
	 orig commit -> 45dd9b0666a162f8e4be76096716670cf1741f0e ......
checking 20a30619b3315c1f11565cfbc0dbe2ea92a8a003 ......
	 orig commit -> c7be96af89d4b53211862d8599b2430e8900ed92 ......
checking 0c8b8d37c85805ebc47a3e6a5f799bad4de8328e ......
	 orig commit -> 349524bc0da698ec77f2057cf4a4948eb6349265 ......
checking 9488d11728a6d945ce589cac6b6760cdb361e9c6 ......
	 orig commit -> bf308242ab98b5d1648c3663e753556bef9bec01 ......
		 bf308242ab98b5d1648c3663e753556bef9bec01 has problem. Fixes commit -> 7494cec6cb3ba7385a6a223b81906384f15aae34
a6ecfb11bf37743c1ac49b266595582b107b61d4
checking ad04996f0bb0a2bfc8468c04dacc40aed76de8ae ......
	 orig commit -> 602805fb618b018b7a41fbb3f93c1992b078b1ae ......
checking 1c384327383de13223186ec138c57cb49fa1efea ......
	 orig commit -> 5eb9a07a4ae1008b67d8bcd47bddb3dae97456b7 ......
checking a436539bc16fdc6cb69cfa069ca0388df8d53d4b ......
	 orig commit -> efc4a13724b852ddaa3358402a8dec024ffbcb17 ......
checking c5d8237ef6067635ed5cb6b787540c52afe6bc8f ......
	 orig commit -> 3f12888dfae2a48741c4caa9214885b3aaf350f9 ......
checking e303276bbd9e2c603eee7a5ca14362493728d589 ......
	 orig commit -> c8beccc19b92f5172994c0732db689c08f4f98e5 ......
checking 639a74bf5f4da1c64884ff157ec62fed2798d5d0 ......
	 orig commit -> 21493316a3c4598f308d5a9fa31cc74639c4caff ......
checking 0471d407998b58d1f1cbb4f594fc63f9bf0ec7bb ......
	 orig commit -> c171654caa875919be3c533d3518da8be5be966e ......
checking f2a6d5f19450086e5cbdac7168d3fc75af32becf ......
	 orig commit -> 22076557b07c12086eeb16b8ce2b0b735f7a27e7 ......
		 22076557b07c12086eeb16b8ce2b0b735f7a27e7 has problem. Fixes commit -> c171654caa875919be3c533d3518da8be5be966e
commit 0471d407998b58d1f1cbb4f594fc63f9bf0ec7bb
Author: Shuah Khan (Samsung OSG) <shuah@kernel.org>
Date:   Tue May 15 17:57:23 2018 -0600

    usbip: usbip_host: fix bad unlock balance during stub_probe()
    
    commit c171654caa875919be3c533d3518da8be5be966e upstream.
    
    stub_probe() calls put_busid_priv() in an error path when device isn't
    found in the busid_table. Fix it by making put_busid_priv() safe to be
    called with null struct bus_id_priv pointer.
    
    This problem happens when "usbip bind" is run without loading usbip_host
    driver and then running modprobe. The first failed bind attempt unbinds
    the device from the original driver and when usbip_host is modprobed,
    stub_probe() runs and doesn't find the device in its busid table and calls
    put_busid_priv(0 with null bus_id_priv pointer.
    
    usbip-host 3-10.2: 3-10.2 is not in match_busid table...  skip!
    
    [  367.359679] =====================================
    [  367.359681] WARNING: bad unlock balance detected!
    [  367.359683] 4.17.0-rc4+ #5 Not tainted
    [  367.359685] -------------------------------------
    [  367.359688] modprobe/2768 is trying to release lock (
    [  367.359689]
    ==================================================================
    [  367.359696] BUG: KASAN: null-ptr-deref in print_unlock_imbalance_bug+0x99/0x110
    [  367.359699] Read of size 8 at addr 0000000000000058 by task modprobe/2768
    
    [  367.359705] CPU: 4 PID: 2768 Comm: modprobe Not tainted 4.17.0-rc4+ #5
    
    Fixes: 22076557b07c ("usbip: usbip_host: fix NULL-ptr deref and use-after-free errors") in usb-linus
    Signed-off-by: Shuah Khan (Samsung OSG) <shuah@kernel.org>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 59ad4f5342dadadbcf9fd67f29fd6a8ed70ab125 ......
	 orig commit -> 7510df3f29d44685bab7b1918b61a8ccd57126a9 ......
checking 58c9c70cb7e10599f44a996cc4b481fc5c02ea4f ......
	 orig commit -> 1e180f167d4e413afccbbb4a421b48b2de832549 ......
checking dbab65be6bdea68b6a201d03334b44a02860dd2c ......
	 orig commit -> 28b68acc4a88dcf91fd1dcf2577371dc9bf574cc ......
