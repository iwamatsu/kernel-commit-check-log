Check from v4.14.3 to v4.14.4
Commit count: 96
checking 51a2a68fde2035887c0d74aee1c9569c691dfd61 ......
checking e49d722f26b904015077655bff47cdbde049226a ......
	 orig commit -> f9a64e23a9da528e7d8aa1bd2c7bb92be4ebb724 ......
	 orig commit -> 0d794d0d018f23fb09c50f6ae26868bd6ae343d6 ......
checking 88e1bb2a24125747d48b5e2d60bccdb247b86eb9 ......
	 orig commit -> 56350fb8978bbf4aafe08f21234e161dd128b417 ......
checking e522b9247ce931a7319f1d7e9d0bdfa5817b9a4e ......
	 orig commit -> ae5c631e605a452a5a0e73205a92810c01ed954b ......
checking 6c0d3d1d5908f5cd5c838c99663238cac201953b ......
	 orig commit -> b721b65af4eb46df6a1d9e34b14003225e403565 ......
checking 7042c2b9a19e74972f5783ab3b7ef98ebdee293f ......
	 orig commit -> a45b30a6c5db631e2ba680304bd5edd0cd1f9643 ......
checking 569e3d1de49f0896733de8e709fc1fd28034d7dc ......
	 orig commit -> 294cf1af8cf2eb0d1eced377fdfb9a2d3f0e8b42 ......
checking 6613dc721fc232698aafd0f6e214137cfda61e35 ......
	 orig commit -> f4359cedfb43b934f38c50d1604db21333abe57b ......
checking a67936842ba66eb229e6322856fefd2310e0b3fb ......
	 orig commit -> 230b55fa8d64007339319539f8f8e68114d08529 ......
checking 635526b896ca34fff5487d3ac00d04afbee7e1e4 ......
	 orig commit -> c0f4b163a03e73055dd734eaca64b9580e72e7fb ......
checking c48f3c04984557e34cf2b7194eb4d7947edccc5e ......
	 orig commit -> 4988be5813ff2afdc0d8bfa315ef34a577d3efbf ......
checking 2b24fdca153f0fd6c2d0f1f60c7606a53b6db575 ......
	 orig commit -> 6588e412fe872ed81f3fb8d9b4561a66ecb763d0 ......
checking 75e63076249aedd3a7a3c38677d135cc146f1f4b ......
	 orig commit -> 4ca59b14e588f873795a11cdc77a25c686a29d23 ......
checking 248b0ec5ad2501a35f2603384f1c7c7cee79eb02 ......
	 orig commit -> 89ce6e0afee8eafa679093207dabd717af9d09c5 ......
checking 802328da073a0ba36a1cde899c48a5f07732d4aa ......
	 orig commit -> b43aaee69d4327d05e7624d9471c17d015b4d67d ......
checking d8f74d70634aa0dfe063d0e445f683b0545fa5b8 ......
	 orig commit -> 9271c0ca573e02a360b636ecd8cb408852f4e9f6 ......
		 9271c0ca573e02a360b636ecd8cb408852f4e9f6 has problem. Fixes commit -> 7cdeb37c66e9b48fce8be9373bf5c96f2dd76c75
checking e685410c5f30a19c54d652e033942ed270d31b61 ......
	 orig commit -> daee54263c1202cbdab85c5e15ae30b417602efb ......
checking dde499d3cf6edea946ff59cb5d72e4f9ef21f3fd ......
	 orig commit -> 52dd06506e9bbc2a37b352df7dfc5468f8da21fd ......
checking e4c84b504e02f6f7103cdc67b1adbe304910c104 ......
	 orig commit -> 8d8258bdab735d9f3c4b78e091ecfbb2b2b1f2ca ......
checking 78f4bb6e965ddd9f60f607dfaf6e20109da84f6d ......
	 orig commit -> 4d98e5ee6084f6d7bc578c5d5f86de7156aaa4cb ......
checking f5e69000aa80880491ca4a613679bd21c60b048b ......
	 orig commit -> a2f042430784d86eb2b7a6d2a869f552da30edba ......
checking 87139913c0e2d0a7270868a7a36d549dfd3fad5d ......
	 orig commit -> f3621a8eb59a913612c8e6e37d81f16b649f8b6c ......
checking 8153a0fc1212157a4bf8b303cbf51993ff87aa7c ......
	 orig commit -> 4f626a4ac8f57ddabf06d03870adab91e463217f ......
checking e3c5870862d95ff198a1902c3d7bd2a548b89ea7 ......
	 orig commit -> ce99f7206c9105851d97202ed08c058af6f11ac4 ......
checking a5851fdb17dda5f0854417f15a0c9c833a92dcc6 ......
	 orig commit -> a111fbc4c44d2981f1a8fef64418685be5e30280 ......
checking 7c33c32d39b9d11338624d4a7bad4e75bf64fbf8 ......
	 orig commit -> 632c6e4edef17c40bba3be67c980d959790d142f ......
		 632c6e4edef17c40bba3be67c980d959790d142f has problem. Fixes commit -> a111fbc4c44d2981f1a8fef64418685be5e30280
commit a5851fdb17dda5f0854417f15a0c9c833a92dcc6
Author: Ville Syrj채l채 <ville.syrjala@linux.intel.com>
Date:   Mon Oct 23 18:25:40 2017 +0300

    drm/vblank: Tune drm_crtc_accurate_vblank_count() WARN down to a debug
    
    commit a111fbc4c44d2981f1a8fef64418685be5e30280 upstream.
    
    Since commit 632c6e4edef1 ("drm/vblank: Fix flip event vblank count")
    even drivers that don't implement accurate vblank timestamps will end
    up using drm_crtc_accurate_vblank_count(). That leads to a WARN every
    time drm_crtc_arm_vblank_event() gets called. The could be as often
    as every frame for each active crtc.
    
    Considering drm_crtc_accurate_vblank_count() is never any worse than
    the drm_vblank_count() we used previously, let's just skip the WARN
    unless DRM_UT_VBL is enabled. That way people won't be bothered by
    this unless they're debugging vblank code. And let's also change it
    to WARN_ONCE() so that even when you're debugging vblank code you
    won't get drowned by constant WARNs.
    
    Cc: Daniel Vetter <daniel@ffwll.ch>
    Cc: "Szyprowski, Marek" <m.szyprowski@samsung.com>
    Cc: Andrzej Hajda <a.hajda@samsung.com>
    Reported-by: Andrzej Hajda <a.hajda@samsung.com>
    Fixes: 632c6e4edef1 ("drm/vblank: Fix flip event vblank count")
    Signed-off-by: Ville Syrj채l채 <ville.syrjala@linux.intel.com>
    Link: https://patchwork.freedesktop.org/patch/msgid/20171023152540.15364-1-ville.syrjala@linux.intel.com
    Acked-by: Benjamin Gaignard <benjamin.gaignard@linaro.org>
    Reviewed-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 6cd3e4a3e697cca84f27a0af68ba59a6ab00892f ......
	 orig commit -> e1fc12c5d9ad06a2a74e97a91f1b0c5f4c723b50 ......
checking 99b0ea0391d1b49ed4a944a07ad57ee448b0541c ......
	 orig commit -> 2642cf110d08a403f585a051e4cbf45a90b3adea ......
checking 509536b227fb35ed34d144ff4280aa78605ab85e ......
	 orig commit -> 39e16ba16c147e662bf9fbcee9a99d70d420382f ......
checking 45d1765032b645a2e86a606f7d173d4bf97a9810 ......
	 orig commit -> 378e2d5b504fe0231c557751e58b80fcf717cc20 ......
checking d48221f3399764748f706cc1126b5d6465e27d87 ......
	 orig commit -> ab6613b7eaefe85dadfc86025e901c55d71c0379 ......
checking ecd08e684cd1d138bf894e632e0d141f5e7c4140 ......
	 orig commit -> c5066129af4436ab0da8eefe4289774a5409706d ......
checking a00b7ea3df52da50097d22c9eb3b0eba3e504838 ......
	 orig commit -> a695e43712242c354748e9bae5d137d4337a7694 ......
checking 402b1de75ce06404c96cf803e1fe0b5c685f7797 ......
	 orig commit -> 76d6172b6fab16455af4b67bb18a3f66011592f8 ......
checking f182df2eacbe52100b82e193a7917fdbb4312dd1 ......
	 orig commit -> 78aa02c713fcf19e9bc8511ab61a5fd6c877cc01 ......
checking 2d8b3a9b7853dbbf12c853674ef4403481ab1513 ......
	 orig commit -> 40a9960b046290939b56ce8e51f365258f27f264 ......
checking 23506bc7fdb2313c63d8811967fcf82d5764b973 ......
	 orig commit -> 18c437caa5b18a235dd65cec224eab54bebcee65 ......
checking 5e19169a88be15d6c845e93d62e448ee06a14b2f ......
	 orig commit -> 8c97eeccf0ad8783c057830119467b877bdfced7 ......
checking de120fc9624162a3507091d6b92dd9037440c9d8 ......
	 orig commit -> 68615eb01f82256c19e41967bfb3eef902f77033 ......
checking 1cafc451a955c44ec7eba47bae340d9ca5ccb483 ......
	 orig commit -> e393aa2446150536929140739f09c6ecbcbea7f0 ......
checking 260c6625c85e7e1a5db0b5ece9944a4010c9bade ......
	 orig commit -> d59b23795933678c9638fd20c942d2b4f3cd6185 ......
		 d59b23795933678c9638fd20c942d2b4f3cd6185 has problem. Fixes commit -> e393aa2446150536929140739f09c6ecbcbea7f0
commit 1cafc451a955c44ec7eba47bae340d9ca5ccb483
Author: Rui Hua <huarui.dev@gmail.com>
Date:   Fri Nov 24 15:14:26 2017 -0800

    bcache: recover data from backing when data is clean
    
    commit e393aa2446150536929140739f09c6ecbcbea7f0 upstream.
    
    When we send a read request and hit the clean data in cache device, there
    is a situation called cache read race in bcache(see the commit in the tail
    of cache_look_up(), the following explaination just copy from there):
    The bucket we're reading from might be reused while our bio is in flight,
    and we could then end up reading the wrong data. We guard against this
    by checking (in bch_cache_read_endio()) if the pointer is stale again;
    if so, we treat it as an error (s->iop.error = -EINTR) and reread from
    the backing device (but we don't pass that error up anywhere)
    
    It should be noted that cache read race happened under normal
    circumstances, not the circumstance when SSD failed, it was counted
    and shown in  /sys/fs/bcache/XXX/internal/cache_read_races.
    
    Without this patch, when we use writeback mode, we will never reread from
    the backing device when cache read race happened, until the whole cache
    device is clean, because the condition
    (s->recoverable && (dc && !atomic_read(&dc->has_dirty))) is false in
    cached_dev_read_error(). In this situation, the s->iop.error(= -EINTR)
    will be passed up, at last, user will receive -EINTR when it's bio end,
    this is not suitable, and wield to up-application.
    
    In this patch, we use s->read_dirty_data to judge whether the read
    request hit dirty data in cache device, it is safe to reread data from
    the backing device when the read request hit clean data. This can not
    only handle cache read race, but also recover data when failed read
    request from cache device.
    
    [edited by mlyle to fix up whitespace, commit log title, comment
    spelling]
    
    Fixes: d59b23795933 ("bcache: only permit to recovery read error when cache device is clean")
    Signed-off-by: Hua Rui <huarui.dev@gmail.com>
    Reviewed-by: Michael Lyle <mlyle@lyle.org>
    Reviewed-by: Coly Li <colyli@suse.de>
    Signed-off-by: Michael Lyle <mlyle@lyle.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking f5b41b366273ff51c7a62643f8667784eb349fba ......
	 orig commit -> cf33c1ee5254c6a430bc1538232b49c3ea13e613 ......
checking 6e8aca2095790b90217b759a0d5e2ec5138bbfd2 ......
	 orig commit -> 12841f87b7a8ceb3d54f171660f72a86941bfcb3 ......
checking 9c71f896bb8f3b7bb228ece70341b26b2ff32ae9 ......
	 orig commit -> 6e0c9507bf51e1517a80ad0ac171e5402528fcef ......
checking 52d9bb958f080f0a548139676dbf6a87a40af2a0 ......
	 orig commit -> d9bcd462daf34aebb8de9ad7f76de0198bb5a0f0 ......
checking 656155d07658e84ac6ab6f6eceac67b807d6fedb ......
	 orig commit -> 5478e478eee3b096b8d998d4ed445da30da2dfbc ......
checking 1ad53c57966a1a295c0ea5a8a7d6e85d3d75253a ......
	 orig commit -> 644a1f19c6c8393d0c4168a5adf79056da6822eb ......
checking 450d75882552d59bb03b1ccb0999e98f5b227532 ......
	 orig commit -> a64a62ce9a380213dc9e192f762266d70c9b40ec ......
checking 1ef1173c4864c06b6104f386c2694aa740cf02ee ......
	 orig commit -> c892b0d81705c566f575e489efc3c50762db1bde ......
checking e6aa6389263d0db52ea674ed45eb591d21585eca ......
	 orig commit -> 80a780a167d9267c72867b806142bd6ec69ba123 ......
checking 64d1df6f018e728774bdf5d1aeb576d1c8d1872d ......
	 orig commit -> f9f0da98819503b06b35e61869d18cf3a8cd3323 ......
checking 94497458fbb519dbc230e5156f58d4b3a49ba0c1 ......
	 orig commit -> ebe7dd45cf49e3b49cacbaace17f9f878f21fbea ......
checking 957c27d45611ad4ef924840346bc338b8f3c870b ......
	 orig commit -> fb8e456e547ed2c699f64665bd8a3b9bde7b9728 ......
checking 0d8d2b6373c19f85bab6af1702563b50e17b2cf6 ......
	 orig commit -> 34c089e806793a66e450b11bd167db6047399fcd ......
checking 4162b2973c1c6e49d7b193e572dec691233115c3 ......
	 orig commit -> 250dcd11466e06df64b92520e2c56bdae453581b ......
checking 81b3019c35d650e7570ff016ba0732ba6d62c466 ......
	 orig commit -> 12806ba937382fdfdbad62a399aa2dce65c10fcd ......
checking 47b35d190b4676953a5ce25572e031d842264194 ......
	 orig commit -> e872fa94662d0644057c7c80b3071bdb9249e5ab ......
checking bb98bd9733b5b54b0de67e171b0057dcc6fb98de ......
	 orig commit -> 6ea6e84309ca7e0e850b3083e6b09344ee15c290 ......
checking 15cc35bc76f95d22d1e3e42617f6103568f19931 ......
	 orig commit -> 61cb57c9ed631c95b54f8e9090c89d18b3695b3c ......
checking 6c4eaffbad3701f037f1d60ca892dcbe7641ff74 ......
	 orig commit -> 51c4b8bba674cfd2260d173602c4dac08e4c3a99 ......
checking c12e358867d2656b10ccccc36240d6ce93e0e497 ......
	 orig commit -> 2621e945fbf1d6df5f3f0ba7be5bae3d2cf9b6a5 ......
checking 3bfbf2b1bc18f76dc88064b4d6354b2e4424478c ......
	 orig commit -> a3961f824cdbe7eb431254dc7d8f6f6767f474aa ......
checking e9b2a6680fb6173819598cba411522d37cb4585a ......
	 orig commit -> be0f272bfc83797f70d44faca86954df62e2bbc0 ......
checking e1b4e001b22a12b67c890f4611bcf55285fd0fc5 ......
	 orig commit -> 7e8b9c1d2e2f5f45db7d40b50d14f606097c25de ......
checking 69af22696bc737dfe3444d2ece5db000fbff5c35 ......
	 orig commit -> b12cbb21586277f72533769832c24cc6c1d60ab3 ......
checking a3ed24cd28f2db6f6f5b2009565a2463c0df4af0 ......
	 orig commit -> 23970e150a0a49f9a966c46e5d22fed06226098f ......
checking 4479ade38b14f53673b0843308fe24344b37cba5 ......
	 orig commit -> bf25dac38f71d392a31ec074f55cbc941f1eaf1d ......
checking b367ea94535dbdede5e00110339b3e4c9bdc617d ......
	 orig commit -> 345f8f34bb473241d62803951c18a844dd705f8d ......
checking 84779085fa10014b9e8208d7e71b54bced73075c ......
	 orig commit -> 3a2b19d1ee5633f76ae8a88da7bc039a5d1732aa ......
checking 861eae231b0437427676a4ed323d31097002d5a2 ......
	 orig commit -> c14ca8386539a298c1c19b003fe55e37d0f0e89c ......
checking 7f21961a2d7bfe45f734eab5b0ce6a40ee128b17 ......
	 orig commit -> 7d2c3f54e6f646887d019faa45f35d6fe9fe82ce ......
		 7d2c3f54e6f646887d019faa45f35d6fe9fe82ce has problem. Fixes commit -> af955bf15d2c27496b0269b1f05c26f758c68314
commit 36d0a678fb25a7bce5bf9b2828c0d9395fa9a990
Author: Jonathan Cameron <Jonathan.Cameron@huawei.com>
Date:   Tue Dec 19 10:27:24 2017 +0000

    crypto: af_alg - Fix race around ctx->rcvused by making it atomic_t
    
    
    [ Upstream commit af955bf15d2c27496b0269b1f05c26f758c68314 ]
    
    This variable was increased and decreased without any protection.
    Result was an occasional misscount and negative wrap around resulting
    in false resource allocation failures.
    
    Fixes: 7d2c3f54e6f6 ("crypto: af_alg - remove locking in async callback")
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Reviewed-by: Stephan Mueller <smueller@chronox.de>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 721872a1997c4b8aae80ed2e6ef9dc05c53383f6 ......
	 orig commit -> 8e1fa89aa8bc2870009b4486644e4a58f2e2a4f5 ......
checking b78da96d2882bea2ec7184dc1eba3e07e829364d ......
	 orig commit -> 64ebe12494fd5d193f014ce38e1fd83cc57883c8 ......
checking 73cfeab6755ccd442b689ea15769b7e9342c471e ......
	 orig commit -> d8a1a000555ecd1b824ac1ed6df8fe364dfbbbb0 ......
checking db77ab54a5e2f740d1ae39326f90c06d5c5a26d4 ......
	 orig commit -> 15ca08d3299682dc49bad73251677b2c5017ef08 ......
checking 28580e75734b8bfc10d0c23ba026737c71c551c8 ......
	 orig commit -> 8e138e0d92c6c9d3d481674fb14e3439b495be37 ......
checking be75ad849b9f3b0512e976a81e31a0beea1419ab ......
	 orig commit -> f4f0a3d85b50a65a348e2b8635041d6b30f01deb ......
checking f354f4ffe6a371a4ae27a682cea56a7e4e1d74d9 ......
	 orig commit -> 5d38f049cee1e1c4a7ac55aa79d37d01ddcc3860 ......
checking 793a07bef9eb557ebad28cdf9ca30ba41d082c9f ......
	 orig commit -> 43694d4bf843ddd34519e8e9de983deefeada699 ......
checking fa2a9894733bdeaa93c750735b7fdc581ef10024 ......
	 orig commit -> b6e8e12c0aeb5fbf1bf46c84d58cc93aedede385 ......
checking d983b6251c5535b5c5eb02ce48bf8eeb7417ef65 ......
	 orig commit -> d08afa149acfd00871484ada6dabc3880524cd1c ......
checking 13167cf417ddf105d2822eebe775547ed35d1a08 ......
	 orig commit -> 40a899ed16486455f964e46d1af31fd4fded21c1 ......
checking 8a0bb9ebaa8b8faee61f095757662fe5d7fd8da6 ......
	 orig commit -> 6ea8d958a2c95a1d514015d4e29ba21a8c0a1a91 ......
checking c16a65582a72d3adea145b9b0a737c6c35ce89fc ......
	 orig commit -> 04e35f4495dd560db30c25efca4eecae8ec8c375 ......
checking aab681eb8f3bfe2950c8493f39cef6ae34b731b3 ......
	 orig commit -> 5f1d43de54164dcfb9bfa542fcc92c1e1a1b6c1d ......
checking e13ee3368ee1cbf4d2a9a70af20cdf519fd8bb3c ......
	 orig commit -> b70131de648c2b997d22f4653934438013f407a1 ......
checking daac045736edf0e4ec21d7b39b3633537246f9c8 ......
	 orig commit -> b7f0554a56f21fb3e636a627450a9add030889be ......
		 b7f0554a56f21fb3e636a627450a9add030889be has problem. Fixes commit -> 1f704fd0d14043e76e80f6b8b2251b9b2cedcca6
commit 647a37ec1a17c2710103d948a748f21453aabf21
Author: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
Date:   Thu Dec 14 15:33:08 2017 -0800

    mm/frame_vector.c: release a semaphore in 'get_vaddr_frames()'
    
    
    [ Upstream commit 1f704fd0d14043e76e80f6b8b2251b9b2cedcca6 ]
    
    A semaphore is acquired before this check, so we must release it before
    leaving.
    
    Link: http://lkml.kernel.org/r/20171211211009.4971-1-christophe.jaillet@wanadoo.fr
    Fixes: b7f0554a56f2 ("mm: fail get_vaddr_frames() for filesystem-dax mappings")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Dan Williams <dan.j.williams@intel.com>
    Cc: Christian Borntraeger <borntraeger@de.ibm.com>
    Cc: David Sterba <dsterba@suse.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 40aa9d2998ca55d9011e75a0fa526ed52e0a4bce ......
	 orig commit -> 2bb6d2837083de722bfdc369cb0d76ce188dd9b4 ......
		 2bb6d2837083de722bfdc369cb0d76ce188dd9b4 has problem. Fixes commit -> 230f5a8969d8345fc9bbe3683f068246cf1be4b8
commit 0ba6c33b3287e469622c0ccb2658052661bac579
Author: Dan Williams <dan.j.williams@intel.com>
Date:   Wed Feb 21 17:08:01 2018 -0800

    dax: fix vma_is_fsdax() helper
    
    commit 230f5a8969d8345fc9bbe3683f068246cf1be4b8 upstream.
    
    Gerd reports that ->i_mode may contain other bits besides S_IFCHR. Use
    S_ISCHR() instead. Otherwise, get_user_pages_longterm() may fail on
    device-dax instances when those are meant to be explicitly allowed.
    
    Fixes: 2bb6d2837083 ("mm: introduce get_user_pages_longterm")
    Cc: <stable@vger.kernel.org>
    Reported-by: Gerd Rausch <gerd.rausch@oracle.com>
    Acked-by: Jane Chu <jane.chu@oracle.com>
    Reported-by: Haozhong Zhang <haozhong.zhang@intel.com>
    Reviewed-by: Jan Kara <jack@suse.cz>
    Signed-off-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 61586a2286140935fe711b3410c53ee1141633b2 ......
	 orig commit -> 9702cffdbf2129516db679e4467db81e1cd287da ......
checking c6c78a1d4561880c744d3ec932264b264a879e7c ......
	 orig commit -> 31383c6865a578834dd953d9dbc88e6b19fe3997 ......
		 31383c6865a578834dd953d9dbc88e6b19fe3997 has problem. Fixes commit -> 3d942ee079b917b24e2a0c5f18d35ac8ec9fee48
commit f025072cbfe3aec5b6e13618b1c3275868a4a541
Author: Mike Kravetz <mike.kravetz@oracle.com>
Date:   Wed Mar 28 16:01:01 2018 -0700

    ipc/shm.c: add split function to shm_vm_ops
    
    commit 3d942ee079b917b24e2a0c5f18d35ac8ec9fee48 upstream.
    
    If System V shmget/shmat operations are used to create a hugetlbfs
    backed mapping, it is possible to munmap part of the mapping and split
    the underlying vma such that it is not huge page aligned.  This will
    untimately result in the following BUG:
    
      kernel BUG at /build/linux-jWa1Fv/linux-4.15.0/mm/hugetlb.c:3310!
      Oops: Exception in kernel mode, sig: 5 [#1]
      LE SMP NR_CPUS=2048 NUMA PowerNV
      Modules linked in: kcm nfc af_alg caif_socket caif phonet fcrypt
      CPU: 18 PID: 43243 Comm: trinity-subchil Tainted: G         C  E 4.15.0-10-generic #11-Ubuntu
      NIP:  c00000000036e764 LR: c00000000036ee48 CTR: 0000000000000009
      REGS: c000003fbcdcf810 TRAP: 0700   Tainted: G         C  E (4.15.0-10-generic)
      MSR:  9000000000029033 <SF,HV,EE,ME,IR,DR,RI,LE>  CR: 24002222  XER: 20040000
      CFAR: c00000000036ee44 SOFTE: 1
      NIP __unmap_hugepage_range+0xa4/0x760
      LR __unmap_hugepage_range_final+0x28/0x50
      Call Trace:
        0x7115e4e00000 (unreliable)
        __unmap_hugepage_range_final+0x28/0x50
        unmap_single_vma+0x11c/0x190
        unmap_vmas+0x94/0x140
        exit_mmap+0x9c/0x1d0
        mmput+0xa8/0x1d0
        do_exit+0x360/0xc80
        do_group_exit+0x60/0x100
        SyS_exit_group+0x24/0x30
        system_call+0x58/0x6c
      ---[ end trace ee88f958a1c62605 ]---
    
    This bug was introduced by commit 31383c6865a5 ("mm, hugetlbfs:
    introduce ->split() to vm_operations_struct").  A split function was
    added to vm_operations_struct to determine if a mapping can be split.
    This was mostly for device-dax and hugetlbfs mappings which have
    specific alignment constraints.
    
    Mappings initiated via shmget/shmat have their original vm_ops
    overwritten with shm_vm_ops.  shm_vm_ops functions will call back to the
    original vm_ops if needed.  Add such a split function to shm_vm_ops.
    
    Link: http://lkml.kernel.org/r/20180321161314.7711-1-mike.kravetz@oracle.com
    Fixes: 31383c6865a5 ("mm, hugetlbfs: introduce ->split() to vm_operations_struct")
    Signed-off-by: Mike Kravetz <mike.kravetz@oracle.com>
    Reported-by: Laurent Dufour <ldufour@linux.vnet.ibm.com>
    Reviewed-by: Laurent Dufour <ldufour@linux.vnet.ibm.com>
    Tested-by: Laurent Dufour <ldufour@linux.vnet.ibm.com>
    Reviewed-by: Dan Williams <dan.j.williams@intel.com>
    Acked-by: Michal Hocko <mhocko@suse.com>
    Cc: Davidlohr Bueso <dave@stgolabs.net>
    Cc: Manfred Spraul <manfred@colorfullife.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking bf55918cb4fb374000ad1d063b207a17a93e8726 ......
	 orig commit -> 1501899a898dfb5477c55534bdfd734c046da06d ......
checking b4c8fce668423c0dde23fe57682e5bd8df5bbeb9 ......
	 orig commit -> 63cd448908b5eb51d84c52f02b31b9b4ccd1cb5a ......
checking 01ca9727457a167463a47e35b6fe5a5173b4e341 ......
	 orig commit -> a8f97366452ed491d13cf1e44241bc0b5740b1f0 ......
checking 786b924d39bad16ff99aacdb4076df027cc2f8b8 ......
	 orig commit -> 687cb0884a714ff484d038e9190edc874edcf146 ......
checking b8d0c953d928fbdc3207f741a2b77055d34fd0b9 ......
	 orig commit -> 4b81cb2ff69c8a8e297a147d2eb4d9b5e8d7c435 ......
checking 2cbd866dd858ceebe2b735e3d8cd8eb702ca1f88 ......
	 orig commit -> 9968e12a291e639dd51d1218b694d440b22a917f ......
