Check from v4.14.59 to v4.14.60
Commit count: 246
checking deaacd62c2175c624a41c1b3c721e23c660031e1 ......
checking 0a2f6725115dc17b97294403a5afca830c64e48a ......
	 orig commit -> 15ecbe94a45ef88491ca459b26efdd02f91edb6d ......
checking 1f04d750f6688c0fe0cc13fd05d5744d1e7b50c3 ......
	 orig commit -> f4c9f85f3b2cb7669830cd04d0be61192a4d2436 ......
checking fd31083cbe050d10b1cb4f681929154cffe18fb6 ......
	 orig commit -> 522040ea5fdd1c33bbf75e1d7c7c0422b96a94ef ......
		 522040ea5fdd1c33bbf75e1d7c7c0422b96a94ef has problem. Fixes commit -> 15ecbe94a45ef88491ca459b26efdd02f91edb6d
commit 0a2f6725115dc17b97294403a5afca830c64e48a
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Jun 27 08:47:21 2018 -0700

    tcp: add one more quick ack after after ECN events
    
    [ Upstream commit 15ecbe94a45ef88491ca459b26efdd02f91edb6d ]
    
    Larry Brakmo proposal ( https://patchwork.ozlabs.org/patch/935233/
    tcp: force cwnd at least 2 in tcp_cwnd_reduction) made us rethink
    about our recent patch removing ~16 quick acks after ECN events.
    
    tcp_enter_quickack_mode(sk, 1) makes sure one immediate ack is sent,
    but in the case the sender cwnd was lowered to 1, we do not want
    to have a delayed ack for the next packet we will receive.
    
    Fixes: 522040ea5fdd ("tcp: do not aggressively quick ack after ECN events")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: Neal Cardwell <ncardwell@google.com>
    Cc: Lawrence Brakmo <brakmo@fb.com>
    Acked-by: Neal Cardwell <ncardwell@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 1c005489fa9876713d8f1f626947017dd45a9bfc ......
	 orig commit -> 9a9c9b51e54618861420093ae6e9b50a961914c5 ......
checking 5a1baf194475849ff31a34c30d540bc1795a2a7c ......
	 orig commit -> a3893637e1eb0ef5eb1bbc52b3a8d2dfa317a35d ......
checking fffd3058eaf438e71cd301c14a0c67161a5864df ......
	 orig commit -> 61f4b23769f0cc72ae62c9a81cf08f0397d40da8 ......
		 61f4b23769f0cc72ae62c9a81cf08f0397d40da8 has problem. Fixes commit -> 91874ecf32e41b5d86a4cb9d60e0bee50d828058
commit 09901e570c9e9d6bf302716edd3a5a14417a0657
Author: Dmitry Safonov <dima@arista.com>
Date:   Sun Aug 5 01:35:53 2018 +0100

    netlink: Don't shift on 64 for ngroups
    
    commit 91874ecf32e41b5d86a4cb9d60e0bee50d828058 upstream.
    
    It's legal to have 64 groups for netlink_sock.
    
    As user-supplied nladdr->nl_groups is __u32, it's possible to subscribe
    only to first 32 groups.
    
    The check for correctness of .bind() userspace supplied parameter
    is done by applying mask made from ngroups shift. Which broke Android
    as they have 64 groups and the shift for mask resulted in an overflow.
    
    Fixes: 61f4b23769f0 ("netlink: Don't shift with UB on nlk->ngroups")
    Cc: "David S. Miller" <davem@davemloft.net>
    Cc: Herbert Xu <herbert@gondor.apana.org.au>
    Cc: Steffen Klassert <steffen.klassert@secunet.com>
    Cc: netdev@vger.kernel.org
    Cc: stable@vger.kernel.org
    Reported-and-Tested-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Dmitry Safonov <dima@arista.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking e208cda5f10e131f149e59d7de4ceb943382f4c6 ......
	 orig commit -> 7acf9d4237c46894e0fa0492dd96314a41742e84 ......
		 7acf9d4237c46894e0fa0492dd96314a41742e84 has problem. Fixes commit -> 61f4b23769f0cc72ae62c9a81cf08f0397d40da8
commit fffd3058eaf438e71cd301c14a0c67161a5864df
Author: Dmitry Safonov <dima@arista.com>
Date:   Mon Jul 30 18:32:36 2018 +0100

    netlink: Don't shift with UB on nlk->ngroups
    
    [ Upstream commit 61f4b23769f0cc72ae62c9a81cf08f0397d40da8 ]
    
    On i386 nlk->ngroups might be 32 or 0. Which leads to UB, resulting in
    hang during boot.
    Check for 0 ngroups and use (unsigned long long) as a type to shift.
    
    Fixes: 7acf9d4237c4 ("netlink: Do not subscribe to non-existent groups").
    Reported-by: kernel test robot <rong.a.chen@intel.com>
    Signed-off-by: Dmitry Safonov <dima@arista.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking da970765b24cad557bde1b0372166e46c1276230 ......
	 orig commit -> 822fb18a82abaf4ee7058793d95d340f5dab7bfc ......
		 822fb18a82abaf4ee7058793d95d340f5dab7bfc has problem. Fixes commit -> 8edfe2e992b75aee3da9316e9697c531194c2f53
commit 33e4afbb44fe3d84dd90274b738f6b1c7d0ef68e
Author: Juergen Gross <jgross@suse.com>
Date:   Fri Sep 7 14:21:30 2018 +0200

    xen/netfront: fix waiting for xenbus state change
    
    commit 8edfe2e992b75aee3da9316e9697c531194c2f53 upstream.
    
    Commit 822fb18a82aba ("xen-netfront: wait xenbus state change when load
    module manually") added a new wait queue to wait on for a state change
    when the module is loaded manually. Unfortunately there is no wakeup
    anywhere to stop that waiting.
    
    Instead of introducing a new wait queue rename the existing
    module_unload_q to module_wq and use it for both purposes (loading and
    unloading).
    
    As any state change of the backend might be intended to stop waiting
    do the wake_up_all() in any case when netback_changed() is called.
    
    Fixes: 822fb18a82aba ("xen-netfront: wait xenbus state change when load module manually")
    Cc: <stable@vger.kernel.org> #4.18
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 7309441887f64f6ed942408a569bd629386cec71 ......
	 orig commit -> 383d470936c05554219094a4d364d964cb324827 ......
checking 7f36a065963aebecc94d2be1e37f30162e5fe229 ......
	 orig commit -> 9939a46d90c6c76f4533d534dbadfa7b39dc6acc ......
checking e071e2fdf45e1505436ad61e42b0d44904db1997 ......
	 orig commit -> b0753408aadf32c7ece9e6b765017881e54af833 ......
checking ccdbe7e2374a0be4ab81d70b53d23dd12b043648 ......
	 orig commit -> 136f55f660192ce04af091642efc75d85e017364 ......
checking 112e80ac82851912fd8dae1e4c0bf1a0fb3bffeb ......
	 orig commit -> 7f3fc7ddf719cd6faaf787722c511f6918ac6aab ......
checking 11b694387ab493fbc10e203109ed2faed5d592b1 ......
	 orig commit -> 101f0cd4f2216d32f1b8a75a2154cf3997484ee2 ......
checking 1494a3a70ce0feb8b9fe47f3cb30e804d2d4c2d5 ......
	 orig commit -> 9fc12023d6f51551d6ca9ed7e02ecc19d79caf17 ......
checking 20556dc7f239f8ad724f8ff5fec289961439cd6b ......
	 orig commit -> 9bb2289f90e671bdb78e306974187424ac19ff8e ......
checking 2eda475b0849ba898abf99a61e8926b1335f6988 ......
	 orig commit -> 218bbea11a777c156eb7bcbdc72867b32ae10985 ......
checking 1fbc97b32b7e3756e2b84f652108281791e9d377 ......
	 orig commit -> eee1fe64765c562d8bcaf95e5631a8ea2f760f34 ......
checking 62310e69f1ae5923646adedfd916fa2b090bada7 ......
	 orig commit -> 79a4ed4f0f93fc65e48a0fc5247ffa5645f7b0cc ......
checking a61b3378b8473694ebd87e59c8a5dd35839c50fc ......
	 orig commit -> 940efcc8889f0d15567eb07fc9fd69b06e366aa5 ......
checking b8e9dd160ca358f1f2aadccfb64eb1a85d6a77da ......
	 orig commit -> 1990cf7c21ea185cec98c6d45a82c04481261e35 ......
checking 6aaaca7b81e4929a43ac8c0a2a734b762467c60f ......
	 orig commit -> e8d4bfe3a71537284a90561f77c85dea6c154369 ......
checking 21b5b5e80bcf3f873bf89e9d957a129ea1fdcf36 ......
	 orig commit -> 94b9d290b753cbbc87971ee134511245f5872a83 ......
checking 011626d61a43224dcebefca44279f981d504e8d2 ......
	 orig commit -> 493fb50e958c1c6deef7feff0b8c3855def78d75 ......
checking f547aa20b4f61662ad3e1a2040bb3cc5778f19b0 ......
	 orig commit -> 5012284700775a4e6e3fbe7eac4c543c4874b559 ......
checking dc1b4b710fbef5f8f5a41efe35368e9dd07e71cb ......
	 orig commit -> 8d5a803c6a6ce4ec258e31f76059ea5153ba46ef ......
checking cdcbe750acd6cd1e083189c2a50810eeb59f057a ......
	 orig commit -> 362eca70b53389bddf3143fe20f53dcce2cfdf61 ......
checking 961f9feb4332f448e5d2fa4851ba86598fc112de ......
	 orig commit -> 01cfb7937a9af2abb1136c7e89fbf3fd92952956 ......
checking af41fd042fc10e65e93ed009c4933fd65c67ef2c ......
	 orig commit -> 81e69df38e2911b642ec121dec319fad2a4782f3 ......
checking b8088c524ae21dc97c86e09f0e41bb419804b5ad ......
	 orig commit -> 5151842b9d8732d4cbfa8400b40bff894f501b2f ......
checking cc5d7097ba8f46a9b5382edba733e5a8705145ba ......
	 orig commit -> 9362dd1109f87a9d0a798fbc890cb339c171ed35 ......
checking 2258351cf0865b6367a5b2b3843ec39a146bb0f8 ......
	 orig commit -> b403ea2404889e1227812fa9657667a1deb9c694 ......
checking 2488689fe4684756269a961117bf348ef458d58c ......
	 orig commit -> 7056a2bccc3b5afc51f9b35b30a46f0d9219968d ......
checking 2aa0e652bce105ca0d5544e887ed7224e0339a91 ......
	 orig commit -> 5e9cfeba6abb7e1a3f240bd24eb29178f0b83716 ......
checking 20f01a1b7b6d00b8b440c57b124a10606e209271 ......
	 orig commit -> 4f212e40468650e220c1770876c7f25b8e0c1ff5 ......
checking a2fdb85a15eb060dbe64201d6932e6c72379bcef ......
	 orig commit -> 933e1c4a667103c4d10ebdc9505a0a6abd8c3fbd ......
checking b754906cd9c9e7dce29e38a744a61b28dc161e5f ......
	 orig commit -> a941e2fab3207cb0d57dc4ec47b1b12c8ea78b84 ......
checking e1d4f1e2856ee76e0d12141da2737a87875037fa ......
	 orig commit -> 90db5c829692a0a7845e977e45719b4699216bd4 ......
checking 98121d665d93f306d832ac635fd77acdfeb41302 ......
	 orig commit -> ad4222a0e29664666a71685a6e732923ca7c7e45 ......
checking a5ed99bc6f59803e58b59bc1c84444f77b6b7712 ......
	 orig commit -> 465891fe9237b02f8d0fd26448f733fae7236f4a ......
checking bb7cccb01c84e0b7c0a4d43fa7b25510e56e92df ......
	 orig commit -> a3feb6ef50def7c91244d7bd15a3625b7b49b81f ......
checking 07b2a0d0018381c7b9760e6d3ceb72f683ad46ba ......
	 orig commit -> 3239b8cd28fd849a2023483257d35d68c5876c74 ......
checking 0b45eb5a340d100856721c8ba9a49e29e655d7f7 ......
	 orig commit -> 37b37d2609cb0ac267280ef27350b962d16d272e ......
checking fb2b60e27a16c4bd5054bc518ec3d786036b7dce ......
	 orig commit -> 02f3703934a42417021405ef336fe45add13c3d1 ......
checking 4886bf00337f4c70a2bffc0e2e5cdbf813342a95 ......
	 orig commit -> b7e1e6859fbf60519fd82d7120cee106a6019512 ......
checking 09740f513e3fab823bce5daecc6caf00f1d0b82c ......
	 orig commit -> ad2fdcdf75d169e7a5aec6c7cb421c0bec8ec711 ......
checking a07fc8dd2bd4f790940c9a5ac3b7fae1e6738800 ......
	 orig commit -> 31545df391d58a3bb60e29b1192644a6f2b5a8dd ......
checking f17d397bfed4371bbefcb1a9d497ea9cd057df3e ......
	 orig commit -> 5d111f5190848d6fb1c414dc57797efea3526a2f ......
checking d136b7ab24b8df3136f96babe0b4e369c1e6c120 ......
	 orig commit -> ece97f3a5fb50cf5f98886fbc63c9665f2bb199d ......
checking 6cfd0d3c627f845ca6bcc560a57c0bb2632e4ebf ......
	 orig commit -> 050f810e238f268670f14a8f8b793ba2dbf2e92f ......
checking 62079c8371aaa08f072a3e41628e753f9696d6df ......
	 orig commit -> c1c734cb1f54b062f7e67ffc9656d82f5b412b9c ......
checking 41e1f1feee0634c0acb3727980607c7784c7d494 ......
	 orig commit -> d8caf662b4aeeb2ac83ac0b22e40db88e9360c77 ......
checking e906355a7f9665c8ec07739f8561d0c783ee5dad ......
	 orig commit -> 1b60f6dfa38403ff7c4d0b4b7ecdb810f9789a2a ......
checking fea5a0d8781644daaee936a84f14dae5e7fc0795 ......
	 orig commit -> 8113b89fc615cfb531df0334fb3a091cf6a45ce0 ......
checking 06d6d1ad241d9df531e1d8af4be6c468cb830d8b ......
	 orig commit -> 23bcc480dac204c7dbdf49d96b2c918ed98223c2 ......
checking e7cb8f11f6e2341a167c1b23c58716171f3fcfb9 ......
	 orig commit -> f700546682a62a87a9615121a37ee7452dab4b76 ......
checking 0be8aa812cef251b4208bb51fadf3510ded74f33 ......
	 orig commit -> 78e450719c702784e42af6da912d3692fd3da0cb ......
checking e660508795d6cc8e509be68596164d6574111149 ......
	 orig commit -> 300eec7c0a2495f771709c7642aa15f7cc148b83 ......
checking 18a48a7a4418381d03492de3dba8cfee5ca5d14f ......
	 orig commit -> 2ea009095c6e7396915a1d0dd480c41f02985f79 ......
checking 75d1087174d27e2ac835f04ba782e39b7e54096d ......
	 orig commit -> 4dc93fcf0b95dc3fda4db917effae31fbb8ad2a8 ......
checking c7ab132d7e3de0a9020bf5b3e91fc6fe0736031d ......
	 orig commit -> 7c8b77f81552c2b0e5d9c560da70bc4149ce66a5 ......
checking 2ee4fbcd27f97006748656c791fcf59dec0ebf3f ......
	 orig commit -> ea48e877994f086af481427bac110aa63686c3ce ......
checking 503f22cf7b2a5fcd4dfb0041eca03028a6284fab ......
	 orig commit -> 1c74d5c0de0c2cc29fef97a19251da2ad6f579bd ......
checking 9746d3696de90457a0e7880d4e8ed3d8fe52f8bc ......
	 orig commit -> bf3fbdfbec947cdd04b2f2c4bce11534c8786eee ......
checking c06f5a018f710ff24ef7c1b922d2b6704c35dd8c ......
	 orig commit -> 02acc80d19edb0d5684c997b2004ad19f9f5236e ......
checking da2b62c740def7d1e9d7ce4506e8b1b7a2514e89 ......
	 orig commit -> de5b55c1d4e30740009864eb35ce4ed856aac01d ......
checking 4531135811a5bf90011c99fe850a45a16a584f8b ......
	 orig commit -> bb084c0f61d659f0e6d371b096e0e57998f191d6 ......
checking 232703c9091f18b57f371fe6bbe0716ef5c09df5 ......
	 orig commit -> 7e5d05e18ba1ed491c6f836edee7f0b90f3167bc ......
checking c3b540c06954615a58c74fd4658d715fdf8955a4 ......
	 orig commit -> 38e62046d4c95272e2fb001d2d72baf48fa090e9 ......
checking 17b26041363f7d4589e23bcad21f62dbfcf50bf8 ......
	 orig commit -> ded5fa4e8bac25612caab8f0822691308a28a552 ......
checking c9e5888ec8ae248d30b499a0add51047ef135b03 ......
	 orig commit -> 03d9fbc39730b3e6b2e7047dc85f0f70de8fb97d ......
checking d6ce4f1bf79a007a8c391c93b58eef15b2fffb07 ......
	 orig commit -> 486e6661367b40f927aadbed73237693396cbf94 ......
checking f0b0debbb49dc14b2deddfd226b22ad7c5496828 ......
	 orig commit -> ff178981bd5fd1667f373098740cb1c6d6efa1ba ......
checking ab76f866c8f0936b72813659f70a16cd827ac683 ......
	 orig commit -> 8e142e9e628975b0dddd05cf1b095331dff6e2de ......
checking c6f9830cfb475d71b37f84657091012eee7bfb9d ......
	 orig commit -> fc2a69f3903dfd97cd47f593e642b47918c949df ......
checking cf006139691098ddfcbf70be07bf2a6264df27e1 ......
	 orig commit -> e1b7f11b37def5f3021c06e8c2b4953e099357aa ......
checking 4bbf1ce3a1e3efb6c746e0dbf5a5acb889b3b38b ......
	 orig commit -> 5b19d284f5195a925dd015a6397bfce184097378 ......
checking 15239633dc559c22aea80b1627176d6bc181b2f7 ......
	 orig commit -> ab7f5bf0928be2f148d000a6eaa6c0a36e74750e ......
checking b62ed0bbbd63bfec2a28c26d9c9a2d264b3c5ed8 ......
	 orig commit -> 8bfc218d0ebbabcba8ed2b8ec1831e0cf1f71629 ......
checking 66eb9942673a55eed1d7267c04da389d5cdb64f9 ......
	 orig commit -> 24d4b7c8de007cff9c7d83c06ae76099fdcce008 ......
checking 52a21fcafa717002402c0e28c9e466950710b96d ......
	 orig commit -> cf04968efe341b9b1c30a527e5dd61b2af9c43d2 ......
checking de3da42dc775f991dd4aa94b4407c06d59be7395 ......
	 orig commit -> 4f4616ceebaf045c59e8a6aa01f08826d18d5c63 ......
checking ad1562ae81357df085117c3ee61513ec5836c98b ......
	 orig commit -> 9413532788df7470297dd0475995c5dc5b07f362 ......
checking 13e4e358b94c2c07257a6b50170af93681ae10eb ......
	 orig commit -> 27e833dabab74ee665e487e291c9afc6d71effba ......
checking ca588ff3e7d649690bb80a1cca4ed3dd591d9cd7 ......
	 orig commit -> 9899e4d3523faaef17c67141aa80ff2088f17871 ......
checking a0e86c016bb4e8c59e57a99bf53762ad313593c5 ......
	 orig commit -> c9318a3e0218bc9dacc25be46b9eec363259536f ......
checking 112f47373e364dd508cd9515f626b3fc83fddb10 ......
	 orig commit -> dac0490718bd17df5e3995ffca14255e5f9ed22d ......
checking c9b5d1519c2400281b2c7dd121100725a8d6c11f ......
	 orig commit -> 3c0a83b14ea71fef5ccc93a3bd2de5f892be3194 ......
checking d5d8223d7c67fb005407e0e569ea8cd5b9f4b4fa ......
	 orig commit -> 77715b7ddb446bd39a06f3376e85f4bb95b29bb8 ......
checking af5e8846a5e9a34f61b672954db0810b74b79268 ......
	 orig commit -> 9c4a121e82634aa000a702c98cd6f05b27d6e186 ......
checking 59d9b120600d981c2cf4b31a34334f75480cb7a3 ......
	 orig commit -> a75bbe71a27875fdc61cde1af6d799037cef6bed ......
checking d49f8498042a5b7f99fff05a7c2adbf3135906d1 ......
	 orig commit -> 0cc4655cb57af0b7e105d075c4f83f8046efafe7 ......
checking f3766ad7d325be5dae629f16f6027e2acf0a01bc ......
	 orig commit -> daa36370b62428cca6d48d1b2530a8419f631c8c ......
checking ce222fb1256b4c8c712bc894e395cd7640fc54ad ......
	 orig commit -> c975e472ec12392a0c34de1350e634310f8a1dea ......
checking 885d2128ab7f7bf469c9441d2178081585003a74 ......
	 orig commit -> 804689ad2d9b66d0d3920b48cf05881049d44589 ......
checking adf9ceabfc168c26c83e7160103aa752c136cc1b ......
	 orig commit -> 43d0d3c52787df0221d1c52494daabd824fe84f1 ......
checking 240bc678f72629b9bf420d7dd75462fdcb70b2a8 ......
	 orig commit -> daab3349ad1a69663ccad278ed71d55974d104b4 ......
		 daab3349ad1a69663ccad278ed71d55974d104b4 has problem. Fixes commit -> 3bcd47726c3b744fd08781795cca905cc59a1382
commit aa3aff5b469b7520932fa8816efb78a0eaf012d4
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Sun May 20 20:49:47 2018 -0700

    net: phy: phylink: Don't release NULL GPIO
    
    [ Upstream commit 3bcd47726c3b744fd08781795cca905cc59a1382 ]
    
    If CONFIG_GPIOLIB is disabled, gpiod_put() becomes a stub that produces a
    warning, this helped identify that we could be attempting to release a NULL
    pl->link_gpio GPIO descriptor, so guard against that.
    
    Fixes: daab3349ad1a ("net: phy: phylink: Release link GPIO")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Reviewed-by: Andrew Lunn <andrew@lunn.ch>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
checking fa57e8d54494f1a9b636dbd18d566217ef29423b ......
	 orig commit -> 8a22a3e1e768c309b718f99bd86f9f25a453e0dc ......
checking deb1feaad03a78b545c949e54582ae57b3c56982 ......
	 orig commit -> b6da31b2c07c46f2dcad1d86caa835227a16d9ff ......
checking 731b918a624c48dba4a48767668fac57f8a7a42e ......
	 orig commit -> c79756cb5f084736b138da9319a02f7c72644548 ......
checking 6fdc5235693b333f28a6581d049799156ba2807a ......
	 orig commit -> 50808bfcc14b854775a9f1d0abe3dac2babcf5c3 ......
checking 901366594729fdd10d1288487dd86011d6f135d0 ......
	 orig commit -> 57a66497e1b7486609250a482f05935eae5035e9 ......
checking 9c552c4e262fb4a640ada039b395b954960a066e ......
	 orig commit -> 7207b94754b6f503b278b5b200faaf662ffa1da8 ......
checking b565e4e9dd09e55bfb0340e58d67c395dcee30c2 ......
	 orig commit -> e95b8e718f9bd2386a29639dd21c633b4951dc21 ......
checking d7ed9da96a8a4cb47601e56f5632167b46679fbb ......
	 orig commit -> 9ef20753e044f7468c4113e5aecd785419b0b3cc ......
checking d0eca5d32b11ef4d7c176a362c55e4ed53f13a73 ......
	 orig commit -> b3a81b6c4fc6730ac49e20d789a93c0faabafc98 ......
checking 83eef34c65f179af463924e34fc687426ac2f705 ......
	 orig commit -> 9dcb3df4281876731e4e8bff7940514d72375154 ......
checking b42848b2a819ae2fd310080bfb32221fde9e084d ......
	 orig commit -> 9b3f217faf48603c91d4ca44a18e6ff74c3c1c0c ......
checking 14bedc05ab2d18bd17014615f0897545337eabf1 ......
	 orig commit -> 7a47f20eb1fb8fa8d7a8fe3a4fd8c721f04c2174 ......
checking 3ee32f73fc7258b5470286d8d05585b3b4d10486 ......
	 orig commit -> 06a574c7ef69bd0bd26ed08e35967acb76622ab3 ......
checking d85073283aa7f838b3add199cbccfaed0a943bb5 ......
	 orig commit -> 37e376df5f4993677c33968a0c19b0c5acbf1108 ......
checking 6a43d5a3ca6c03103e614ac7d075615ef6609731 ......
	 orig commit -> 1cfc63b5ae60fe7e01773f38132f98d8b13a99a0 ......
checking 62a87c8759f272e65f7f60f4f7d2d7b3671e1edc ......
	 orig commit -> e5c0680fd2c44252868fe4062558925b5506b179 ......
checking 25436aa5c184b93e364c9c97d754f71725be1179 ......
	 orig commit -> 377a879d9832f4ba69bd6a1fc996bb4181b1e504 ......
checking d239ee35ddb2a967d1b6003eef180cb544c95249 ......
	 orig commit -> c6213eb1aee308e67377fd1890d84f7284caf531 ......
checking 0bd08027bd197103aa1c42843a894dca7414b5d0 ......
	 orig commit -> 7a2148dfda8001c983f0effd9afd8a7fa58e99c4 ......
checking 41b16e6ec6a8c269a4d7b75bf36523662c402db4 ......
	 orig commit -> 6e7d0ba1e59b1a306761a731e67634c0f2efea2a ......
checking 7627ecfc4902a724b8a9aac971e19bd05655ad85 ......
	 orig commit -> c42a0e2675721e1444f56e6132a07b7b1ec169ac ......
checking 1b3433cfa222b65342a4f945b96bec991ed6fe05 ......
	 orig commit -> b33d10624fdc15cdf1495f3f00481afccec76783 ......
checking 6192b115c58b725789cb333b4e043a6491c8d313 ......
	 orig commit -> 0b01fd3d40fe6402e5fa3b491ef23109feb1aaa5 ......
checking 9b56c4151ac250f8ee4f320c0ac63ffdce275304 ......
	 orig commit -> 11d42c81036324697d367600bfc16f6dd37636fd ......
checking 9f25b548732cfdcda2b0bd638497934b4a8eaaf6 ......
	 orig commit -> e6000a438e534ee0afd9e83b67f4e23a26dd1067 ......
checking 8f5e7596fe3a41be914056bab79230b2c71d7e63 ......
	 orig commit -> 9a99247c9c1d1c95c6e8153d013979aac6111c6e ......
checking aca6728fa1ede62972c266b30e618240ef8e9e6e ......
	 orig commit -> 63d22063073b0ab46d1e06fe633fb5de8f5c58e1 ......
checking 192591ade6ecaf9147b7fde977cda0bc77cc5a67 ......
	 orig commit -> d666fc5479ad76a1bcbe6476d4997cea714bab2d ......
checking 33775b07426be6553003a15743bd24a8bf0d841e ......
	 orig commit -> 4f2fc25c0f8bcc8db1b8a7b21e88c3d7f35c5acb ......
checking fdb5207dc1f1e3844728df5bb9d125d0c0cee5e7 ......
	 orig commit -> 9e156c54ace310ce7fb1cd960e62416947f3d47c ......
checking b095b5888eab89b8e92418b2ebd93f6d535711b9 ......
	 orig commit -> 2e3611e9546c2ed4def152a51dfd34e8dddae7a5 ......
checking c9f744135ad7004cb978ec59c745c5e852bf7476 ......
	 orig commit -> b334456ec2021b1addc19806990115e69ec4ac32 ......
checking 63c7e58dab1e6ba58e6c3c31097c58c8a1eaf0f5 ......
	 orig commit -> 36dd26e0c8d42699eeba87431246c07c28075bae ......
checking 1d6908ce90b5506cdd5f163afeecffa0039a62e6 ......
	 orig commit -> 13562d1f5e2fbe2cf33b23a00abca3f71264c4ac ......
checking 625d1e783375202c099b67aecb9b227d5b6f568f ......
	 orig commit -> 7e48e23a1f4a50f93ac1073f1326e0a73829b631 ......
checking d0a963cf845c6ed34e911774b0de6bca7daa5e6f ......
	 orig commit -> 1898eb61fbc9703efee886d3abec27a388cf28c3 ......
checking cffbdb7702ba549f116c44fe3006a587c94f8885 ......
	 orig commit -> fd90bc559bfba743ae8de87ff23b92a5e4668062 ......
checking 945e6ce33d80cd637e6e9f24871c926581bac2c9 ......
	 orig commit -> 30bfce0b63fa68c14ae1613eb9d259fa18644074 ......
checking a30ff89c34b8b6b952a8ceb9bf68027f19e28be8 ......
	 orig commit -> 64cf81675a1f64c1b311e4611dd3b6a961607612 ......
checking 082900a6d56766eeefd6f301c71f4d913d2cd0b9 ......
	 orig commit -> 408fec36a1ab3d14273c2116b449ef1e9be3cb8b ......
checking 39da0cf774db1f1ac41caa4d01a8c63903e5f85d ......
	 orig commit -> 4ea69b2fd623dee2bbc77d3b6b7d8c0924e2026a ......
checking cf957ba7c6e8ab922ae45f46a31b5f8370bcf889 ......
	 orig commit -> 21816364715f508c10da1e087e352bc1e326614f ......
checking 210807e92b4902fa672c3ab6cb7381d374a58b23 ......
	 orig commit -> e4ccb1dae6bdef228d729c076c38161ef6e7ca34 ......
checking 56a58a5395aba19f0a4c3e18b46532511994841a ......
	 orig commit -> 0921e11e1e12802ae0a3c19cb02e33354ca51967 ......
checking 7eda318729800c9ef64483da1b9fea194edbb134 ......
	 orig commit -> eae5f709a4d738c52b6ab636981755d76349ea9e ......
		 eae5f709a4d738c52b6ab636981755d76349ea9e has problem. Fixes commit -> 8af1da40669609707303eecdb857f48a5ba5792d
checking 566be4969b839411244da8a80342e8da199d03d8 ......
	 orig commit -> 5a4b475cf8511da721f20ba432c244061db7139f ......
checking d26f8af1a126c81b9b28ad7cf05fe946c845c428 ......
	 orig commit -> f72cf3f1d49f2c35d6cb682af2e8c93550f264e4 ......
checking ee8c480702a62eb757effc81a6868407248363e3 ......
	 orig commit -> b87a358b4a1421abd544c0b554b1b7159b2b36c0 ......
checking c0ff32b7e85238baf1172304be65a256e6adca83 ......
	 orig commit -> c89ca593220931c150cffda24b4d4ccf82f13fc8 ......
checking 935674605cf8db94d85a504cb3c4e4587052aeb8 ......
	 orig commit -> 699e2302c286a14afe7b7394151ce6c4e1790cc1 ......
checking 936058197fbb3ecf62bfa8a5eb493bd34d6eff72 ......
	 orig commit -> 9c790f2d234f65697e3b0948adbfdf36dbe63dd7 ......
checking c4b93c91bb63b5e3de43df9015bf3a1b0ddf7a47 ......
	 orig commit -> 2a3169a54bb53717928392a04fb84deb765b51f1 ......
checking aafbcce424ecba10419a6303a67a184358f577e0 ......
	 orig commit -> 667ddac5745fb9fddfe8f7fd2523070f50bd4442 ......
checking 5e895c9cb8ca4c9b0c99cc48a3673e13a5020537 ......
	 orig commit -> 1ea3986ad2bc72081c69f3fbc1e5e0eeb3c44f17 ......
checking 3c51226005d940f901689ae76a01d73ae29f8e52 ......
	 orig commit -> 4f183687e3fad3ce0e06e38976cad81bc4541990 ......
checking cdd106451c6a8b7c56b2284ac51aac4d23e5854b ......
	 orig commit -> 9ba8df0c52b3e6baa436374b429d3d73bd09a320 ......
checking f198926d6a408d66d01ee59bf3db48361423becb ......
	 orig commit -> 45faf6e096da8bb80e1ddf8c08a26a9601d9469e ......
checking be1c9763cbc749d1d646d0797ff07da24d4bdb46 ......
	 orig commit -> 01fb2994a98dc72c8818c274f7b5983d5dd885c7 ......
checking 1afb8720b6943afe538b775fe3acbf367b772f4b ......
	 orig commit -> 72cd4cc28e234ed7189ee508ed65ab60c80a97c8 ......
checking 4bb1acf80c7fb05994955a26d7e40594ff6e9a9a ......
	 orig commit -> 2e050f00a0f0e07467050cb4afae0234941e5bf3 ......
checking 2040b0d8c9c0aa2e50b733c0ecd12d8605d8a66d ......
	 orig commit -> 6f5cdfa802733dcb561bf664cc89d203f2fd958f ......
checking d93663a78783621895afd0999272c2ab8bad82cd ......
	 orig commit -> 62fc00a6611a0014c85763f9def1fc07c15d1302 ......
checking 652b94b72696e6cbe7332a461b535657de23fcbe ......
	 orig commit -> ff987fcf011d20c53b3a613edf6e2055ea48e26e ......
checking 2737a4adec5a8903e7fa2ddd8368dff1ad658fe7 ......
	 orig commit -> ff3d27a048d926b3920ccdb75d98788c567cae0d ......
		 ff3d27a048d926b3920ccdb75d98788c567cae0d has problem. Fixes commit -> 6f7de19ed3d4d3526ca5eca428009f97cf969c2f
commit f72388e3670e870a32854058eff63d0021036457
Author: Qu Wenruo <wqu@suse.com>
Date:   Wed Jun 27 18:19:55 2018 +0800

    btrfs: quota: Set rescan progress to (u64)-1 if we hit last leaf
    
    [ Upstream commit 6f7de19ed3d4d3526ca5eca428009f97cf969c2f ]
    
    Commit ff3d27a048d9 ("btrfs: qgroup: Finish rescan when hit the last leaf
    of extent tree") added a new exit for rescan finish.
    
    However after finishing quota rescan, we set
    fs_info->qgroup_rescan_progress to (u64)-1 before we exit through the
    original exit path.
    While we missed that assignment of (u64)-1 in the new exit path.
    
    The end result is, the quota status item doesn't have the same value.
    (-1 vs the last bytenr + 1)
    Although it doesn't affect quota accounting, it's still better to keep
    the original behavior.
    
    Reported-by: Misono Tomohiro <misono.tomohiro@jp.fujitsu.com>
    Fixes: ff3d27a048d9 ("btrfs: qgroup: Finish rescan when hit the last leaf of extent tree")
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: Misono Tomohiro <misono.tomohiro@jp.fujitsu.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
checking 31371d2dad493ce0bc7892cb6c1c3f5f397e12b9 ......
	 orig commit -> 3d3a2e610ea5e7c6d4f9481ecce5d8e2d8317843 ......
checking 3bf165384e82f70571ba2f439391dab86eddb23d ......
	 orig commit -> 0552210997badb6a60740a26ff9d976a416510f0 ......
checking ef61d940cd9684ebb910b12d4d0936c2ffc1f811 ......
	 orig commit -> c08db7d8d295a4f3a10faaca376de011afff7950 ......
checking 9aecdc961e6a863866dcbc389b4d5324937a73ad ......
	 orig commit -> 90b2da89a083e1395cb322521a42397c49ae4500 ......
checking b7ffc03574f84c616d64e00b4ec3c4c46743b95f ......
	 orig commit -> 636757ab6c93e19e2f58d3b3af1312e34eaffbab ......
checking 1a95962bf210b6d763113d595e74223341492684 ......
	 orig commit -> 7d0b130cbbfa4651cc1ab9268a2956c1b9d82ff9 ......
checking 6f8688bf299b35b5d585a96fa670ea257257fbd3 ......
	 orig commit -> 6e91d48371e79862ea2c05867aaebe4afe55a865 ......
checking 852feed35dcdec8521c2f3227545ad2a187a2b3b ......
	 orig commit -> b817047ae70c0bd67b677b65d0d69d72cd6e9728 ......
checking 6648fdc71138caf906bfa0a96b383a7d0dee270f ......
	 orig commit -> 0dbbf25561b29ffab5ba6277429760abdf49ceff ......
checking 3d4837733945a7d9505fd08db34b4188ca59e854 ......
	 orig commit -> 9c0ac70ad24d76b873c1551e27790c7f6a815d5c ......
checking 5650a9be9635f574b8e5e8b38981324ffb283140 ......
	 orig commit -> 66d9975c5a7c40aa7e4bb0ec0b0c37ba1f190923 ......
checking 678e64c63217eb7a88eb77613979ac9037357cf7 ......
	 orig commit -> 9960521c44a5d828f29636ceac0600603ecbddbf ......
checking 73425f6ad6ebaf08db227748c69dbd4bbfd09d0d ......
	 orig commit -> 0f22e40053bd5378ad1e3250e65c574fd61c0cd6 ......
checking 59b837d5927cfa03867931aed336ac0c9fa9700c ......
	 orig commit -> e73e81b6d0114d4a303205a952ab2e87c44bd279 ......
checking 233cba023484e3f4ff68d01204eae85ad427ec0d ......
	 orig commit -> 3bbce531788719749520f28052cabdef16af6b16 ......
checking f559bb20c1aeedb0a9efe321b3e42d97556aa970 ......
	 orig commit -> 5c30a038fb8ec8cdff011e6b5d5d51eb415381d4 ......
checking 4312c2df0b7b77e45a8727fba5cf9a36729e07bc ......
	 orig commit -> b27f0259e8cea74c627327c063742a83613dd460 ......
checking 9c8f3af662827d596ecde90c6c7ce069c0e404eb ......
	 orig commit -> e9d33f149f52981fd856a0b16aa8ebda89b02e34 ......
checking 596a9bfe8190ccd8ea9d9b6fa16390a575b02d32 ......
	 orig commit -> d71f11c076c420c4e2fceb4faefa144e055e0935 ......
checking 71b1bf6e97534f11dc268d4c9b7e5a9b9235e662 ......
	 orig commit -> 4749f8196452eeb73cf2086a6a9705bae479d33d ......
checking 38c8c0a9709d2159fd989b0061b0b73364427b64 ......
	 orig commit -> de19ca6fd72c7dd45ad82403e7b3fe9c74ef6767 ......
checking bc30588b8e082f48882f713c19369bc9ae4c5509 ......
	 orig commit -> d179f99a651685b19333360e6558110da2fe9bd7 ......
checking 63019044fb8923974ba735a6b580a8ba16219471 ......
	 orig commit -> a12bffebc0c9d6a5851f062aaea3aa7c4adc6042 ......
checking 67226fb52c23e0df7d1e9f50fd29f880eb08ae69 ......
	 orig commit -> 27319ba4044c0c67d62ae39e53c0118c89f0a029 ......
checking ad8d61efc9b7b158095fac6a7f764d6897ef7952 ......
	 orig commit -> c22aecd75919511abea872b201751e0be1add898 ......
checking c92d09e35d2ddf8ec3e3e3c755241cfde670236c ......
	 orig commit -> 60b2b4ee2bc01dd052f99fa9d65da2232102ef8e ......
		 60b2b4ee2bc01dd052f99fa9d65da2232102ef8e has problem. Fixes commit -> 2a96d8ad94ce57cb0072f7a660b1039720c47716
commit 1252c1daa9c38ab807548b2703f90192a4ff5eb1
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Jun 20 13:39:53 2018 +0300

    f2fs: Fix uninitialized return in f2fs_ioc_shutdown()
    
    [ Upstream commit 2a96d8ad94ce57cb0072f7a660b1039720c47716 ]
    
    "ret" can be uninitialized on the success path when "in ==
    F2FS_GOING_DOWN_FULLSYNC".
    
    Fixes: 60b2b4ee2bc0 ("f2fs: Fix deadlock in shutdown ioctl")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 4f979af7b0ad6d88723bf1ec117b6e44dca38148 ......
	 orig commit -> e5e5732d8120654159254c16834bc8663d8be124 ......
checking de13b2ac741f52000f6de185a78cc844b7565fe5 ......
	 orig commit -> 64c74a7ab505ea40d1b3e5d02735ecab08ae1b14 ......
checking f3f029197738730a7b74d1b2d25288586975df47 ......
	 orig commit -> 14a28559f43ac7c0b98dd1b0e73ec9ec8ab4fc45 ......
checking 122031c292023f520befba701eb9895c3e0fc48c ......
	 orig commit -> 4071e67cffcc5c2a007116a02437471351f550eb ......
	 orig commit -> 5c9b469295fb6b10d98923eab5e79c4edb80ed20 ......
checking 1339e2b8eaea3db8996eeeb6dafd2a0c600ee843 ......
	 orig commit -> ae55e59da0e401893b3c52b575fc18a00623d0a1 ......
		 ae55e59da0e401893b3c52b575fc18a00623d0a1 has problem. Fixes commit -> 0cb98abb5bd13b9a636bde603d952d722688b428
commit a0aa001a1fdc8e77f517b976ea3a08fa07326f6a
Author: Olga Kornievskaia <kolga@netapp.com>
Date:   Tue Mar 19 12:12:13 2019 -0400

    NFSv4.1 don't free interrupted slot on open
    
    commit 0cb98abb5bd13b9a636bde603d952d722688b428 upstream.
    
    Allow the async rpc task for finish and update the open state if needed,
    then free the slot. Otherwise, the async rpc unable to decode the reply.
    
    Signed-off-by: Olga Kornievskaia <kolga@netapp.com>
    Fixes: ae55e59da0e4 ("pnfs: Don't release the sequence slot...")
    Cc: stable@vger.kernel.org # v4.18+
    Signed-off-by: Trond Myklebust <trond.myklebust@hammerspace.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 20fc8b34c1955d0a8dd2e0bca49d287b65f3f9a8 ......
	 orig commit -> 9c7f96fd77b0dbe1fe7ed1f9c462c45dc48a1076 ......
checking 4f5fd8a1ae16ccbb851bc2ca9243319c67f04955 ......
	 orig commit -> e37d07983af9068de0303054542d2652ca917f58 ......
checking 929e1a3906e15ca66f2e750a6000ecc30e390edd ......
	 orig commit -> 2468b82d69e3a53d024f28d79ba0fdb8bf43dfbf ......
checking a23e1da9773bcf90b0caac3c3a7fc06fea351181 ......
	 orig commit -> 926bc2f100c24d4842b3064b5af44ae964c1d81c ......
checking 0aceed2d7ec10eae4bab4912cbae11e47c8ceaec ......
	 orig commit -> 447808bf500a7cc92173266a59f8a494e132b122 ......
checking bc0b4615cc975db67ace25e9e8cc7f7dcf207d6b ......
	 orig commit -> 46d4be41b987a6b2d25a2ebdd94cafb44e21d6c5 ......
checking 04cda3ac3312f16ef8bbffa06c55dd1b04d3aad6 ......
	 orig commit -> a6b3964ad71a61bb7c61d80a60bea7d42187b2eb ......
checking 47b3561450178b538b99ba26a4989e0f846f2e8e ......
	 orig commit -> 1128bb7813a896bd608fb622eee3c26aaf33b473 ......
checking e27dad1eb1ac7bedb5a033ac2e068543742c807b ......
	 orig commit -> cb2595c1393b4a5211534e6f0a0fbad369e21ad8 ......
checking 848f260301d0116a625eb2580956c3119790f29d ......
	 orig commit -> fff200caf6f9179dd9a7fc67acd659e614c3f72f ......
checking 4c717e335ae14e5479bf6017a9466cbb0648266e ......
	 orig commit -> c36ed50de2ad1649ce0369a4a6fc2cc11b20dfb7 ......
checking cdad03c1f21e039affc8a709e5e982964d397039 ......
	 orig commit -> 68565a1af9f7012e6f2fe2bdd612f67d2d830c28 ......
checking 8dcf2dbf65efd17512db17526909de05daa0cff2 ......
	 orig commit -> 554755be08fba31c74f66b82a485e5513205af84 ......
checking 2f6a38b131abcb447e32cf5abaac12b6d5e9131d ......
	 orig commit -> 44ee54aabfdb3b35866ed909bde3ab01e9679385 ......
checking d90c9b07cb325b5190f5a45ddcf66aa09ed5f552 ......
	 orig commit -> 0cdd431c337e99177e68597f3de34bedd3a20a74 ......
checking ff60eda504531b7730435f1730c8bf068a209221 ......
	 orig commit -> bd975e691486ba52790ba23cc9b4fecab7bc0d31 ......
checking 52f072f580e4e5acfc65e40273e1cd4b544fbe63 ......
	 orig commit -> cbdebe481a14b42c45aa9f4ceb5ff19b55de2c57 ......
checking a47ece2b17c2e28524f8434857e0deab72ada33e ......
	 orig commit -> ceac7b79df7bd67ef9aaf464b0179a2686aff4ee ......
checking 6a929b97b7770573728611551568a4399e3c2da7 ......
	 orig commit -> abfdff44bc38e9e2ef7929f633fb8462632299d4 ......
checking 191d00f8c8726320814ad4796c1818432edacb2c ......
	 orig commit -> a38965bf941b7c2af50de09c96bc5f03e136caef ......
checking b9d1724cf618cea52e268a61b28096d8b3a422e4 ......
	 orig commit -> f3c01d2f3ade6790db67f80fef60df84424f8964 ......
		 f3c01d2f3ade6790db67f80fef60df84424f8964 has problem. Fixes commit -> 6ade20327dbb808882888ed8ccded71e93067cf9
checking 9e1a1fc0cd9be4d82bd9e0c1f8618c4e13ee2530 ......
	 orig commit -> ab6ecf247a9321e3180e021a6a60164dee53ab2e ......
checking 9691035cbf723c8ce7247eb5889d03b658871492 ......
	 orig commit -> 401c636a0eeb0d51862fce222da1bf08e3a0ffd0 ......
checking 827faa4eb5668e25baf7f3752dc7ae7fd46894c2 ......
	 orig commit -> 48d8476b41eed63567dd2f0ad125c895b9ac648a ......
checking 8f38152f2ae22b09589a6160086f5d71881ae30b ......
	 orig commit -> 002fe996f67f4f46d8917b14cfb6e4313c20685a ......
checking ca014df110e97a4765f7e581376b414f26496db7 ......
	 orig commit -> 28a68387888997e8a7fa57940ea5d55f2e16b594 ......
checking 5a47fe3efd4dba912fce172e1f3e4b823cdf1c9d ......
	 orig commit -> 3171822fdcdd6e6d536047c425af6dc7a92dc585 ......
checking baad2bf4477003eb27b40a8c608d8af37b187917 ......
	 orig commit -> f9312a541050007ec59eb0106273a0a10718cd83 ......
checking 42b1df406a296d28f0a86d6a73b4fdca446ae18e ......
	 orig commit -> ef1ffbe7889e99f5b5cccb41c89e5c94f50f3218 ......
checking 40ff9a54dd9b7d587abb398e40147e9237eec5e3 ......
	 orig commit -> 6d531e7b972cb62ded011c2dfcc2d9f72ea6c421 ......
checking 44a78f7d175792dbd376cbe77ce1abc3f82e5400 ......
	 orig commit -> 93b7f7ad2018d2037559b1d0892417864c78b371 ......
checking 0a84c912f575c083e2cdc123bcae93e0847f9e63 ......
	 orig commit -> 7bf7bb37f16a80465ee3bd7c6c966f96f5a075a6 ......
checking 51b694070738e93ef319c464208a7f524b2b5b15 ......
	 orig commit -> 57f230ab04d2910a06d17d988f1c4d7586a59113 ......
		 57f230ab04d2910a06d17d988f1c4d7586a59113 has problem. Fixes commit -> ad4f15dc2c70b1de5e0a64d27335962fbc9cf71c
commit 7eced4478f4ec6ff0a603ddfd6e24a5d3831fca7
Author: Juergen Gross <jgross@suse.com>
Date:   Tue Sep 11 09:04:48 2018 +0200

    xen/netfront: don't bug in case of too many frags
    
    commit ad4f15dc2c70b1de5e0a64d27335962fbc9cf71c upstream.
    
    Commit 57f230ab04d291 ("xen/netfront: raise max number of slots in
    xennet_get_responses()") raised the max number of allowed slots by one.
    This seems to be problematic in some configurations with netback using
    a larger MAX_SKB_FRAGS value (e.g. old Linux kernel with MAX_SKB_FRAGS
    defined as 18 instead of nowadays 17).
    
    Instead of BUG_ON() in this case just fall back to retransmission.
    
    Fixes: 57f230ab04d291 ("xen/netfront: raise max number of slots in xennet_get_responses()")
    Cc: stable@vger.kernel.org
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking a45f5ee6850b35b8ecd81e8360b153ae685ecac7 ......
	 orig commit -> c9484b986ef03492357fddd50afbdd02929cfa72 ......
checking 73990abb1a04a526c011780e1c06b9c80d613e1a ......
	 orig commit -> 9e25826ffc942e985b8595b2f1cf2065d3880514 ......
checking c1550e0141351e38af1dc781b18e7d2c5ebd42b4 ......
	 orig commit -> 7b0eb6b41a08fa1fa0d04b1c53becd62b5fbfaee ......
checking 4681e8820f99aea022801ed94a279d61746b9523 ......
	 orig commit -> 2519c1bbe38d7acacc9aacba303ca6f97482ed53 ......
checking 86428ec165ee9c25618794b442827ab78b3da087 ......
	 orig commit -> 57ea2a34adf40f3a6e88409aafcf803b8945619a ......
		 57ea2a34adf40f3a6e88409aafcf803b8945619a has problem. Fixes commit -> 2519c1bbe38d7acacc9aacba303ca6f97482ed53
commit 4681e8820f99aea022801ed94a279d61746b9523
Author: Steven Rostedt (VMware) <rostedt@goodmis.org>
Date:   Wed Jul 25 22:28:56 2018 -0400

    tracing: Quiet gcc warning about maybe unused link variable
    
    commit 2519c1bbe38d7acacc9aacba303ca6f97482ed53 upstream.
    
    Commit 57ea2a34adf4 ("tracing/kprobes: Fix trace_probe flags on
    enable_trace_kprobe() failure") added an if statement that depends on another
    if statement that gcc doesn't see will initialize the "link" variable and
    gives the warning:
    
     "warning: 'link' may be used uninitialized in this function"
    
    It is really a false positive, but to quiet the warning, and also to make
    sure that it never actually is used uninitialized, initialize the "link"
    variable to NULL and add an if (!WARN_ON_ONCE(!link)) where the compiler
    thinks it could be used uninitialized.
    
    Cc: stable@vger.kernel.org
    Fixes: 57ea2a34adf4 ("tracing/kprobes: Fix trace_probe flags on enable_trace_kprobe() failure")
    Reported-by: kbuild test robot <lkp@intel.com>
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking f957456878eb3b5fd8c41412686a76d2cce6c504 ......
	 orig commit -> 3e536e222f2930534c252c1cc7ae799c725c5ff9 ......
checking 10419b0c16d41e7fa3848e83e6bf7521aa9407ef ......
	 orig commit -> 15cc78644d0075e76d59476a4467e7143860f660 ......
checking 9158a7debe5351688515de22fd18a5a8b006f458 ......
	 orig commit -> 1863c387259b629e4ebfb255495f67cd06aa229b ......
checking a2f85c02810f91af6f2b7dd5de6a0ffb4c835b67 ......
	 orig commit -> b512719f771a82180211c9a315b8a7f628832b3d ......
checking 8eead4f5dea9fdf01ac254171e3cc141181b825b ......
	 orig commit -> d97e5e6160c0e0a23963ec198c7cb1c69e6bf9e8 ......
checking ca6427facd967cbb7067422c1f3ab085874bb037 ......
	 orig commit -> 6f88a6439da5d94de334a341503bc2c7f4a7ea7f ......
checking e0e385e2126e0b73af8f54301b818499d2b3e6db ......
	 orig commit -> 384cf4285b34e08917e3e66603382f2b0c4f6e1b ......
checking b4667635de2e60b1ffb059f03d3d2977258849f0 ......
	 orig commit -> 938f45008d8bc391593c97508bc798cc95a52b9b ......
checking c09032b71fc6fa7d8a010b3a58ee4ca2ae9e1a09 ......
	 orig commit -> e935dba111621bd6a0c5d48e6511a4d9885103b4 ......
checking e581f7c590cca70b7338f43b73f4cfa081077c00 ......
	 orig commit -> 06892cc190550807d332c95a0114c7e175584012 ......
checking 1e8bb2e9c9df0d0e491e5022ce80a2b96b757ac3 ......
	 orig commit -> 2a78cb4db487372152bed2055c038f9634d595e8 ......
		 2a78cb4db487372152bed2055c038f9634d595e8 has problem. Fixes commit -> 06892cc190550807d332c95a0114c7e175584012
commit e581f7c590cca70b7338f43b73f4cfa081077c00
Author: Andrew Morton <akpm@linux-foundation.org>
Date:   Tue Mar 13 15:06:45 2018 -0700

    drivers/infiniband/ulp/srpt/ib_srpt.c: fix build with gcc-4.4.4
    
    commit 06892cc190550807d332c95a0114c7e175584012 upstream.
    
    gcc-4.4.4 has issues with initialization of anonymous unions:
    
    drivers/infiniband/ulp/srpt/ib_srpt.c: In function 'srpt_zerolength_write':
    drivers/infiniband/ulp/srpt/ib_srpt.c:854: error: unknown field 'wr_cqe' specified in initializer
    drivers/infiniband/ulp/srpt/ib_srpt.c:854: warning: initialization makes integer from pointer without a cast
    
    Work aound this.
    
    Fixes: 2a78cb4db487 ("IB/srpt: Fix an out-of-bounds stack access in srpt_zerolength_write()")
    Cc: Bart Van Assche <bart.vanassche@wdc.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Jason Gunthorpe <jgg@mellanox.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking d02c9c8bfef147c790985db5a348a91ab0deec66 ......
	 orig commit -> 6ee687735e745eafae9e6b93d1ea70bc52e7ad07 ......
checking 3af618717e710a4b4d635eaef87645bc0e99c71a ......
	 orig commit -> a1ae7d0345edd593d6725d3218434d903a0af95d ......
		 a1ae7d0345edd593d6725d3218434d903a0af95d has problem. Fixes commit -> 6ee687735e745eafae9e6b93d1ea70bc52e7ad07
commit d02c9c8bfef147c790985db5a348a91ab0deec66
Author: Andrew Morton <akpm@linux-foundation.org>
Date:   Tue Mar 13 14:51:57 2018 -0700

    drivers/infiniband/core/verbs.c: fix build with gcc-4.4.4
    
    commit 6ee687735e745eafae9e6b93d1ea70bc52e7ad07 upstream.
    
    gcc-4.4.4 has issues with initialization of anonymous unions.
    
    drivers/infiniband/core/verbs.c: In function '__ib_drain_sq':
    drivers/infiniband/core/verbs.c:2204: error: unknown field 'wr_cqe' specified in initializer
    drivers/infiniband/core/verbs.c:2204: warning: initialization makes integer from pointer without a cast
    
    Work around this.
    
    Fixes: a1ae7d0345edd5 ("RDMA/core: Avoid that ib_drain_qp() triggers an out-of-bounds stack access")
    Cc: Bart Van Assche <bart.vanassche@wdc.com>
    Cc: Steve Wise <swise@opengridcomputing.com>
    Cc: Sagi Grimberg <sagi@grimberg.me>
    Cc: Jason Gunthorpe <jgg@mellanox.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking c0b86d269bf097fd100e275574ae50f1aec248ad ......
	 orig commit -> e0638fa400eaccf9fa8060f67140264c4e276552 ......
checking 2d5fc7ffa84bfa0d778c30b96072295ad36a1030 ......
	 orig commit -> e01e80634ecdde1dd113ac43b3adad21b47f3957 ......
