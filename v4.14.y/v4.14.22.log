Check from v4.14.22 to v4.14.23
Commit count: 57
checking 267ef1d332845c1d361ff3fd1d346613a12db773 ......
checking ac3d021048be9edb825f0794da5b42f04fefecef ......
	 orig commit -> 71e7673dadfdae0605d4c1f66ecb4b045c79fe0f ......
checking 9ce9f4e4a543b457551728764e2d297cd40dee53 ......
	 orig commit -> c95f121142a41c951fd62683a5574f2a7b37c573 ......
checking 821e97898016456bc7b42063ac91c0063f88a8dd ......
	 orig commit -> 117172c8f9d40ba1de8cb35c6e614422faa03330 ......
checking 1f0ffdc671080f22449387b6ed961edbe700b0a1 ......
	 orig commit -> 6e59de2048eb375a9bfcd39461ef841cd2a78962 ......
checking 4517799bf6556d2cffc0dd3a0cfb53cde2ada47d ......
	 orig commit -> 458d876eb869d5a88b53074c6c271b8b9adc0f07 ......
checking 14fdf444827770fcba67f3487924096bffd5ce19 ......
	 orig commit -> 052c299080cd6859f82a8154a7a673fafabe644c ......
checking 30537deb089c4a695d27e6a39c914b6418a5cfc6 ......
	 orig commit -> 57ad33a307bf85cafda3a77c03a555c9f9ee4139 ......
checking 46c1e4023b58a910cea8797cb1c2bd9b784a835c ......
	 orig commit -> f2e5262f75ecb40a6e56554e156a292ab9e1d1b7 ......
checking 68de83c13b30fa01e39b184f71ca5cca63010c4d ......
	 orig commit -> 400b6afbaa949914460e5fd1d769c5e26ef1f6b8 ......
checking 8ac8aa5eba0e8b4d2bf21d46fa46713fa2bfbe0f ......
	 orig commit -> b8ff1802815913aad52695898cccbc9f77b7e726 ......
checking 5c9beaf3aca7ae80cf8b54b1abecf43082416f52 ......
	 orig commit -> 745fd50f3b044db6a3922e1718306555613164b0 ......
	 orig commit -> b8e2b0199cc377617dc238f5106352c06dcd3fa2 ......
		 b8e2b0199cc377617dc238f5106352c06dcd3fa2 has problem. Fixes commit -> 24b8ef699e8221d2b7f813adaab13eec053e1507
745fd50f3b044db6a3922e1718306555613164b0
commit 5c9beaf3aca7ae80cf8b54b1abecf43082416f52
Author: Daniel Vetter <daniel.vetter@ffwll.ch>
Date:   Wed Jan 31 12:04:50 2018 +0100

    drm/cirrus: Load lut in crtc_commit
    
    commit 745fd50f3b044db6a3922e1718306555613164b0 upstream.
    
    In the past the ast driver relied upon the fbdev emulation helpers to
    call ->load_lut at boot-up. But since
    
    commit b8e2b0199cc377617dc238f5106352c06dcd3fa2
    Author: Peter Rosin <peda@axentia.se>
    Date:   Tue Jul 4 12:36:57 2017 +0200
    
    drm/fb-helper: factor out pseudo-palette
    
    that's cleaned up and drivers are expected to boot into a consistent
    lut state. This patch fixes that.
    
    Fixes: b8e2b0199cc3 ("drm/fb-helper: factor out pseudo-palette")
    Cc: Peter Rosin <peda@axenita.se>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Cc: <stable@vger.kernel.org> # v4.14+
    References: https://bugzilla.kernel.org/show_bug.cgi?id=198123
    Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20180131110450.22153-1-daniel.vetter@ffwll.ch
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 5c9beaf3aca7ae80cf8b54b1abecf43082416f52
Author: Daniel Vetter <daniel.vetter@ffwll.ch>
Date:   Wed Jan 31 12:04:50 2018 +0100

    drm/cirrus: Load lut in crtc_commit
    
    commit 745fd50f3b044db6a3922e1718306555613164b0 upstream.
    
    In the past the ast driver relied upon the fbdev emulation helpers to
    call ->load_lut at boot-up. But since
    
    commit b8e2b0199cc377617dc238f5106352c06dcd3fa2
    Author: Peter Rosin <peda@axentia.se>
    Date:   Tue Jul 4 12:36:57 2017 +0200
    
    drm/fb-helper: factor out pseudo-palette
    
    that's cleaned up and drivers are expected to boot into a consistent
    lut state. This patch fixes that.
    
    Fixes: b8e2b0199cc3 ("drm/fb-helper: factor out pseudo-palette")
    Cc: Peter Rosin <peda@axenita.se>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Cc: <stable@vger.kernel.org> # v4.14+
    References: https://bugzilla.kernel.org/show_bug.cgi?id=198123
    Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20180131110450.22153-1-daniel.vetter@ffwll.ch
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e4a6d687e5d9e603f7188ca2ee88040c5fdd03dd
Author: Daniel Vetter <daniel.vetter@ffwll.ch>
Date:   Thu Jan 18 16:40:16 2018 +0100

    drm/ast: Load lut in crtc_commit
    
    commit 24b8ef699e8221d2b7f813adaab13eec053e1507 upstream.
    
    In the past the ast driver relied upon the fbdev emulation helpers to
    call ->load_lut at boot-up. But since
    
    commit b8e2b0199cc377617dc238f5106352c06dcd3fa2
    Author: Peter Rosin <peda@axentia.se>
    Date:   Tue Jul 4 12:36:57 2017 +0200
    
        drm/fb-helper: factor out pseudo-palette
    
    that's cleaned up and drivers are expected to boot into a consistent
    lut state. This patch fixes that.
    
    Fixes: b8e2b0199cc3 ("drm/fb-helper: factor out pseudo-palette")
    Cc: Peter Rosin <peda@axenita.se>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Cc: <stable@vger.kernel.org> # v4.14+
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=198123
    Cc: Bill Fraser <bill.fraser@gmail.com>
    Reported-and-Tested-by: Bill Fraser <bill.fraser@gmail.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking faf1a75046cb59e1a7573b4bb390fc5938ccf4df ......
	 orig commit -> 17aa31f13cad25daa19d3f923323f552e87bc874 ......
checking 51aba4e16ccc71925ea0bf89818da5bbc2397b11 ......
	 orig commit -> 675272d092e4a5570bace92593776f7348daf4c5 ......
checking 6e936140e0d746e96d26af3a8b02fd09909d7029 ......
	 orig commit -> 6cf439e0d37463e42784271179c8a308fd7493c6 ......
checking 7551ff0ab230add761bc9ffdea855062e0778e21 ......
	 orig commit -> 44eb5e12b845cc8a0634f21b70ef07d774eb4b25 ......
checking 7e402ea2cdc21d5f3fca6f7d99213528d147bab4 ......
	 orig commit -> 52ad2bd8918158266fc88a05f95429b56b6a33c5 ......
checking a1e8aa2176d2cfbfa444df0461a906b455e9e66b ......
	 orig commit -> f035d139ffece7b6a7b8bfb17bd0ba715ee57a04 ......
checking 49e18b2ba887724ae43b1169ad0b8e747fd5aad9 ......
	 orig commit -> 6180026341e852a250e1f97ebdcf71684a3c81b9 ......
checking 1075f607869283ad07a224c01b78e61b09f4bc7a ......
	 orig commit -> 02a10f061a3f8bca1b37332672f50a107198adbe ......
checking 3b5061ec6fcab358e1cfa009a7e43fce27aca3e7 ......
	 orig commit -> 06998a756a3865817b87a129a7e5d5bb66dc1ec3 ......
checking f74ddc2e6152b7c0e13d952403938bd41c530464 ......
	 orig commit -> 7a1646d922577b5b48c0d222e03831141664bb59 ......
checking 21aadb063e70f858958a8b43f8bd661c8abc5575 ......
	 orig commit -> be68a8aaf925aaf35574260bf820bb09d2f9e07f ......
		 be68a8aaf925aaf35574260bf820bb09d2f9e07f has problem. Fixes commit -> 314d53d297980676011e6fd83dac60db4a01dc70
4c4a39dd5fe2d13e2d2fa5fceb8ef95d19fc389a
commit 469c89aa5d7e1a616a174d89d085011de5d75b75
Author: Suzuki K Poulose <suzuki.poulose@arm.com>
Date:   Wed Jul 4 23:07:45 2018 +0100

    arm64: Fix mismatched cache line size detection
    
    commit 4c4a39dd5fe2d13e2d2fa5fceb8ef95d19fc389a upstream.
    
    If there is a mismatch in the I/D min line size, we must
    always use the system wide safe value both in applications
    and in the kernel, while performing cache operations. However,
    we have been checking more bits than just the min line sizes,
    which triggers false negatives. We may need to trap the user
    accesses in such cases, but not necessarily patch the kernel.
    
    This patch fixes the check to do the right thing as advertised.
    A new capability will be added to check mismatches in other
    fields and ensure we trap the CTR accesses.
    
    Fixes: be68a8aaf925 ("arm64: cpufeature: Fix CTR_EL0 field definitions")
    Cc: <stable@vger.kernel.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Reported-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit ab088bc2911d773011f45872f1c72671ac8d1352
Author: Suzuki K Poulose <suzuki.poulose@arm.com>
Date:   Wed Jul 4 23:07:46 2018 +0100

    arm64: Handle mismatched cache type
    
    commit 314d53d297980676011e6fd83dac60db4a01dc70 upstream.
    
    Track mismatches in the cache type register (CTR_EL0), other
    than the D/I min line sizes and trap user accesses if there are any.
    
    Fixes: be68a8aaf925 ("arm64: cpufeature: Fix CTR_EL0 field definitions")
    Cc: <stable@vger.kernel.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 469c89aa5d7e1a616a174d89d085011de5d75b75
Author: Suzuki K Poulose <suzuki.poulose@arm.com>
Date:   Wed Jul 4 23:07:45 2018 +0100

    arm64: Fix mismatched cache line size detection
    
    commit 4c4a39dd5fe2d13e2d2fa5fceb8ef95d19fc389a upstream.
    
    If there is a mismatch in the I/D min line size, we must
    always use the system wide safe value both in applications
    and in the kernel, while performing cache operations. However,
    we have been checking more bits than just the min line sizes,
    which triggers false negatives. We may need to trap the user
    accesses in such cases, but not necessarily patch the kernel.
    
    This patch fixes the check to do the right thing as advertised.
    A new capability will be added to check mismatches in other
    fields and ensure we trap the CTR accesses.
    
    Fixes: be68a8aaf925 ("arm64: cpufeature: Fix CTR_EL0 field definitions")
    Cc: <stable@vger.kernel.org>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Catalin Marinas <catalin.marinas@arm.com>
    Reported-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Suzuki K Poulose <suzuki.poulose@arm.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 6842a512ad160e15be7985acb9992795f3d11af1 ......
	 orig commit -> 5ee39a71fd89ab7240c5339d04161c44a8e03269 ......
checking 96e99291728f4e975ef832f14a461720c0f98eeb ......
	 orig commit -> 1962682d2b2fbe6cfa995a85c53c069fadda473e ......
checking 7e8407d1462d3c965dea98fd182d602185241be0 ......
	 orig commit -> 46408ea558df13b110e0866b99624384a33bdeba ......
checking 85c3d26bd754160f6be90d8b078d70a1b35820e7 ......
	 orig commit -> b2685bdacdaab065c172b97b55ab46c6be77a037 ......
checking 50f80b646a2b76bde046ef180e2c5bfaef861510 ......
	 orig commit -> 7dcf688d4c78a18ba9538b2bf1b11dc7a43fe9be ......
checking 4a665d628f938af3718e89247f5b8a77fbf8c536 ......
	 orig commit -> 285cb4f62319737e6538252cf1a67ce9da5cf3d5 ......
checking bc4704f507cdb98689b7d637db9b2d0d4937652a ......
	 orig commit -> 21ec30c0ef5234fb1039cc7c7737d885bf875a9e ......
checking 62160e348e89b12255df61e6d08891b1ca8f9617 ......
	 orig commit -> 7ba716698cc53f8d5367766c93c538c7da6c68ce ......
checking 7a14562d6e2c48068616e260a7d76b2ae8b8ee30 ......
	 orig commit -> 85c615eb52222bc5fab6c7190d146bc59fac289e ......
checking 0b82d316fa5b199125a22559fd457cf3100c34fc ......
	 orig commit -> 101110f6271ce956a049250c907bc960030577f8 ......
		 101110f6271ce956a049250c907bc960030577f8 has problem. Fixes commit -> 1705f7c534163594f8b05e060cb49fbea86ca70b
commit 04d47fc40367d77c6e3fae82da0a60e673746dfd
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Mar 22 16:17:17 2018 -0700

    h8300: remove extraneous __BIG_ENDIAN definition
    
    commit 1705f7c534163594f8b05e060cb49fbea86ca70b upstream.
    
    A bugfix I did earlier caused a build regression on h8300, which defines
    the __BIG_ENDIAN macro in a slightly different way than the generic
    code:
    
      arch/h8300/include/asm/byteorder.h:5:0: warning: "__BIG_ENDIAN" redefined
    
    We don't need to define it here, as the same macro is already provided
    by the linux/byteorder/big_endian.h, and that version does not conflict.
    
    While this is a v4.16 regression, my earlier patch also got backported
    to the 4.14 and 4.15 stable kernels, so we need the fixup there as well.
    
    Link: http://lkml.kernel.org/r/20180313120752.2645129-1-arnd@arndb.de
    Fixes: 101110f6271c ("Kbuild: always define endianess in kconfig.h")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Cc: Yoshinori Sato <ysato@users.sourceforge.jp>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 6315213f0a788c7f08b02f88d1224e93f37d13f4 ......
	 orig commit -> f027e0b3a774e10302207e91d304bbf99e3a8b36 ......
checking 9dc4030c87b77f7856b7d1388ad908e6a6d5f363 ......
	 orig commit -> 4cd140bda6494543f1c1b0ccceceaa44b676eef6 ......
checking 1b985a6e8d4da148a320caf139ea9e8de8071a77 ......
	 orig commit -> 511051d509ec54642dd6d30fdf2caa33c23619cc ......
checking f4f94e9baeba909e2bc5902ed2dd033fa8bb74a3 ......
	 orig commit -> a3b5655ebdb501a98a45c0d3265dca9f2fe0218a ......
checking 2492eca0a05b05736cbcf7fc1f234a666c4fcc52 ......
	 orig commit -> 5d4c05c3ee36f67ddc107ab5ea0898af01a62cc1 ......
		 5d4c05c3ee36f67ddc107ab5ea0898af01a62cc1 has problem. Fixes commit -> addb8a6559f0f8b5a37582b7ca698358445a55bf
commit 65be9cbe1224f1fe51591b44e3d35603b81b595c
Author: Jack Morgenstein <jackm@dev.mellanox.co.il>
Date:   Wed Jul 11 11:23:52 2018 +0300

    RDMA/uverbs: Expand primary and alt AV port checks
    
    commit addb8a6559f0f8b5a37582b7ca698358445a55bf upstream.
    
    The commit cited below checked that the port numbers provided in the
    primary and alt AVs are legal.
    
    That is sufficient to prevent a kernel panic. However, it is not
    sufficient for correct operation.
    
    In Linux, AVs (both primary and alt) must be completely self-described.
    We do not accept an AV from userspace without an embedded port number.
    (This has been the case since kernel 3.14 commit dbf727de7440
    ("IB/core: Use GID table in AH creation and dmac resolution")).
    
    For the primary AV, this embedded port number must match the port number
    specified with IB_QP_PORT.
    
    We also expect the port number embedded in the alt AV to match the
    alt_port_num value passed by the userspace driver in the modify_qp command
    base structure.
    
    Add these checks to modify_qp.
    
    Cc: <stable@vger.kernel.org> # 4.16
    Fixes: 5d4c05c3ee36 ("RDMA/uverbs: Sanitize user entered port numbers prior to access it")
    Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 84205f964bcc09400c5e195dc6dbeee058f0aa6b ......
	 orig commit -> 1ff5325c3ca1843228a86549318bbd3b414b9207 ......
checking aaa1915e3d2cc1a626b47b38734bfa8387509615 ......
	 orig commit -> 5c2e1c4f926856717f3fd31932e926dc3fe77ebd ......
checking f3d66d43500c60192c9600a15e8e9f9b931ff389 ......
	 orig commit -> 3f802b162dbf4a558ff98986449eddc717826209 ......
checking da768ed845a5228d0044d92faab4fd8de98c86fd ......
	 orig commit -> 6623e3e3cd78020016d3fa42555763178e94ab64 ......
checking 606f74e3d01b39ab2b602102d2c56a1ef9c9b3b1 ......
	 orig commit -> 0434352d3d2e950cf5e743f6062abd87de22f960 ......
checking 29e76b211e9231e1d565551de84d9abd6eff5658 ......
	 orig commit -> 29f4a67c17e19314b7d74b8569be935e6c7edf50 ......
checking 1a1f7f726bd8670b7b371f4e440533cdcb9d8110 ......
	 orig commit -> 971b42c038dc83e3327872d294fe7131bab152fc ......
checking 99b2095ac71e316ed366f027913646d40640d0be ......
	 orig commit -> 4b34968e77ad09628cfb3c4a7daf2adc2cefc6e8 ......
checking dcb04cc794835964c1efeea24b392e5e35e88ab8 ......
	 orig commit -> 437499eea4291ae9621e8763a41df027c110a1ef ......
checking fa465cd5681334cc7db63c9da999dcbb0137fb8c ......
	 orig commit -> fe32a815f05c8568669a062587435e15f9345764 ......
checking 3e1d63cc7a5f6580c751d8f9e6be8c95791aa1cb ......
	 orig commit -> fba4adbbf670577e605f9ad306629db6031cd48b ......
		 fba4adbbf670577e605f9ad306629db6031cd48b has problem. Fixes commit -> 06cb616b1bca7080824acfedb3d4c898e7a64836
commit f4f05f62d3d19fc9c541a9186e511584ff9000b2
Author: Alexander Monakov <amonakov@ispras.ru>
Date:   Sat Apr 28 16:56:06 2018 +0300

    i2c: designware: fix poll-after-enable regression
    
    commit 06cb616b1bca7080824acfedb3d4c898e7a64836 upstream.
    
    Not all revisions of DW I2C controller implement the enable status register.
    On platforms where that's the case (e.g. BG2CD and SPEAr ARM SoCs), waiting
    for enable will time out as reading the unimplemented register yields zero.
    
    It was observed that reading the IC_ENABLE_STATUS register once suffices to
    avoid getting it stuck on Bay Trail hardware, so replace polling with one
    dummy read of the register.
    
    Fixes: fba4adbbf670 ("i2c: designware: must wait for enable")
    Signed-off-by: Alexander Monakov <amonakov@ispras.ru>
    Tested-by: Ben Gardner <gardner.ben@gmail.com>
    Acked-by: Jarkko Nikula <jarkko.nikula@linux.intel.com>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Cc: stable@kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking ebaefbdaf552f9e159ea08f54afb6c80e20b2641 ......
	 orig commit -> bee92d06157fc39d5d7836a061c7d41289a55797 ......
checking 2f9eed6e3772e12e1d715a8d508f962ad8a51caa ......
	 orig commit -> 6ae1756faddefd7494353380ee546dd38c2f97eb ......
checking 4fc16629e9bc8421ef4a5ae6248d5366fdb93185 ......
	 orig commit -> c39813652700f3df552b6557530f1e5f782dbe2f ......
checking 53c86c2d90c69e11143d61c03f5d2142149e84eb ......
	 orig commit -> 6ac5a11dc674bc5016ea716e8082fff61f524dc1 ......
checking 9428e622eca72b8664e856766fce52ea91a12a8c ......
	 orig commit -> 0f9da844d87796ac31b04e81ee95e155e9043132 ......
checking b3aff5c3b2a1b9f53e80f60d129c9d81b6e8d60f ......
	 orig commit -> 28128c61e08eaeced9cc8ec0e6b5d677b5b94690 ......
		 28128c61e08eaeced9cc8ec0e6b5d677b5b94690 has problem. Fixes commit -> 0f9da844d87796ac31b04e81ee95e155e9043132
commit 9428e622eca72b8664e856766fce52ea91a12a8c
Author: Kees Cook <keescook@chromium.org>
Date:   Thu Feb 22 16:59:26 2018 -0800

    MIPS: boot: Define __ASSEMBLY__ for its.S build
    
    commit 0f9da844d87796ac31b04e81ee95e155e9043132 upstream.
    
    The MIPS %.its.S compiler command did not define __ASSEMBLY__, which meant
    when compiler_types.h was added to kconfig.h, unexpected things appeared
    (e.g. struct declarations) which should not have been present. As done in
    the general %.S compiler command, __ASSEMBLY__ is now included here too.
    
    The failure was:
    
        Error: arch/mips/boot/vmlinux.gz.its:201.1-2 syntax error
        FATAL ERROR: Unable to parse input tree
        /usr/bin/mkimage: Can't read arch/mips/boot/vmlinux.gz.itb.tmp: Invalid argument
        /usr/bin/mkimage Can't add hashes to FIT blob
    
    Reported-by: kbuild test robot <lkp@intel.com>
    Fixes: 28128c61e08e ("kconfig.h: Include compiler types to avoid missed struct attributes")
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 35d75b7bfc67520fb1d93b63ab3ae27992006f66 ......
checking 485595768d89f53581a7527285acf97880fc65a6 ......
	 orig commit -> 01ea306f2ac2baff98d472da719193e738759d93 ......
