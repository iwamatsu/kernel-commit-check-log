Check from v4.14.47 to v4.14.48
Commit count: 53
checking 2c6025ebc7fd8e0a8ca785d778dc6ae25225744b ......
checking 1dd9566d954230d5dccb48d070dc412bc9358ca8 ......
	 orig commit -> aa0ab02ba992eb956934b21373e0138211486ddd ......
checking 399e039634a4e77548aeef75e0f8ce210330f2b7 ......
	 orig commit -> db3a528db41caaa6dfd4c64e9f5efb1c81a80467 ......
checking b8b23e8926b3bf387f44f89083a16010eac744de ......
	 orig commit -> a3286f05bc5a5bc7fc73a9783ec89de78fcd07f8 ......
checking e14db4feb0351172ed7ab48040f9527b6b2ad62a ......
	 orig commit -> 326691ad4f179e6edc7eb1271e618dd673e4736d ......
checking c95c5f419e57a38b85e762e07b1e6a4bf9a6cb6e ......
	 orig commit -> b3fb22733ae61050f8d10a1d6a8af176c5c5db1a ......
checking 72571f26757ee81afed5716bad0b4a27cc1bf9f8 ......
	 orig commit -> b9eb9c92899a509fe258d38dd6c214b1de69eee0 ......
checking ffedc7ade784610549592baef51895d96e747b7a ......
	 orig commit -> bdcc02cf1bb508fc700df7662f55058f651f2621 ......
checking 5890358c60e5c508409af63a741c2cab72b07651 ......
	 orig commit -> 0ed2424b911f3a058dfea01b78817abed767433d ......
checking 792be048cf9c8e733733980fc8e20e0a469e9291 ......
	 orig commit -> 52a192362932f333a7ebafd581c4d9b81da2fec8 ......
checking a7027b7d698e1086532efc09270976dbd1ea6f9b ......
	 orig commit -> 2d077d4b59924acd1f5180c6fb73b57f4771fde6 ......
checking 4a1b66bcec03fe411be108bc18cfc9bc1b392e38 ......
	 orig commit -> a840c93ca7582bb6c88df2345a33f979b7a67874 ......
checking bdf1daba5f621c16bef76075fcf84f2ffdaf383d ......
	 orig commit -> 806e30873f0e74d9d41b0ef761bd4d3e55c7d510 ......
checking 1f8c4ed2dba50361ab2043ca67db7a529560b9d0 ......
	 orig commit -> b5e2ced9bf81393034072dd4d372f6b430bc1f0a ......
		 b5e2ced9bf81393034072dd4d372f6b430bc1f0a has problem. Fixes commit -> 806e30873f0e74d9d41b0ef761bd4d3e55c7d510
commit bdf1daba5f621c16bef76075fcf84f2ffdaf383d
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Sat May 26 08:49:24 2018 +0200

    hwtracing: stm: fix build error on some arches
    
    commit 806e30873f0e74d9d41b0ef761bd4d3e55c7d510 upstream.
    
    Commit b5e2ced9bf81 ("stm class: Use vmalloc for the master map") caused
    a build error on some arches as vmalloc.h was not explicitly included.
    
    Fix that by adding it to the list of includes.
    
    Fixes: b5e2ced9bf81 ("stm class: Use vmalloc for the master map")
    Reported-by: kbuild test robot <lkp@intel.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking a70f19b29560be3311e07692b2ef13d2c93ea306 ......
	 orig commit -> c9ddf73476ff4fffb7a87bd5107a0705bf2cf64b ......
checking 8a6576219da8df6c72e6123f1313ad77d8c92288 ......
	 orig commit -> 28e4213dd331e944e7fca1954a946829162ed9d4 ......
checking f7a36d7ac838321b949bcb66ecbe9ebcba6f5c64 ......
	 orig commit -> c7e814628df65f424fe197dde73bfc67e4a244d7 ......
checking ed5bd13bec35574a9b2c9d978929d70a8c96aaaa ......
	 orig commit -> 32795631e67e16141aa5e065c28ba03bf17abb90 ......
checking 6d67a723ef3788731d5884f0df6a71b745ab21ef ......
	 orig commit -> 76974ef9d1bf397b7bb97892a3b3bc516a1fc2c2 ......
checking 838f25e3d9f2ad11e941649c56f8d205a80b01f2 ......
	 orig commit -> 3d13de4b027d5f6276c0f9d3a264f518747d83f2 ......
checking 30ab9366f763928176793469fb5c3e0ebe89aeb5 ......
	 orig commit -> c043ec1ca5baae63726aae32abbe003192bc6eec ......
		 c043ec1ca5baae63726aae32abbe003192bc6eec has problem. Fixes commit -> 92397a6c38d139d50fabbe9e2dc09b61d53b2377
commit 672fdbd5966e8182a0afbc0b178f03bb133cad5a
Author: Phil Reid <preid@electromag.com.au>
Date:   Tue Jun 5 14:15:10 2018 +0800

    iio: buffer: fix the function signature to match implementation
    
    [ Upstream commit 92397a6c38d139d50fabbe9e2dc09b61d53b2377 ]
    
    linux/iio/buffer-dma.h was not updated to when length was changed to
    unsigned int.
    
    Fixes: c043ec1ca5ba ("iio:buffer: make length types match kfifo types")
    Signed-off-by: Phil Reid <preid@electromag.com.au>
    Signed-off-by: Jonathan Cameron <Jonathan.Cameron@huawei.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
checking d30819abd1c4768ba976821465c682e66e1605ee ......
	 orig commit -> 490fba90a90eb7b741f57fefd2bcf2c1e11eb471 ......
checking a6f81fcb2c3905c28641837dc823ed34617eb110 ......
	 orig commit -> 607065bad9931e72207b0cac365d7d4abc06bd99 ......
checking 96b086a7bfe575c3626cf2a9af301539c2623b9b ......
	 orig commit -> 0a5f41767444cc3b4fc5573921ab914b4f78baaa ......
checking 9b6eda5797b182ab6460c25ec9a186a7fbf92a52 ......
	 orig commit -> d3b56c566d4ba8cae688baf3cca94425d57ea783 ......
checking a81920c73eb04fd63f7a52ffe22e210c96414c90 ......
	 orig commit -> 271ef65b5882425d500e969e875c98e47a6b0c86 ......
checking bcc9c6f0320189274e6ef6f9062d650b8e432065 ......
	 orig commit -> fb239c1209bb0f0b4830cc72507cc2f2d63fadbd ......
checking 8524af02d13227a2ed881e7ba07974646a83b947 ......
	 orig commit -> 42b5122e828a6ccd9952ad3116343dc032d33efe ......
checking 074e30a3fc09e7289143fd1ad2ae6edd126ee3ee ......
	 orig commit -> 531beb067c6185aceabfdee0965234c6a8fd133b ......
checking 5a92c6e3e2f3616cb801e33950dc8ec7d25dee0b ......
	 orig commit -> cad9946c2a4375386062131858881cfd30fc1b8f ......
checking 151b144bc60268db7dfe3ef91ce5a4cb756677ae ......
	 orig commit -> df16aaac26e92e97ab7234d3f93c953466adc4b5 ......
checking bc342bc0295422962fbbdd5aa1dd17b3bb7345bf ......
	 orig commit -> 814596495dd2b9d4aab92d8f89cf19060d25d2ea ......
checking 9808c97d3cb4f31629e16fbd2673a600bef3235d ......
	 orig commit -> efe3de79e0b52ca281ef6691480c8c68c82a4657 ......
checking c6a95f37d3a0539424b66c2e31b657b10aaa2b53 ......
	 orig commit -> 2824f5033248600673e3e126a4d135363cbfd9ac ......
checking 8441a0014a29e4230d492947e5599415f219d9a9 ......
	 orig commit -> 86b389ff22bd6ad8fd3cb98e41cd271886c6d023 ......
checking 2be683020be4bd8032ae07f6974656daa66f378d ......
	 orig commit -> 40f7090bb1b4ec327ea1e1402ff5783af5b35195 ......
checking 9a85abc794831bc550de3e616588efff14d2c60a ......
	 orig commit -> ad8fb554f04e38f155c9bc34bbf521fc592ceee7 ......
checking 9c707c93e179ca03b593d4f1c3789dbfe94d5157 ......
	 orig commit -> 5717a09aeaf62d197deba1fc7ccd6bc45f3a9dcc ......
checking af504c5a88b3fca04855dd0868d33b7ec3025261 ......
	 orig commit -> 15e2cffec3aa0d47a8d75ae80e1b136bfb5dff30 ......
checking 88859f6cc5c41ec8235a9eb36f6c3f2a13f3ee26 ......
	 orig commit -> 9b2071028f8def49971a3b213ab6efd02a7e56e8 ......
checking d1db300b8ffc4f644067e3444a5a9293d05f9441 ......
	 orig commit -> a27ba2607e60312554cbcd43fc660b2c7f29dc9c ......
checking d9a59eac3fd67c559df87c6cf6ab07298012d197 ......
	 orig commit -> a78ee256c325ecfaec13cafc41b315bd4e1dd518 ......
checking 54978daa9dc55124986a07c2eccd76166a3fe8ef ......
	 orig commit -> de0aa7b2f97d348ba7d1e17a00744c989baa0cb6 ......
		 de0aa7b2f97d348ba7d1e17a00744c989baa0cb6 has problem. Fixes commit -> 35a88a18d7ea58600e11590405bc93b08e16e7f5
commit b5199c61e95c58fdfd9478bcbf368f1575d61da1
Author: Dexuan Cui <decui@microsoft.com>
Date:   Mon Jul 9 13:16:07 2018 -0500

    PCI: hv: Disable/enable IRQs rather than BH in hv_compose_msi_msg()
    
    commit 35a88a18d7ea58600e11590405bc93b08e16e7f5 upstream.
    
    Commit de0aa7b2f97d ("PCI: hv: Fix 2 hang issues in hv_compose_msi_msg()")
    uses local_bh_disable()/enable(), because hv_pci_onchannelcallback() can
    also run in tasklet context as the channel event callback, so bottom halves
    should be disabled to prevent a race condition.
    
    With CONFIG_PROVE_LOCKING=y in the recent mainline, or old kernels that
    don't have commit f71b74bca637 ("irq/softirqs: Use lockdep to assert IRQs
    are disabled/enabled"), when the upper layer IRQ code calls
    hv_compose_msi_msg() with local IRQs disabled, we'll see a warning at the
    beginning of __local_bh_enable_ip():
    
      IRQs not enabled as expected
        WARNING: CPU: 0 PID: 408 at kernel/softirq.c:162 __local_bh_enable_ip
    
    The warning exposes an issue in de0aa7b2f97d: local_bh_enable() can
    potentially call do_softirq(), which is not supposed to run when local IRQs
    are disabled. Let's fix this by using local_irq_save()/restore() instead.
    
    Note: hv_pci_onchannelcallback() is not a hot path because it's only called
    when the PCI device is hot added and removed, which is infrequent.
    
    Fixes: de0aa7b2f97d ("PCI: hv: Fix 2 hang issues in hv_compose_msi_msg()")
    Signed-off-by: Dexuan Cui <decui@microsoft.com>
    Signed-off-by: Lorenzo Pieralisi <lorenzo.pieralisi@arm.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Reviewed-by: Haiyang Zhang <haiyangz@microsoft.com>
    Cc: stable@vger.kernel.org
    Cc: Stephen Hemminger <sthemmin@microsoft.com>
    Cc: K. Y. Srinivasan <kys@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 085fc1967b56c2bed7f9ab05bbaeb7e9ca86d0b5 ......
	 orig commit -> bd36ea57d6d58041180c4f7d2c2bf5194c26845d ......
	 orig commit -> a7aa75a2a7dba32594291a71c3704000a2fd7089 ......
checking 4cbe6caa4c6c3e9099d73160c59fe3c11ca5b3c5 ......
	 orig commit -> 78ce241099bb363b19dbd0245442e66c8de8f567 ......
checking 5df3a1b9f87b62c66fb2fa39c7b22eb32303df36 ......
	 orig commit -> 8a331f4a0863bea758561c921b94b4d28f7c4029 ......
checking 6bcf3b066c69d00068d1afdcad477d4648ffa51d ......
	 orig commit -> 0afd0d9e0e7879d666c1df2fa1bea4d8716909fe ......
checking 806a730c0b0beac0a7810735b910301c6da342f3 ......
	 orig commit -> 7dec80ccbe310fb7e225bf21c48c672bb780ce7b ......
checking afb5e5c8a125fa0a797311c2a18ccb53b59d1449 ......
	 orig commit -> 6f5ec2993b1f39aed12fa6fd56e8dc2272ee8a33 ......
checking 2c26d5784e71c3a5f456436d893e39c67cbe088d ......
	 orig commit -> fd35c88b74170d9335530d9abf271d5d73eb5401 ......
checking 1bea53df12c47517b6e487e6fed34d0c05d42905 ......
	 orig commit -> 13810435b9a7014fb92eb715f77da488f3b65b99 ......
		 13810435b9a7014fb92eb715f77da488f3b65b99 has problem. Fixes commit -> 22566c1603030f0a036ad564634b064ad1a55db2
0b9301fb632f7111a3293a30cc5b20f1b82ed08d
cd77849a69cf5d81a86dd88dac7a594a67cb5c87
commit 5ce4164fff6735d7f26b3e465deb7133cea558e9
Author: Artem Savkov <asavkov@redhat.com>
Date:   Tue Nov 20 11:52:16 2018 -0600

    objtool: Fix segfault in .cold detection with -ffunction-sections
    
    [ Upstream commit 22566c1603030f0a036ad564634b064ad1a55db2 ]
    
    Because find_symbol_by_name() traverses the same lists as
    read_symbols(), changing sym->name in place without copying it affects
    the result of find_symbol_by_name().  In the case where a ".cold"
    function precedes its parent in sec->symbol_list, it can result in a
    function being considered a parent of itself. This leads to function
    length being set to 0 and other consequent side-effects including a
    segfault in add_switch_table().  The effects of this bug are only
    visible when building with -ffunction-sections in KCFLAGS.
    
    Fix by copying the search string instead of modifying it in place.
    
    Signed-off-by: Artem Savkov <asavkov@redhat.com>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: 13810435b9a7 ("objtool: Support GCC 8's cold subfunctions")
    Link: http://lkml.kernel.org/r/910abd6b5a4945130fd44f787c24e07b9e07c8da.1542736240.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit de21975e71fe3fbb96b42fe6155d8a74fc74e4ca
Author: Artem Savkov <asavkov@redhat.com>
Date:   Tue Nov 20 11:52:15 2018 -0600

    objtool: Fix double-free in .cold detection error path
    
    [ Upstream commit 0b9301fb632f7111a3293a30cc5b20f1b82ed08d ]
    
    If read_symbols() fails during second list traversal (the one dealing
    with ".cold" subfunctions) it frees the symbol, but never deletes it
    from the list/hash_table resulting in symbol being freed again in
    elf_close(). Fix it by just returning an error, leaving cleanup to
    elf_close().
    
    Signed-off-by: Artem Savkov <asavkov@redhat.com>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: 13810435b9a7 ("objtool: Support GCC 8's cold subfunctions")
    Link: http://lkml.kernel.org/r/beac5a9b7da9e8be90223459dcbe07766ae437dd.1542736240.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
commit 5ce4164fff6735d7f26b3e465deb7133cea558e9
Author: Artem Savkov <asavkov@redhat.com>
Date:   Tue Nov 20 11:52:16 2018 -0600

    objtool: Fix segfault in .cold detection with -ffunction-sections
    
    [ Upstream commit 22566c1603030f0a036ad564634b064ad1a55db2 ]
    
    Because find_symbol_by_name() traverses the same lists as
    read_symbols(), changing sym->name in place without copying it affects
    the result of find_symbol_by_name().  In the case where a ".cold"
    function precedes its parent in sec->symbol_list, it can result in a
    function being considered a parent of itself. This leads to function
    length being set to 0 and other consequent side-effects including a
    segfault in add_switch_table().  The effects of this bug are only
    visible when building with -ffunction-sections in KCFLAGS.
    
    Fix by copying the search string instead of modifying it in place.
    
    Signed-off-by: Artem Savkov <asavkov@redhat.com>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: 13810435b9a7 ("objtool: Support GCC 8's cold subfunctions")
    Link: http://lkml.kernel.org/r/910abd6b5a4945130fd44f787c24e07b9e07c8da.1542736240.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit de21975e71fe3fbb96b42fe6155d8a74fc74e4ca
Author: Artem Savkov <asavkov@redhat.com>
Date:   Tue Nov 20 11:52:15 2018 -0600

    objtool: Fix double-free in .cold detection error path
    
    [ Upstream commit 0b9301fb632f7111a3293a30cc5b20f1b82ed08d ]
    
    If read_symbols() fails during second list traversal (the one dealing
    with ".cold" subfunctions) it frees the symbol, but never deletes it
    from the list/hash_table resulting in symbol being freed again in
    elf_close(). Fix it by just returning an error, leaving cleanup to
    elf_close().
    
    Signed-off-by: Artem Savkov <asavkov@redhat.com>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: 13810435b9a7 ("objtool: Support GCC 8's cold subfunctions")
    Link: http://lkml.kernel.org/r/beac5a9b7da9e8be90223459dcbe07766ae437dd.1542736240.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
checking b968dd7650c8075de1fb74569a736f1daaa4459c ......
	 orig commit -> 145e1a71e090575c74969e3daa8136d1e5b99fc8 ......
checking 6a19487d5a93ee7f3850560b013a037fffd3a582 ......
	 orig commit -> 4faa99965e027cc057c5145ce45fa772caa04e8d ......
