Check from v4.14.10 to v4.14.11
Commit count: 147
checking 0d59679df5b53755c00ea0292df696f97bfc950d ......
checking 3ade66602bb7ea348ed8cbafcdd56eb1826c2177 ......
	 orig commit -> e7e51dcf3b8a5f65c5653a054ad57eb2492a90d0 ......
checking aaa5a91ff744f91fb1d1c91853aa0c8f126be563 ......
	 orig commit -> 966031f340185eddd05affcf72b740549f056348 ......
checking 57849de13c7da3385611a1b9aca5c6040ef7dfe2 ......
	 orig commit -> 7f414195b0c3612acd12b4611a5fe75995cf10c7 ......
checking 3e133155f22d59b0085ef63cbcbcfbd96c4d0b70 ......
	 orig commit -> a62d69857aab4caa43049e72fe0ed5c4a60518dd ......
checking cf6c3f7f4b1305596e261fb90201b737ad79e0d6 ......
	 orig commit -> c739f930be1dd5fd949030e3475a884fe06dae9b ......
checking 530f5fa1600b6af56b138f9fb87b7f5148c979a0 ......
	 orig commit -> ac461122c88a10b7d775de2f56467f097c9e627a ......
checking 082b7521a541a66f1fed68b1f76de6a3b910495e ......
	 orig commit -> decab0888e6e14e11d53cefa85f8b3d3b45ce73c ......
		 decab0888e6e14e11d53cefa85f8b3d3b45ce73c has problem. Fixes commit -> f77084d96355f5fba8e2c1fb3a51a393b1570de7
commit b80a2dd4d7a1e51ed34c91b4e03e425dc0c21223
Author: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date:   Wed Oct 17 12:34:32 2018 +0200

    x86/mm/pat: Disable preemption around __flush_tlb_all()
    
    commit f77084d96355f5fba8e2c1fb3a51a393b1570de7 upstream.
    
    The WARN_ON_ONCE(__read_cr3() != build_cr3()) in switch_mm_irqs_off()
    triggers every once in a while during a snapshotted system upgrade.
    
    The warning triggers since commit decab0888e6e ("x86/mm: Remove
    preempt_disable/enable() from __native_flush_tlb()"). The callchain is:
    
      get_page_from_freelist() -> post_alloc_hook() -> __kernel_map_pages()
    
    with CONFIG_DEBUG_PAGEALLOC enabled.
    
    Disable preemption during CR3 reset / __flush_tlb_all() and add a comment
    why preemption has to be disabled so it won't be removed accidentaly.
    
    Add another preemptible() check in __flush_tlb_all() to catch callers with
    enabled preemption when PGE is enabled, because PGE enabled does not
    trigger the warning in __native_flush_tlb(). Suggested by Andy Lutomirski.
    
    Fixes: decab0888e6e ("x86/mm: Remove preempt_disable/enable() from __native_flush_tlb()")
    Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20181017103432.zgv46nlu3hc7k4rq@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking b5bef29785ff990a90238d4f59ccbeb656134eeb ......
	 orig commit -> 322f8b8b340c824aef891342b0f5795d15e11562 ......
checking e798502cfb471b95153de2f75a89501c45ec997a ......
	 orig commit -> 5d62c183f9e9df1deeea0906d099a94e8a43047a ......
		 5d62c183f9e9df1deeea0906d099a94e8a43047a has problem. Fixes commit -> 80d20d35af1edd632a5e7a3b9c0ab7ceff92769e
commit e5bcbedadfd9646c862062071ade0612a78a70e3
Author: Anna-Maria Gleixner <anna-maria@linutronix.de>
Date:   Tue Jul 31 18:13:58 2018 +0200

    nohz: Fix local_timer_softirq_pending()
    
    commit 80d20d35af1edd632a5e7a3b9c0ab7ceff92769e upstream.
    
    local_timer_softirq_pending() checks whether the timer softirq is
    pending with: local_softirq_pending() & TIMER_SOFTIRQ.
    
    This is wrong because TIMER_SOFTIRQ is the softirq number and not a
    bitmask. So the test checks for the wrong bit.
    
    Use BIT(TIMER_SOFTIRQ) instead.
    
    Fixes: 5d62c183f9e9 ("nohz: Prevent a timer interrupt storm in tick_nohz_stop_sched_tick()")
    Signed-off-by: Anna-Maria Gleixner <anna-maria@linutronix.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Reviewed-by: Daniel Bristot de Oliveira <bristot@redhat.com>
    Acked-by: Frederic Weisbecker <frederic@kernel.org>
    Cc: bigeasy@linutronix.de
    Cc: peterz@infradead.org
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20180731161358.29472-1-anna-maria@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 7a3ce39c2bcac61abcb4650b33945335a02ef6cd ......
	 orig commit -> d6b246bb7a29703f53aa4c050b8b3205d749caee ......
checking 2695c0f1f71e6022a6916584a4d19de8968e97c3 ......
	 orig commit -> f57ab9a01a36ef3454333251cc57e3a9948b17bf ......
checking f3f5fa872d09109edfd7c10c57865301fee396d4 ......
	 orig commit -> 046046737bd35bed047460f080ea47e186be731e ......
checking d87f1bc7d15b89bd3bcf31020eb7f3b3cd6f84b5 ......
	 orig commit -> 7f3dc0088b98533f17128058fac73cd8b2752ef1 ......
checking 6fae6de72ad44e98b5ae58a662d110c58594aad9 ......
	 orig commit -> 26456f87aca7157c057de65c9414b37f1ab881d1 ......
checking 8f1aa64ab08621cc3d2b1600ab80da5d3128abb6 ......
	 orig commit -> fd45bb77ad682be728d1002431d77b8c73342836 ......
checking e4fb2e7e92ec638f0bd489c56b4b6d9004fd1f40 ......
	 orig commit -> ced6d5c11d3e7b342f1a80f908e6756ebd4b8ddd ......
		 ced6d5c11d3e7b342f1a80f908e6756ebd4b8ddd has problem. Fixes commit -> ed4bbf7910b28ce3c691aef28d245585eaabda06
commit 4db98c583205ce93771ee16eeb5543185706df0c
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sun Jan 14 23:19:49 2018 +0100

    timers: Unconditionally check deferrable base
    
    commit ed4bbf7910b28ce3c691aef28d245585eaabda06 upstream.
    
    When the timer base is checked for expired timers then the deferrable base
    must be checked as well. This was missed when making the deferrable base
    independent of base::nohz_active.
    
    Fixes: ced6d5c11d3e ("timers: Use deferrable base independent of base::nohz_active")
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Anna-Maria Gleixner <anna-maria@linutronix.de>
    Cc: Frederic Weisbecker <fweisbec@gmail.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Sebastian Siewior <bigeasy@linutronix.de>
    Cc: Paul McKenney <paulmck@linux.vnet.ibm.com>
    Cc: rt@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking f0f18aa8f70171f3e184b4185e673d7d4694300e ......
	 orig commit -> da99706689481717998d1d48edd389f339eea979 ......
checking c7c4e00a66081ad6161f009a0c329b9a36085766 ......
	 orig commit -> 07b9f12864d16c3a861aef4817eb1efccbc5d0e6 ......
checking e2f33e5983cb1609805e267a3d2ef46d78257b2c ......
	 orig commit -> b9096d9f15c142574ebebe8fbb137012bb9d99c2 ......
checking b9d02d3c5899b0abcb2df72252d7fc2f57028bfb ......
	 orig commit -> 7f038d256c723dd390d2fca942919573995f4cfd ......
checking 57211f0cf174f8fdf3dffcff99fad25f376bb2b5 ......
	 orig commit -> 3920bb713038810f25770e7545b79f204685c8f2 ......
checking 9fa3c3b5598eec2040fa466941a59bfc15f03f17 ......
	 orig commit -> 08933099e6404f588f81c2050bfec7313e06eeaf ......
checking eb6cc0af22a3b0c982e3a61de63736b2c667a94e ......
	 orig commit -> 92a18a657fb2e2ffbfa0659af32cc18fd2346516 ......
checking ad61ff29f1049448fa389ba9ad464e49bdcdd61c ......
	 orig commit -> c6a36ad383559a60a249aa6016cebf3cb8b6c485 ......
checking 1fcd9859a4b3f1df7316ff01a9993695ab929727 ......
	 orig commit -> 964728f9f407eca0b417fdf8e784b7a76979490c ......
checking 2d6483bf78f859b827ea97a16b68cf64c3b56e67 ......
	 orig commit -> 8272d099d05f7ab2776cf56a2ab9f9443be18907 ......
checking ed4db9a7f8cb9e83605e63e7656a6efb56846ebb ......
	 orig commit -> 248a22044366f588d46754c54dfe29ffe4f8b4df ......
checking 6b8335e48ae7171206eda3ae572f0cd0c75ca8a1 ......
	 orig commit -> 90120d15f4c397272aaf41077960a157fc4212bf ......
		 90120d15f4c397272aaf41077960a157fc4212bf has problem. Fixes commit -> 55448d85ae2f7f2b6c43d66946146ec89b4eb088
checking 2ee11dcfc9e1c894b058de64fb8b693cf697fbbe ......
	 orig commit -> 544c4605acc5ae4afe7dd5914147947db182f2fb ......
checking 38e8981d5490b2908136baea1f9e3b84a87aec01 ......
	 orig commit -> 59585b4be9ae4dc6506551709bdcd6f5210b8a01 ......
checking b9edd6bf0ccb2939a7716b80d3e73a24ead9fe62 ......
checking 49cd180d4a104159f240a9a896e5f13844227378 ......
	 orig commit -> b90ddd568792bcb0054eaf0f61785c8f80c3bd1c ......
		 b90ddd568792bcb0054eaf0f61785c8f80c3bd1c has problem. Fixes commit -> f72c4ac695573699dde5b71da1c3b9ef80440616
checking 17155ea827b2fd81330a442ed56d0edafd9969e1 ......
	 orig commit -> 268b790679422a89e9ab0685d9f291edae780c98 ......
checking 8f5bbb29b62c818e16de49c0bbc945b501c157cf ......
	 orig commit -> 231243c82793428467524227ae02ca451e6a98e7 ......
		 231243c82793428467524227ae02ca451e6a98e7 has problem. Fixes commit -> 05e0cc84e00c54fb152d1f4b86bc211823a83d0c
commit ce1e51d842baa8cf55a05a26933402e55d9b6217
Author: Saeed Mahameed <saeedm@mellanox.com>
Date:   Thu Jan 4 04:35:51 2018 +0200

    net/mlx5: Fix get vector affinity helper function
    
    
    [ Upstream commit 05e0cc84e00c54fb152d1f4b86bc211823a83d0c ]
    
    mlx5_get_vector_affinity used to call pci_irq_get_affinity and after
    reverting the patch that sets the device affinity via PCI_IRQ_AFFINITY
    API, calling pci_irq_get_affinity becomes useless and it breaks RDMA
    mlx5 users.  To fix this, this patch provides an alternative way to
    retrieve IRQ vector affinity using legacy IRQ API, following
    smp_affinity read procfs implementation.
    
    Fixes: 231243c82793 ("Revert mlx5: move affinity hints assignments to generic code")
    Fixes: a435393acafb ("mlx5: move affinity hints assignments to generic code")
    Cc: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Saeed Mahameed <saeedm@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking f2272d5dce7905d605f26ba8a5f9961d05263e74 ......
	 orig commit -> 094009531612246d9e13f9e0c3ae2205d7f63a0a ......
checking 86deaaa0ca2b0657e1f72e1087153d4ff22a312b ......
	 orig commit -> d03a45572efa068fa64db211d6d45222660e76c5 ......
checking 185a3475dee6c14dd67d1a94178b6b5615cf167b ......
	 orig commit -> 74ee0e8c1bf9925c59cc8f1c65c29adf6e4cf603 ......
checking 39889c293371e826503b61d98050a49742ccaf9c ......
	 orig commit -> 182088aa3c6c7f7c20a2c1dcc9ded4a3fc631f38 ......
checking 7f6dcb82d04045f143758f56caf031376f9bf16c ......
	 orig commit -> 2edbdb3159d6f6bd3a9b6e7f789f2b879699a519 ......
checking 11295730446fd654aeef28a575d801f3679424fa ......
	 orig commit -> b59e6979a86384e68b0ab6ffeab11f0034fba82d ......
checking 215b69e208089f42c29f9343ef11f4adc6ea6f6b ......
	 orig commit -> f870c1ff65a6d1f3a083f277280802ee09a5b44d ......
checking cea58617977baafe4a1be8f55c8e55d21c6cfb20 ......
	 orig commit -> bae115a2bb479142605726e6aa130f43f50e801a ......
checking 5504319c6993d51565b582c685c3e09c0e07fded ......
	 orig commit -> 4688eb7cf3ae2c2721d1dacff5c1384cba47d176 ......
checking 333921964046fe8453a90b60aa55dc4725955073 ......
	 orig commit -> 58acfd714e6b02e8617448b431c2b64a2f1f0792 ......
checking 5e255d684d0554893768b4452de404f293c71696 ......
	 orig commit -> c505873eaece2b4aefd07d339dc7e1400e0235ac ......
checking 583395a81f00a42f178c1d8ba3c4858d76c9f5b4 ......
	 orig commit -> 9ee11bd03cb1a5c3ca33c2bb70e7ed325f68890f ......
checking bcc029ff5dafc68d00a5fceadd93763d2b43e0e3 ......
	 orig commit -> fccff0862838908d21eaf956d57e09c6c189f7c5 ......
checking 92ae8233467b3a19a50fb02a7ebe065c6de3df17 ......
	 orig commit -> 517d7c79bdb39864e617960504bdc1aa560c75c6 ......
		 517d7c79bdb39864e617960504bdc1aa560c75c6 has problem. Fixes commit -> ff946833b70e0c7f93de9a3f5b329b5ae2287b38
checking 201c59bb7ba69fd6a41ac6606d8049b94fb26232 ......
	 orig commit -> 2342b8d95bcae5946e1b9b8d58645f37500ef2e7 ......
checking f38ffe325b209f367c003bab291cf7e96cd1a6d9 ......
	 orig commit -> ad3cbf61332914711e5f506972b1dc9af8d62146 ......
checking ff1ff3815c2483ac19bd6f926a535dd4cea27e2e ......
	 orig commit -> 4b52d010113e11006a389f2a8315167ede9e0b10 ......
checking 701768dc9a1030d3f02b9b3e9b4690d15f637dad ......
	 orig commit -> d4a7a8893d4cdbc89d79ac4aa704bf8d4b67b368 ......
checking a6cc63e125ffb3ae9f6b4e2b4642ddea9a932b46 ......
	 orig commit -> c48e74736fccf25fb32bb015426359e1c2016e3b ......
checking bf070305213031e1300070d10334ac012116d470 ......
	 orig commit -> dbff26e44dc3ec4de6578733b054a0114652a764 ......
checking 999755ec40a6206d0c9f3edfffe2b00a7a66a6e9 ......
	 orig commit -> 0c1cc8b2215f5122ca614b5adca60346018758c3 ......
checking c4d0e614c151f102967ff38bdf7c4372c146a5a6 ......
	 orig commit -> 23f4cc2cd9ed92570647220aca60d0197d8c1fa9 ......
checking 597181622e649b30a4c4d6bec4816d2f8987d25a ......
	 orig commit -> 2989ad1ec03021ee6d2193c35414f1d970a243de ......
checking 2dc5654e6fbc46161c56058081258bd3ad8d1ab0 ......
	 orig commit -> 6323514116404cc651df1b7fffa1311ddf8ce647 ......
checking 3ddcb727c71779c23097d440355c4abe27379558 ......
	 orig commit -> 37e92a9d4fe38dc3e7308913575983a6a088c8d4 ......
checking f35318b289446015ce2d2cbfd240ba47bda6f187 ......
	 orig commit -> d4761754b4fb2ef8d9a1e9d121c4bec84e1fe292 ......
checking 265ba7a046c05f67f80c2540ec3212dafe5b3673 ......
	 orig commit -> 35b99dffc3f710cafceee6c8c6ac6a98eb2cb4bf ......
checking 003514ffb447120d1a5997827ad5226d7b5a82e1 ......
	 orig commit -> c1a8d0a3accf64a014d605e6806ce05d1c17adf1 ......
checking dd9a2648b3e35c2369f580215d916baf7e23253a ......
	 orig commit -> 21b5944350052d2583e82dd59b19a9ba94a007f0 ......
checking 126f42ecfcb48ec50b289124f23dafa499012650 ......
	 orig commit -> 84aeb437ab98a2bce3d4b2111c79723aedfceb33 ......
checking 27ccace9b982ea796e15ba9dc6af5941539c6be8 ......
	 orig commit -> b4681c2829e24943aadd1a7bb3a30d41d0a20050 ......
checking 44319591ffa28770f12f33b70e4269d8cda8cb5f ......
	 orig commit -> e5a9336adb317db55eb3fe8200856096f3c71109 ......
checking 6d1c489810bcde9266ccdbedc0861a5dc9778f60 ......
	 orig commit -> 74c4b656c3d92ec4c824ea1a4afd726b7b6568c8 ......
checking a3927015a4bbcb73d35cdbed24f81efeba1d7a6a ......
	 orig commit -> 8cb38a602478e9f806571f6920b0a3298aabf042 ......
checking 9f49cbc7cd207f27ead81246d9553515aea68131 ......
	 orig commit -> 589bf32f09852041fbd3b7ce1a9e703f95c230ba ......
checking 3bc400bad0e003d40a0a2412411aed7cbae16f96 ......
	 orig commit -> 8f659a03a0ba9289b9aeb9b4470e6fb263d6f483 ......
		 8f659a03a0ba9289b9aeb9b4470e6fb263d6f483 has problem. Fixes commit -> 20b50d79974ea3192e8c3ab7faf4e536e5f14d8f
checking 72b44d0434c1a4688b55aaa59150d74344721306 ......
	 orig commit -> 02f510f326501470348a5df341e8232c3497bbbb ......
checking 8658408f284efd553a882ee717326845130c51d9 ......
	 orig commit -> 8a03a3692b100d84785ee7a834e9215e304c9e00 ......
checking e34a43e57c218bf28f8ec73a1ce68fec41c4b20c ......
	 orig commit -> b22d73d6689fd902a66c08ebe71ab2f3b351e22f ......
checking 621b5ae0f9f4f9ef91bf441afc086ecf5e752d51 ......
	 orig commit -> 7fbd9493f0eeae8cef58300505a9ef5c8fce6313 ......
checking c7e9d724785dc9b6a423bddc6b4fa6fb1368692f ......
	 orig commit -> 600647d467c6d04b3954b41a6ee1795b5ae00550 ......
checking eb710b5f62ad3a18742bae70f91e8664ee23cbe3 ......
	 orig commit -> 2f6c498e4f15d27852c04ed46d804a39137ba364 ......
checking d3f3d4134eb700ad087691effbdf26fe8f3bfd90 ......
	 orig commit -> 748a240c589824e9121befb1cba5341c319885bc ......
checking 4f2963559f29f34a8dbcc35a331f152fa3492224 ......
	 orig commit -> 30791ac41927ebd3e75486f9504b6d2280463bf0 ......
checking e414e7f03c29a4d3f07e042e18bdfe84269897df ......
	 orig commit -> c589e69b508d29ed8e644dfecda453f71c02ec27 ......
checking e7728247372ca9f7faccca4a37e96964f796c94b ......
	 orig commit -> 14e138a86f6347c6199f610576d2e11c03bec5f0 ......
checking 78ce0e9c4183a34b0910ec36c4ad8df1f7bf7874 ......
	 orig commit -> a8ceb5dbfde1092b466936bca0ff3be127ecf38e ......
checking 6d0317869c9153d7e6efa769a764b54019d4a3d3 ......
	 orig commit -> 513674b5a2c9c7a67501506419da5c3c77ac6f08 ......
		 513674b5a2c9c7a67501506419da5c3c77ac6f08 has problem. Fixes commit -> e9191ffb65d8e159680ce0ad2224e1acbde6985c
commit 2295b3dd543f9a5a1834e4265d506a5bc0819983
Author: Ben Hutchings <ben.hutchings@codethink.co.uk>
Date:   Mon Jan 22 20:06:42 2018 +0000

    ipv6: Fix getsockopt() for sockets with default IPV6_AUTOFLOWLABEL
    
    
    [ Upstream commit e9191ffb65d8e159680ce0ad2224e1acbde6985c ]
    
    Commit 513674b5a2c9 ("net: reevalulate autoflowlabel setting after
    sysctl setting") removed the initialisation of
    ipv6_pinfo::autoflowlabel and added a second flag to indicate
    whether this field or the net namespace default should be used.
    
    The getsockopt() handling for this case was not updated, so it
    currently returns 0 for all sockets for which IPV6_AUTOFLOWLABEL is
    not explicitly enabled.  Fix it to return the effective value, whether
    that has been set at the socket or net namespace level.
    
    Fixes: 513674b5a2c9 ("net: reevalulate autoflowlabel setting after sysctl ...")
    Signed-off-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 1bad9c5ea85e7522d403559cc249dd7a0ae705b1 ......
	 orig commit -> aceef61ee56898cfa7b6960fb60b9326c3860441 ......
checking e3fb538e5715250d6a61a26925215229f2e9f52f ......
	 orig commit -> 93c647643b48f0131f02e45da3bd367d80443291 ......
checking f9c48469278060450e99c3995c5b0717c48d50b8 ......
	 orig commit -> a46182b00290839fa3fa159d54fd3237bd8669f0 ......
		 a46182b00290839fa3fa159d54fd3237bd8669f0 has problem. Fixes commit -> e7aadb27a5415e8125834b84a74477bfbee4eff5
ad23b750933ea7bf962678972a286c78a8fa36aa
commit 166f27322f8c89a3580a30c339ff34a66544500c
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Feb 1 10:26:57 2018 -0800

    net: igmp: add a missing rcu locking section
    
    
    [ Upstream commit e7aadb27a5415e8125834b84a74477bfbee4eff5 ]
    
    Newly added igmpv3_get_srcaddr() needs to be called under rcu lock.
    
    Timer callbacks do not ensure this locking.
    
    =============================
    WARNING: suspicious RCU usage
    4.15.0+ #200 Not tainted
    -----------------------------
    ./include/linux/inetdevice.h:216 suspicious rcu_dereference_check() usage!
    
    other info that might help us debug this:
    
    rcu_scheduler_active = 2, debug_locks = 1
    3 locks held by syzkaller616973/4074:
     #0:  (&mm->mmap_sem){++++}, at: [<00000000bfce669e>] __do_page_fault+0x32d/0xc90 arch/x86/mm/fault.c:1355
     #1:  ((&im->timer)){+.-.}, at: [<00000000619d2f71>] lockdep_copy_map include/linux/lockdep.h:178 [inline]
     #1:  ((&im->timer)){+.-.}, at: [<00000000619d2f71>] call_timer_fn+0x1c6/0x820 kernel/time/timer.c:1316
     #2:  (&(&im->lock)->rlock){+.-.}, at: [<000000005f833c5c>] spin_lock_bh include/linux/spinlock.h:315 [inline]
     #2:  (&(&im->lock)->rlock){+.-.}, at: [<000000005f833c5c>] igmpv3_send_report+0x98/0x5b0 net/ipv4/igmp.c:600
    
    stack backtrace:
    CPU: 0 PID: 4074 Comm: syzkaller616973 Not tainted 4.15.0+ #200
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     <IRQ>
     __dump_stack lib/dump_stack.c:17 [inline]
     dump_stack+0x194/0x257 lib/dump_stack.c:53
     lockdep_rcu_suspicious+0x123/0x170 kernel/locking/lockdep.c:4592
     __in_dev_get_rcu include/linux/inetdevice.h:216 [inline]
     igmpv3_get_srcaddr net/ipv4/igmp.c:329 [inline]
     igmpv3_newpack+0xeef/0x12e0 net/ipv4/igmp.c:389
     add_grhead.isra.27+0x235/0x300 net/ipv4/igmp.c:432
     add_grec+0xbd3/0x1170 net/ipv4/igmp.c:565
     igmpv3_send_report+0xd5/0x5b0 net/ipv4/igmp.c:605
     igmp_send_report+0xc43/0x1050 net/ipv4/igmp.c:722
     igmp_timer_expire+0x322/0x5c0 net/ipv4/igmp.c:831
     call_timer_fn+0x228/0x820 kernel/time/timer.c:1326
     expire_timers kernel/time/timer.c:1363 [inline]
     __run_timers+0x7ee/0xb70 kernel/time/timer.c:1666
     run_timer_softirq+0x4c/0x70 kernel/time/timer.c:1692
     __do_softirq+0x2d7/0xb85 kernel/softirq.c:285
     invoke_softirq kernel/softirq.c:365 [inline]
     irq_exit+0x1cc/0x200 kernel/softirq.c:405
     exiting_irq arch/x86/include/asm/apic.h:541 [inline]
     smp_apic_timer_interrupt+0x16b/0x700 arch/x86/kernel/apic/apic.c:1052
     apic_timer_interrupt+0xa9/0xb0 arch/x86/entry/entry_64.S:938
    
    Fixes: a46182b00290 ("net: igmp: Use correct source address on IGMPv3 reports")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d9bee33e397150b43be9ac2271b813552a94345f
Author: Felix Fietkau <nbd@nbd.name>
Date:   Fri Jan 19 11:50:46 2018 +0100

    net: igmp: fix source address check for IGMPv3 reports
    
    
    [ Upstream commit ad23b750933ea7bf962678972a286c78a8fa36aa ]
    
    Commit "net: igmp: Use correct source address on IGMPv3 reports"
    introduced a check to validate the source address of locally generated
    IGMPv3 packets.
    Instead of checking the local interface address directly, it uses
    inet_ifa_match(fl4->saddr, ifa), which checks if the address is on the
    local subnet (or equal to the point-to-point address if used).
    
    This breaks for point-to-point interfaces, so check against
    ifa->ifa_local directly.
    
    Cc: Kevin Cernekee <cernekee@chromium.org>
    Fixes: a46182b00290 ("net: igmp: Use correct source address on IGMPv3 reports")
    Reported-by: Sebastian Gottschall <s.gottschall@dd-wrt.com>
    Signed-off-by: Felix Fietkau <nbd@nbd.name>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 166f27322f8c89a3580a30c339ff34a66544500c
Author: Eric Dumazet <edumazet@google.com>
Date:   Thu Feb 1 10:26:57 2018 -0800

    net: igmp: add a missing rcu locking section
    
    
    [ Upstream commit e7aadb27a5415e8125834b84a74477bfbee4eff5 ]
    
    Newly added igmpv3_get_srcaddr() needs to be called under rcu lock.
    
    Timer callbacks do not ensure this locking.
    
    =============================
    WARNING: suspicious RCU usage
    4.15.0+ #200 Not tainted
    -----------------------------
    ./include/linux/inetdevice.h:216 suspicious rcu_dereference_check() usage!
    
    other info that might help us debug this:
    
    rcu_scheduler_active = 2, debug_locks = 1
    3 locks held by syzkaller616973/4074:
     #0:  (&mm->mmap_sem){++++}, at: [<00000000bfce669e>] __do_page_fault+0x32d/0xc90 arch/x86/mm/fault.c:1355
     #1:  ((&im->timer)){+.-.}, at: [<00000000619d2f71>] lockdep_copy_map include/linux/lockdep.h:178 [inline]
     #1:  ((&im->timer)){+.-.}, at: [<00000000619d2f71>] call_timer_fn+0x1c6/0x820 kernel/time/timer.c:1316
     #2:  (&(&im->lock)->rlock){+.-.}, at: [<000000005f833c5c>] spin_lock_bh include/linux/spinlock.h:315 [inline]
     #2:  (&(&im->lock)->rlock){+.-.}, at: [<000000005f833c5c>] igmpv3_send_report+0x98/0x5b0 net/ipv4/igmp.c:600
    
    stack backtrace:
    CPU: 0 PID: 4074 Comm: syzkaller616973 Not tainted 4.15.0+ #200
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    Call Trace:
     <IRQ>
     __dump_stack lib/dump_stack.c:17 [inline]
     dump_stack+0x194/0x257 lib/dump_stack.c:53
     lockdep_rcu_suspicious+0x123/0x170 kernel/locking/lockdep.c:4592
     __in_dev_get_rcu include/linux/inetdevice.h:216 [inline]
     igmpv3_get_srcaddr net/ipv4/igmp.c:329 [inline]
     igmpv3_newpack+0xeef/0x12e0 net/ipv4/igmp.c:389
     add_grhead.isra.27+0x235/0x300 net/ipv4/igmp.c:432
     add_grec+0xbd3/0x1170 net/ipv4/igmp.c:565
     igmpv3_send_report+0xd5/0x5b0 net/ipv4/igmp.c:605
     igmp_send_report+0xc43/0x1050 net/ipv4/igmp.c:722
     igmp_timer_expire+0x322/0x5c0 net/ipv4/igmp.c:831
     call_timer_fn+0x228/0x820 kernel/time/timer.c:1326
     expire_timers kernel/time/timer.c:1363 [inline]
     __run_timers+0x7ee/0xb70 kernel/time/timer.c:1666
     run_timer_softirq+0x4c/0x70 kernel/time/timer.c:1692
     __do_softirq+0x2d7/0xb85 kernel/softirq.c:285
     invoke_softirq kernel/softirq.c:365 [inline]
     irq_exit+0x1cc/0x200 kernel/softirq.c:405
     exiting_irq arch/x86/include/asm/apic.h:541 [inline]
     smp_apic_timer_interrupt+0x16b/0x700 arch/x86/kernel/apic/apic.c:1052
     apic_timer_interrupt+0xa9/0xb0 arch/x86/entry/entry_64.S:938
    
    Fixes: a46182b00290 ("net: igmp: Use correct source address on IGMPv3 reports")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking f55ac6684640a285465cf31a8d5e23bcc3da872d ......
	 orig commit -> 178e5f57a8d8f8fc5799a624b96fc31ef9a29ffa ......
checking 521f4d9625b7b2359dbec6039724b4feb9e8490d ......
	 orig commit -> b9b312a7a451e9c098921856e7cfbc201120e1a7 ......
checking 57dfc3d10e40053e70691260a791bb453f183cfd ......
	 orig commit -> b5476022bbada3764609368f03329ca287528dc8 ......
checking aa7f9011bc01b22658d4c255e2feecf0193e092d ......
	 orig commit -> 3ce120b16cc548472f80cf8644f90eda958cf1b6 ......
checking eaedee932c91120868d42df39a1fc17fa6a313ef ......
	 orig commit -> 14cb0dc6479dc5ebc63b3a459a5d89a2f1b39fed ......
checking 88da02868f7741cc7c1d895840e236e6df5483ef ......
	 orig commit -> 0abc2a10389f0c9070f76ca906c7382788036b93 ......
checking 0c688c288f8e82fdb5f3e0d0f3b2b1f3498ad187 ......
	 orig commit -> 466a2b42d67644447a1765276259a3ea5531ddff ......
checking 9c5ee053a67eb374878b20eab7d16feb2a87a851 ......
	 orig commit -> 44be77c590f381bc629815ac789b8b15ecc4ddcf ......
checking 9fcd2ae2abb5efb67f331f567ed22a7305461a80 ......
	 orig commit -> 285d5ddcffafa5d5e68c586f4c9eaa8b24a2897d ......
checking 3d858b85e376b08db9c9de42aa4e0b9b47fac466 ......
	 orig commit -> 8da5bbfc7cbba909f4f32d5e1dda3750baa5d853 ......
checking 2845bbd1ef1f574ce2bbd7a7f6feab04ca137cf3 ......
	 orig commit -> 322f74ede933b3e2cb78768b6a6fdbfbf478a0c1 ......
checking 056305595a9940005ff34d0a67e2a2b231d162b7 ......
	 orig commit -> a36c2638380c0a4676647a1f553b70b20d3ebce1 ......
checking af0dc162f644335c50e2384ba485e4aa79b25e28 ......
	 orig commit -> 4a50881bbac309e6f0684816a180bc3c14e1485d ......
checking 5f3b36984c7b15e9d6ace5fc836b3474a8bb4213 ......
	 orig commit -> 05d14e7b0c138cb07ba30e464f47b39434f3fdef ......
checking d471542b9f0706b9d37dba40bc02ef27b05a6bc1 ......
	 orig commit -> ad9a3668a434faca1339789ed2f043d679199309 ......
checking 907145e68e21947ec76d99827ab4eeeecff4a34c ......
	 orig commit -> 4c009af473b2026caaa26107e34d7cc68dad7756 ......
checking 074e2892a4205b0c88742d9d000c0c19e0b98244 ......
	 orig commit -> 822703354774ec935169cbbc8d503236bcb54fda ......
checking 077cb91c9fc35d638e014374491ac6a9f41b19ba ......
	 orig commit -> 737e0b7b67bdfe24090fab2852044bb283282fc5 ......
checking 314d9cdf7e0fb83781e8fae836044856a449ffe0 ......
	 orig commit -> 15f8c5f2415bfac73f33a14bcd83422bcbfb5298 ......
checking fe9f7bd45c01b4bc328d2442136c5456608f1637 ......
	 orig commit -> 695b78b548d8a26288f041e907ff17758df9e1d5 ......
checking c7d231ca5e0bf38f6920e92c97feadede0978d1a ......
	 orig commit -> bc6476d6c1edcb9b97621b5131bd169aa81f27db ......
checking 308ddf2afe83994719006200204dc819fcbd9e7a ......
	 orig commit -> 50dd2ea8ef67a1617e0c0658bcbec4b9fb03b936 ......
checking 23ef17a49f1edfa2c4b437c03b1c0d4da1d116d2 ......
	 orig commit -> 51f493ae71adc2c49a317a13c38e54e1cdf46005 ......
checking 2aec84963e5edf3c463c37da0a94fb4c12c2d2c2 ......
	 orig commit -> f55688c45442bc863f40ad678c638785b26cdce6 ......
checking 0aea6fb0e777bb89437c8883c289e05e1f153ec8 ......
	 orig commit -> ae415fa4c5248a8cf4faabd5a3c20576cb1ad607 ......
checking 66f833dbed02d39c44440b6b35ac088655c32edb ......
	 orig commit -> 45d8b80c2ac5d21cd1e2954431fb676bc2b1e099 ......
checking e08acdb9620bcd4c55128cad07e625cd1825e533 ......
	 orig commit -> 9f5cb6b32d9e0a3a7453222baaf15664d92adbf2 ......
checking 704cfa04dde3a35cde59a67cafbcaeacbb3a76c8 ......
	 orig commit -> a4b51ef6552c704764684cef7e753162dc87c5fa ......
checking 27e16c33bb796cceb92e339998d30145076b43cd ......
	 orig commit -> b4bf4f924b1d7bade38fd51b2e401d20d0956e4d ......
checking dfa58126d7630c0db0b64fa7bd15741293b517b5 ......
	 orig commit -> 75298aa179d56cd64f54e58a19fffc8ab922b4c0 ......
checking 3dfd9fd8d897214b1a880c7fd8ed36b88faa1c02 ......
	 orig commit -> 385ce0ea4c078517fa51c261882c4e72fba53005 ......
		 385ce0ea4c078517fa51c261882c4e72fba53005 has problem. Fixes commit -> 99a9dc98ba52267ce5e062b52de88ea1f1b2a7d8
a237f762681e2a394ca67f21df2feb2b76a3609b
262b6b30087246abf09d6275eb0c0dc421bcbe38
commit c3e7fc96545d83abbc1c2c1a7ac6809cf5fb6202
Author: W. Trevor King <wking@tremily.us>
Date:   Fri Jan 12 15:24:59 2018 -0800

    security/Kconfig: Correct the Documentation reference for PTI
    
    commit a237f762681e2a394ca67f21df2feb2b76a3609b upstream.
    
    When the config option for PTI was added a reference to documentation was
    added as well. But the documentation did not exist at that point. The final
    documentation has a different file name.
    
    Fix it up to point to the proper file.
    
    Fixes: 385ce0ea ("x86/mm/pti: Add Kconfig")
    Signed-off-by: W. Trevor King <wking@tremily.us>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: linux-mm@kvack.org
    Cc: linux-security-module@vger.kernel.org
    Cc: James Morris <james.l.morris@oracle.com>
    Cc: "Serge E. Hallyn" <serge@hallyn.com>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/3009cc8ccbddcd897ec1e0cb6dda524929de0d14.1515799398.git.wking@tremily.us
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 968a3bb156424a9e4ea7aa1eb2779b6e86b5a63e
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Sat Jan 6 18:41:14 2018 +0100

    x86/tboot: Unbreak tboot with PTI enabled
    
    commit 262b6b30087246abf09d6275eb0c0dc421bcbe38 upstream.
    
    This is another case similar to what EFI does: create a new set of
    page tables, map some code at a low address, and jump to it.  PTI
    mistakes this low address for userspace and mistakenly marks it
    non-executable in an effort to make it unusable for userspace.
    
    Undo the poison to allow execution.
    
    Fixes: 385ce0ea4c07 ("x86/mm/pti: Add Kconfig")
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Andrea Arcangeli <aarcange@redhat.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Alan Cox <gnomes@lxorguk.ukuu.org.uk>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Jon Masters <jcm@redhat.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Andi Kleen <andi@firstfloor.org>
    Cc: Jeff Law <law@redhat.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Cc: David <dwmw@amazon.co.uk>
    Cc: Nick Clifton <nickc@redhat.com>
    Link: https://lkml.kernel.org/r/20180108102805.GK25546@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 6d8b7d3934b2c4f718441784823fbaeaa4c5327d
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Sun Jan 14 11:27:13 2018 +0100

    x86,perf: Disable intel_bts when PTI
    
    commit 99a9dc98ba52267ce5e062b52de88ea1f1b2a7d8 upstream.
    
    The intel_bts driver does not use the 'normal' BTS buffer which is exposed
    through the cpu_entry_area but instead uses the memory allocated for the
    perf AUX buffer.
    
    This obviously comes apart when using PTI because then the kernel mapping;
    which includes that AUX buffer memory; disappears. Fixing this requires to
    expose a mapping which is visible in all context and that's not trivial.
    
    As a quick fix disable this driver when PTI is enabled to prevent
    malfunction.
    
    Fixes: 385ce0ea4c07 ("x86/mm/pti: Add Kconfig")
    Reported-by: Vince Weaver <vincent.weaver@maine.edu>
    Reported-by: Robert Święcki <robert@swiecki.net>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: greg@kroah.com
    Cc: hughd@google.com
    Cc: luto@amacapital.net
    Cc: Vince Weaver <vince@deater.net>
    Cc: torvalds@linux-foundation.org
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20180114102713.GB6166@worktop.programming.kicks-ass.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit c3e7fc96545d83abbc1c2c1a7ac6809cf5fb6202
Author: W. Trevor King <wking@tremily.us>
Date:   Fri Jan 12 15:24:59 2018 -0800

    security/Kconfig: Correct the Documentation reference for PTI
    
    commit a237f762681e2a394ca67f21df2feb2b76a3609b upstream.
    
    When the config option for PTI was added a reference to documentation was
    added as well. But the documentation did not exist at that point. The final
    documentation has a different file name.
    
    Fix it up to point to the proper file.
    
    Fixes: 385ce0ea ("x86/mm/pti: Add Kconfig")
    Signed-off-by: W. Trevor King <wking@tremily.us>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: linux-mm@kvack.org
    Cc: linux-security-module@vger.kernel.org
    Cc: James Morris <james.l.morris@oracle.com>
    Cc: "Serge E. Hallyn" <serge@hallyn.com>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/3009cc8ccbddcd897ec1e0cb6dda524929de0d14.1515799398.git.wking@tremily.us
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 968a3bb156424a9e4ea7aa1eb2779b6e86b5a63e
Author: Dave Hansen <dave.hansen@linux.intel.com>
Date:   Sat Jan 6 18:41:14 2018 +0100

    x86/tboot: Unbreak tboot with PTI enabled
    
    commit 262b6b30087246abf09d6275eb0c0dc421bcbe38 upstream.
    
    This is another case similar to what EFI does: create a new set of
    page tables, map some code at a low address, and jump to it.  PTI
    mistakes this low address for userspace and mistakenly marks it
    non-executable in an effort to make it unusable for userspace.
    
    Undo the poison to allow execution.
    
    Fixes: 385ce0ea4c07 ("x86/mm/pti: Add Kconfig")
    Signed-off-by: Dave Hansen <dave.hansen@linux.intel.com>
    Signed-off-by: Andrea Arcangeli <aarcange@redhat.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Alan Cox <gnomes@lxorguk.ukuu.org.uk>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Jon Masters <jcm@redhat.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Andi Kleen <andi@firstfloor.org>
    Cc: Jeff Law <law@redhat.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Greg Kroah-Hartman <gregkh@linux-foundation.org>
    Cc: David <dwmw@amazon.co.uk>
    Cc: Nick Clifton <nickc@redhat.com>
    Link: https://lkml.kernel.org/r/20180108102805.GK25546@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 33d9d7836f0fa02777667d72bc815c12fbe61cac ......
	 orig commit -> 5f26d76c3fd67c48806415ef8b1116c97beff8ba ......
checking ef4b38472d6b1bf587554dfc7d5ab7abc835c1a5 ......
	 orig commit -> 0a126abd576ebc6403f063dbe20cf7416c9d9393 ......
checking c5548af97ae98f9d9e6ae5a9a005e605bd3c06b5 ......
	 orig commit -> 6cff64b86aaaa07f89f50498055a20e45754b0c1 ......
checking 36a72ab52c8d969a7a302082f52731c1be0e9ada ......
	 orig commit -> 21e94459110252d41b45c0c8ba50fd72a664d50c ......
checking b63812b81349e5d1a35107e2464547187bc25a61 ......
	 orig commit -> 6fd166aae78c0ab738d49bda653cbd9e3b1491cf ......
		 6fd166aae78c0ab738d49bda653cbd9e3b1491cf has problem. Fixes commit -> f10ee3dcc9f0aba92a5c4c064628be5200765dc2
1e5476815fd7f98b888e01a0f9522b63085f96c9
commit 98f42e3f849412895171d096b901bfa3ff0fe004
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu Jan 4 22:19:04 2018 +0100

    x86/tlb: Drop the _GPL from the cpu_tlbstate export
    
    commit 1e5476815fd7f98b888e01a0f9522b63085f96c9 upstream.
    
    The recent changes for PTI touch cpu_tlbstate from various tlb_flush
    inlines. cpu_tlbstate is exported as GPL symbol, so this causes a
    regression when building out of tree drivers for certain graphics cards.
    
    Aside of that the export was wrong since it was introduced as it should
    have been EXPORT_PER_CPU_SYMBOL_GPL().
    
    Use the correct PER_CPU export and drop the _GPL to restore the previous
    state which allows users to utilize the cards they payed for.
    
    As always I'm really thrilled to make this kind of change to support the
    #friends (or however the hot hashtag of today is spelled) from that closet
    sauce graphics corp.
    
    Fixes: 1e02ce4cccdc ("x86: Store a per-cpu shadow copy of CR4")
    Fixes: 6fd166aae78c ("x86/mm: Use/Fix PCID to optimize user/kernel switches")
    Reported-by: Kees Cook <keescook@google.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 026b3f23c970a22165ffdbd47a2a0cdccfd8c009
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sun Jan 14 00:23:57 2018 +0100

    x86/pti: Fix !PCID and sanitize defines
    
    commit f10ee3dcc9f0aba92a5c4c064628be5200765dc2 upstream.
    
    The switch to the user space page tables in the low level ASM code sets
    unconditionally bit 12 and bit 11 of CR3. Bit 12 is switching the base
    address of the page directory to the user part, bit 11 is switching the
    PCID to the PCID associated with the user page tables.
    
    This fails on a machine which lacks PCID support because bit 11 is set in
    CR3. Bit 11 is reserved when PCID is inactive.
    
    While the Intel SDM claims that the reserved bits are ignored when PCID is
    disabled, the AMD APM states that they should be cleared.
    
    This went unnoticed as the AMD APM was not checked when the code was
    developed and reviewed and test systems with Intel CPUs never failed to
    boot. The report is against a Centos 6 host where the guest fails to boot,
    so it's not yet clear whether this is a virt issue or can happen on real
    hardware too, but thats irrelevant as the AMD APM clearly ask for clearing
    the reserved bits.
    
    Make sure that on non PCID machines bit 11 is not set by the page table
    switching code.
    
    Andy suggested to rename the related bits and masks so they are clearly
    describing what they should be used for, which is done as well for clarity.
    
    That split could have been done with alternatives but the macro hell is
    horrible and ugly. This can be done on top if someone cares to remove the
    extra orq. For now it's a straight forward fix.
    
    Fixes: 6fd166aae78c ("x86/mm: Use/Fix PCID to optimize user/kernel switches")
    Reported-by: Laura Abbott <labbott@redhat.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: stable <stable@vger.kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Willy Tarreau <w@1wt.eu>
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Link: https://lkml.kernel.org/r/alpine.DEB.2.20.1801140009150.2371@nanos
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 98f42e3f849412895171d096b901bfa3ff0fe004
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu Jan 4 22:19:04 2018 +0100

    x86/tlb: Drop the _GPL from the cpu_tlbstate export
    
    commit 1e5476815fd7f98b888e01a0f9522b63085f96c9 upstream.
    
    The recent changes for PTI touch cpu_tlbstate from various tlb_flush
    inlines. cpu_tlbstate is exported as GPL symbol, so this causes a
    regression when building out of tree drivers for certain graphics cards.
    
    Aside of that the export was wrong since it was introduced as it should
    have been EXPORT_PER_CPU_SYMBOL_GPL().
    
    Use the correct PER_CPU export and drop the _GPL to restore the previous
    state which allows users to utilize the cards they payed for.
    
    As always I'm really thrilled to make this kind of change to support the
    #friends (or however the hot hashtag of today is spelled) from that closet
    sauce graphics corp.
    
    Fixes: 1e02ce4cccdc ("x86: Store a per-cpu shadow copy of CR4")
    Fixes: 6fd166aae78c ("x86/mm: Use/Fix PCID to optimize user/kernel switches")
    Reported-by: Kees Cook <keescook@google.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 954339c41cceca991c0aec6dd3b7e164c5b9f48b ......
	 orig commit -> 48e111982cda033fec832c6b0592c2acedd85d04 ......
checking c796e2324094f098575e47ec6d19f22cc4a4f9b9 ......
	 orig commit -> 2ea907c4fe7b78e5840c1dc07800eae93248cad1 ......
checking 9617ee896217558a2488b6dc71968a4489fb18b6 ......
	 orig commit -> 85900ea51577e31b186e523c8f4e068c79ecc7d3 ......
		 85900ea51577e31b186e523c8f4e068c79ecc7d3 has problem. Fixes commit -> ff924c5a1ec7548825cc2d07980b03be4224ffac
commit 4fff53acff152dcdf5d8758e273847f28c3b8e46
Author: Randy Dunlap <rdunlap@infradead.org>
Date:   Sat Sep 1 21:01:28 2018 -0700

    x86/pti: Fix section mismatch warning/error
    
    [ Upstream commit ff924c5a1ec7548825cc2d07980b03be4224ffac ]
    
    Fix the section mismatch warning in arch/x86/mm/pti.c:
    
    WARNING: vmlinux.o(.text+0x6972a): Section mismatch in reference from the function pti_clone_pgtable() to the function .init.text:pti_user_pagetable_walk_pte()
    The function pti_clone_pgtable() references
    the function __init pti_user_pagetable_walk_pte().
    This is often because pti_clone_pgtable lacks a __init
    annotation or the annotation of pti_user_pagetable_walk_pte is wrong.
    FATAL: modpost: Section mismatches detected.
    
    Fixes: 85900ea51577 ("x86/pti: Map the vsyscall page if needed")
    Reported-by: kbuild test robot <lkp@intel.com>
    Signed-off-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Link: https://lkml.kernel.org/r/43a6d6a3-d69d-5eda-da09-0b1c88215a2a@infradead.org
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 7aef823ee7e9a74de0d2665d116bde557aa134ca ......
	 orig commit -> f55f0501cbf65ec41cca5058513031b711730b1d ......
		 f55f0501cbf65ec41cca5058513031b711730b1d has problem. Fixes commit -> a0e6e0831c516860fc7f9be1db6c081fe902ebcf
d52888aa2753e3063a9d3a0c9f72f94aa9809c15
a62d69857aab4caa43049e72fe0ed5c4a60518dd
commit d412ab7cfc0de3c01befb5d32746eaf512929bde
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Fri Oct 26 15:28:54 2018 +0300

    x86/mm: Move LDT remap out of KASLR region on 5-level paging
    
    commit d52888aa2753e3063a9d3a0c9f72f94aa9809c15 upstream
    
    On 5-level paging the LDT remap area is placed in the middle of the KASLR
    randomization region and it can overlap with the direct mapping, the
    vmalloc or the vmap area.
    
    The LDT mapping is per mm, so it cannot be moved into the P4D page table
    next to the CPU_ENTRY_AREA without complicating PGD table allocation for
    5-level paging.
    
    The 4 PGD slot gap just before the direct mapping is reserved for
    hypervisors, so it cannot be used.
    
    Move the direct mapping one slot deeper and use the resulting gap for the
    LDT remap area. The resulting layout is the same for 4 and 5 level paging.
    
    [ tglx: Massaged changelog ]
    
    Fixes: f55f0501cbf6 ("x86/pti: Put the LDT in its own PGD if PTI is on")
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Andy Lutomirski <luto@kernel.org>
    Cc: bp@alien8.de
    Cc: hpa@zytor.com
    Cc: dave.hansen@linux.intel.com
    Cc: peterz@infradead.org
    Cc: boris.ostrovsky@oracle.com
    Cc: jgross@suse.com
    Cc: bhe@redhat.com
    Cc: willy@infradead.org
    Cc: linux-mm@kvack.org
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20181026122856.66224-2-kirill.shutemov@linux.intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3e133155f22d59b0085ef63cbcbcfbd96c4d0b70
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sun Dec 31 11:24:34 2017 +0100

    x86/ldt: Plug memory leak in error path
    
    commit a62d69857aab4caa43049e72fe0ed5c4a60518dd upstream.
    
    The error path in write_ldt() tries to free 'old_ldt' instead of the newly
    allocated 'new_ldt', resulting in a memory leak. It also misses to clean up a
    half populated LDT pagetable, which is not a leak as it gets cleaned up
    when the process exits.
    
    Free both the potentially half populated LDT pagetable and the newly
    allocated LDT struct. This can be done unconditionally because once an LDT
    is mapped subsequent maps will succeed, because the PTE page is already
    populated and the two LDTs fit into that single page.
    
    Reported-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Dominik Brodowski <linux@dominikbrodowski.net>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Linus Torvalds <torvalds@linuxfoundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Fixes: f55f0501cbf6 ("x86/pti: Put the LDT in its own PGD if PTI is on")
    Link: http://lkml.kernel.org/r/alpine.DEB.2.20.1712311121340.1899@nanos
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit a17989cb9bb03c75bb57dddc0f044100fd4d856e
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Fri Oct 26 15:28:55 2018 +0300

    x86/ldt: Unmap PTEs for the slot before freeing LDT pages
    
    commit a0e6e0831c516860fc7f9be1db6c081fe902ebcf upstream
    
    modify_ldt(2) leaves the old LDT mapped after switching over to the new
    one. The old LDT gets freed and the pages can be re-used.
    
    Leaving the mapping in place can have security implications. The mapping is
    present in the userspace page tables and Meltdown-like attacks can read
    these freed and possibly reused pages.
    
    It's relatively simple to fix: unmap the old LDT and flush TLB before
    freeing the old LDT memory.
    
    This further allows to avoid flushing the TLB in map_ldt_struct() as the
    slot is unmapped and flushed by unmap_ldt_struct() or has never been mapped
    at all.
    
    [ tglx: Massaged changelog and removed the needless line breaks ]
    
    Fixes: f55f0501cbf6 ("x86/pti: Put the LDT in its own PGD if PTI is on")
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: bp@alien8.de
    Cc: hpa@zytor.com
    Cc: dave.hansen@linux.intel.com
    Cc: luto@kernel.org
    Cc: peterz@infradead.org
    Cc: boris.ostrovsky@oracle.com
    Cc: jgross@suse.com
    Cc: bhe@redhat.com
    Cc: willy@infradead.org
    Cc: linux-mm@kvack.org
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20181026122856.66224-3-kirill.shutemov@linux.intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit d412ab7cfc0de3c01befb5d32746eaf512929bde
Author: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Date:   Fri Oct 26 15:28:54 2018 +0300

    x86/mm: Move LDT remap out of KASLR region on 5-level paging
    
    commit d52888aa2753e3063a9d3a0c9f72f94aa9809c15 upstream
    
    On 5-level paging the LDT remap area is placed in the middle of the KASLR
    randomization region and it can overlap with the direct mapping, the
    vmalloc or the vmap area.
    
    The LDT mapping is per mm, so it cannot be moved into the P4D page table
    next to the CPU_ENTRY_AREA without complicating PGD table allocation for
    5-level paging.
    
    The 4 PGD slot gap just before the direct mapping is reserved for
    hypervisors, so it cannot be used.
    
    Move the direct mapping one slot deeper and use the resulting gap for the
    LDT remap area. The resulting layout is the same for 4 and 5 level paging.
    
    [ tglx: Massaged changelog ]
    
    Fixes: f55f0501cbf6 ("x86/pti: Put the LDT in its own PGD if PTI is on")
    Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Andy Lutomirski <luto@kernel.org>
    Cc: bp@alien8.de
    Cc: hpa@zytor.com
    Cc: dave.hansen@linux.intel.com
    Cc: peterz@infradead.org
    Cc: boris.ostrovsky@oracle.com
    Cc: jgross@suse.com
    Cc: bhe@redhat.com
    Cc: willy@infradead.org
    Cc: linux-mm@kvack.org
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20181026122856.66224-2-kirill.shutemov@linux.intel.com
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 3e133155f22d59b0085ef63cbcbcfbd96c4d0b70
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sun Dec 31 11:24:34 2017 +0100

    x86/ldt: Plug memory leak in error path
    
    commit a62d69857aab4caa43049e72fe0ed5c4a60518dd upstream.
    
    The error path in write_ldt() tries to free 'old_ldt' instead of the newly
    allocated 'new_ldt', resulting in a memory leak. It also misses to clean up a
    half populated LDT pagetable, which is not a leak as it gets cleaned up
    when the process exits.
    
    Free both the potentially half populated LDT pagetable and the newly
    allocated LDT struct. This can be done unconditionally because once an LDT
    is mapped subsequent maps will succeed, because the PTE page is already
    populated and the two LDTs fit into that single page.
    
    Reported-by: Mathieu Desnoyers <mathieu.desnoyers@efficios.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Dominik Brodowski <linux@dominikbrodowski.net>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Linus Torvalds <torvalds@linuxfoundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Fixes: f55f0501cbf6 ("x86/pti: Put the LDT in its own PGD if PTI is on")
    Link: http://lkml.kernel.org/r/alpine.DEB.2.20.1712311121340.1899@nanos
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking c125107490107fc4ce6bad0d9b45fd5e33bfa3f3 ......
	 orig commit -> 9f449772a3106bcdd4eb8fdeb281147b0e99fb30 ......
checking 8b82023b7fc2c3734aae23bc03ed5937e67f7388 ......
	 orig commit -> c1961a4631daef4aeabee8e368b1b13e8f173c91 ......
		 c1961a4631daef4aeabee8e368b1b13e8f173c91 has problem. Fixes commit -> 2c991e408df6a407476dbc453d725e1e975479e7
42f3bdc5dd962a5958bc024c1e1444248a6b8b4a
commit b4660939afccbe1d2af5d066d1337f1b29c87ae8
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Thu Jan 4 18:07:12 2018 +0100

    x86/events/intel/ds: Use the proper cache flush method for mapping ds buffers
    
    commit 42f3bdc5dd962a5958bc024c1e1444248a6b8b4a upstream.
    
    Thomas reported the following warning:
    
     BUG: using smp_processor_id() in preemptible [00000000] code: ovsdb-server/4498
     caller is native_flush_tlb_single+0x57/0xc0
     native_flush_tlb_single+0x57/0xc0
     __set_pte_vaddr+0x2d/0x40
     set_pte_vaddr+0x2f/0x40
     cea_set_pte+0x30/0x40
     ds_update_cea.constprop.4+0x4d/0x70
     reserve_ds_buffers+0x159/0x410
     x86_reserve_hardware+0x150/0x160
     x86_pmu_event_init+0x3e/0x1f0
     perf_try_init_event+0x69/0x80
     perf_event_alloc+0x652/0x740
     SyS_perf_event_open+0x3f6/0xd60
     do_syscall_64+0x5c/0x190
    
    set_pte_vaddr is used to map the ds buffers into the cpu entry area, but
    there are two problems with that:
    
     1) The resulting flush is not supposed to be called in preemptible context
    
     2) The cpu entry area is supposed to be per CPU, but the debug store
        buffers are mapped for all CPUs so these mappings need to be flushed
        globally.
    
    Add the necessary preemption protection across the mapping code and flush
    TLBs globally.
    
    Fixes: c1961a4631da ("x86/events/intel/ds: Map debug buffers in cpu_entry_area")
    Reported-by: Thomas Zeitlhofer <thomas.zeitlhofer+lkml@ze-it.at>
    Signed-off-by: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Thomas Zeitlhofer <thomas.zeitlhofer+lkml@ze-it.at>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Hugh Dickins <hughd@google.com>
    Link: https://lkml.kernel.org/r/20180104170712.GB3040@hirez.programming.kicks-ass.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit aa49e48232ee4dc78d736939f83057dc12d04366
Author: Hugh Dickins <hughd@google.com>
Date:   Sat Jul 14 12:58:07 2018 -0700

    x86/events/intel/ds: Fix bts_interrupt_threshold alignment
    
    commit 2c991e408df6a407476dbc453d725e1e975479e7 upstream.
    
    Markus reported that BTS is sporadically missing the tail of the trace
    in the perf_event data buffer: [decode error (1): instruction overflow]
    shown in GDB; and bisected it to the conversion of debug_store to PTI.
    
    A little "optimization" crept into alloc_bts_buffer(), which mistakenly
    placed bts_interrupt_threshold away from the 24-byte record boundary.
    Intel SDM Vol 3B 17.4.9 says "This address must point to an offset from
    the BTS buffer base that is a multiple of the BTS record size."
    
    Revert "max" from a byte count to a record count, to calculate the
    bts_interrupt_threshold correctly: which turns out to fix problem seen.
    
    Fixes: c1961a4631da ("x86/events/intel/ds: Map debug buffers in cpu_entry_area")
    Reported-and-tested-by: Markus T Metzger <markus.t.metzger@intel.com>
    Signed-off-by: Hugh Dickins <hughd@google.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
    Cc: Alexander Shishkin <alexander.shishkin@intel.com>
    Cc: Andi Kleen <andi.kleen@intel.com>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: stable@vger.kernel.org # v4.14+
    Link: https://lkml.kernel.org/r/alpine.LSU.2.11.1807141248290.1614@eggly.anvils
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b4660939afccbe1d2af5d066d1337f1b29c87ae8
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Thu Jan 4 18:07:12 2018 +0100

    x86/events/intel/ds: Use the proper cache flush method for mapping ds buffers
    
    commit 42f3bdc5dd962a5958bc024c1e1444248a6b8b4a upstream.
    
    Thomas reported the following warning:
    
     BUG: using smp_processor_id() in preemptible [00000000] code: ovsdb-server/4498
     caller is native_flush_tlb_single+0x57/0xc0
     native_flush_tlb_single+0x57/0xc0
     __set_pte_vaddr+0x2d/0x40
     set_pte_vaddr+0x2f/0x40
     cea_set_pte+0x30/0x40
     ds_update_cea.constprop.4+0x4d/0x70
     reserve_ds_buffers+0x159/0x410
     x86_reserve_hardware+0x150/0x160
     x86_pmu_event_init+0x3e/0x1f0
     perf_try_init_event+0x69/0x80
     perf_event_alloc+0x652/0x740
     SyS_perf_event_open+0x3f6/0xd60
     do_syscall_64+0x5c/0x190
    
    set_pte_vaddr is used to map the ds buffers into the cpu entry area, but
    there are two problems with that:
    
     1) The resulting flush is not supposed to be called in preemptible context
    
     2) The cpu entry area is supposed to be per CPU, but the debug store
        buffers are mapped for all CPUs so these mappings need to be flushed
        globally.
    
    Add the necessary preemption protection across the mapping code and flush
    TLBs globally.
    
    Fixes: c1961a4631da ("x86/events/intel/ds: Map debug buffers in cpu_entry_area")
    Reported-by: Thomas Zeitlhofer <thomas.zeitlhofer+lkml@ze-it.at>
    Signed-off-by: Peter Zijlstra <peterz@infradead.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Thomas Zeitlhofer <thomas.zeitlhofer+lkml@ze-it.at>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Hugh Dickins <hughd@google.com>
    Link: https://lkml.kernel.org/r/20180104170712.GB3040@hirez.programming.kicks-ass.net
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking e0eb34665d2eecddfa7a1810b76fae52313c1286 ......
	 orig commit -> 10043e02db7f8a4161f76434931051e7d797a5f6 ......
checking d230c1917f57c3beee2e0204a4c8c58999758b95 ......
	 orig commit -> 4b6bbe95b87966ba08999574db65c93c5e925a36 ......
checking e08aa2f1988a7d4ded9c9674fe18857ee5c6fc53 ......
	 orig commit -> 6dc72c3cbca0580642808d677181cad4c6433893 ......
		 6dc72c3cbca0580642808d677181cad4c6433893 has problem. Fixes commit -> 52994c256df36fda9a715697431cba9daecb6b11
commit 211ad3fdf63383772d492add846da4b0b2266531
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Jan 3 15:57:59 2018 +0100

    x86/pti: Make sure the user/kernel PTEs match
    
    commit 52994c256df36fda9a715697431cba9daecb6b11 upstream.
    
    Meelis reported that his K8 Athlon64 emits MCE warnings when PTI is
    enabled:
    
    [Hardware Error]: Error Addr: 0x0000ffff81e000e0
    [Hardware Error]: MC1 Error: L1 TLB multimatch.
    [Hardware Error]: cache level: L1, tx: INSN
    
    The address is in the entry area, which is mapped into kernel _AND_ user
    space. That's special because we switch CR3 while we are executing
    there.
    
    User mapping:
    0xffffffff81e00000-0xffffffff82000000           2M     ro         PSE     GLB x  pmd
    
    Kernel mapping:
    0xffffffff81000000-0xffffffff82000000          16M     ro         PSE         x  pmd
    
    So the K8 is complaining that the TLB entries differ. They differ in the
    GLB bit.
    
    Drop the GLB bit when installing the user shared mapping.
    
    Fixes: 6dc72c3cbca0 ("x86/mm/pti: Share entry text PMD")
    Reported-by: Meelis Roos <mroos@linux.ee>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Meelis Roos <mroos@linux.ee>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Tom Lendacky <thomas.lendacky@amd.com>
    Link: https://lkml.kernel.org/r/alpine.DEB.2.20.1801031407180.1957@nanos
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 088baf5de12eb7660e20f3f4efc1cf270acff5f4 ......
	 orig commit -> 2f7412ba9c6af5ab16bdbb4a3fdb1dcd2b4fd3c2 ......
checking fb9dfabb6e803801b9e88ee6c0d56d3b54531b95 ......
	 orig commit -> f7cfbee91559ca7e3e961a00ffac921208a115ad ......
checking 35531133abf37ea2f00673a0953e397c286f7c7c ......
	 orig commit -> 8d4b067895791ab9fdb1aadfc505f64d71239dd2 ......
checking 9f006b0247234e6448e5fd04b5bcb0c56c968698 ......
	 orig commit -> 03f4424f348e8be95eb1bbeba09461cd7b867828 ......
		 03f4424f348e8be95eb1bbeba09461cd7b867828 has problem. Fixes commit -> 8d56eff266f3e41a6c39926269c4c3f58f881a8e
commit c0090f9f280d576a3b0cab9fb5eec9fb0de988d0
Author: Jike Song <albcamus@gmail.com>
Date:   Tue Jan 9 00:03:41 2018 +0800

    x86/mm/pti: Remove dead logic in pti_user_pagetable_walk*()
    
    commit 8d56eff266f3e41a6c39926269c4c3f58f881a8e upstream.
    
    The following code contains dead logic:
    
     162 if (pgd_none(*pgd)) {
     163         unsigned long new_p4d_page = __get_free_page(gfp);
     164         if (!new_p4d_page)
     165                 return NULL;
     166
     167         if (pgd_none(*pgd)) {
     168                 set_pgd(pgd, __pgd(_KERNPG_TABLE | __pa(new_p4d_page)));
     169                 new_p4d_page = 0;
     170         }
     171         if (new_p4d_page)
     172                 free_page(new_p4d_page);
     173 }
    
    There can't be any difference between two pgd_none(*pgd) at L162 and L167,
    so it's always false at L171.
    
    Dave Hansen explained:
    
     Yes, the double-test was part of an optimization where we attempted to
     avoid using a global spinlock in the fork() path.  We would check for
     unallocated mid-level page tables without the lock.  The lock was only
     taken when we needed to *make* an entry to avoid collisions.
    
     Now that it is all single-threaded, there is no chance of a collision,
     no need for a lock, and no need for the re-check.
    
    As all these functions are only called during init, mark them __init as
    well.
    
    Fixes: 03f4424f348e ("x86/mm/pti: Add functions to clone kernel PMDs")
    Signed-off-by: Jike Song <albcamus@gmail.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Alan Cox <gnomes@lxorguk.ukuu.org.uk>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Tom Lendacky <thomas.lendacky@amd.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Jiri Koshina <jikos@kernel.org>
    Cc: Dave Hansen <dave.hansen@intel.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Kees Cook <keescook@google.com>
    Cc: Andi Lutomirski <luto@amacapital.net>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Greg KH <gregkh@linux-foundation.org>
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Paul Turner <pjt@google.com>
    Link: https://lkml.kernel.org/r/20180108160341.3461-1-albcamus@gmail.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 1bcd98df0f50b28a5fb40eeb2cb7a17a02820232 ......
	 orig commit -> fc2fbc8512ed08d1de7720936fd7d2e4ce02c3a2 ......
checking 61fd4049e6760eb8832d4e0bec592d8a810b270f ......
	 orig commit -> d9e9a6418065bb376e5de8d93ce346939b9a37a6 ......
		 d9e9a6418065bb376e5de8d93ce346939b9a37a6 has problem. Fixes commit -> 06ace26f4e6fcf747e890a39193be811777a048a
commit b08952bbc1712d76c2d63486252073c0406f911f
Author: Waiman Long <longman@redhat.com>
Date:   Thu Mar 22 15:18:53 2018 -0400

    x86/efi: Free efi_pgd with free_pages()
    
    commit 06ace26f4e6fcf747e890a39193be811777a048a upstream.
    
    The efi_pgd is allocated as PGD_ALLOCATION_ORDER pages and therefore must
    also be freed as PGD_ALLOCATION_ORDER pages with free_pages().
    
    Fixes: d9e9a6418065 ("x86/mm/pti: Allocate a separate user PGD")
    Signed-off-by: Waiman Long <longman@redhat.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-efi@vger.kernel.org
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/1521746333-19593-1-git-send-email-longman@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking ffcb80ad79e8c3d87b43f2c9ee4b9170c7ec12ea ......
	 orig commit -> 1c4de1ff4fe50453b968579ee86fac3da80dd783 ......
checking b9feab7dcf86df222a405df3e0d95b85741a2d73 ......
	 orig commit -> 61e9b3671007a5da8127955a1a3bda7e0d5f42e8 ......
checking 8a2533407f4d60a43effadf7b62825d213cd678c ......
	 orig commit -> 41f4c20b57a4890ea7f56ff8717cc83fefb8d537 ......
checking a4b07fb4e5a6aef3b87a6540cc04cf972525a723 ......
	 orig commit -> aa8c6248f8c75acfd610fe15d8cae23cf70d9d09 ......
checking f3d2b767e912b11d146b9c9922bf28efeda0cdc7 ......
	 orig commit -> 8a09317b895f073977346779df52f67c1056d81d ......
		 8a09317b895f073977346779df52f67c1056d81d has problem. Fixes commit -> d7732ba55c4b6a2da339bb12589c515830cfac2c
commit 7930cb29fb5feb6d18ffc20a83a1d3e5afac7a8a
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Jan 3 19:52:04 2018 +0100

    x86/pti: Switch to kernel CR3 at early in entry_SYSCALL_compat()
    
    commit d7732ba55c4b6a2da339bb12589c515830cfac2c upstream.
    
    The preparation for PTI which added CR3 switching to the entry code
    misplaced the CR3 switch in entry_SYSCALL_compat().
    
    With PTI enabled the entry code tries to access a per cpu variable after
    switching to kernel GS. This fails because that variable is not mapped to
    user space. This results in a double fault and in the worst case a kernel
    crash.
    
    Move the switch ahead of the access and clobber RSP which has been saved
    already.
    
    Fixes: 8a09317b895f ("x86/mm/pti: Prepare the x86/entry assembly code for entry/exit CR3 switching")
    Reported-by: Lars Wendler <wendler.lars@web.de>
    Reported-by: Laura Abbott <labbott@redhat.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Borislav Betkov <bp@alien8.de>
    Cc: Andy Lutomirski <luto@kernel.org>,
    Cc: Dave Hansen <dave.hansen@linux.intel.com>,
    Cc: Peter Zijlstra <peterz@infradead.org>,
    Cc: Greg KH <gregkh@linuxfoundation.org>, ,
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>,
    Cc: Juergen Gross <jgross@suse.com>
    Link: https://lkml.kernel.org/r/alpine.DEB.2.20.1801031949200.1957@nanos
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking acfee9b8e27e7b5d69276e8b804fed7ff5071c10 ......
	 orig commit -> c313ec66317d421fb5768d78c56abed2dc862264 ......
checking 72a2beddcd3240047552de69ce45a28029c7e56c ......
	 orig commit -> a89f040fa34ec9cd682aed98b8f04e3c47d998bd ......
checking 98669825616890a96c9fc67c5f983484578e4dd9 ......
	 orig commit -> 24f2aaf952ee0b59f31c3a18b8b36c9e3d3c2cf5 ......
checking 21a9c7346ef696161dacbbd9f47dabb0f062c4c8 ......
	 orig commit -> 4397f04575c44e1440ec2e49b6302785c95fd2f8 ......
checking 234bc12669a362773e84834ace52f1af7510196b ......
	 orig commit -> 6b7e633fe9c24682df550e5311f47fb524701586 ......
