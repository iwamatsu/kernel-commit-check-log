Check from v4.14.48 to v4.14.49
Commit count: 43
checking 70d7bbd9b504c1dde0dc44a469a513695d9cbdd6 ......
checking 2abd4c3ed20df4609c28cefa4df36b3dad9dfed7 ......
	 orig commit -> 76ef6b28ea4f81c3d511866a9b31392caa833126 ......
checking 3fe4b0cf93833af2ef497784bdfb2a4eecaabb6e ......
	 orig commit -> c3635da2a336441253c33298b87b3042db100725 ......
checking dd4be396b8c5d926775f664a6b2aad0509fa6cc3 ......
	 orig commit -> 8258d2da9f9f521dce7019e018360c28d116354e ......
checking c931c9aee2f36f6b7e52b5ba5e35b033d7e0233b ......
	 orig commit -> 644c7eebbfd59e72982d11ec6cc7d39af12450ae ......
checking fa11d992533bd4e33e13d8857e6e4d35f0546d12 ......
	 orig commit -> 3d62b2a0db505bbf9ed0755f254e45d775f9807f ......
checking 2b8b2b26c378398d003a8833fe9177af9247cfef ......
	 orig commit -> 902a545904c71d719ed144234d67df75f31db63b ......
		 902a545904c71d719ed144234d67df75f31db63b has problem. Fixes commit -> d48051c5b8376038c2b287c3b1bd55b8d391d567
commit ac65fd7094ac5ec86d167801f2101d02bbe1da6e
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Oct 30 00:57:25 2018 -0700

    net/mlx5e: fix csum adjustments caused by RXFCS
    
    [ Upstream commit d48051c5b8376038c2b287c3b1bd55b8d391d567 ]
    
    As shown by Dmitris, we need to use csum_block_add() instead of csum_add()
    when adding the FCS contribution to skb csum.
    
    Before 4.18 (more exactly commit 88078d98d1bb "net: pskb_trim_rcsum()
    and CHECKSUM_COMPLETE are friends"), the whole skb csum was thrown away,
    so RXFCS changes were ignored.
    
    Then before commit d55bef5059dd ("net: fix pskb_trim_rcsum_slow() with
    odd trim offset") both mlx5 and pskb_trim_rcsum_slow() bugs were canceling
    each other.
    
    Now we fixed pskb_trim_rcsum_slow() we need to fix mlx5.
    
    Note that this patch also rewrites mlx5e_get_fcs() to :
    
    - Use skb_header_pointer() instead of reinventing it.
    - Use __get_unaligned_cpu32() to avoid possible non aligned accesses
      as Dmitris pointed out.
    
    Fixes: 902a545904c7 ("net/mlx5e: When RXFCS is set, add FCS data into checksum calculation")
    Reported-by: Paweł Staszewski <pstaszewski@itcare.pl>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Eran Ben Elisha <eranbe@mellanox.com>
    Cc: Saeed Mahameed <saeedm@mellanox.com>
    Cc: Dimitris Michailidis <dmichail@google.com>
    Cc: Cong Wang <xiyou.wangcong@gmail.com>
    Cc: Paweł Staszewski <pstaszewski@itcare.pl>
    Reviewed-by: Eran Ben Elisha <eranbe@mellanox.com>
    Tested-By: Maria Pasechnik <mariap@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 155cd575588bca1ef1dd77e37386a737f4c0153e ......
	 orig commit -> 850e088d5bbb333342fd4def08d0a4035f2b7126 ......
checking e2d47fa107f98e131b2025aed208c4c9ed9549b9 ......
	 orig commit -> 6547e387d7f52f2ba681a229de3c13e5b9e01ee1 ......
checking 43153f09016530e35836878183fea73e4d9b2f4e ......
	 orig commit -> d546b67cda015fb92bfee93d5dc0ceadb91deaee ......
checking 31c1e078e3caa5812240e6f9b93ffc43eff3c717 ......
	 orig commit -> 5d458a13dd59d04b4d6658a6d5b94d42732b15ae ......
checking 0dbd822f64401cbdef40e9e476e89f67c690be64 ......
	 orig commit -> 664088f8d68178809b848ca450f2797efb34e8e7 ......
checking 900679988fdf24d687c746e909b10e47e442ad05 ......
	 orig commit -> 733a969a7ed14fc5786bcc59c1bdda83c7ddb46e ......
checking 8d80a839c1793f2237b91df59a5c46d4b02e7eda ......
	 orig commit -> bbb40a0b75209734ff9286f3326171638c9f6569 ......
checking c5e1541ef6fe00b7f909e31851a5d6322997b331 ......
	 orig commit -> 2f17becfbea5e9a0529b51da7345783e96e69516 ......
checking 6d431f6e6880b7c626650326ba4c72c50b1426f8 ......
	 orig commit -> 1b15ad683ab42a203f98b67045b40720e99d0e9a ......
checking f2bb94069f3e88ca9d62eec614ace16d03695b4a ......
	 orig commit -> 25ea66544bfd1d9df1b7e1502f8717e85fa1e6e6 ......
checking 60473d7034eec45f7dfe94b59fafba2dc683dfe7 ......
	 orig commit -> 1d88ba1ebb2763aa86172cd7ca05dedbeccc0d35 ......
checking 0a3608662ff6f22b6f5a56569ca639820ff63333 ......
	 orig commit -> fdd13dd350dda1826579eb5c333d76b14513b812 ......
checking 0d751192afdef9f40746f36a47e802c35bc1075a ......
	 orig commit -> 9aad13b087ab0a588cd68259de618f100053360e ......
checking 1c2c7767e876c547d5c74cacfbe5b6665cf56c5e ......
	 orig commit -> 9f7c728332e8966084242fcd951aa46583bc308c ......
checking 8acb0708ab6d7d29db9276befc08bbc20271ab44 ......
	 orig commit -> 79fb218d97980d4fee9a64f4c8ff05289364ba25 ......
checking c85df6eb6e86d38f3e0374e0557a4912427585f9 ......
	 orig commit -> eb73190f4fbeedf762394e92d6a4ec9ace684c88 ......
		 eb73190f4fbeedf762394e92d6a4ec9ace684c88 has problem. Fixes commit -> 4576cd469d980317c4edd9173f8b694aa71ea3a3
commit 9e9f27e0d7ac938a78e603ba1a2a2bdab034394b
Author: Willem de Bruijn <willemb@google.com>
Date:   Mon Aug 6 10:38:34 2018 -0400

    packet: refine ring v3 block size test to hold one frame
    
    commit 4576cd469d980317c4edd9173f8b694aa71ea3a3 upstream.
    
    TPACKET_V3 stores variable length frames in fixed length blocks.
    Blocks must be able to store a block header, optional private space
    and at least one minimum sized frame.
    
    Frames, even for a zero snaplen packet, store metadata headers and
    optional reserved space.
    
    In the block size bounds check, ensure that the frame of the
    chosen configuration fits. This includes sockaddr_ll and optional
    tp_reserve.
    
    Syzbot was able to construct a ring with insuffient room for the
    sockaddr_ll in the header of a zero-length frame, triggering an
    out-of-bounds write in dev_parse_header.
    
    Convert the comparison to less than, as zero is a valid snap len.
    This matches the test for minimum tp_frame_size immediately below.
    
    Fixes: f6fb8f100b80 ("af-packet: TPACKET_V3 flexible buffer implementation.")
    Fixes: eb73190f4fbe ("net/packet: refine check for priv area size")
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 95159ad9635a944645b5a30c04a39934994c8933 ......
	 orig commit -> 5b5e7a0de2bbf2a1afcd9f49e940010e9fb80d53 ......
checking 341c03313a9a78f223badc4de307886c684f3cd9 ......
	 orig commit -> 2eabd764cb5512f1338d06ffc054c8bc9fbe9104 ......
checking be1f1827a89a1d57dd2c9dafc9b6ddc96e8b2ebe ......
	 orig commit -> 75d4e704fa8d2cf33ff295e5b441317603d7f9fd ......
checking c6fae49a447ca86d65922f92281d232c3adbb1db ......
	 orig commit -> eb7f54b90bd8f469834c5e86dcf72ebf9a629811 ......
checking ebe79f9cf44f8d9d3a2ad5b0334b2c6642775b54 ......
	 orig commit -> 6009d1fe6ba3bb2dab55921da60465329cc1cd89 ......
checking 3f8f52c5f200d574451182881d7b3b9e76f43a3d ......
	 orig commit -> fa1be7e01ea863e911349e30456706749518eeab ......
checking ff33a32949c887670715272d5ce7fc861b277708 ......
	 orig commit -> 730c54d59403658a62af6517338fa8d4922c1b28 ......
checking f1409a73b6f4516da803405a3bc89dd8a2d10d99 ......
	 orig commit -> 66fb33254f45df4b049f487aff1cbde1ef919390 ......
checking f200de49dff8fdee95d52d0e127dff72b3409863 ......
	 orig commit -> f7ff1fde9441b4fcc8ffb6e66e6e5a00d008937e ......
checking 989986db8f663561a1b89e2fd1170e56265e4e19 ......
	 orig commit -> 848235edb5c93ed086700584c8ff64f6d7fc778d ......
checking cbf561634db3a364d0ec8868fc23c21d955b30dd ......
	 orig commit -> 322eaa06d55ebc1402a4a8d140945cff536638b4 ......
checking 0d2eb422fe35342cfb031f543add4a8934c82a32 ......
	 orig commit -> 2677d20677314101293e6da0094ede7b5526d2b1 ......
checking d591263c7947e5dd5f7e2b824c1a629b84044530 ......
	 orig commit -> dd612f18a49b63af8b3a5f572d999bdb197385bc ......
checking 128f0d700569d70e9ac03bd65b8313357e22736c ......
	 orig commit -> d2c2725c2cdbcc108a191f50953d31c7b6556761 ......
checking d58cf41924e89dd75a9aa77c9c8191cc4e274caa ......
	 orig commit -> 2ae89c7a82ea9d81a19b4fc2df23bef4b112f24e ......
checking 058dd233b5593a1a5fae4b8df6cb44cbcdccb537 ......
	 orig commit -> e2731e55884f2138a252b0a3d7b24d57e49c3c59 ......
checking af760b568ef165ca90aec68aec112375481ab4cb ......
	 orig commit -> 423913ad4ae5b3e8fb8983f70969fb522261ba26 ......
checking 16d7ceb04b554207aa68dd27c1bc11f8933813fd ......
	 orig commit -> be83bbf806822b1b89e0a0f23cd87cddc409e429 ......
		 be83bbf806822b1b89e0a0f23cd87cddc409e429 has problem. Fixes commit -> 423913ad4ae5b3e8fb8983f70969fb522261ba26
76ef6b28ea4f81c3d511866a9b31392caa833126
commit 2abd4c3ed20df4609c28cefa4df36b3dad9dfed7
Author: Dave Airlie <airlied@redhat.com>
Date:   Tue May 15 13:38:15 2018 +1000

    drm: set FMODE_UNSIGNED_OFFSET for drm files
    
    commit 76ef6b28ea4f81c3d511866a9b31392caa833126 upstream.
    
    Since we have the ttm and gem vma managers using a subset
    of the file address space for objects, and these start at
    0x100000000 they will overflow the new mmap checks.
    
    I've checked all the mmap routines I could see for any
    bad behaviour but overall most people use GEM/TTM VMA
    managers even the legacy drivers have a hashtable.
    
    Reported-and-Tested-by: Arthur Marsh (amarsh04 on #radeon)
    Fixes: be83bbf8068 (mmap: introduce sane default mmap limits)
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 2abd4c3ed20df4609c28cefa4df36b3dad9dfed7
Author: Dave Airlie <airlied@redhat.com>
Date:   Tue May 15 13:38:15 2018 +1000

    drm: set FMODE_UNSIGNED_OFFSET for drm files
    
    commit 76ef6b28ea4f81c3d511866a9b31392caa833126 upstream.
    
    Since we have the ttm and gem vma managers using a subset
    of the file address space for objects, and these start at
    0x100000000 they will overflow the new mmap checks.
    
    I've checked all the mmap routines I could see for any
    bad behaviour but overall most people use GEM/TTM VMA
    managers even the legacy drivers have a hashtable.
    
    Reported-and-Tested-by: Arthur Marsh (amarsh04 on #radeon)
    Fixes: be83bbf8068 (mmap: introduce sane default mmap limits)
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit af760b568ef165ca90aec68aec112375481ab4cb
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat May 19 09:29:11 2018 -0700

    mmap: relax file size limit for regular files
    
    commit 423913ad4ae5b3e8fb8983f70969fb522261ba26 upstream.
    
    Commit be83bbf80682 ("mmap: introduce sane default mmap limits") was
    introduced to catch problems in various ad-hoc character device drivers
    doing mmap and getting the size limits wrong.  In the process, it used
    "known good" limits for the normal cases of mapping regular files and
    block device drivers.
    
    It turns out that the "s_maxbytes" limit was less "known good" than I
    thought.  In particular, /proc doesn't set it, but exposes one regular
    file to mmap: /proc/vmcore.  As a result, that file got limited to the
    default MAX_INT s_maxbytes value.
    
    This went unnoticed for a while, because apparently the only thing that
    needs it is the s390 kernel zfcpdump, but there might be other tools
    that use this too.
    
    Vasily suggested just changing s_maxbytes for all of /proc, which isn't
    wrong, but makes me nervous at this stage.  So instead, just make the
    new mmap limit always be MAX_LFS_FILESIZE for regular files, which won't
    affect anything else.  It wasn't the regular file case I was worried
    about.
    
    I'd really prefer for maxsize to have been per-inode, but that is not
    how things are today.
    
    Fixes: be83bbf80682 ("mmap: introduce sane default mmap limits")
    Reported-by: Vasily Gorbik <gor@linux.ibm.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 7cb10a4ce724ba1d72b0d10673176124c379714c ......
	 orig commit -> ccce20fc7968d546fb1e8e147bf5cdc8afc4278a ......
		 ccce20fc7968d546fb1e8e147bf5cdc8afc4278a has problem. Fixes commit -> f13cff6c25bd8986627365346d123312ee7baa78
3aadbe2523cab462da24c62d9cac5e018a6e69d5
commit 763ccb4d1980155e1f71290f9fc7950065ec77a6
Author: Damien Le Moal <damien.lemoal@wdc.com>
Date:   Tue Jul 3 15:23:58 2018 +0900

    scsi: sd_zbc: Fix variable type and bogus comment
    
    commit f13cff6c25bd8986627365346d123312ee7baa78 upstream.
    
    Fix the description of sd_zbc_check_zone_size() to correctly explain that
    the returned value is a number of device blocks, not bytes.  Additionally,
    the 32 bits "ret" variable used in this function may truncate the 64 bits
    zone_blocks variable value upon return. To fix this, change "ret" type to
    s64.
    
    Fixes: ccce20fc79 ("sd_zbc: Avoid that resetting a zone fails sporadically")
    Signed-off-by: Damien Le Moal <damien.lemoal@wdc.com>
    Cc: Bart Van Assche <bart.vanassche@wdc.com>
    Cc: stable@kernel.org
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Reviewed-by: Bart Van Assche <bart.vanassche@wdc.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 1110636ed2d91dd63599af646305e280d89000a8 ......
	 orig commit -> 4b433924b2755a94f99258c178684a0e05c344de ......
