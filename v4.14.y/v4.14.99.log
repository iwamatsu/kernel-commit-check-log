Check from v4.14.99 to v4.14.100
Commit count: 36
checking 557ac4e2077364ff58c69fc524a8fc79c83870bf ......
checking f142573d9cb63ccbcfc311ce5c997191b1df55e9 ......
	 orig commit -> 3d27c4de8d4fb2d4099ff324671792aa2578c6f9 ......
checking 5d07d245cb418064561c1a4e57313cf0a9132aa6 ......
	 orig commit -> b34e9a15b37b8ddbf06a4da142b0c39c74211eb4 ......
checking 28c618abeee3380a4ead50fe9863b692dd851e07 ......
	 orig commit -> e7de2590f18a272e63732b9d519250d1b522b2c4 ......
checking 13af019c87f2d90e663742cb1a819834048842ae ......
	 orig commit -> 57c5f4df0a5a0ee83df799991251e2ee93a5e4e9 ......
		 57c5f4df0a5a0ee83df799991251e2ee93a5e4e9 has problem. Fixes commit -> e7de2590f18a272e63732b9d519250d1b522b2c4
commit 28c618abeee3380a4ead50fe9863b692dd851e07
Author: Hailong Liu <liu.hailong6@zte.com.cn>
Date:   Wed Feb 13 16:29:36 2019 +0000

    uio: fix wrong return value from uio_mmap()
    
    commit e7de2590f18a272e63732b9d519250d1b522b2c4 upstream.
    
    uio_mmap has multiple fail paths to set return value to nonzero then
    goto out. However, it always returns *0* from the *out* at end, and
    this will mislead callers who check the return value of this function.
    
    Fixes: 57c5f4df0a5a0ee ("uio: fix crash after the device is unregistered")
    CC: Xiubo Li <xiubli@redhat.com>
    Signed-off-by: Hailong Liu <liu.hailong6@zte.com.cn>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Jiang Biao <jiang.biao2@zte.com.cn>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Tommi Rantala <tommi.t.rantala@nokia.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 3f400c2c2e7043b64c65d9b8709a0b353e1f8384 ......
	 orig commit -> 543af5861f41af0a5d2432f6fb5976af50f9cee5 ......
	 orig commit -> a93e7b331568227500186a465fee3c2cb5dffd1f ......
		 a93e7b331568227500186a465fee3c2cb5dffd1f has problem. Fixes commit -> 221a1f4ac12d2ab46246c160b2e00d1b1160d5d9
1a392b3de7c5747506b38fc14b2e79977d3c7770
checking 8a68c55d15af981361ce324d90ee06e8276d330c ......
	 orig commit -> 9421e45f5ff3d558cf8b75a8cc0824530caf3453 ......
checking 085d735c858934e5d5bfaedb1fc98bd9135e6ff1 ......
	 orig commit -> a93e7b331568227500186a465fee3c2cb5dffd1f ......
		 a93e7b331568227500186a465fee3c2cb5dffd1f has problem. Fixes commit -> 221a1f4ac12d2ab46246c160b2e00d1b1160d5d9
1a392b3de7c5747506b38fc14b2e79977d3c7770
checking cd4fe6339ccd9638da1304160abe60b84115dee5 ......
	 orig commit -> 81daa406c2cc97d85eef9409400404efc2a3f756 ......
checking 943f5f2a7d70f117a730dceb58131957f3c337c8 ......
	 orig commit -> 692f5a22cd284bb8233a38e3ed86881d2d9c89d4 ......
checking 3fbfbd393fbe0b064e39df81775538490e0625c4 ......
	 orig commit -> f6a9820d572bd8384d982357cbad214b3a6c04bb ......
checking ffc2faad73247fe57fd64c4f315dbacb5cd34572 ......
	 orig commit -> 10836d9f9ac63d40ccfa756f871ce4ed51ae3b52 ......
checking 0ee47efddd0568853d8ad548e00d1681351d12ec ......
	 orig commit -> 9114daa825fc3f335f9bea3313ce667090187280 ......
checking d66213863ade314c5f24c07aba74e31fd8b8c3b1 ......
	 orig commit -> 955d3411a17f590364238bd0d3329b61f20c1cd2 ......
checking bc09fc5d8acd819a3e06f2894975a328e375e2f7 ......
	 orig commit -> 35e6103861a3a970de6c84688c6e7a1f65b164ca ......
checking 264c83c2fe7b78b545b52b2bc7cc88855eac6c78 ......
	 orig commit -> 4aac9228d16458cedcfd90c7fb37211cf3653ac3 ......
checking 850d47601371d800a4e8d46ac08a09c5c3aa3891 ......
	 orig commit -> 8fdd60f2ae3682caf2a7258626abc21eb4711892 ......
checking e0f784bf571528011a7421021f72dbe4bfe10a7c ......
	 orig commit -> 13054abbaa4f1fd4e6f3b4b63439ec033b4c8035 ......
checking 7fa5536f92fe647c2462c8a64a129706f1a8da63 ......
	 orig commit -> 728354c005c36eaf44b6e5552372b67e60d17f56 ......
checking d69e310cbfcbbf5c7b409c477005355487aa79f4 ......
	 orig commit -> 4cbfa1e6c09e98450aab3240e5119b0ab2c9795b ......
checking 90c7dfa37723f974c8a29155cc38e76ab8ea4a2d ......
	 orig commit -> a2fcd5c84f7a7825e028381b10182439067aa90d ......
checking 2243296f1144ddefb9f435c1f4f5e6042481dac7 ......
	 orig commit -> 9d0f50b80222dc273e67e4e14410fcfa4130a90c ......
checking 39551af0e4e6562a859b96aed99a011f756038b7 ......
	 orig commit -> d0f9f16788e15d9eb40f68b047732d49658c5a3a ......
checking ec61525653a2d6c6914b1070681bdfc23c3c5885 ......
	 orig commit -> db4090920ba2d61a5827a23e441447926a02ffee ......
checking c2e0cb20f8fb5bd2dcc76d00c74c99223de8bd42 ......
	 orig commit -> 67fc5dc8a541e8f458d7f08bf88ff55933bf9f9d ......
checking c87691444b5f2bbf6bf2fd374000615e5ffc0372 ......
	 orig commit -> dcf300a69ac307053dfb35c2e33972e754a98bce ......
checking eb5c1f624e6383e7a41f07b42dc6140b31baf495 ......
	 orig commit -> 05dc6001af0630e200ad5ea08707187fe5537e6d ......
checking b49be10b2e624c4f50ae39239f112782addbcc4a ......
	 orig commit -> ea6eb5e7d15e1838de335609994b4546e2abcaaf ......
checking c87bdb9e8148c9955192d4ef4acdb889a557cd6d ......
	 orig commit -> d88c93f090f708c18195553b352b9f205e65418f ......
checking aef80fd68017793d14fddc3b4ef8e1c050b44faf ......
	 orig commit -> c4a46acf1db3ce547d290c29e55b3476c78dd76c ......
checking 7e21768dfff37e71fed34f3f2cfcfadfd55b7d07 ......
	 orig commit -> f8a70d8b889f180e6860cb1f85fed43d37844c5a ......
checking 284f7b1a09d73107ec4492dabd3a2b6db28122ee ......
	 orig commit -> 7146db3317c67b517258cb5e1b08af387da0618b ......
checking 3edbf7432556ccc1cade629b567972bd96414c63 ......
	 orig commit -> 35634ffa1751b6efd8cf75010b509dcb0263e29b ......
		 35634ffa1751b6efd8cf75010b509dcb0263e29b has problem. Fixes commit -> cf43a757fd49442bc38f76088b70c2299eed2c2f
commit 910e3b31548298c8762e0c635f192e3d76fef9ee
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Mon Feb 11 23:27:42 2019 -0600

    signal: Restore the stop PTRACE_EVENT_EXIT
    
    commit cf43a757fd49442bc38f76088b70c2299eed2c2f upstream.
    
    In the middle of do_exit() there is there is a call
    "ptrace_event(PTRACE_EVENT_EXIT, code);" That call places the process
    in TACKED_TRACED aka "(TASK_WAKEKILL | __TASK_TRACED)" and waits for
    for the debugger to release the task or SIGKILL to be delivered.
    
    Skipping past dequeue_signal when we know a fatal signal has already
    been delivered resulted in SIGKILL remaining pending and
    TIF_SIGPENDING remaining set.  This in turn caused the
    scheduler to not sleep in PTACE_EVENT_EXIT as it figured
    a fatal signal was pending.  This also caused ptrace_freeze_traced
    in ptrace_check_attach to fail because it left a per thread
    SIGKILL pending which is what fatal_signal_pending tests for.
    
    This difference in signal state caused strace to report
    strace: Exit of unknown pid NNNNN ignored
    
    Therefore update the signal handling state like dequeue_signal
    would when removing a per thread SIGKILL, by removing SIGKILL
    from the per thread signal mask and clearing TIF_SIGPENDING.
    
    Acked-by: Oleg Nesterov <oleg@redhat.com>
    Reported-by: Oleg Nesterov <oleg@redhat.com>
    Reported-by: Ivan Delalande <colona@arista.com>
    Cc: stable@vger.kernel.org
    Fixes: 35634ffa1751 ("signal: Always notice exiting tasks")
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 4c93500004f23cb198713c6bb35c946334e35821 ......
	 orig commit -> 0808831dc62e90023ad14ff8da4804c7846e904b ......
checking 4337e2073104a051982ab08724c5116c8ce1d325 ......
	 orig commit -> 9bcf15f75cac3c6a00d8f8083a635de9c8537799 ......
checking 3ec492edfa17233b04a6525a731c4df82097ed32 ......
	 orig commit -> d5d27fd9826b59979b184ec288e4812abac0e988 ......
