Check from v4.14.26 to v4.14.27
Commit count: 140
checking 9b1fb9cc922dbf27959287ad75009bb388d115fe ......
checking 24e955e591007a5175dd317b2b3e65cdb953994d ......
	 orig commit -> c07a8f8b08ba683ea24f3ac9159f37ae94daf47f ......
checking e8be8ff1f75751502b6773b725d830211a2d970a ......
	 orig commit -> 63474dc4ac7ed3848a4786b9592dd061901f606d ......
checking a617f2e36d674c60d5983297f4e2d218bd25c272 ......
	 orig commit -> 1402fd8ed7e5bda1b3e7613b70780b0db392d1e6 ......
checking c3b9f72606ac4fda901ac6ee9040952e854422fb ......
	 orig commit -> d5028ba8ee5a18c9d0bb926d883c28b370f89009 ......
checking a69898c9eb0a2eac477a980e4b94d2f7f3ff0a43 ......
	 orig commit -> ca41b97ed9124fd62323a162de5852f6e28f94b8 ......
checking 3945bbe1525f3c5f6612d8e905760b540b514c49 ......
	 orig commit -> cfe17c9bbe6a673fdafdab179c32b355ed447f66 ......
		 cfe17c9bbe6a673fdafdab179c32b355ed447f66 has problem. Fixes commit -> 0f0e8de334c54c38818a4a5390a39aa09deff5bf
commit 6cfb67394a42072981c2884114b3850a3cdd5b2b
Author: Stefan Agner <stefan@agner.ch>
Date:   Mon Mar 19 22:12:53 2018 +0100

    kbuild: set no-integrated-as before incl. arch Makefile
    
    [ Upstream commit 0f0e8de334c54c38818a4a5390a39aa09deff5bf ]
    
    In order to make sure compiler flag detection for ARM works
    correctly the no-integrated-as flags need to be set before
    including the arch specific Makefile.
    
    Fixes: cfe17c9bbe6a ("kbuild: move cc-option and cc-disable-warning after incl. arch Makefile")
    Signed-off-by: Stefan Agner <stefan@agner.ch>
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
checking 6288eb92cae86430ae9ac23ec396922eaf985ba9 ......
	 orig commit -> ae6b289a37890909fea0e4a1666e19377fa0ed2c ......
		 ae6b289a37890909fea0e4a1666e19377fa0ed2c has problem. Fixes commit -> cfe17c9bbe6a673fdafdab179c32b355ed447f66
commit 3945bbe1525f3c5f6612d8e905760b540b514c49
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Mon Nov 27 21:15:13 2017 +0900

    kbuild: move cc-option and cc-disable-warning after incl. arch Makefile
    
    commit cfe17c9bbe6a673fdafdab179c32b355ed447f66 upstream.
    
    Geert reported commit ae6b289a3789 ("kbuild: Set KBUILD_CFLAGS before
    incl. arch Makefile") broke cross-compilation using a cross-compiler
    that supports less compiler options than the host compiler.
    
    For example,
    
      cc1: error: unrecognized command line option "-Wno-unused-but-set-variable"
    
    This problem happens on architectures that setup CROSS_COMPILE in their
    arch/*/Makefile.
    
    Move the cc-option and cc-disable-warning back to the original position,
    but keep the Clang target options untouched.
    
    Fixes: ae6b289a3789 ("kbuild: Set KBUILD_CFLAGS before incl. arch Makefile")
    Reported-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Tested-by: Geert Uytterhoeven <geert@linux-m68k.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking cfe39acafbaf80504451e56ccb33d1481f13bbe7 ......
	 orig commit -> 2c1f4f125159f10521944cea23e33a00fcf85ede ......
checking e6993149fa4d3700c66cf4607833588c052cca89 ......
	 orig commit -> b5bc2231b8ad4387c9641f235ca0ad8cd300b6df ......
		 b5bc2231b8ad4387c9641f235ca0ad8cd300b6df has problem. Fixes commit -> 63474dc4ac7ed3848a4786b9592dd061901f606d
commit e8be8ff1f75751502b6773b725d830211a2d970a
Author: Josh Poimboeuf <jpoimboe@redhat.com>
Date:   Tue Mar 6 17:58:15 2018 -0600

    objtool: Fix 32-bit build
    
    commit 63474dc4ac7ed3848a4786b9592dd061901f606d upstream.
    
    Fix the objtool build when cross-compiling a 64-bit kernel on a 32-bit
    host.  This also simplifies read_retpoline_hints() a bit and makes its
    implementation similar to most of the other annotation reading
    functions.
    
    Reported-by: Sven Joachim <svenjoac@gmx.de>
    Signed-off-by: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: b5bc2231b8ad ("objtool: Add retpoline validation")
    Link: http://lkml.kernel.org/r/2ca46c636c23aa9c9d57d53c75de4ee3ddf7a7df.1520380691.git.jpoimboe@redhat.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 8c2768139ffbcf4c85d4006d090e07f93d696073 ......
	 orig commit -> 43a4525f80534530077683f6472d8971646b0ace ......
checking f9be9ef91a1449241d195c488159115f1704fd31 ......
	 orig commit -> 531bb52a869a9c6e08c8d17ba955fcbfc18037ad ......
checking 4d840d9a1742ab3351a3873b666ab89f8b0e11f3 ......
	 orig commit -> bd89004f6305cbf7352238f61da093207ee518d6 ......
checking 6fceef2e7febff5728ce64ef1cbb087075ec1acd ......
	 orig commit -> 3010a0663fd949d122eca0561b06b0a9453f7866 ......
		 3010a0663fd949d122eca0561b06b0a9453f7866 has problem. Fixes commit -> 5800dc5c19f34e6e03b5adab1282535cb102fafd
commit f7a0871d8141c3ac60123fbc4923e5e3c121b094
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Fri Aug 3 16:41:39 2018 +0200

    x86/paravirt: Fix spectre-v2 mitigations for paravirt guests
    
    commit 5800dc5c19f34e6e03b5adab1282535cb102fafd upstream.
    
    Nadav reported that on guests we're failing to rewrite the indirect
    calls to CALLEE_SAVE paravirt functions. In particular the
    pv_queued_spin_unlock() call is left unpatched and that is all over the
    place. This obviously wrecks Spectre-v2 mitigation (for paravirt
    guests) which relies on not actually having indirect calls around.
    
    The reason is an incorrect clobber test in paravirt_patch_call(); this
    function rewrites an indirect call with a direct call to the _SAME_
    function, there is no possible way the clobbers can be different
    because of this.
    
    Therefore remove this clobber check. Also put WARNs on the other patch
    failure case (not enough room for the instruction) which I've not seen
    trigger in my (limited) testing.
    
    Three live kernel image disassemblies for lock_sock_nested (as a small
    function that illustrates the problem nicely). PRE is the current
    situation for guests, POST is with this patch applied and NATIVE is with
    or without the patch for !guests.
    
    PRE:
    
    (gdb) disassemble lock_sock_nested
    Dump of assembler code for function lock_sock_nested:
       0xffffffff817be970 <+0>:     push   %rbp
       0xffffffff817be971 <+1>:     mov    %rdi,%rbp
       0xffffffff817be974 <+4>:     push   %rbx
       0xffffffff817be975 <+5>:     lea    0x88(%rbp),%rbx
       0xffffffff817be97c <+12>:    callq  0xffffffff819f7160 <_cond_resched>
       0xffffffff817be981 <+17>:    mov    %rbx,%rdi
       0xffffffff817be984 <+20>:    callq  0xffffffff819fbb00 <_raw_spin_lock_bh>
       0xffffffff817be989 <+25>:    mov    0x8c(%rbp),%eax
       0xffffffff817be98f <+31>:    test   %eax,%eax
       0xffffffff817be991 <+33>:    jne    0xffffffff817be9ba <lock_sock_nested+74>
       0xffffffff817be993 <+35>:    movl   $0x1,0x8c(%rbp)
       0xffffffff817be99d <+45>:    mov    %rbx,%rdi
       0xffffffff817be9a0 <+48>:    callq  *0xffffffff822299e8
       0xffffffff817be9a7 <+55>:    pop    %rbx
       0xffffffff817be9a8 <+56>:    pop    %rbp
       0xffffffff817be9a9 <+57>:    mov    $0x200,%esi
       0xffffffff817be9ae <+62>:    mov    $0xffffffff817be993,%rdi
       0xffffffff817be9b5 <+69>:    jmpq   0xffffffff81063ae0 <__local_bh_enable_ip>
       0xffffffff817be9ba <+74>:    mov    %rbp,%rdi
       0xffffffff817be9bd <+77>:    callq  0xffffffff817be8c0 <__lock_sock>
       0xffffffff817be9c2 <+82>:    jmp    0xffffffff817be993 <lock_sock_nested+35>
    End of assembler dump.
    
    POST:
    
    (gdb) disassemble lock_sock_nested
    Dump of assembler code for function lock_sock_nested:
       0xffffffff817be970 <+0>:     push   %rbp
       0xffffffff817be971 <+1>:     mov    %rdi,%rbp
       0xffffffff817be974 <+4>:     push   %rbx
       0xffffffff817be975 <+5>:     lea    0x88(%rbp),%rbx
       0xffffffff817be97c <+12>:    callq  0xffffffff819f7160 <_cond_resched>
       0xffffffff817be981 <+17>:    mov    %rbx,%rdi
       0xffffffff817be984 <+20>:    callq  0xffffffff819fbb00 <_raw_spin_lock_bh>
       0xffffffff817be989 <+25>:    mov    0x8c(%rbp),%eax
       0xffffffff817be98f <+31>:    test   %eax,%eax
       0xffffffff817be991 <+33>:    jne    0xffffffff817be9ba <lock_sock_nested+74>
       0xffffffff817be993 <+35>:    movl   $0x1,0x8c(%rbp)
       0xffffffff817be99d <+45>:    mov    %rbx,%rdi
       0xffffffff817be9a0 <+48>:    callq  0xffffffff810a0c20 <__raw_callee_save___pv_queued_spin_unlock>
       0xffffffff817be9a5 <+53>:    xchg   %ax,%ax
       0xffffffff817be9a7 <+55>:    pop    %rbx
       0xffffffff817be9a8 <+56>:    pop    %rbp
       0xffffffff817be9a9 <+57>:    mov    $0x200,%esi
       0xffffffff817be9ae <+62>:    mov    $0xffffffff817be993,%rdi
       0xffffffff817be9b5 <+69>:    jmpq   0xffffffff81063aa0 <__local_bh_enable_ip>
       0xffffffff817be9ba <+74>:    mov    %rbp,%rdi
       0xffffffff817be9bd <+77>:    callq  0xffffffff817be8c0 <__lock_sock>
       0xffffffff817be9c2 <+82>:    jmp    0xffffffff817be993 <lock_sock_nested+35>
    End of assembler dump.
    
    NATIVE:
    
    (gdb) disassemble lock_sock_nested
    Dump of assembler code for function lock_sock_nested:
       0xffffffff817be970 <+0>:     push   %rbp
       0xffffffff817be971 <+1>:     mov    %rdi,%rbp
       0xffffffff817be974 <+4>:     push   %rbx
       0xffffffff817be975 <+5>:     lea    0x88(%rbp),%rbx
       0xffffffff817be97c <+12>:    callq  0xffffffff819f7160 <_cond_resched>
       0xffffffff817be981 <+17>:    mov    %rbx,%rdi
       0xffffffff817be984 <+20>:    callq  0xffffffff819fbb00 <_raw_spin_lock_bh>
       0xffffffff817be989 <+25>:    mov    0x8c(%rbp),%eax
       0xffffffff817be98f <+31>:    test   %eax,%eax
       0xffffffff817be991 <+33>:    jne    0xffffffff817be9ba <lock_sock_nested+74>
       0xffffffff817be993 <+35>:    movl   $0x1,0x8c(%rbp)
       0xffffffff817be99d <+45>:    mov    %rbx,%rdi
       0xffffffff817be9a0 <+48>:    movb   $0x0,(%rdi)
       0xffffffff817be9a3 <+51>:    nopl   0x0(%rax)
       0xffffffff817be9a7 <+55>:    pop    %rbx
       0xffffffff817be9a8 <+56>:    pop    %rbp
       0xffffffff817be9a9 <+57>:    mov    $0x200,%esi
       0xffffffff817be9ae <+62>:    mov    $0xffffffff817be993,%rdi
       0xffffffff817be9b5 <+69>:    jmpq   0xffffffff81063ae0 <__local_bh_enable_ip>
       0xffffffff817be9ba <+74>:    mov    %rbp,%rdi
       0xffffffff817be9bd <+77>:    callq  0xffffffff817be8c0 <__lock_sock>
       0xffffffff817be9c2 <+82>:    jmp    0xffffffff817be993 <lock_sock_nested+35>
    End of assembler dump.
    
    
    Fixes: 63f70270ccd9 ("[PATCH] i386: PARAVIRT: add common patching machinery")
    Fixes: 3010a0663fd9 ("x86/paravirt, objtool: Annotate indirect calls")
    Reported-by: Nadav Amit <namit@vmware.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: David Woodhouse <dwmw2@infradead.org>
    Cc: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 5065490489ee87d5a898b8dc125e4f38ba295c43 ......
	 orig commit -> d72f4e29e6d84b7ec02ae93088aa459ac70e733b ......
checking 945e3d00ecdc08e797ed2358c00b39ca941db82f ......
	 orig commit -> 9e0e3c5130e949c389caabc8033e9799b129e429 ......
checking e76a9431f21a9f5c67efade07d4937e06129a5ca ......
	 orig commit -> 87358710c1fb4f1bf96bbe2349975ff9953fc9b2 ......
checking c3ffdb5a2ed4a5f2488660cfbd310670e43fe803 ......
	 orig commit -> dd84441a797150dcc49298ec95c459a8891d8bb1 ......
		 dd84441a797150dcc49298ec95c459a8891d8bb1 has problem. Fixes commit -> 6f6060a5c9cc76fdbc22748264e6aa3779ec2427
commit b4108288eab85f74e0fbe7ba781e319f365a26e7
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Mon Jul 9 16:35:34 2018 +0300

    x86/apm: Don't access __preempt_count with zeroed fs
    
    commit 6f6060a5c9cc76fdbc22748264e6aa3779ec2427 upstream.
    
    APM_DO_POP_SEGS does not restore fs/gs which were zeroed by
    APM_DO_ZERO_SEGS. Trying to access __preempt_count with
    zeroed fs doesn't really work.
    
    Move the ibrs call outside the APM_DO_SAVE_SEGS/APM_DO_RESTORE_SEGS
    invocations so that fs is actually restored before calling
    preempt_enable().
    
    Fixes the following sort of oopses:
    [    0.313581] general protection fault: 0000 [#1] PREEMPT SMP
    [    0.313803] Modules linked in:
    [    0.314040] CPU: 0 PID: 268 Comm: kapmd Not tainted 4.16.0-rc1-triton-bisect-00090-gdd84441a7971 #19
    [    0.316161] EIP: __apm_bios_call_simple+0xc8/0x170
    [    0.316161] EFLAGS: 00210016 CPU: 0
    [    0.316161] EAX: 00000102 EBX: 00000000 ECX: 00000102 EDX: 00000000
    [    0.316161] ESI: 0000530e EDI: dea95f64 EBP: dea95f18 ESP: dea95ef0
    [    0.316161]  DS: 007b ES: 007b FS: 0000 GS: 0000 SS: 0068
    [    0.316161] CR0: 80050033 CR2: 00000000 CR3: 015d3000 CR4: 000006d0
    [    0.316161] Call Trace:
    [    0.316161]  ? cpumask_weight.constprop.15+0x20/0x20
    [    0.316161]  on_cpu0+0x44/0x70
    [    0.316161]  apm+0x54e/0x720
    [    0.316161]  ? __switch_to_asm+0x26/0x40
    [    0.316161]  ? __schedule+0x17d/0x590
    [    0.316161]  kthread+0xc0/0xf0
    [    0.316161]  ? proc_apm_show+0x150/0x150
    [    0.316161]  ? kthread_create_worker_on_cpu+0x20/0x20
    [    0.316161]  ret_from_fork+0x2e/0x38
    [    0.316161] Code: da 8e c2 8e e2 8e ea 57 55 2e ff 1d e0 bb 5d b1 0f 92 c3 5d 5f 07 1f 89 47 0c 90 8d b4 26 00 00 00 00 90 8d b4 26 00 00 00 00 90 <64> ff 0d 84 16 5c b1 74 7f 8b 45 dc 8e e0 8b 45 d8 8e e8 8b 45
    [    0.316161] EIP: __apm_bios_call_simple+0xc8/0x170 SS:ESP: 0068:dea95ef0
    [    0.316161] ---[ end trace 656253db2deaa12c ]---
    
    Fixes: dd84441a7971 ("x86/speculation: Use IBRS if available before calling into firmware")
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: stable@vger.kernel.org
    Cc:  David Woodhouse <dwmw@amazon.co.uk>
    Cc:  "H. Peter Anvin" <hpa@zytor.com>
    Cc:  x86@kernel.org
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Link: https://lkml.kernel.org/r/20180709133534.5963-1-ville.syrjala@linux.intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking a66fe0437d85ee3528b79ccaaa5806e0acacb480 ......
	 orig commit -> d1c99108af3c5992640aa2afa7d2e88c3775c06e ......
checking 8cb4113443393481f753ae50bdb6e898b845e086 ......
	 orig commit -> 8554004a0231dedf44d4d62147fb3d6a6db489aa ......
checking cd9547e515034740272c32f77f201a460ee89561 ......
	 orig commit -> f2f18b16c779978ece4a04f304a92ff9ac8fbce5 ......
checking e793e30063b90d4930f0ab490302113a79b62749 ......
	 orig commit -> 700b7c5409c3e9da279fbea78cf28a78fbc176cd ......
checking c507f00d2b5e13743f6020d13d66aed725ce9a5d ......
	 orig commit -> 3b3a9268bba62b35a29bafe0931715b1725fdf26 ......
checking 5f9d19a6c9e10112092a20fc7598fb1d53de81a3 ......
	 orig commit -> ced5d0bf603fa0baee8ea889e1d70971fd210894 ......
checking b690fda31a4701d7ee847aa495f8fc7fb3927abc ......
	 orig commit -> 9e809d15d6b692fa061d74be7aaab1c79f6784b8 ......
checking 2e19277e1df539cf94b435042fbad9bdb7775ab6 ......
	 orig commit -> eb6174f6d1be16b19cfa43dac296bfed003ce1a6 ......
checking bebe3994ddafb0298cc0d3365ca2881a87e3fa39 ......
	 orig commit -> 1d91c1d2c80cb70e2e553845e278b87a960c04da ......
checking dc2f0da8350e413923ad67e2e26d8d9f1fb97aff ......
	 orig commit -> 791412dafbbfd860e78983d45cf71db603a82f67 ......
checking 20b4c7f86df9dadfef0d3a63767c8f6feb50134e ......
	 orig commit -> aece34cd576c7625181b0488a8129c1e165355f7 ......
checking 608d96fc43a37d2c99e706683868bff38ac8271b ......
	 orig commit -> 3efc31f76dd7fc8a71cd86683909f637e9b7cadb ......
checking 8540351ee8a4d540b1b7ee64b88d5e42c7c0bfbc ......
	 orig commit -> d64d6c5671db5e693a0caaee79f2571b098749c9 ......
		 d64d6c5671db5e693a0caaee79f2571b098749c9 has problem. Fixes commit -> 6a2cf8d3663e13e19af636c2a8d92e766261dc45
commit c209d68794e632241875c14a0731ab211b31cfcb
Author: Bill Kuzeja <William.Kuzeja@stratus.com>
Date:   Mon Mar 5 00:02:55 2018 -0500

    scsi: qla2xxx: Fix crashes in qla2x00_probe_one on probe failure
    
    commit 6a2cf8d3663e13e19af636c2a8d92e766261dc45 upstream.
    
    Because of the shifting around of code in qla2x00_probe_one recently,
    failures during adapter initialization can lead to problems, i.e. NULL
    pointer crashes and doubly freed data structures which cause eventual
    panics.
    
    This V2 version makes the relevant memory free routines idempotent, so
    repeat calls won't cause any harm. I also removed the problematic
    probe_init_failed exit point as it is not needed.
    
    Fixes: d64d6c5671db ("scsi: qla2xxx: Fix NULL pointer crash due to probe failure")
    Signed-off-by: Bill Kuzeja <william.kuzeja@stratus.com>
    Acked-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 3deecffb1b78aa73469c9c0cf473dc0bf3f6ee53 ......
	 orig commit -> 099fd6ca0ad25bc19c5ade2ea4b25b8fadaa11b3 ......
checking f2ba41eb6290c66653529ae78da4180b8229c75f ......
	 orig commit -> aea808172018ca01abf53db808323aed23281835 ......
checking 818b447d14e4384551f88b431344d17bd9d9a08d ......
	 orig commit -> d5078193e56bb24f4593f00102a3b5e07bb84ee0 ......
checking 6d3a7dcba8c5ac740ef168621829aa163be4abc6 ......
	 orig commit -> 7bd80091567789f1c0cb70eb4737aac8bcd2b6b9 ......
checking d9c724729d0d9122d45bdaa242f854d7368dfe09 ......
	 orig commit -> d85739367c6d56e475c281945c68fdb05ca74b4c ......
checking 7b4e500bada3fec60ee72d1f8988e2883cde7a4a ......
	 orig commit -> e4c07b3b66b7d6a24c2fe3b1ddeff5cd9b378b3a ......
checking 816ee317d8a284a94e9af19810d9aed0b5cef28c ......
	 orig commit -> e312a869cd726c698a75caca0d9e5c22fd3f1534 ......
checking 3c69eccc1ab1d5f10dff2508bbf31fa55eeb2e4e ......
	 orig commit -> 85981dfd6b0a0fd9ed87ca4a525981b67c21f098 ......
checking 37872f84cc2d4ea6d6521f32b5e03c511a43df14 ......
	 orig commit -> ae104a21e52b1f9aab342cf6924405177b720069 ......
checking 2c269a2557a98e76f3511ce71e426fa066b1f467 ......
	 orig commit -> 5f36413526677b11d3226ebf064f471894ea2e5d ......
checking c5bd1ad601d19c1d92adb33e6bb0673c39fbc0e7 ......
	 orig commit -> 36268223c1e9981d6cfc33aff8520b3bde4b8114 ......
checking c192a793f056c7b16525768595e6b9b60bc31654 ......
	 orig commit -> de19e5c3c51fdb1ff20d0f61d099db902ff7494b ......
checking 5c1c405d393648da95339c3e0f2dcfd7a1021388 ......
	 orig commit -> b3b7c4795ccab5be71f080774c45bbbcc75c2aaf ......
		 b3b7c4795ccab5be71f080774c45bbbcc75c2aaf has problem. Fixes commit -> fbdb328c6bae0a7c78d75734a738b66b86dffc96
commit 1450a7c5da03292fe4b022e58a92c9a9b91b27aa
Author: Dewet Thibaut <thibaut.dewet@nokia.com>
Date:   Mon Jul 16 10:49:27 2018 +0200

    x86/MCE: Remove min interval polling limitation
    
    commit fbdb328c6bae0a7c78d75734a738b66b86dffc96 upstream.
    
    commit b3b7c4795c ("x86/MCE: Serialize sysfs changes") introduced a min
    interval limitation when setting the check interval for polled MCEs.
    However, the logic is that 0 disables polling for corrected MCEs, see
    Documentation/x86/x86_64/machinecheck. The limitation prevents disabling.
    
    Remove this limitation and allow the value 0 to disable polling again.
    
    Fixes: b3b7c4795c ("x86/MCE: Serialize sysfs changes")
    Signed-off-by: Dewet Thibaut <thibaut.dewet@nokia.com>
    Signed-off-by: Alexander Sverdlin <alexander.sverdlin@nokia.com>
    [ Massage commit message. ]
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: linux-edac <linux-edac@vger.kernel.org>
    Cc: stable@vger.kernel.org
    Link: http://lkml.kernel.org/r/20180716084927.24869-1-alexander.sverdlin@nokia.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 859334041d048412055a28ced61defbabb22d0f2 ......
	 orig commit -> fa94d0c6e0f3431523f5701084d799c77c7d4a4f ......
		 fa94d0c6e0f3431523f5701084d799c77c7d4a4f has problem. Fixes commit -> 370a132bb2227ff76278f98370e0e701d86ff752
commit 05104410c9d109e1d9b4d2e59f7de9d9722ec47f
Author: Prarit Bhargava <prarit@redhat.com>
Date:   Tue Jul 31 07:27:39 2018 -0400

    x86/microcode: Make sure boot_cpu_data.microcode is up-to-date
    
    commit 370a132bb2227ff76278f98370e0e701d86ff752 upstream.
    
    When preparing an MCE record for logging, boot_cpu_data.microcode is used
    to read out the microcode revision on the box.
    
    However, on systems where late microcode update has happened, the microcode
    revision output in a MCE log record is wrong because
    boot_cpu_data.microcode is not updated when the microcode gets updated.
    
    But, the microcode revision saved in boot_cpu_data's microcode member
    should be kept up-to-date, regardless, for consistency.
    
    Make it so.
    
    Fixes: fa94d0c6e0f3 ("x86/MCE: Save microcode revision in machine check records")
    Signed-off-by: Prarit Bhargava <prarit@redhat.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Tony Luck <tony.luck@intel.com>
    Cc: sironi@amazon.de
    Cc: stable@vger.kernel.org
    Link: http://lkml.kernel.org/r/20180731112739.32338-1-prarit@redhat.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking c6a1c0caf2d0b21ba25752fe0909a79812ba9d12 ......
	 orig commit -> 86755b7a96faed57f910f9e6b8061e019ac1ec08 ......
checking 14c2230b83bc7ea2f120d2ab6b0bd8e0d7ab4c11 ......
	 orig commit -> cc40daf91bdddbba72a4a8cd0860640e06668309 ......
checking f1833eb13078778b908f60ad9457f374b1b8b44c ......
	 orig commit -> da343b6d90e11132f1e917d865d88ee35d6e6d00 ......
checking 525673339fb136e6dfb7628284bf8a88d6886502 ......
	 orig commit -> 590347e4000356f55eb10b03ced2686bd74dab40 ......
checking ffced04184f55cadbc657b820af4f1faf536568f ......
	 orig commit -> 55fe6da9efba102866e2fb5b40b04b6a4b26c19e ......
checking e3a8c7b5d70760f56aef564a5ac17115cfc0b5f5 ......
	 orig commit -> 2fb4f4eadd180a50112618dd9c5fef7fc50d4f08 ......
checking c1badd7b65c41b4742a9719b13be623fc3cfdcaf ......
	 orig commit -> 753e8abc36b2c966caea075db0c845563c8a19bf ......
checking 3da2a62a61d1d228228894b16021e85cccdbe173 ......
	 orig commit -> f07afa0462b76a5b9c4f3a43d5ac24fdb86a90c2 ......
checking 583cc79b7380178b924f9a85a23272de2cbd5c6f ......
	 orig commit -> e82df670235138575b37ff0ec24412a471efd97f ......
checking 5f9113db06a4799fadd432b36c951aab8abd5af8 ......
	 orig commit -> 1d037577c323e5090ce281e96bc313ab2eee5be2 ......
checking 7f18a19b21135e9dd535406e80b9b73f2f1cadb8 ......
	 orig commit -> ff690eeed804f112242f9a0614eafdf559f9276a ......
checking 88b3e6acbae0d4213d4f0f253cc142ac036e955a ......
	 orig commit -> 379b03b7fa05f7db521b7732a52692448a3c34fe ......
checking d50cb5cedb6f44487df565ed7218329e2bb571eb ......
	 orig commit -> 1b4cfe3c0a30dde968fb43c577a8d7e262a145ee ......
checking 89d3fccd8bab549d4202cbe130a2373d45c9641c ......
	 orig commit -> ea4f7bd2aca9f68470e9aac0fc9432fd180b1fe7 ......
checking 91e019af29cd79e300135f8103338f027cfc27af ......
	 orig commit -> fc110ebdd014dd1368c98e7685b47789c31fab42 ......
checking d90bb7c6806b3c59a70b2fb6d09b92b1707cee33 ......
	 orig commit -> 902f4d067a50ccf645a58dd5fb1d113b6e0f9b5b ......
checking e06fe592577174c01bb194866bb2c7d253f51397 ......
	 orig commit -> 1b22b4b28fd5fbc51855219e3238b3ab81da8466 ......
checking 26f1a4666090145a8b4f5d43f65d7fc3be2594a1 ......
	 orig commit -> 06a3f0c9f2725f5d7c63c4203839373c9bd00c28 ......
checking 6c6f1e60b5e4be19edf3978123fc13cb1b8d68f9 ......
	 orig commit -> f8bee6135e167f5b35b7789c74c2956dad14d0d5 ......
checking 783fd8eb86fc415dfff9c13dfe3289836888fc97 ......
	 orig commit -> 0e5ee33d2a54e4c55fe92857f23e1cbb0440d6de ......
checking e919af14fa1789415c21b5f03d2c522174962e18 ......
	 orig commit -> 545b0bcde7fbd3ee408fa842ea0731451dc4bd0a ......
checking f641c63d750acf83002aa32ab9a06cc866026108 ......
	 orig commit -> 0b58d90f89545e021d188c289fa142e5ff9e708b ......
checking 755e5527e57faf7e90d7300c4ed4350505d45277 ......
	 orig commit -> 1bced75f4ab04bec55aecb57d99435dc6d0ae5a0 ......
checking 20f3ff9738c04226209f606e239ad013e95f43b6 ......
	 orig commit -> 05656e5e4917a08296300dc0530aed1539202c25 ......
checking 26078a2d862d99f296f25165a429536c2a8a7f38 ......
	 orig commit -> a0aaa03062be252aacad60a776f3374dd53e3f98 ......
checking 9c1192dcb7ba194ef76e33df41225fc0b35d0b17 ......
	 orig commit -> 2c83029cda55a5e7665c7c6326909427d6a01350 ......
checking 1dd93412438e7637ba510fc9e8908543b05e7f7f ......
	 orig commit -> 53bf277b487eb5ae6695db01bede0fe406792119 ......
checking cfc381d215af6995bd5f1af4ac7635b7d6f56592 ......
	 orig commit -> 5825acf5c958a6820b04e9811caeb2f5e572bcd8 ......
checking 396ff36876744a8359fb6d56c484f66bdb677842 ......
	 orig commit -> 51954e17914aaadf18d97b21c2a2cee16fa29513 ......
checking 9b9a82c0e2e1e9ca1f838beae51d6791e69a8a85 ......
	 orig commit -> c20bb155c2c5acb775f68be5d84fe679687c3c1e ......
checking e6a23183d800c1155527d174729851943bf1146c ......
	 orig commit -> aa0aad57909eb321746325951d66af88a83bc956 ......
checking 9c1508eff805c81e81be88dec99dccc36c59fd4c ......
	 orig commit -> 15734feff2bdac24aa3266c437cffa42851990e3 ......
checking 8c13b37c887db3531970f31955d6b0445061995a ......
	 orig commit -> d61a5c1063515e855bedb1b81e20e50b0ac3541e ......
checking c261d5a4e5bfa0666f72fa1dfa99f80ea18c46f4 ......
	 orig commit -> 25c058ccaf2ebbc3e250ec1e199e161f91fe27d4 ......
checking 363e3fd5fa49dd429a6f4473da0fa0fa3cbfdbb5 ......
	 orig commit -> 27d4ee03078aba88c5e07dcc4917e8d01d046f38 ......
checking 0547d11350811a664352d2917d48768598d41921 ......
	 orig commit -> d13a8479f3584613b6aacbb793eae64578b8f69a ......
checking 07b7495465219afadb447b4d21c0af26d67a2edb ......
	 orig commit -> 1514839b366417934e2f1328edb50ed1e8a719f5 ......
		 1514839b366417934e2f1328edb50ed1e8a719f5 has problem. Fixes commit -> 3a9910d7b686546dcc9986e790af17e148f1c888
commit a972222a6a3004df0ba6295d9ea14617dff0964a
Author: Ben Hutchings <ben.hutchings@codethink.co.uk>
Date:   Tue Mar 20 21:05:48 2018 +0000

    scsi: qla2xxx: Avoid double completion of abort command
    
    [ Upstream commit 3a9910d7b686546dcc9986e790af17e148f1c888 ]
    
    qla2x00_tmf_sp_done() now deletes the timer that will run
    qla2x00_tmf_iocb_timeout(), but doesn't check whether the timer already
    expired.  Check the return value from del_timer() to avoid calling
    complete() a second time.
    
    Fixes: 4440e46d5db7 ("[SCSI] qla2xxx: Add IOCB Abort command asynchronous ...")
    Fixes: 1514839b3664 ("scsi: qla2xxx: Fix NULL pointer crash due to active ...")
    Signed-off-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Acked-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
checking 4dbc3e4d8b281e7dcaf2063a94e67e7b5d1851a9 ......
	 orig commit -> 3be8828fc507cdafe7040a3dcf361a2bcd8e305b ......
checking 2e5033364e0d6fc8b9c19b5ffa63b9825a848624 ......
	 orig commit -> f616f2830c1ed79245cfeca900f7e8a3b3c08c06 ......
checking c16a67695cd684d08d546de370e9834bef628dae ......
	 orig commit -> 90024a5951029685acc5396258f1b0de9b23cf4a ......
checking d3accc34d793b55bf8f3f03cf5efa6b64a89b70b ......
	 orig commit -> 556fe36d09da5f82879e92bafa0371b4b79f7d6f ......
checking 7b3f881e41c5d38329a934269679e40f88b22604 ......
	 orig commit -> 156961ae7bdf6feb72778e8da83d321b273343fd ......
checking 492056f2944e12ee2eda1cfeccc84996ca51813f ......
	 orig commit -> e659d14ed48096f87a678e7ebbdf286a817b4d0e ......
checking f306b12928b993b8f76c8168cedb6ffc631cef21 ......
	 orig commit -> b1b13780ab06ef8c770dd9cbe31dac549a11630e ......
checking 4b26a307391ffb60197ef58e739fe28a666b6a72 ......
	 orig commit -> f63248fac563125fd5a2f0bc780ce7a299872cab ......
checking bba05fb6a13b355012bdca57dd0ae8218e6c51ee ......
	 orig commit -> a5dcb73b96a9d21431048bdaac02d9e96f386da3 ......
checking e0486b303556ebbd03365eae88f4bb7cf1d789f6 ......
	 orig commit -> 104f268d439b3c21c83708e52946a4d8d37f3d0f ......
checking dbfed071633c27242eba0fe710d396168fd2dba7 ......
	 orig commit -> 28e9091e3119933c38933cb8fc48d5618eb784c8 ......
checking 01b8c0e360634f820137e8ff8621abb75ae7e688 ......
	 orig commit -> a5880b84430316e3e1c1f5d23aa32ec6000cc717 ......
checking 9b2d784a39d450f27960d5f2b8d40c16ac014004 ......
	 orig commit -> 6a21dfc0d0db7b7e0acedce67ca533a6eb19283c ......
		 6a21dfc0d0db7b7e0acedce67ca533a6eb19283c has problem. Fixes commit -> ef95a90ae6f4f21990e1f7ced6719784a409e811
5f3e3b85cc0a5eae1c46d72e47d3de7bf208d9e2
commit 7245e2d1790b4dbcaf318c36b87758d568e67f8b
Author: Chien Tin Tung <chien.tin.tung@intel.com>
Date:   Wed Mar 21 13:09:25 2018 -0500

    RDMA/ucma: Correct option size check using optlen
    
    [ Upstream commit 5f3e3b85cc0a5eae1c46d72e47d3de7bf208d9e2 ]
    
    The option size check is using optval instead of optlen
    causing the set option call to fail. Use the correct
    field, optlen, for size check.
    
    Fixes: 6a21dfc0d0db ("RDMA/ucma: Limit possible option size")
    Signed-off-by: Chien Tin Tung <chien.tin.tung@intel.com>
    Signed-off-by: Shiraz Saleem <shiraz.saleem@intel.com>
    Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 7b7574e9b2095b191713dabe28d7b9291cdf6257 ......
	 orig commit -> c4f24df942a181699c5bab01b8e5e82b925f77f3 ......
checking e131a6d68cd5271c72ef36ad539509d3863f78cb ......
	 orig commit -> 9c6376ebddad585da4238532dd6d90ae23ffee67 ......
checking 2bca2c58d83bd8eb38ff2c125d15eaceb8a36d54 ......
	 orig commit -> d9ee65539d3eabd9ade46cca1780e3309ad0f907 ......
checking 29060ff7c1ed11f387d0ab843f3e21a105785f3d ......
	 orig commit -> 7867b98dceb7741065c9c1b645136facad5c2e93 ......
		 7867b98dceb7741065c9c1b645136facad5c2e93 has problem. Fixes commit -> 62aa281470fdb7c0796d63a1cc918a8c1f02dde2
commit 8cdd1908c17492cb6176d63d279de2534342b369
Author: Himanshu Madhani <himanshu.madhani@cavium.com>
Date:   Sat Dec 16 16:05:09 2017 -0800

    scsi: qla2xxx: Fix smatch warning in qla25xx_delete_{rsp|req}_que
    
    commit 62aa281470fdb7c0796d63a1cc918a8c1f02dde2 upstream.
    
    This patch fixes following warnings reported by smatch:
    
    drivers/scsi/qla2xxx/qla_mid.c:586 qla25xx_delete_req_que()
    error: we previously assumed 'req' could be null (see line 580)
    
    drivers/scsi/qla2xxx/qla_mid.c:602 qla25xx_delete_rsp_que()
    error: we previously assumed 'rsp' could be null (see line 596)
    
    Fixes: 7867b98dceb7 ("scsi: qla2xxx: Fix memory leak in dual/target mode")
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 0393270e9e58efca06378505dbd13ee160481d2f ......
	 orig commit -> 19759033e0d0beed70421ab9258f5ede79e070ae ......
checking e62c1051a4fd1eb40bb3109084364e531a693cc0 ......
	 orig commit -> bf07ef86e882013522876f7c834c8eea085f35b4 ......
checking f5ff7098d906528615c14f82f4a677f60972e2ca ......
	 orig commit -> 5d3300a9b8b122b4743aed5a178bf12c87e2b8c9 ......
checking 1bc43df12141ac1ca9f440cf106e6a93a6f5ad4d ......
	 orig commit -> ba743f9148e951abe1c94f89c174ec8e44fb145b ......
checking 21e4e9c6d8abfdcbe6d347fd0c8198fbbd5d2fa9 ......
	 orig commit -> 76f9a2dd4c60183879a1898bcd56a1dbab19a85d ......
checking 0b42928ca54c2ab5e6f7daa21e570e12dd3065ed ......
	 orig commit -> 063b36d6b0ad74c748d536f5cb47bac2f850a0fa ......
checking 11739154e650aec048e95a86bf2ab58e91473fdb ......
	 orig commit -> b0dcce746b32ac573343ad39cb3dc485030de95e ......
checking 4929c452336c87863b134fac4683b6714304c7a7 ......
	 orig commit -> 23c645595dab7b414f23639d0a428a07515807df ......
checking f92ec32f33baff10f61c2f0dc277aa6ad350ea99 ......
	 orig commit -> 4005a995668b8fd58f4cf1460dd4cf63efa18363 ......
checking 1411448e0a1b96955f64478fc3f04d0ff1edc704 ......
	 orig commit -> 3be63b1e1838e35ce93e83f19573e949f4b389b4 ......
checking 4274e4a3bee9ea7010f411b6b6ae37cfcdcca7c4 ......
	 orig commit -> 414d9ff3f8039f85d23f619dcbbd1ba2628a1a67 ......
checking 585f4ebd9e66a4fc78dd9893529ed9cb4759063f ......
	 orig commit -> 2d73ac6102d943c4be4945735a338005359c6abc ......
		 2d73ac6102d943c4be4945735a338005359c6abc has problem. Fixes commit -> e3dde080ebbdbb4bda8eee35d770714fee8c59ac
commit 43d7c954b22e87f16a8304518d776f454f584578
Author: Quinn Tran <quinn.tran@cavium.com>
Date:   Wed Jul 18 14:29:51 2018 -0700

    scsi: qla2xxx: Fix unintialized List head crash
    
    commit e3dde080ebbdbb4bda8eee35d770714fee8c59ac upstream.
    
    In case of IOCB Queue full or system where memory is low and driver
    receives large number of RSCN storm, the stale sp pointer can stay on
    gpnid_list resulting in page_fault.
    
    This patch fixes this issue by initializing the sp->elem list head and
    removing sp->elem before memory is freed.
    
    Following stack trace is seen
    
     9 [ffff987b37d1bc60] page_fault at ffffffffad516768 [exception RIP: qla24xx_async_gpnid+496]
    10 [ffff987b37d1bd10] qla24xx_async_gpnid at ffffffffc039866d [qla2xxx]
    11 [ffff987b37d1bd80] qla2x00_do_work at ffffffffc036169c [qla2xxx]
    12 [ffff987b37d1be38] qla2x00_do_dpc_all_vps at ffffffffc03adfed [qla2xxx]
    13 [ffff987b37d1be78] qla2x00_do_dpc at ffffffffc036458a [qla2xxx]
    14 [ffff987b37d1bec8] kthread at ffffffffacebae31
    
    Fixes: 2d73ac6102d9 ("scsi: qla2xxx: Serialize GPNID for multiple RSCN")
    Cc: <stable@vger.kernel.org> # v4.17+
    Signed-off-by: Quinn Tran <quinn.tran@cavium.com>
    Signed-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking a6d50e89f119cc3717cfe01346a9f73f3a5f996a ......
	 orig commit -> 25ad76b703d9ad536f3411b15b1070aeb059ab55 ......
checking 8e6cbe51afee2058109b86232755f5f68179e2c7 ......
	 orig commit -> a084fd68e1d26174c4cc1a13fbb0112f468ff7f4 ......
		 a084fd68e1d26174c4cc1a13fbb0112f468ff7f4 has problem. Fixes commit -> 5c6400536481d9ef44ef94e7bf2c7b8e81534db7
14bc1dff74277408f08661d03e785710a46e0699
commit 0a7a9ed0ce1d1e669b50d5763168d4cdddba58b2
Author: Quinn Tran <quinn.tran@cavium.com>
Date:   Wed Sep 26 22:05:14 2018 -0700

    scsi: qla2xxx: Fix re-using LoopID when handle is in use
    
    commit 5c6400536481d9ef44ef94e7bf2c7b8e81534db7 upstream.
    
    This patch fixes issue where driver clears NPort ID map instead of marking
    handle in use. Once driver clears NPort ID from the database, it can reuse
    the same NPort ID resulting in a PLOGI failure.
    
    [mkp: fixed Himanshu's SoB]
    
    Fixes: a084fd68e1d2 ("scsi: qla2xxx: Fix re-login for Nport Handle in use")
    Cc: <stable@vger.kernel.org>
    Signed-of-by: Quinn Tran <quinn.tran@cavium.com>
    Reviewed-by: Ewan D. Milne <emilne@redhat.com>
    Signed-off-by: Himanshu Madhani <hmadhani@cavium.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking fae72a2710013541910020c553db414d031282f6 ......
	 orig commit -> d68b850e1bfb9afb24b888a946165a186a710195 ......
checking 2cd1f76b293eb44f39c8d6663fc49f52c5f65aa6 ......
	 orig commit -> a01c77d2cbc45ba527e884e5c30363a1200a4130 ......
checking e0be82d7801a230bb4a3dad5382c88ae9927aa5f ......
	 orig commit -> 22e786ea47f8795c561e1a01b6a66bb2cae2fc20 ......
checking f58abb5bbd23dc77b9826a7cba0d099bf640a8d9 ......
	 orig commit -> 2e01d0ba868ec1d4d55ddcba519339e072b0bf4d ......
checking 7b6f41b7377ad4c6a17b860bb60f13d1b42cff7d ......
	 orig commit -> 6c9f0ce0dffe64da2204f38b0fd90f3ae2a8903c ......
checking 30c3b70e8d839a926e29dc1db6ba9c1b4deac1d8 ......
	 orig commit -> 68021bf4734d15c9a9ed1c1072b9ebcfda3e39cc ......
checking 1ef7d99cc8972e67438518a7529a67a29cb40720 ......
	 orig commit -> 764325add6c2ad1641199edde7b2995495fc2d7c ......
checking 7cea3381216a304e12dc21fb050e51bf62ed7a11 ......
	 orig commit -> b3e958ce4c585bf666de249dc794971ebc62d2d3 ......
checking f1bb2393fcd005b13857a002d25d9a4ebc6a2398 ......
	 orig commit -> c382babccba2c82fe57f9e647f290fb7bf4d130d ......
checking 9131a1b3d9c8fc22c3c2f5115f06c7c4332860a4 ......
	 orig commit -> 7d98386d55a5afaa65de77e1e9197edeb8a42079 ......
checking 39f154faecc23e42190a41e6225060c39092d1f8 ......
	 orig commit -> b078556aecd791b0e5cb3a59f4c3a14273b52121 ......
checking 2d7e07003950dadd2f918effff584b0c98501189 ......
	 orig commit -> c4585a2823edf4d1326da44d1524ecbfda26bb37 ......
		 c4585a2823edf4d1326da44d1524ecbfda26bb37 has problem. Fixes commit -> c8d70a700a5b486bfa8e5a7d33d805389f6e59f9
commit bbfbc396f07680d5ca76a3a6e5e378e92f7d5ff7
Author: Florian Westphal <fw@strlen.de>
Date:   Fri Mar 9 14:27:31 2018 +0100

    netfilter: bridge: ebt_among: add more missing match size checks
    
    commit c8d70a700a5b486bfa8e5a7d33d805389f6e59f9 upstream.
    
    ebt_among is special, it has a dynamic match size and is exempt
    from the central size checks.
    
    commit c4585a2823edf ("bridge: ebt_among: add missing match size checks")
    added validation for pool size, but missed fact that the macros
    ebt_among_wh_src/dst can already return out-of-bound result because
    they do not check value of wh_src/dst_ofs (an offset) vs. the size
    of the match that userspace gave to us.
    
    v2:
    check that offset has correct alignment.
    Paolo Abeni points out that we should also check that src/dst
    wormhash arrays do not overlap, and src + length lines up with
    start of dst (or vice versa).
    v3: compact wormhash_sizes_valid() part
    
    NB: Fixes tag is intentionally wrong, this bug exists from day
    one when match was added for 2.6 kernel. Tag is there so stable
    maintainers will notice this one too.
    
    Tested with same rules from the earlier patch.
    
    Fixes: c4585a2823edf ("bridge: ebt_among: add missing match size checks")
    Reported-by: <syzbot+bdabab6f1983a03fc009@syzkaller.appspotmail.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking eaa06bfba8eabd44ce952758046492eebc973bbe ......
	 orig commit -> b71812168571fa55e44cdd0254471331b9c4c4c6 ......
		 b71812168571fa55e44cdd0254471331b9c4c4c6 has problem. Fixes commit -> 932909d9b28d27e807ff8eecb68c7748f6701628
commit 533f5f847dfdfc76d965ecbeb0e5f572e015c524
Author: Florian Westphal <fw@strlen.de>
Date:   Thu Mar 8 12:54:19 2018 +0100

    netfilter: ebtables: fix erroneous reject of last rule
    
    [ Upstream commit 932909d9b28d27e807ff8eecb68c7748f6701628 ]
    
    The last rule in the blob has next_entry offset that is same as total size.
    This made "ebtables32 -A OUTPUT -d de:ad:be:ef:01:02" fail on 64 bit kernel.
    
    Fixes: b71812168571fa ("netfilter: ebtables: CONFIG_COMPAT: don't trust userland offsets")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking c89e04e5c06e682d95a18f1d286636183fd585fc ......
	 orig commit -> cfc2c740533368b96e2be5e0a4e8c3cace7d9814 ......
checking 53f94e6110aa47cfac198030ddb9585b9cd8bd3f ......
	 orig commit -> db57ccf0f2f4624b4c4758379f8165277504fbd7 ......
checking ab737b02b2fdb02640bac85432ad7a4ebbba2e14 ......
	 orig commit -> 10414014bc085aac9f787a5890b33b5605fbcfc4 ......
checking 2a7ebc07a1531a6dbe00434d3c69402c615dbd74 ......
	 orig commit -> de526f401284e1638d4c97cb5a4c292ac3f37655 ......
checking 4514a597aa4376a024927ecde3570dacac742e70 ......
	 orig commit -> b3e456fce9f51d6276e576d00271e2813c1b8b67 ......
		 b3e456fce9f51d6276e576d00271e2813c1b8b67 has problem. Fixes commit -> 2a61d8b883bbad26b06d2e6cc3777a697e78830d
checking 638c2e4eff89aae86593e80ac2be01eee195fccb ......
	 orig commit -> 57ebd808a97d7c5b1e1afb937c2db22beba3c1f8 ......
checking 310f286ded5f1f7fd72dcb1cff936c0a02d5a4d2 ......
	 orig commit -> cedb6415f9ece6d3368aa0ac8a433caff799792a ......
checking 314b54aae2ad9dc347be82112edfc9a612d2894c ......
	 orig commit -> d1c4cb447a7efcb5608a33cdfed8ab4234378b0a ......
		 d1c4cb447a7efcb5608a33cdfed8ab4234378b0a has problem. Fixes commit -> cedb6415f9ece6d3368aa0ac8a433caff799792a
commit 310f286ded5f1f7fd72dcb1cff936c0a02d5a4d2
Author: Vinod Koul <vinod.koul@intel.com>
Date:   Tue Oct 31 16:47:27 2017 +0530

    ASoC: Intel: kbl: fix jack name
    
    commit cedb6415f9ece6d3368aa0ac8a433caff799792a upstream.
    
    Commit d1c4cb447a7e ("ASoC: Intel: Skylake: Fix jack name format
    substitution") added Jack name but erroneously added a space as well,
    so remove the space in Jack name.
    
    Fixes: d1c4cb447a7e ("ASoC: Intel: Skylake: Fix jack name format substitution")
    Signed-off-by: Vinod Koul <vinod.koul@intel.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking c116baf79f0ecedd94be496be622ab6b65a243e7 ......
	 orig commit -> 863204cfdae98626a92535ac928ad79f4d6b74ff ......
checking 77fbdd1e2a0c316481313caa4246b87a95aa0f31 ......
	 orig commit -> 2b3d89b402b085b08498e896c65267a145bed486 ......
checking 41da51dbc3721cae1b9796a422610366e9ff851c ......
	 orig commit -> aeebc6ba88ba3758ad95467ff6191fabf2074c13 ......
checking d40d7b332592d9e15c57afb7c00a37f5e1cb1df6 ......
	 orig commit -> 838534e50e2e5c1e644e30ab6cb28da88eb31368 ......
checking 9a07f4a6befc34d8f91e5fa0069d063283705f3a ......
	 orig commit -> c42cbe41727a138905a28f8e0b00c147be77ee93 ......
checking 31c4bc6e01e5219283c81fcfa61eb242d87965c7 ......
	 orig commit -> ba634eceb535d95e87ef09caae7814b3687c6036 ......
