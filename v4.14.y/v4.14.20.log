Check from v4.14.20 to v4.14.21
Commit count: 168
checking 58056a531e440061142a4481358ebb365193df5e ......
checking e506ac1dab86c88b03f62404055a35262dda310d ......
	 orig commit -> 31747eda41ef3c30c09c5c096b380bf54013746a ......
checking f1a81c0eab38a1cf8887cd10731c77ad547cc17c ......
	 orig commit -> 5c256045b87b8aa8e5bc9d2e2fdc0802351c1f99 ......
checking 9a2b3777bd5335e34ec585ecc8e29d575dfc8c13 ......
	 orig commit -> f2bc600008bd6f7f5d0b6b56238d14f95cd454d2 ......
checking 44e47693e3a680114332420a92281861bba5a9a4 ......
	 orig commit -> 97618aca1440b5addc5c3d78659d3e176be23b80 ......
checking ffe075e233bb8049ba7d3e362b37bc97ecf7e6fa ......
	 orig commit -> dd3f6983b4a468efca9e8caa0e2b4aa20946d801 ......
checking 11785a9ece1b10d43156ae79e24f709053644bc5 ......
	 orig commit -> 16c3ada89cff9a8c2a0eea34ffa1aa20af3f6008 ......
checking bbd577fec485647aaad0e2ba6142f2fec363b946 ......
	 orig commit -> 586b2a4befad88cd87b372a1cea01e58c6811ea9 ......
checking 5782df0a58b6748cca77cd0a7684c8c7e2401af2 ......
	 orig commit -> ae72e95b5e4ded145bfc6926ad9457b74e3af41a ......
checking 011c19041424dabd87e0bfa26b5ce20c1a0119e1 ......
	 orig commit -> 76a09ce214addb8ddc0f6d50dc1106a5f829e713 ......
checking 7367af9cf0e4e1502151d42535cae779046d77e4 ......
	 orig commit -> 5c1037196b9ee75897c211972de370ed1336ec8f ......
checking 34aac3426553aed01e59ec30467e42d165af2142 ......
	 orig commit -> b0ab681285aa66064f2de5b74191c0cabba381ff ......
checking 361bd5be7b845f10f6f282987088c1e62dd671d9 ......
	 orig commit -> 3343647813fdf0f2409fbf5816ee3e0622168079 ......
checking f5eab7c3d1003d0d8df8beefa531187452212c59 ......
	 orig commit -> 5628a8ca14149ba4226e3bdce3a04c3b688435ad ......
checking dcdc01c2edd4baf8096c70837fd583e1cc00d023 ......
	 orig commit -> 05e89fb576f580ac95e7a5d00bdb34830b09671a ......
checking 875758d79d8f6182aa2c76c09eb810a7c54249ec ......
	 orig commit -> 81b6c999897919d5a16fedc018fe375dbab091c5 ......
checking 26f8c38bb466c1a2d232d7609fb4bfb4bc121678 ......
	 orig commit -> fd0e786d9d09024f67bd71ec094b110237dc3840 ......
checking e4ea7c12229c5fec232120713abe74bd35164157 ......
	 orig commit -> ec897569ad7dbc6d595873a487c3fac23f463f76 ......
checking ac98d5a624fed603233421ddd808f2623f331ad8 ......
	 orig commit -> 7ac8ff95f48cbfa609a060fd6a1e361dd62feeb3 ......
checking 7466294dad8963e29f051d8ab2f4d3f67d2f62a6 ......
	 orig commit -> d15d662e89fc667b90cd294b0eb45694e33144da ......
		 d15d662e89fc667b90cd294b0eb45694e33144da has problem. Fixes commit -> 7bd80091567789f1c0cb70eb4737aac8bcd2b6b9
d85739367c6d56e475c281945c68fdb05ca74b4c
commit d9c724729d0d9122d45bdaa242f854d7368dfe09
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Mar 5 22:00:55 2018 +0100

    ALSA: seq: Don't allow resizing pool in use
    
    commit d85739367c6d56e475c281945c68fdb05ca74b4c upstream.
    
    This is a fix for a (sort of) fallout in the recent commit
    d15d662e89fc ("ALSA: seq: Fix racy pool initializations") for
    CVE-2018-1000004.
    As the pool resize deletes the existing cells, it may lead to a race
    when another thread is writing concurrently, eventually resulting a
    UAF.
    
    A simple workaround is not to allow the pool resizing when the pool is
    in use.  It's an invalid behavior in anyway.
    
    Fixes: d15d662e89fc ("ALSA: seq: Fix racy pool initializations")
    Reported-by: 范龙飞 <long7573@126.com>
    Reported-by: Nicolai Stange <nstange@suse.de>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 6d3a7dcba8c5ac740ef168621829aa163be4abc6
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Mar 5 22:06:09 2018 +0100

    ALSA: seq: More protection for concurrent write and ioctl races
    
    commit 7bd80091567789f1c0cb70eb4737aac8bcd2b6b9 upstream.
    
    This patch is an attempt for further hardening against races between
    the concurrent write and ioctls.  The previous fix d15d662e89fc
    ("ALSA: seq: Fix racy pool initializations") covered the race of the
    pool initialization at writer and the pool resize ioctl by the
    client->ioctl_mutex (CVE-2018-1000004).  However, basically this mutex
    should be applied more widely to the whole write operation for
    avoiding the unexpected pool operations by another thread.
    
    The only change outside snd_seq_write() is the additional mutex
    argument to helper functions, so that we can unlock / relock the given
    mutex temporarily during schedule() call for blocking write.
    
    Fixes: d15d662e89fc ("ALSA: seq: Fix racy pool initializations")
    Reported-by: 范龙飞 <long7573@126.com>
    Reported-by: Nicolai Stange <nstange@suse.de>
    Reviewed-and-tested-by: Nicolai Stange <nstange@suse.de>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d9c724729d0d9122d45bdaa242f854d7368dfe09
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Mar 5 22:00:55 2018 +0100

    ALSA: seq: Don't allow resizing pool in use
    
    commit d85739367c6d56e475c281945c68fdb05ca74b4c upstream.
    
    This is a fix for a (sort of) fallout in the recent commit
    d15d662e89fc ("ALSA: seq: Fix racy pool initializations") for
    CVE-2018-1000004.
    As the pool resize deletes the existing cells, it may lead to a race
    when another thread is writing concurrently, eventually resulting a
    UAF.
    
    A simple workaround is not to allow the pool resizing when the pool is
    in use.  It's an invalid behavior in anyway.
    
    Fixes: d15d662e89fc ("ALSA: seq: Fix racy pool initializations")
    Reported-by: 范龙飞 <long7573@126.com>
    Reported-by: Nicolai Stange <nstange@suse.de>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking ec5a08abefe6aa239ada078e6041f222eac52196 ......
	 orig commit -> 7c74866baef1827e18f8269aec85030063520bd4 ......
checking e1b13eb16c98eb289751098f8f79ff220b8bfdff ......
	 orig commit -> 5e35dc0338d85ccebacf3f77eca1e5dea73155e8 ......
checking de3e8191756434f6fa4bd69d38ceb5bacd0f1028 ......
	 orig commit -> fdcc968a3b290407bcba9d4c90e2fba6d8d928f1 ......
checking 81ae4f7479f96a5123ace58cc3bdc11303de8a46 ......
	 orig commit -> 61fcf8ece9b6b09450250c4ca40cc3b81a96a68d ......
		 61fcf8ece9b6b09450250c4ca40cc3b81a96a68d has problem. Fixes commit -> 54947cd64c1b8290f64bb2958e343c07270e3a58
71db96ddfa72671bd43cacdcc99ca178d90ba267
commit e2c3f727021883cf0903196ae2fd55355b98546e
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Feb 26 15:36:38 2018 +0100

    ALSA: hda - Fix pincfg at resume on Lenovo T470 dock
    
    commit 71db96ddfa72671bd43cacdcc99ca178d90ba267 upstream.
    
    We've added a quirk to enable the recent Lenovo dock support, where it
    overwrites the pin configs of NID 0x17 and 19, not only updating the
    pin config cache.  It works right after the boot, but the problem is
    that the pin configs are occasionally cleared when the machine goes to
    PM.  Meanwhile the quirk writes the pin configs only at the pre-probe,
    so this won't be applied any longer.
    
    For addressing that issue, this patch moves the code to overwrite the
    pin configs into HDA_FIXUP_ACT_INIT section so that it's always
    applied at both probe and resume time.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=195161
    Fixes: 61fcf8ece9b6 ("ALSA: hda/realtek - Enable Thinkpad Dock device for ALC298 platform")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 01a02e66228b69b497136168716cb1ba2b5ebd73
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Dec 3 10:44:15 2018 +0100

    ALSA: hda/realtek - Fix speaker output regression on Thinkpad T570
    
    commit 54947cd64c1b8290f64bb2958e343c07270e3a58 upstream.
    
    We've got a regression report for some Thinkpad models (at least
    T570s) which shows the too low speaker output volume.  The bisection
    leaded to the commit 61fcf8ece9b6 ("ALSA: hda/realtek - Enable Thinkpad
    Dock device for ALC298 platform"), and it's basically adding the two
    pin configurations for the dock, and looks harmless.
    
    The real culprit seems, though, that the DAC assignment for the
    speaker pin is implicitly assumed on these devices, i.e. pin NID 0x14
    to be coupled with DAC NID 0x03.  When more pins are configured by the
    commit above, the auto-parser changes the DAC assignment, and this
    resulted in the regression.
    
    As a workaround, just provide the fixed pin / DAC mapping table for
    this Thinkpad fixup function.  It's no generic solution, but the
    problem itself is pretty much device-specific, so must be good
    enough.
    
    Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1554304
    Fixes: 61fcf8ece9b6 ("ALSA: hda/realtek - Enable Thinkpad Dock device for ALC298 platform")
    Cc: <stable@vger.kernel.org>
    Reported-and-tested-by: Jeremy Cline <jcline@redhat.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e2c3f727021883cf0903196ae2fd55355b98546e
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Feb 26 15:36:38 2018 +0100

    ALSA: hda - Fix pincfg at resume on Lenovo T470 dock
    
    commit 71db96ddfa72671bd43cacdcc99ca178d90ba267 upstream.
    
    We've added a quirk to enable the recent Lenovo dock support, where it
    overwrites the pin configs of NID 0x17 and 19, not only updating the
    pin config cache.  It works right after the boot, but the problem is
    that the pin configs are occasionally cleared when the machine goes to
    PM.  Meanwhile the quirk writes the pin configs only at the pre-probe,
    so this won't be applied any longer.
    
    For addressing that issue, this patch moves the code to overwrite the
    pin configs into HDA_FIXUP_ACT_INIT section so that it's always
    applied at both probe and resume time.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=195161
    Fixes: 61fcf8ece9b6 ("ALSA: hda/realtek - Enable Thinkpad Dock device for ALC298 platform")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 5640397f06ada0800d734b98fced5e74fbd4b217 ......
	 orig commit -> 40e2c4e5a7efcd50983aacbddd3c617e776018bf ......
checking 8f65cd77c97c033bade459958611b1c9126c553c ......
	 orig commit -> 447cae58cecd69392b74a4a42cd0ab9cabd816af ......
checking c0cf529a8f4df5d063816c59af8ea927d277c799 ......
	 orig commit -> 3f2f7c553d077be6a30cb96b2976a2c940bf5335 ......
		 3f2f7c553d077be6a30cb96b2976a2c940bf5335 has problem. Fixes commit -> d5078193e56bb24f4593f00102a3b5e07bb84ee0
commit 818b447d14e4384551f88b431344d17bd9d9a08d
Author: Hui Wang <hui.wang@canonical.com>
Date:   Fri Mar 2 13:05:36 2018 +0800

    ALSA: hda - Fix a wrong FIXUP for alc289 on Dell machines
    
    commit d5078193e56bb24f4593f00102a3b5e07bb84ee0 upstream.
    
    With the alc289, the Pin 0x1b is Headphone-Mic, so we should assign
    ALC269_FIXUP_DELL4_MIC_NO_PRESENCE rather than
    ALC225_FIXUP_DELL1_MIC_NO_PRESENCE to it. And this change is suggested
    by Kailang of Realtek and is verified on the machine.
    
    Fixes: 3f2f7c553d07 ("ALSA: hda - Fix headset mic detection problem for two Dell machines")
    Cc: Kailang Yang <kailang@realtek.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking bc74262f3a6524b5122cf1388965bd0c7d9cb5cb ......
	 orig commit -> ea56fb282368ea08c2a313af6b55cb597aec4db1 ......
checking 8a8c9588c289bcd2dbaf7a198144293978833a7c ......
	 orig commit -> 26d99834f89e76514076d9cd06f61e56e6a509b8 ......
checking 61c07810bf2e53f348dbdba751ddf7ba31aba4aa ......
	 orig commit -> 900c9981680067573671ecc5cbfa7c5770be3a40 ......
checking f30c7d95b4eb1fefe9ac0b31f4a8a3e9d4b04bb1 ......
	 orig commit -> 1a932ef4e47984dee227834667b5ff5a334e4805 ......
checking 1371798b92c84ddb06e0630fc1e2a9fcdeec2b57 ......
	 orig commit -> e8f1bc1493855e32b7a2a019decc3c353d94daf6 ......
checking 9a701c4fa563d3102b291de2531e0288ac4d7ee1 ......
	 orig commit -> 55237a5f2431a72435e3ed39e4306e973c0446b7 ......
checking fda3bb933b332a206730300a40ee71023548d0b0 ......
	 orig commit -> 1846430c24d66e85cc58286b3319c82cd54debb2 ......
checking c766cb48771b7604fb5beca646bfa9904d0a2b17 ......
	 orig commit -> e89166990f11c3f21e1649d760dd35f9e410321c ......
checking f6318abd3a5458be821eb417969726622e1e09c4 ......
	 orig commit -> 8dd601fa8317243be887458c49f6c29c2f3d719f ......
checking c8d0f63c15851e7d6f41b455d74e4b2b0a862a09 ......
	 orig commit -> 1c130ae00b769a2e2df41bad3d6051ee8234b636 ......
checking 4cbb9fdf133cc5a5dcb1ac7153791792976c62c9 ......
	 orig commit -> ce512d79d0466a604793addb6b769d12ee326822 ......
checking 0528a533f368c93efe752dbd52698dcea214554a ......
	 orig commit -> 5235553d821433e1f4fa720fd025d2c4b7ee9994 ......
checking 67154fb8012152aed14dbd70e5b7fc79dcfd53f4 ......
	 orig commit -> e89e8d8fcdc6751e86ccad794b052fe67e6ad619 ......
checking 84b41e3708ac9869190dd09d47b548392b7a656a ......
	 orig commit -> 1179e2c27efe21167ec9d882b14becefba2ee990 ......
checking 848dd9bf51544c8e5436960124f3d1f9c51cdb99 ......
	 orig commit -> 9428088c90b6f7d5edd2a1b0d742c75339b36f6e ......
		 9428088c90b6f7d5edd2a1b0d742c75339b36f6e has problem. Fixes commit -> 889ad63d41eea20184b0483e7e585e5b20fb6cfe
commit 7d0ed747bc56ca05868423220c62e64ea525aad7
Author: Jeremy Cline <jcline@redhat.com>
Date:   Fri Jun 1 16:05:32 2018 -0400

    drm/qxl: Call qxl_bo_unref outside atomic context
    
    commit 889ad63d41eea20184b0483e7e585e5b20fb6cfe upstream.
    
    "qxl_bo_unref" may sleep, but calling "qxl_release_map" causes
    "preempt_disable()" to be called and "preempt_enable()" isn't called
    until "qxl_release_unmap" is used. Move the call to "qxl_bo_unref" out
    from in between the two to avoid sleeping from an atomic context.
    
    This issue can be demonstrated on a kernel with CONFIG_LOCKDEP=y by
    creating a VM using QXL, using a desktop environment using Xorg, then
    moving the cursor on or off a window.
    
    Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1571128
    Fixes: 9428088c90b6 ("drm/qxl: reapply cursor after resetting primary")
    Cc: stable@vger.kernel.org
    Signed-off-by: Jeremy Cline <jcline@redhat.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20180601200532.13619-1-jcline@redhat.com
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking dc0b764a7c1a3a03b56c5582bf9a9c4554bf5e96 ......
	 orig commit -> 62676d10b483a2ff6e8b08c5e7c7d63a831343f5 ......
checking 851e2ea82303f3a543b32f5cc81adbc1929d053a ......
	 orig commit -> 2ce77f6d8a9ae9ce6d80397d88bdceb84a2004cd ......
checking ff59e379234bb4b479deca97e29f685eabe22954 ......
	 orig commit -> c713fb071edc0efc01a955f65a006b0e1795d2eb ......
checking 753fc48e595a24eac4d4476a421c36307a7fbcb5 ......
	 orig commit -> 3968523f855050b8195134da951b87c20bd66130 ......
checking 294975841483c08e84572713f348cd51b8408021 ......
	 orig commit -> 07234021410bbc27b7c86c18de98616c29fbe667 ......
checking 29b4af70409cfca62d045cd4e0170912ab262c66 ......
	 orig commit -> cf5eebae2cd28d37581507668605f4d23cd7218d ......
checking 0f0fd00739118302568ff8b57ddfc5898c1a3796 ......
	 orig commit -> 29fee6eed2811ff1089b30fc579a2d19d78016ab ......
checking a2fd6c0950337a39abd79046edb43c24ba91d033 ......
	 orig commit -> 781198f1f373c3e350dbeb3af04a7d4c81c1b8d7 ......
checking 0569dd9beef44d33e4866bf2db2e03fd3644de4f ......
	 orig commit -> e573427a440fd67d3f522357d7ac901d59281948 ......
checking 3711b5c568cd651ca78d6623d5c0fc839eac9499 ......
	 orig commit -> 724ba8b30b044aa0d94b1cd374fc15806cdd6f18 ......
checking 6e6fd5b4ea9d568ac989a61b8d78ae0c5ce19bcf ......
	 orig commit -> 9cb18db0701f6b74f0c45c23ad767b3ebebe37f6 ......
checking c77b388550368068a1615e164b9441937786a1de ......
	 orig commit -> eac56aa3bc8af3d9b9850345d0f2da9d83529134 ......
checking 8c125f391333a1e4fb1f760f5ed14657a1894bcf ......
	 orig commit -> 3b65ca50d24ce33cb92d88840e289135c92b40ed ......
checking 990bb6eb9ec21bbf5925c9def1db53958041ce3b ......
	 orig commit -> deb86999323661c019ef2740eb9d479d1e526b5c ......
checking 524a886aa8c98e6220e844afffa47439343db612 ......
	 orig commit -> 67a3ba25aa955198196f40b76b329b3ab9ad415a ......
checking f4f261974c6bf60f6b4cf3b6f1ea836504dc95b3 ......
	 orig commit -> 2e6522c565522a2e18409c315c49d78c8b74807b ......
		 2e6522c565522a2e18409c315c49d78c8b74807b has problem. Fixes commit -> ec897569ad7dbc6d595873a487c3fac23f463f76
commit e4ea7c12229c5fec232120713abe74bd35164157
Author: James Hogan <jhogan@kernel.org>
Date:   Wed Jan 31 22:24:45 2018 +0000

    usb: Move USB_UHCI_BIG_ENDIAN_* out of USB_SUPPORT
    
    commit ec897569ad7dbc6d595873a487c3fac23f463f76 upstream.
    
    Move the Kconfig symbols USB_UHCI_BIG_ENDIAN_MMIO and
    USB_UHCI_BIG_ENDIAN_DESC out of drivers/usb/host/Kconfig, which is
    conditional upon USB && USB_SUPPORT, so that it can be freely selected
    by platform Kconfig symbols in architecture code.
    
    For example once the MIPS_GENERIC platform selects are fixed in commit
    2e6522c56552 ("MIPS: Fix typo BIG_ENDIAN to CPU_BIG_ENDIAN"), the MIPS
    32r6_defconfig warns like so:
    
    warning: (MIPS_GENERIC) selects USB_UHCI_BIG_ENDIAN_MMIO which has unmet direct dependencies (USB_SUPPORT && USB)
    warning: (MIPS_GENERIC) selects USB_UHCI_BIG_ENDIAN_DESC which has unmet direct dependencies (USB_SUPPORT && USB)
    
    Fixes: 2e6522c56552 ("MIPS: Fix typo BIG_ENDIAN to CPU_BIG_ENDIAN")
    Signed-off-by: James Hogan <jhogan@kernel.org>
    Cc: Corentin Labbe <clabbe.montjoie@gmail.com>
    Cc: Ralf Baechle <ralf@linux-mips.org>
    Cc: Paul Burton <paul.burton@mips.com>
    Cc: linux-usb@vger.kernel.org
    Cc: linux-mips@linux-mips.org
    Acked-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Patchwork: https://patchwork.linux-mips.org/patch/18559/
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 1f21cd46cacae0fe7429d27c8781370317fe4a67 ......
	 orig commit -> 10a0cd6e4932b5078215b1ec2c896597eec0eff9 ......
checking 568c61facce6b0bddbfa04ec634b34904c6e2f1c ......
	 orig commit -> af27d9403f5b80685b79c88425086edccecaf711 ......
checking ef7fd28b1137c4023a5fc9fc0497a92838d81910 ......
	 orig commit -> 9f0372488cc9243018a812e8cfbf27de650b187b ......
checking 2e38988253c165a8b81d3ceea55fb68cb2d19e1c ......
	 orig commit -> 06f29cc81f0350261f59643a505010531130eea0 ......
checking 4d4d103a1b7e2990bcdbf83a24a83b3e351b6838 ......
	 orig commit -> abbc3f9395c76d554a9ed27d4b1ebfb5d9b0e4ca ......
checking 879bcbe0913fb6f938157af821d10f48235c166c ......
	 orig commit -> f69120ce6c024aa634a8fc25787205e42f0ccbe6 ......
checking 598b21708ec09ad33cd66d162d2fea2dd66d9f64 ......
	 orig commit -> d6fa7588fd7a8def4c747c0c574ce85d453e3788 ......
checking e7cedb56ae9a1c00b76df98d2adebb6208d2b71e ......
	 orig commit -> 2572cf57d75a7f91835d9a38771e9e76d575d122 ......
		 2572cf57d75a7f91835d9a38771e9e76d575d122 has problem. Fixes commit -> 6082d9c9c94a408d7409b5f2e4e42ac9e8b16d0d
commit 71a9d1240a30504af52fdd48995a3c9ef2cc467c
Author: Israel Rukshin <israelr@mellanox.com>
Date:   Thu Apr 12 09:49:11 2018 +0000

    net/mlx5: Fix mlx5_get_vector_affinity function
    
    [ Upstream commit 6082d9c9c94a408d7409b5f2e4e42ac9e8b16d0d ]
    
    Adding the vector offset when calling to mlx5_vector2eqn() is wrong.
    This is because mlx5_vector2eqn() checks if EQ index is equal to vector number
    and the fact that the internal completion vectors that mlx5 allocates
    don't get an EQ index.
    
    The second problem here is that using effective_affinity_mask gives the same
    CPU for different vectors.
    This leads to unmapped queues when calling it from blk_mq_rdma_map_queues().
    This doesn't happen when using affinity_hint mask.
    
    Fixes: 2572cf57d75a ("mlx5: fix mlx5_get_vector_affinity to start from completion vector 0")
    Fixes: 05e0cc84e00c ("net/mlx5: Fix get vector affinity helper function")
    Signed-off-by: Israel Rukshin <israelr@mellanox.com>
    Reviewed-by: Max Gurtovoy <maxg@mellanox.com>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
checking 723cc3aeba9be034c7509860dbf445e1bd25467f ......
	 orig commit -> fe0e58048f005fdce315eb4d185e5c160be4ac01 ......
checking e8012ff8779378a650aab3d088239053bfbdc57f ......
	 orig commit -> 118032be389009b07ecb5a03ffe219a89d421def ......
checking a1341cac93fa9d54f49f5fedf7a577bfc7a7665c ......
	 orig commit -> bd9b902798ab14d19ca116b10bde581ddff8f905 ......
checking e96a219899740432662b58c60a93505ab3dced5c ......
	 orig commit -> 3876bbe27d04b848750d5310a37d6b76b593f648 ......
checking c3bdd547042fa2e71825d7cc5e871b558d4153e9 ......
	 orig commit -> 5b8b58063029f02da573120ef4dc9079822e3cda ......
checking a29adc04cb6d5ec4ac71c63ceeb67efc011a4b65 ......
	 orig commit -> 3a61b527b4e1f285d21b6e9e623dc45cf8bb391f ......
checking 808700475218f382591313acabd4812c30ec7fa3 ......
	 orig commit -> 239b5f64e12b1f09f506c164dff0374924782979 ......
checking 254d48c8cc3b1f478f2c75349930da6e12abdd39 ......
	 orig commit -> 16e574d762ac5512eb922ac0ac5eed360b7db9d8 ......
checking e4a6d687e5d9e603f7188ca2ee88040c5fdd03dd ......
	 orig commit -> 24b8ef699e8221d2b7f813adaab13eec053e1507 ......
	 orig commit -> b8e2b0199cc377617dc238f5106352c06dcd3fa2 ......
		 b8e2b0199cc377617dc238f5106352c06dcd3fa2 has problem. Fixes commit -> 24b8ef699e8221d2b7f813adaab13eec053e1507
745fd50f3b044db6a3922e1718306555613164b0
commit 5c9beaf3aca7ae80cf8b54b1abecf43082416f52
Author: Daniel Vetter <daniel.vetter@ffwll.ch>
Date:   Wed Jan 31 12:04:50 2018 +0100

    drm/cirrus: Load lut in crtc_commit
    
    commit 745fd50f3b044db6a3922e1718306555613164b0 upstream.
    
    In the past the ast driver relied upon the fbdev emulation helpers to
    call ->load_lut at boot-up. But since
    
    commit b8e2b0199cc377617dc238f5106352c06dcd3fa2
    Author: Peter Rosin <peda@axentia.se>
    Date:   Tue Jul 4 12:36:57 2017 +0200
    
    drm/fb-helper: factor out pseudo-palette
    
    that's cleaned up and drivers are expected to boot into a consistent
    lut state. This patch fixes that.
    
    Fixes: b8e2b0199cc3 ("drm/fb-helper: factor out pseudo-palette")
    Cc: Peter Rosin <peda@axenita.se>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Cc: <stable@vger.kernel.org> # v4.14+
    References: https://bugzilla.kernel.org/show_bug.cgi?id=198123
    Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20180131110450.22153-1-daniel.vetter@ffwll.ch
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 5c9beaf3aca7ae80cf8b54b1abecf43082416f52
Author: Daniel Vetter <daniel.vetter@ffwll.ch>
Date:   Wed Jan 31 12:04:50 2018 +0100

    drm/cirrus: Load lut in crtc_commit
    
    commit 745fd50f3b044db6a3922e1718306555613164b0 upstream.
    
    In the past the ast driver relied upon the fbdev emulation helpers to
    call ->load_lut at boot-up. But since
    
    commit b8e2b0199cc377617dc238f5106352c06dcd3fa2
    Author: Peter Rosin <peda@axentia.se>
    Date:   Tue Jul 4 12:36:57 2017 +0200
    
    drm/fb-helper: factor out pseudo-palette
    
    that's cleaned up and drivers are expected to boot into a consistent
    lut state. This patch fixes that.
    
    Fixes: b8e2b0199cc3 ("drm/fb-helper: factor out pseudo-palette")
    Cc: Peter Rosin <peda@axenita.se>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Cc: <stable@vger.kernel.org> # v4.14+
    References: https://bugzilla.kernel.org/show_bug.cgi?id=198123
    Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
    Link: http://patchwork.freedesktop.org/patch/msgid/20180131110450.22153-1-daniel.vetter@ffwll.ch
    Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e4a6d687e5d9e603f7188ca2ee88040c5fdd03dd
Author: Daniel Vetter <daniel.vetter@ffwll.ch>
Date:   Thu Jan 18 16:40:16 2018 +0100

    drm/ast: Load lut in crtc_commit
    
    commit 24b8ef699e8221d2b7f813adaab13eec053e1507 upstream.
    
    In the past the ast driver relied upon the fbdev emulation helpers to
    call ->load_lut at boot-up. But since
    
    commit b8e2b0199cc377617dc238f5106352c06dcd3fa2
    Author: Peter Rosin <peda@axentia.se>
    Date:   Tue Jul 4 12:36:57 2017 +0200
    
        drm/fb-helper: factor out pseudo-palette
    
    that's cleaned up and drivers are expected to boot into a consistent
    lut state. This patch fixes that.
    
    Fixes: b8e2b0199cc3 ("drm/fb-helper: factor out pseudo-palette")
    Cc: Peter Rosin <peda@axenita.se>
    Cc: Daniel Vetter <daniel.vetter@ffwll.ch>
    Cc: <stable@vger.kernel.org> # v4.14+
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=198123
    Cc: Bill Fraser <bill.fraser@gmail.com>
    Reported-and-Tested-by: Bill Fraser <bill.fraser@gmail.com>
    Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
    Signed-off-by: Dave Airlie <airlied@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking dc2b0e41fc5e6d11fe4539317e57cf84c67cd18d ......
	 orig commit -> adab595d16abe48e9c097f000bf8921d35b28fb7 ......
checking b51521c9a191083033d3d8d7174e41d33b71a9bf ......
	 orig commit -> 16c6db3688734b27487a42d0c2a1062d0b2bad03 ......
checking 15cdc016f109e2b8b7ede8c68c413c9b97c09fa8 ......
	 orig commit -> 95244db2d3f743f37e69446a2807dd1a42750542 ......
checking f02c3f7f6d30fb7d0f245594c7d4a033763baa67 ......
	 orig commit -> fd5002d6a3c602664b07668a24df4ef7a43bf078 ......
checking 6c0398cfebf5d3f6d5ebc6924a3faf26a12935f4 ......
	 orig commit -> e48657573481a5dff7cfdc3d57005c80aa816500 ......
checking 231d0c70be748bba8982b6bda3daa613bf5c8a29 ......
	 orig commit -> 24dbc6000f4b9b0ef5a9daecb161f1907733765a ......
checking 7d7ebee6ce113fff252f1b923fbbbad83b1221b8 ......
	 orig commit -> 9de29eac8d2189424d81c0d840cd0469aa3d41c8 ......
checking 325cbb04dc61692ba01445c34fd551ad91df9e6d ......
	 orig commit -> b399151cb48db30ad1e0e93dd40d68c6d007b637 ......
checking 73f231c7ee696cdc53ee0922e6d3bf0480a5ae90 ......
	 orig commit -> 961888b1d76d84efc66a8f5604b06ac12ac2f978 ......
checking 208beef6d8f223a0cc57e2fcecc9ca28fc778f50 ......
	 orig commit -> 1299ef1d8870d2d9f09a5aadf2f8b2c887c2d033 ......
checking d6d0c0a618a15ba4dadd7ad6131a814359a53973 ......
	 orig commit -> f335195adf043168ee69d78ea72ac3e30f0c57ce ......
checking f369f1486116b0f3e9630a2481addde6854df541 ......
	 orig commit -> 4675ff05de2d76d167336b368bd07f3fef6ed5a6 ......
checking b9870f85817ebb331d7496d50a0b99088e240e20 ......
	 orig commit -> d8be75663cec0069b85f80191abd2682ce4a512f ......
checking ae63fd26b2d81eaaf3cf35693dc01c0148bd7a9b ......
	 orig commit -> 75f296d93bcebcfe375884ddac79e30263a31766 ......
checking 2abfcdf8e77d3719aa1d37b1f9de800fa596eda3 ......
	 orig commit -> 4950276672fce5c241857540f8561c440663673d ......
checking 1fed58f610b57c1190862819eba6f7bc5396b08d ......
	 orig commit -> ea00f301285ea2f07393678cd2b6057878320c9d ......
checking 8b4cdbbb29d4eb34f02d5e1419789b53c3cbb930 ......
	 orig commit -> 8fa80c503b484ddc1abbd10c7cb2ab81f3824a50 ......
checking 9d4cb4dc7a110ef253e99808b66b45c726ba5596 ......
	 orig commit -> be3233fbfcb8f5acb6e3bcd0895c3ef9e100d470 ......
checking 41d315482500e9612d1906b7a057fbe9c4b6c676 ......
	 orig commit -> 3b3a371cc9bc980429baabe0a8e5f307f3d1f463 ......
checking 4e0067c22d6b38a7b882e560b3db4c103166575e ......
	 orig commit -> 2b5db66862b95532cb6cca8165ae6eb73633cf85 ......
checking 842a0d95ef16d8e3f85cd5316efc8c25934ff3ce ......
	 orig commit -> fe24e27128252c230a34a6c628da2bf1676781ea ......
checking 410d273ecc8ed1f30ef0d06acb2d22ffa29cd732 ......
	 orig commit -> 9279ddf23ce78ff2676e8e8e19fec0f022c26d04 ......
checking 8520ea2a043842b3b52d95210ee774ed16748ef5 ......
	 orig commit -> 4105c69703cdeba76f384b901712c9397b04e9c2 ......
checking cf4db6342da4c433b814ccdad0461e1ca7477695 ......
	 orig commit -> 2cbc0d66de0480449c75636f55697c7ff3af61fc ......
checking e6eced764e1a18665212c349f100188a337d8fa8 ......
	 orig commit -> ce676638fe7b284132a7d7d5e7e7ad81bab9947e ......
checking 3eb95d5187a3df8c0aa1d5f531a6b9f567fcd9a7 ......
	 orig commit -> d8e92de8ef952bed88c56c7a44c02d8dcae0984e ......
checking 301e6fe0915c8b2eab4da812de4f16c583e5b113 ......
	 orig commit -> 198ee8e17502da2634f7366395db1d77630e0219 ......
checking 5cf7b883bcbaca7b85002770915e39eb6d510309 ......
	 orig commit -> b498c261107461d5c42140dfddd05df83d8ca078 ......
checking bdcf05c64a64743f512f12b17d4f9d8b14d2ad31 ......
	 orig commit -> b3ccefaed922529e6a67de7b30af5aa38c76ace9 ......
checking a816dd2fa2dcbde206bc67ebbdf8bbf75a54936c ......
	 orig commit -> 92816f571af81e9a71cc6f3dc8ce1e2fcdf7b6b8 ......
checking de66c3a3b0a6403702d6d6ead20ccd38bae615d7 ......
	 orig commit -> dde3036d62ba3375840b10ab9ec0d568fd773b07 ......
checking bd25388691c041903c084c68dc7da0fc45265d98 ......
	 orig commit -> 30907fd13bb593202574bb20af58d67c70a1ee14 ......
checking 3ce4863a44ff4e7e8d48d480853eea79cfd27bf6 ......
	 orig commit -> 3f01daecd545e818098d84fd1ad43e19a508d705 ......
checking 47d9c905ae7af1c16b58a41be627a74027f5b601 ......
	 orig commit -> f7bafa2b05ef25eda1d9179fd930b0330cf2b7d1 ......
checking bb68735527648cc3439bcacab5e6a30ab8219c46 ......
	 orig commit -> 502af0d70843c2a9405d7ba1f79b4b0305aaf5f5 ......
checking 51209eec238ffd1b4edec999a024159bbae51a3d ......
	 orig commit -> 2e3f0098bc45f710a2f4cbcc94b80a1fae7a99a1 ......
checking d10d0bb86d974c41ccbbf1f22044e700597a84d0 ......
	 orig commit -> 3ac6d8c787b835b997eb23e43e09aa0895ef7d58 ......
		 3ac6d8c787b835b997eb23e43e09aa0895ef7d58 has problem. Fixes commit -> b3681dd548d06deb2e1573890829dff4b15abf46
commit c1a29c2d00c656fcc4abfeec5f4f92762e3c7437
Author: Andy Lutomirski <luto@kernel.org>
Date:   Sun Jul 22 11:05:09 2018 -0700

    x86/entry/64: Remove %ebx handling from error_entry/exit
    
    commit b3681dd548d06deb2e1573890829dff4b15abf46 upstream.
    
    error_entry and error_exit communicate the user vs. kernel status of
    the frame using %ebx.  This is unnecessary -- the information is in
    regs->cs.  Just use regs->cs.
    
    This makes error_entry simpler and makes error_exit more robust.
    
    It also fixes a nasty bug.  Before all the Spectre nonsense, the
    xen_failsafe_callback entry point returned like this:
    
            ALLOC_PT_GPREGS_ON_STACK
            SAVE_C_REGS
            SAVE_EXTRA_REGS
            ENCODE_FRAME_POINTER
            jmp     error_exit
    
    And it did not go through error_entry.  This was bogus: RBX
    contained garbage, and error_exit expected a flag in RBX.
    
    Fortunately, it generally contained *nonzero* garbage, so the
    correct code path was used.  As part of the Spectre fixes, code was
    added to clear RBX to mitigate certain speculation attacks.  Now,
    depending on kernel configuration, RBX got zeroed and, when running
    some Wine workloads, the kernel crashes.  This was introduced by:
    
        commit 3ac6d8c787b8 ("x86/entry/64: Clear registers for exceptions/interrupts, to reduce speculation attack surface")
    
    With this patch applied, RBX is no longer needed as a flag, and the
    problem goes away.
    
    I suspect that malicious userspace could use this bug to crash the
    kernel even without the offending patch applied, though.
    
    [ Historical note: I wrote this patch as a cleanup before I was aware
      of the bug it fixed. ]
    
    [ Note to stable maintainers: this should probably get applied to all
      kernels.  If you're nervous about that, a more conservative fix to
      add xorl %ebx,%ebx; incl %ebx before the jump to error_exit should
      also fix the problem. ]
    
    Reported-and-tested-by: M. Vefa Bicakci <m.v.b@runbox.com>
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Dominik Brodowski <linux@dominikbrodowski.net>
    Cc: Greg KH <gregkh@linuxfoundation.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Cc: Juergen Gross <jgross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: stable@vger.kernel.org
    Cc: xen-devel@lists.xenproject.org
    Fixes: 3ac6d8c787b8 ("x86/entry/64: Clear registers for exceptions/interrupts, to reduce speculation attack surface")
    Link: http://lkml.kernel.org/r/b5010a090d3586b2d6e06c7ad3ec5542d1241c45.1532282627.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking e578fedba81e72e195fe71f893828d4597714db5 ......
	 orig commit -> d7212cfb05ba802bea4dd6c90d61cfe6366ea224 ......
checking c59cce7943dff0fbafcaa4e71149ee1da879d03f ......
	 orig commit -> 433986c2c265d106d6a8e88006e0131fefc92b7b ......
checking 2efd067aa4ef25386d4abbe2fe9b2c7f22cd9302 ......
	 orig commit -> 21e433bdb95bdf3aa48226fd3d33af608437f293 ......
checking a15bdf6579b23f62bb0130941158dd2f9b94f079 ......
	 orig commit -> 3712caeb14dcb33fb4d5114f14c0beef10aca101 ......
checking 07a3a99ed7f99d207328fae0da73c83be0799722 ......
	 orig commit -> 206587a9fb764d71f035dc7f6d3b6488f5d5b304 ......
checking 474bd0b82e24e8b928910aba876c20c49098ae6d ......
	 orig commit -> 928a4c39484281f8ca366f53a1db79330d058401 ......
checking bdc69a2ffa0105c1e736fbe4bfaa0b53bd3e915f ......
	 orig commit -> f208820a321f9b23d77d7eed89945d862d62a3ed ......
checking b7451cb6159a573736cf674e586c75daabd62ae5 ......
	 orig commit -> d37fc6d360a404b208547ba112e7dabb6533c7fc ......
checking d5a1b559235a38d527e8e363a325705fa0325602 ......
	 orig commit -> 1751342095f0d2b36fa8114d8e12c5688c455ac4 ......
checking 372ed448263dcc733f4ef3d24d704d2f016d734c ......
	 orig commit -> 14b1fcc62043729d12e8ae00f8297ab2ffe9fa91 ......
checking b973685e70c3b418ad46a03d6a9c81554c5c4ba2 ......
	 orig commit -> 4dd5f8a99e791a8c6500e3592f3ce81ae7edcde1 ......
checking 14d87b710338145e46940d0f751c5b7dd5b4c38f ......
	 orig commit -> 2e7d1d61ea6c0f1c4da5eb82cafac750d55637a7 ......
checking b3d33c5f296b36a05e24828f96c8ea5e02a15b06 ......
	 orig commit -> dd78c832ffaf86eb6434e56de4bc3bc31f03f771 ......
checking fff8ad7c18a238a32a56056980fccd40ed8cce83 ......
	 orig commit -> d9afaaa4ff7af8b87d4a205e48cb8a6f666d7f01 ......
checking 045e5161abfcfefce5b2777788e5913d85bb5c6f ......
	 orig commit -> df5d45aa08f848b79caf395211b222790534ccc7 ......
checking ec35f83de1c80e4decdbda0d61cd1f8924ae606f ......
	 orig commit -> 6b8cf5cc9965673951f1ab3f0e3cf23d06e3e2ee ......
checking 2bc19b518cb25150572ae4fe34ea6d623d733e2e ......
	 orig commit -> 8e1eb3fa009aa7c0b944b3c8b26b07de0efb3200 ......
checking 43d38b079ca7466a9eebf2936584e091f8c20349 ......
	 orig commit -> f859422075165e32c00c8d75d63f300015cc07ae ......
		 f859422075165e32c00c8d75d63f300015cc07ae has problem. Fixes commit -> d7212cfb05ba802bea4dd6c90d61cfe6366ea224
commit e578fedba81e72e195fe71f893828d4597714db5
Author: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
Date:   Mon Feb 12 11:34:22 2018 +0100

    PM: cpuidle: Fix cpuidle_poll_state_init() prototype
    
    commit d7212cfb05ba802bea4dd6c90d61cfe6366ea224 upstream.
    
    Commit f85942207516 (x86: PM: Make APM idle driver initialize polling
    state) made apm_init() call cpuidle_poll_state_init(), but that only
    is defined for CONFIG_CPU_IDLE set, so make the empty stub of it
    available for CONFIG_CPU_IDLE unset too to fix the resulting build
    issue.
    
    Fixes: f85942207516 (x86: PM: Make APM idle driver initialize polling state)
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 41fd295d90a7d8518f3d3d705884fb05df9596f0 ......
	 orig commit -> 4f277295e54c5b7340e48efea3fc5cc21a2872b7 ......
checking 04f048fad32e191d48c1a260d6aa74e27cfe846e ......
	 orig commit -> 5bf30316991d5bcda046343ee77d823cf16fdd03 ......
checking 0fe1e5ec1c27115afdaf245cc1a8b42765448381 ......
	 orig commit -> 33aa69ed8aacd92dea12671e52eb3ca6ac2d7a49 ......
checking ba86431b7b588d887aca002596a42890edee9bd0 ......
	 orig commit -> 41693fd5237397d3c61b311af0fda1f6f39297c2 ......
checking cc2759b7bb7c55a4bed674a8223c89a8b88fb3d7 ......
	 orig commit -> 0890540e21cf1156b4cf960a4c1c734db4e816f9 ......
checking ce6ec5b8dc5a15b830022dd6ee5a040ead0debb9 ......
	 orig commit -> f8975cb1b8a36d0839b6365235778dd9df1d04ca ......
checking 349d03cb5378e97e6bfd4fed5c78d3bab115b36e ......
	 orig commit -> cdd10409914184c7eee5ae3e11beb890c9c16c61 ......
checking b1637c1236d0e0240277b616f94882022cd2a55e ......
	 orig commit -> 6ffb5b4f248fe53e0361b8cbc2a523b432566442 ......
checking cbcc2ff13af5664804f0c2622aff9159f79f249f ......
	 orig commit -> b96a696fb2a8dd1ee4e6cfee48dcac270fc53287 ......
checking be1965486122417edcd95893e8414902696e8e11 ......
	 orig commit -> e8bfa0422469cdfc86be3f525f621b1d44d2481b ......
checking 9be4b2f6d024c89affe63360475fba9b167d7230 ......
	 orig commit -> 7ac1f59c09a61e6af6622df6809e003b0af07f3d ......
checking 34d58f7ccb65c9a2d2c9221b282e556e08e5a801 ......
	 orig commit -> ca32e0c4bf9ca4b87089c5a5ce945e5f2ec890da ......
checking bd420093636759d081bb31b343807efc5bbc58d3 ......
	 orig commit -> 566bd8902e7fa20bd412ed753e09e89c1c96939c ......
checking 27f97375fcb86750cdf82a65dab8174bb991c238 ......
	 orig commit -> 6dd0d2d22aa363fec075cb2577ba273ac8462e94 ......
checking f25dfc9359cc5e173a5b94e407c6417f5889c9c6 ......
	 orig commit -> 5bffee867df7494ecd32c1e6ec4e8fc934c521b7 ......
checking 40be210c830e80642ce5f4e3d726864ec22d5f50 ......
	 orig commit -> f23ab3efb1b30cc5c5ef5ae4ef294ed467f30675 ......
checking 3b09911d3beb326a117bfb05c717c3021e5458ca ......
	 orig commit -> 8e036c8d30a2cd9d8fc7442fbf6824e0a3e986e7 ......
checking 892674b5058a2b15d35d1185f5d09d8f4c257a7e ......
	 orig commit -> 62e984ddfd6b056d399e24113f5e6a7145e579d8 ......
checking 4386f223b41868197080bd74882c2d31aca92a1a ......
	 orig commit -> 1d9a090783bef19fe8cdec878620d22f05191316 ......
		 1d9a090783bef19fe8cdec878620d22f05191316 has problem. Fixes commit -> c1e150ceb61e4a585bad156da15c33bfe89f5858
commit aa2a0c23c9b7e6fb17db4c77cbe0967512f5d274
Author: Corentin Labbe <clabbe@baylibre.com>
Date:   Wed Feb 14 12:17:47 2018 +0000

    powerpc/pseries: Add empty update_numa_cpu_lookup_table() for NUMA=n
    
    [ Upstream commit c1e150ceb61e4a585bad156da15c33bfe89f5858 ]
    
    When CONFIG_NUMA is not set, the build fails with:
    
      arch/powerpc/platforms/pseries/hotplug-cpu.c:335:4:
      error: déclaration implicite de la fonction « update_numa_cpu_lookup_table »
    
    So we have to add update_numa_cpu_lookup_table() as an empty function
    when CONFIG_NUMA is not set.
    
    Fixes: 1d9a090783be ("powerpc/numa: Invalidate numa_cpu_lookup_table on cpu remove")
    Signed-off-by: Corentin Labbe <clabbe@baylibre.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
checking 5b98d31481f9e216e6df6b31e5a959db259c055e ......
	 orig commit -> 8d81296cfcce89013a714feb8d25004a156f8181 ......
checking 2e7e8bd8f19550c56ebc56158f60626546b7c564 ......
	 orig commit -> ff26cc10aec128c3f86b5611fd5f59c71d49c0e3 ......
checking 1ec4c78e3444c317c724820f0f40324e65470654 ......
	 orig commit -> a64e7a79dd6030479caad603c8d78e6c9c14904f ......
checking 62def1d604a5473055b1cce23b55b7639302710a ......
	 orig commit -> d1bf2d30728f310f72296b54f0651ecdb09cbb12 ......
checking 37efa60e167036b3eaed20e70095bbdcb72a55ce ......
	 orig commit -> d0bc0c2a31c95002d37c3cc511ffdcab851b3256 ......
checking 8e56a935a4b751bc8cb5288480b23827f8d2564d ......
	 orig commit -> 3fa4680b860bf48b437d6a2c039789c4abe202ae ......
checking 75a3f11c7bad580dc5fbf4175f5dc39192f088d5 ......
	 orig commit -> bb3ffb7ad48a21e98a5c64eb21103a74fd9f03f6 ......
checking 571cb36fac2f62bfe5fe7fa488f0ea7271db9c2f ......
	 orig commit -> 65567e41219888feec72fee1de98ccf1efbbc16d ......
checking 7b4e8a46d4cf2592910275dee6036ceb1d351975 ......
	 orig commit -> 6f301e06de4cf9ab7303f5acd43e64fcd4aa04be ......
checking 7dd2dbdd4606fc44da2cbb59fcd1c560c3f3fb94 ......
	 orig commit -> 4c1baad223906943b595a887305f2e8124821dad ......
checking 9c2e7a048d19dce8b82e0dc169feb1721d856d37 ......
	 orig commit -> 912ec316686df352028afb6efec59e47a958a24d ......
checking 1d6eb826e65d8b92d1f8cb081b33bb0786a5a4ab ......
	 orig commit -> 2ff124d597c2df8696169ce0006fc974c49a4569 ......
checking d40ad865704b0a3547ca199acba102020ebb947e ......
	 orig commit -> cd2a6e7d384b043d5d029e39663061cebc949385 ......
checking 18c0ee900c8d93ae48a99cc1f46d372897b8e9a6 ......
	 orig commit -> 02ee9da347873699603d9ce0112a80b5dd69dea1 ......
checking ade57e9031fac0c972c488acfce58e9a50e2c8dc ......
	 orig commit -> 852f6927594d0d3e8632c889b2ab38cbc46476ad ......
checking 5a4255467cd8ce9e2c5f9a25b50f2fe692cf1bb8 ......
	 orig commit -> 87b3524cb5058fdc7c2afdb92bdb2e079661ddc4 ......
checking 7a748f0bb2e4aca2c18223585523eb07199a4715 ......
	 orig commit -> f23a5350e43c810ca36b26d4ed4ecd9a08686f47 ......
checking e99306bb4f6741d5482f924585975db5a6934953 ......
	 orig commit -> dc2db1dc5fb9ab3a43b305c2720fee5278dbee2a ......
checking b6f2efb86440af16ecdf08e23924a4dc52c1bd4a ......
	 orig commit -> 68e76e034b6b1c1ce2eece1ab8ae4008e14be470 ......
