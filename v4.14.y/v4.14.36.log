Check from v4.14.36 to v4.14.37
Commit count: 182
checking 753be7e83bb80128b4a2aa24214c98466905827c ......
checking f606893fbbc64d68510c5cc3e64e39971e5f26e0 ......
	 orig commit -> 8cfd36a0b53aeb4ec21d81eb79706697b84dfc3d ......
		 8cfd36a0b53aeb4ec21d81eb79706697b84dfc3d has problem. Fixes commit -> 628980e5c8f038f730582c6ee50b7410741cd96e
checking 679833ea18221fe703ebf56213c1b1ca1731bad6 ......
	 orig commit -> 2c151b25441ae5c2da66472abd165af785c9ecd2 ......
	 orig commit -> 95e057e25892eaa48cad1e2d637b80d0f1a4fac5 ......
checking 75dceb6872b3526a5269a28553f9a35972d03bba ......
	 orig commit -> 75a4598209cbe45540baa316c3b51d9db222e96e ......
checking 01e71c218219fe40c620a53b2d37beafd95c4e14 ......
	 orig commit -> 78b562fbfa2cf0a9fcb23c3154756b690f4905c1 ......
checking 66038084560d12457f4dd9e5cfb1d7a7859f70a2 ......
	 orig commit -> 5af44ca53d019de47efe6dbc4003dd518e5197ed ......
checking 5bcf169444540cbb8646cb415087f5ec83f60432 ......
	 orig commit -> 9d5c12a7c08f67999772065afd50fb222072114e ......
checking 764f2162d97a498269c9b67607fe163692a79aa7 ......
	 orig commit -> 7d7d7e02111e9a4dc9d0658597f528f815d820fd ......
		 7d7d7e02111e9a4dc9d0658597f528f815d820fd has problem. Fixes commit -> 2035f3ff8eaa29cfb5c8e2160b0f6e85eeb21a95
3f1e53abff84cf40b1adb3455d480dd295bf42e8
commit f3731c960cbd9e0a13c26266397cd0568524f4fb
Author: Florian Westphal <fw@strlen.de>
Date:   Mon Jan 21 21:54:36 2019 +0100

    netfilter: ebtables: compat: un-break 32bit setsockopt when no rules are present
    
    [ Upstream commit 2035f3ff8eaa29cfb5c8e2160b0f6e85eeb21a95 ]
    
    Unlike ip(6)tables ebtables only counts user-defined chains.
    
    The effect is that a 32bit ebtables binary on a 64bit kernel can do
    'ebtables -N FOO' only after adding at least one rule, else the request
    fails with -EINVAL.
    
    This is a similar fix as done in
    3f1e53abff84 ("netfilter: ebtables: don't attempt to allocate 0-sized compat array").
    
    Fixes: 7d7d7e02111e9 ("netfilter: compat: reject huge allocation requests")
    Reported-by: Francesco Ruggeri <fruggeri@arista.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 725f5ae1a6953143101c4e4b963bb5221aa5c466
Author: Florian Westphal <fw@strlen.de>
Date:   Wed Apr 4 21:13:30 2018 +0200

    netfilter: ebtables: don't attempt to allocate 0-sized compat array
    
    commit 3f1e53abff84cf40b1adb3455d480dd295bf42e8 upstream.
    
    Dmitry reports 32bit ebtables on 64bit kernel got broken by
    a recent change that returns -EINVAL when ruleset has no entries.
    
    ebtables however only counts user-defined chains, so for the
    initial table nentries will be 0.
    
    Don't try to allocate the compat array in this case, as no user
    defined rules exist no rule will need 64bit translation.
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Fixes: 7d7d7e02111e9 ("netfilter: compat: reject huge allocation requests")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit f3731c960cbd9e0a13c26266397cd0568524f4fb
Author: Florian Westphal <fw@strlen.de>
Date:   Mon Jan 21 21:54:36 2019 +0100

    netfilter: ebtables: compat: un-break 32bit setsockopt when no rules are present
    
    [ Upstream commit 2035f3ff8eaa29cfb5c8e2160b0f6e85eeb21a95 ]
    
    Unlike ip(6)tables ebtables only counts user-defined chains.
    
    The effect is that a 32bit ebtables binary on a 64bit kernel can do
    'ebtables -N FOO' only after adding at least one rule, else the request
    fails with -EINVAL.
    
    This is a similar fix as done in
    3f1e53abff84 ("netfilter: ebtables: don't attempt to allocate 0-sized compat array").
    
    Fixes: 7d7d7e02111e9 ("netfilter: compat: reject huge allocation requests")
    Reported-by: Francesco Ruggeri <fruggeri@arista.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 725f5ae1a6953143101c4e4b963bb5221aa5c466
Author: Florian Westphal <fw@strlen.de>
Date:   Wed Apr 4 21:13:30 2018 +0200

    netfilter: ebtables: don't attempt to allocate 0-sized compat array
    
    commit 3f1e53abff84cf40b1adb3455d480dd295bf42e8 upstream.
    
    Dmitry reports 32bit ebtables on 64bit kernel got broken by
    a recent change that returns -EINVAL when ruleset has no entries.
    
    ebtables however only counts user-defined chains, so for the
    initial table nentries will be 0.
    
    Don't try to allocate the compat array in this case, as no user
    defined rules exist no rule will need 64bit translation.
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Fixes: 7d7d7e02111e9 ("netfilter: compat: reject huge allocation requests")
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 8d92d53365395c97cf819a10cda4693f792cd5b6 ......
	 orig commit -> 9782a11efc072faaf91d4aa60e9d23553f918029 ......
checking 82b68ecde5d056588799f0d38e675bbb81fe3b46 ......
	 orig commit -> c84ca954ac9fa67a6ce27f91f01e4451c74fd8f6 ......
checking fab0b3ce67a54f45848ee5d6023ef9a42153a2c9 ......
	 orig commit -> 19926968ea86a286aa6fbea16ee3f2e7442f10f0 ......
checking 89f3232c394e8946905b3c3b57ed593872003d60 ......
	 orig commit -> bd03143007eb9b03a7f2316c677780561b68ba2a ......
checking 76cd54fa70ce7c02e81bc4c3a06de32cdaa84b29 ......
	 orig commit -> d3b9e8ad425cfd5b9116732e057f1b48e4d3bcb8 ......
checking de16dfcc510d8ec2981e4ed97e51d17c043cdaec ......
	 orig commit -> b6dd4d83dc2f78cebc9a7e6e7e4bc2be4d29b94d ......
checking 4032cd4fd3aec5d76d5ad9451f6d31ff6003c7cf ......
	 orig commit -> d207af2eab3f8668b95ad02b21930481c42806fd ......
checking c834b955d3f00789b2c95a6e642a058f12ae9096 ......
	 orig commit -> 95a2562590c2f64a0398183f978d5cf3db6d0284 ......
checking 2d8d8d23c485d78b00c6a44629b711987ac1234b ......
	 orig commit -> 7a92453620d42c3a5fea94a864dc6aa04c262b93 ......
checking 74cd9414788ca5de87b2df2103d39a7705f202f1 ......
	 orig commit -> e7bde88cdb4f0e432398a7d29ca2a15d2c18952a ......
checking c74e004c62739d6a6a002730d57fe851ff42f346 ......
	 orig commit -> 11dc13224c975efcec96647a4768a6f1bb7a19a8 ......
checking 5350cb0111d23ff50b66bcdd9ee5fdf3d64a9f01 ......
	 orig commit -> c25d99d20ba69824a1e2cc118e04b877cd427afc ......
checking 288b373264c51f490676a860c705ec70e4d83a67 ......
	 orig commit -> fc5c2f4a55a2c258e12013cdf287cf266dbcd2a7 ......
		 fc5c2f4a55a2c258e12013cdf287cf266dbcd2a7 has problem. Fixes commit -> f39356261c265a0689d7ee568132d516e8b6cecc
checking f4d6e4598a29f6f7df6937d943c01e1eeb9ee871 ......
	 orig commit -> 595dd46ebfc10be041a365d0a3fa99df50b6ba73 ......
checking c064b7c1d203cd5d781c316ac9c8049ba772684f ......
	 orig commit -> 69728051f5bf15efaf6edfbcfe1b5a49a2437918 ......
checking afa0ce071488154e28d60b510dd0a3c3d86f7992 ......
	 orig commit -> 3cd091a773936c54344a519f7ee1379ccb620bee ......
checking 85bd5c686fe9e60557b5d8610110c49381ed4a07 ......
	 orig commit -> 941ff6f11c020913f5cddf543a9ec63475d7c082 ......
		 941ff6f11c020913f5cddf543a9ec63475d7c082 has problem. Fixes commit -> 262f9d811c7608f1e74258ceecfe1fa213bdf912
commit 9c9cd35cb3e63f71af7c95a918c1586b21f5c3ee
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Oct 5 19:38:46 2018 -0700

    bpf: do not blindly change rlimit in reuseport net selftest
    
    [ Upstream commit 262f9d811c7608f1e74258ceecfe1fa213bdf912 ]
    
    If the current process has unlimited RLIMIT_MEMLOCK,
    we should should leave it as is.
    
    Fixes: 941ff6f11c02 ("bpf: fix rlimit in reuseport net selftest")
    Signed-off-by: John Sperbeck <jsperbeck@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking ee5fe4bdcf2aea19ee238d6c3844dfe3c7c77e8b ......
	 orig commit -> 1b84ca187510f60f00f4e15255043ce19bb30410 ......
checking 26bebd5a7865376d5944b0206d7b271ab76f116b ......
	 orig commit -> 0afa6b4412988019db14c6bfb8c6cbdf120ca9ad ......
checking f58e4ecb9b2e75b8a2a32b990241f16363fd3673 ......
	 orig commit -> 05f2bb0313a2855e491dadfc8319b7da261d7074 ......
checking d6b00490a04d2434088c87c3afe2e827bdaab61b ......
	 orig commit -> e3d91b0ca523d53158f435a3e13df7f0cb360ea2 ......
checking 327aac8ccbc54a0a320428664385b1d8bd8fd033 ......
	 orig commit -> e728789c52afccc1275cba1dd812f03abe16ea3c ......
checking 0b1fa241dd86820659cb477caa73e3c232d344e2 ......
	 orig commit -> 175e03101d36c3034f3c80038d4c28838351a7f2 ......
checking e781fff7b78ffd1ae7149e8f5ac7512dab32cfa5 ......
	 orig commit -> 8c2f826dc36314059ac146c78d3bf8056b626446 ......
checking c5ce9e5b57cc24142e38b6441c23e0e8bac4ef54 ......
	 orig commit -> 97fe22adf33f06519bfdf7dad33bcd562e366c8f ......
checking ae9c78af577f3741357851e6e98223d67f07d4a6 ......
	 orig commit -> 70f6bf2a3b7e40c3f802b0ea837762a8bc6c1430 ......
checking c4c9fd55899fd780ee010eda172fe574c65bf56e ......
	 orig commit -> 7f4fc93d4713394ee8f1cd44c238e046e11b4f15 ......
checking 4c8e0270dc7afb10d4e06be4adfd177db5cb3cb8 ......
	 orig commit -> 73ac105be390c1de42a2f21643c9778a5e002930 ......
checking 311e31419b7240151de0cf7aa3f2d972ee103a5c ......
	 orig commit -> 682811b3ce1a5a4e20d700939a9042f01dbc66c4 ......
checking f89edd17aff46a3970f302add6949700198dfd92 ......
	 orig commit -> 99361bbf26337186f02561109c17a4c4b1a7536a ......
checking 05921c492fdb6046e5a91a83dba3320701421902 ......
	 orig commit -> ade7db991b47ab3016a414468164f4966bd08202 ......
checking 4b95781cb6f37398e424e70e089e380f297693f5 ......
	 orig commit -> a3381e3a65cbaf612c8f584906c4dba27e84267c ......
checking 05e52e5bd103a335288415d5399cdb120a05a5e4 ......
	 orig commit -> ac7f1061c2c11bb8936b1b6a94cdb48de732f7a4 ......
checking 4ec317a41d80145de90bd320928da6916572b6f0 ......
	 orig commit -> 202fb4ef81e3ec765c23bd1e6746a5c25b797d0e ......
checking 693b9589c297e0b05359f62a6b8dc73289c0e3e4 ......
	 orig commit -> 2c0aa08631b86a4678dbc93b9caa5248014b4458 ......
checking a8e7a4e243747fdf64a459e0eb2e5091ffee9fe1 ......
	 orig commit -> 3d9e952697de89b53227f06d4241f275eb99cfc4 ......
		 3d9e952697de89b53227f06d4241f275eb99cfc4 has problem. Fixes commit -> ba6b8de423f8d0dee48d6030288ed81c03ddf9f0
commit 3c0cff34e91e4ea1fdf74df65db98ee455190dfa
Author: John Fastabend <john.fastabend@gmail.com>
Date:   Mon Apr 23 15:39:23 2018 -0700

    bpf: sockmap, map_release does not hold refcnt for pinned maps
    
    [ Upstream commit ba6b8de423f8d0dee48d6030288ed81c03ddf9f0 ]
    
    Relying on map_release hook to decrement the reference counts when a
    map is removed only works if the map is not being pinned. In the
    pinned case the ref is decremented immediately and the BPF programs
    released. After this BPF programs may not be in-use which is not
    what the user would expect.
    
    This patch moves the release logic into bpf_map_put_uref() and brings
    sockmap in-line with how a similar case is handled in prog array maps.
    
    Fixes: 3d9e952697de ("bpf: sockmap, fix leaking maps with attached but not detached progs")
    Signed-off-by: John Fastabend <john.fastabend@gmail.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
checking 05c062c3685e227a22c96c93e1149fcad383ecbf ......
	 orig commit -> 3ac7292a25db1c607a50752055a18aba32ac2176 ......
checking 70f3461c23ffb394676cb53c2eb1095208a52327 ......
	 orig commit -> f599c64fdf7d9c108e8717fb04bc41c680120da4 ......
		 f599c64fdf7d9c108e8717fb04bc41c680120da4 has problem. Fixes commit -> 2d408c0d4574b01b9ed45e02516888bf925e11a9
45c8184c1bed1ca8a7f02918552063a00b909bf5
cb257783c2927b73614b20f915a91ff78aa6f3e8
commit d29f27192a2d88d9255265b258abaeef1ee1726f
Author: Ross Lagerwall <ross.lagerwall@citrix.com>
Date:   Thu Jun 21 14:00:20 2018 +0100

    xen-netfront: Fix mismatched rtnl_unlock
    
    [ Upstream commit cb257783c2927b73614b20f915a91ff78aa6f3e8 ]
    
    Fixes: f599c64fdf7d ("xen-netfront: Fix race between device setup and open")
    Reported-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Ross Lagerwall <ross.lagerwall@citrix.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a0fcefb70022c7b39a873b16e36fca40eb354ec8
Author: Ross Lagerwall <ross.lagerwall@citrix.com>
Date:   Thu Jun 21 14:00:21 2018 +0100

    xen-netfront: Update features after registering netdev
    
    [ Upstream commit 45c8184c1bed1ca8a7f02918552063a00b909bf5 ]
    
    Update the features after calling register_netdev() otherwise the
    device features are not set up correctly and it not possible to change
    the MTU of the device. After this change, the features reported by
    ethtool match the device's features before the commit which introduced
    the issue and it is possible to change the device's MTU.
    
    Fixes: f599c64fdf7d ("xen-netfront: Fix race between device setup and open")
    Reported-by: Liam Shepherd <liam@dancer.es>
    Signed-off-by: Ross Lagerwall <ross.lagerwall@citrix.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 45ac2120e7c412a26afb1f2cbda1dd3b8390df21
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Fri Jul 20 18:33:59 2018 +0200

    xen-netfront: fix queue name setting
    
    [ Upstream commit 2d408c0d4574b01b9ed45e02516888bf925e11a9 ]
    
    Commit f599c64fdf7d ("xen-netfront: Fix race between device setup and
    open") changed the initialization order: xennet_create_queues() now
    happens before we do register_netdev() so using netdev->name in
    xennet_init_queue() is incorrect, we end up with the following in
    /proc/interrupts:
    
     60:        139          0   xen-dyn    -event     eth%d-q0-tx
     61:        265          0   xen-dyn    -event     eth%d-q0-rx
     62:        234          0   xen-dyn    -event     eth%d-q1-tx
     63:          1          0   xen-dyn    -event     eth%d-q1-rx
    
    and this looks ugly. Actually, using early netdev name (even when it's
    already set) is also not ideal: nowadays we tend to rename eth devices
    and queue name may end up not corresponding to the netdev name.
    
    Use nodename from xenbus device for queue naming: this can't change in VM's
    lifetime. Now /proc/interrupts looks like
    
     62:        202          0   xen-dyn    -event     device/vif/0-q0-tx
     63:        317          0   xen-dyn    -event     device/vif/0-q0-rx
     64:        262          0   xen-dyn    -event     device/vif/0-q1-tx
     65:         17          0   xen-dyn    -event     device/vif/0-q1-rx
    
    Fixes: f599c64fdf7d ("xen-netfront: Fix race between device setup and open")
    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Reviewed-by: Ross Lagerwall <ross.lagerwall@citrix.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit a0fcefb70022c7b39a873b16e36fca40eb354ec8
Author: Ross Lagerwall <ross.lagerwall@citrix.com>
Date:   Thu Jun 21 14:00:21 2018 +0100

    xen-netfront: Update features after registering netdev
    
    [ Upstream commit 45c8184c1bed1ca8a7f02918552063a00b909bf5 ]
    
    Update the features after calling register_netdev() otherwise the
    device features are not set up correctly and it not possible to change
    the MTU of the device. After this change, the features reported by
    ethtool match the device's features before the commit which introduced
    the issue and it is possible to change the device's MTU.
    
    Fixes: f599c64fdf7d ("xen-netfront: Fix race between device setup and open")
    Reported-by: Liam Shepherd <liam@dancer.es>
    Signed-off-by: Ross Lagerwall <ross.lagerwall@citrix.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit a5d247607a5684335b8bedef148694e2e15b0181
Author: Xiao Liang <xiliang@redhat.com>
Date:   Tue Aug 14 23:21:28 2018 +0800

    xen-netfront: fix warn message as irq device name has '/'
    
    [ Upstream commit 21f2706b20100bb3db378461ab9b8e2035309b5b ]
    
    There is a call trace generated after commit 2d408c0d4574b01b9ed45e02516888bf925e11a9(
    xen-netfront: fix queue name setting). There is no 'device/vif/xx-q0-tx' file found
    under /proc/irq/xx/.
    
    This patch only picks up device type and id as its name.
    
    With the patch, now /proc/interrupts looks like below and the warning message gone:
     70:         21          0          0          0   xen-dyn    -event     vif0-q0-tx
     71:         15          0          0          0   xen-dyn    -event     vif0-q0-rx
     72:         14          0          0          0   xen-dyn    -event     vif0-q1-tx
     73:         33          0          0          0   xen-dyn    -event     vif0-q1-rx
     74:         12          0          0          0   xen-dyn    -event     vif0-q2-tx
     75:         24          0          0          0   xen-dyn    -event     vif0-q2-rx
     76:         19          0          0          0   xen-dyn    -event     vif0-q3-tx
     77:         21          0          0          0   xen-dyn    -event     vif0-q3-rx
    
    Below is call trace information without this patch:
    
    name 'device/vif/0-q0-tx'
    WARNING: CPU: 2 PID: 37 at fs/proc/generic.c:174 __xlate_proc_name+0x85/0xa0
    RIP: 0010:__xlate_proc_name+0x85/0xa0
    RSP: 0018:ffffb85c40473c18 EFLAGS: 00010286
    RAX: 0000000000000000 RBX: 0000000000000006 RCX: 0000000000000006
    RDX: 0000000000000007 RSI: 0000000000000096 RDI: ffff984c7f516930
    RBP: ffffb85c40473cb8 R08: 000000000000002c R09: 0000000000000229
    R10: 0000000000000000 R11: 0000000000000001 R12: ffffb85c40473c98
    R13: ffffb85c40473cb8 R14: ffffb85c40473c50 R15: 0000000000000000
    FS:  0000000000000000(0000) GS:ffff984c7f500000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007f69b6899038 CR3: 000000001c20a006 CR4: 00000000001606e0
    Call Trace:
    __proc_create+0x45/0x230
    ? snprintf+0x49/0x60
    proc_mkdir_data+0x35/0x90
    register_handler_proc+0xef/0x110
    ? proc_register+0xfc/0x110
    ? proc_create_data+0x70/0xb0
    __setup_irq+0x39b/0x660
    ? request_threaded_irq+0xad/0x160
    request_threaded_irq+0xf5/0x160
    ? xennet_tx_buf_gc+0x1d0/0x1d0 [xen_netfront]
    bind_evtchn_to_irqhandler+0x3d/0x70
    ? xenbus_alloc_evtchn+0x41/0xa0
    netback_changed+0xa46/0xcda [xen_netfront]
    ? find_watch+0x40/0x40
    xenwatch_thread+0xc5/0x160
    ? finish_wait+0x80/0x80
    kthread+0x112/0x130
    ? kthread_create_worker_on_cpu+0x70/0x70
    ret_from_fork+0x35/0x40
    Code: 81 5c 00 48 85 c0 75 cc 5b 49 89 2e 31 c0 5d 4d 89 3c 24 41 5c 41 5d 41 5e 41 5f c3 4c 89 ee 48 c7 c7 40 4f 0e b4 e8 65 ea d8 ff <0f> 0b b8 fe ff ff ff 5b 5d 41 5c 41 5d 41 5e 41 5f c3 66 0f 1f
    ---[ end trace 650e5561b0caab3a ]---
    
    Signed-off-by: Xiao Liang <xiliang@redhat.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 45ac2120e7c412a26afb1f2cbda1dd3b8390df21
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Fri Jul 20 18:33:59 2018 +0200

    xen-netfront: fix queue name setting
    
    [ Upstream commit 2d408c0d4574b01b9ed45e02516888bf925e11a9 ]
    
    Commit f599c64fdf7d ("xen-netfront: Fix race between device setup and
    open") changed the initialization order: xennet_create_queues() now
    happens before we do register_netdev() so using netdev->name in
    xennet_init_queue() is incorrect, we end up with the following in
    /proc/interrupts:
    
     60:        139          0   xen-dyn    -event     eth%d-q0-tx
     61:        265          0   xen-dyn    -event     eth%d-q0-rx
     62:        234          0   xen-dyn    -event     eth%d-q1-tx
     63:          1          0   xen-dyn    -event     eth%d-q1-rx
    
    and this looks ugly. Actually, using early netdev name (even when it's
    already set) is also not ideal: nowadays we tend to rename eth devices
    and queue name may end up not corresponding to the netdev name.
    
    Use nodename from xenbus device for queue naming: this can't change in VM's
    lifetime. Now /proc/interrupts looks like
    
     62:        202          0   xen-dyn    -event     device/vif/0-q0-tx
     63:        317          0   xen-dyn    -event     device/vif/0-q0-rx
     64:        262          0   xen-dyn    -event     device/vif/0-q1-tx
     65:         17          0   xen-dyn    -event     device/vif/0-q1-rx
    
    Fixes: f599c64fdf7d ("xen-netfront: Fix race between device setup and open")
    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Reviewed-by: Ross Lagerwall <ross.lagerwall@citrix.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 2f79b5e52d46db124ad04c994ce0c2d43244de85 ......
	 orig commit -> 49c0ae80eb32426fa133246200628e529067c595 ......
checking b1f9f9fb3f99d8942991aa5976de73fd865937ec ......
	 orig commit -> 7bf8b16d1b60419c865e423b907a05f413745b3e ......
checking 76e3ea2f95632d23aa12e954940c69e32544330b ......
	 orig commit -> f290aa1ffa45ed7e37599840878b4dae68269ee1 ......
checking f938c2acc829689a29f3b1b2aa123285c31b2c67 ......
	 orig commit -> 0cde5b44a30f1daaef1c34e08191239dc63271c4 ......
checking 3e01c16d87511071679d3d3d14c0f8d37b856b52 ......
	 orig commit -> 09584b406742413ac4c8d7e030374d4daa045b69 ......
		 09584b406742413ac4c8d7e030374d4daa045b69 has problem. Fixes commit -> 52fda36d63bfc8c8e8ae5eda8eb5ac6f52cd67ed
commit 7d768c84ec311468d7fd61250700ef8b21f8cf6d
Author: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
Date:   Tue Mar 20 09:58:51 2018 -0300

    test_bpf: Fix testing with CONFIG_BPF_JIT_ALWAYS_ON=y on other arches
    
    [ Upstream commit 52fda36d63bfc8c8e8ae5eda8eb5ac6f52cd67ed ]
    
    Function bpf_fill_maxinsns11 is designed to not be able to be JITed on
    x86_64. So, it fails when CONFIG_BPF_JIT_ALWAYS_ON=y, and
    commit 09584b406742 ("bpf: fix selftests/bpf test_kmod.sh failure when
    CONFIG_BPF_JIT_ALWAYS_ON=y") makes sure that failure is detected on that
    case.
    
    However, it does not fail on other architectures, which have a different
    JIT compiler design. So, test_bpf has started to fail to load on those.
    
    After this fix, test_bpf loads fine on both x86_64 and ppc64el.
    
    Fixes: 09584b406742 ("bpf: fix selftests/bpf test_kmod.sh failure when CONFIG_BPF_JIT_ALWAYS_ON=y")
    Signed-off-by: Thadeu Lima de Souza Cascardo <cascardo@canonical.com>
    Reviewed-by: Yonghong Song <yhs@fb.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
checking 74abca65f1e43f747ee429441792be9394667944 ......
	 orig commit -> 63347db0affadcbccd5613116ea8431c70139b3e ......
checking f920e914801c57f6853a62bba081fd6f3b11aede ......
	 orig commit -> 54ddce7062242036402242242c07c60c0b505f84 ......
checking 51939996acde4bce855f70a32544aaf44f8e3f0a ......
	 orig commit -> ba1edb9a5125a617d612f98eead14b9b84e75c3a ......
checking 573cb560b4edd71a6b9dd41cdc39d27abb8dda30 ......
	 orig commit -> a7770ae194569e96a93c48aceb304edded9cc648 ......
checking ee06ed9ba5182bfdbc829f150b594c7f14a9d62f ......
	 orig commit -> ebfc15019cfa72496c674ffcb0b8ef10790dcddc ......
checking 423505471f5ed18ed88afe66592931f91245fce2 ......
	 orig commit -> 328008a72d38b5bde6491e463405c34a81a65d3e ......
checking 074372c8124cbd62a8edf8b979fa814b4e223ece ......
	 orig commit -> ea23d5e3bf340e413b8e05c13da233c99c64142b ......
checking 2cd5100363b794cdd26d878cbde0c12c33687e7d ......
	 orig commit -> 366b77ae43c5a3bf1a367f15ec8bc16e05035f14 ......
checking eb41efa1386582c00865a3dec5758cfbda6dbda8 ......
	 orig commit -> fe9748b7b41cee11f8db57fb8b20bc540a33102a ......
checking fd370b8e65e3364a8a4411656506ccfaf13b4599 ......
	 orig commit -> 87daac68f77a3e21a1113f816e6a7be0b38bdde8 ......
checking f63bb02694f08e94a50ae334d16b9908426655f7 ......
	 orig commit -> 1029361084d18cc270f64dfd39529fafa10cfe01 ......
checking 8f96d408a9547e2a814562796c6f7fac3e839332 ......
	 orig commit -> 2b1e7fe16124e86ee9242aeeee859c79a843e3a2 ......
checking 5ceae7690f0d0575c730663ffd67493c9fa4e992 ......
	 orig commit -> 82a979265638c505e12fbe7ba40980dc0901436d ......
checking 73027d80d67e151787603e65bf62bdbc4125877c ......
	 orig commit -> 445251d0f4d329aa061f323546cd6388a3bb7ab5 ......
		 445251d0f4d329aa061f323546cd6388a3bb7ab5 has problem. Fixes commit -> 2a5cf35cd6c56b2924bce103413ad3381bdc31fa
checking 6eddea4ba5ccd00875d6f07ea042f16335a854ba ......
	 orig commit -> 9382fe71c0058465e942a633869629929102843d ......
checking 3b1d9626fc58c133ae434368495a3b33c1b18ccd ......
	 orig commit -> a7ab400d6fe73d0119fdc234e9982a6f80faea9f ......
checking 1f9c87e251583942991c482d99c1797f1454be2a ......
	 orig commit -> 69d763fc6d3aee787a3e8c8c35092b4f4960fa5d ......
		 69d763fc6d3aee787a3e8c8c35092b4f4960fa5d has problem. Fixes commit -> 145e1a71e090575c74969e3daa8136d1e5b99fc8
commit b968dd7650c8075de1fb74569a736f1daaa4459c
Author: Hugh Dickins <hughd@google.com>
Date:   Fri Jun 1 16:50:50 2018 -0700

    mm: fix the NULL mapping case in __isolate_lru_page()
    
    commit 145e1a71e090575c74969e3daa8136d1e5b99fc8 upstream.
    
    George Boole would have noticed a slight error in 4.16 commit
    69d763fc6d3a ("mm: pin address_space before dereferencing it while
    isolating an LRU page").  Fix it, to match both the comment above it,
    and the original behaviour.
    
    Although anonymous pages are not marked PageDirty at first, we have an
    old habit of calling SetPageDirty when a page is removed from swap
    cache: so there's a category of ex-swap pages that are easily
    migratable, but were inadvertently excluded from compaction's async
    migration in 4.16.
    
    Link: http://lkml.kernel.org/r/alpine.LSU.2.11.1805302014001.12558@eggly.anvils
    Fixes: 69d763fc6d3a ("mm: pin address_space before dereferencing it while isolating an LRU page")
    Signed-off-by: Hugh Dickins <hughd@google.com>
    Acked-by: Minchan Kim <minchan@kernel.org>
    Acked-by: Mel Gorman <mgorman@techsingularity.net>
    Reported-by:  Ivan Kalvachev <ikalvachev@gmail.com>
    Cc: "Huang, Ying" <ying.huang@intel.com>
    Cc: Jan Kara <jack@suse.cz>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 8054b87fccd4fe9c67bfc164462d81b38ea56af4 ......
	 orig commit -> 3b454ad35043dfbd3b5d2bb92b0991d6342afb44 ......
checking 6acb8818eff43638b691acadb048bce32d0c89a3 ......
	 orig commit -> a8e654f01cb725d0bfd741ebca1bf4c9337969cc ......
		 a8e654f01cb725d0bfd741ebca1bf4c9337969cc has problem. Fixes commit -> cfb61b5e3e09f8b49bc4d685429df75f45127adc
commit c1fdafea627c843099518ebb5ec3fcc9396ae4a8
Author: David S. Miller <davem@davemloft.net>
Date:   Thu Mar 15 14:18:00 2018 -0700

    sparc64: Fix regression in pmdp_invalidate().
    
    [ Upstream commit cfb61b5e3e09f8b49bc4d685429df75f45127adc ]
    
    pmdp_invalidate() was changed to update the pmd atomically
    (to not lose dirty/access bits) and return the original pmd
    value.
    
    However, in doing so, we lost a lot of the essential work that
    set_pmd_at() does, namely to update hugepage mapping counts and
    queuing up the batched TLB flush entry.
    
    Thus we were not flushing entries out of the TLB when making
    such PMD changes.
    
    Fix this by abstracting the accounting work of set_pmd_at() out into a
    separate function, and call it from pmdp_establish().
    
    Fixes: a8e654f01cb7 ("sparc64: update pmdp_invalidate() to return old pmd value")
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
checking 78185a93d42ddb9595df13b3394312d07a34e832 ......
	 orig commit -> c58f0bb77ed8bf93dfdde762b01cb67eebbdfc29 ......
checking 305e56756da71e0ef7cc8d91b8e66fafbb6e5d5a ......
	 orig commit -> 0486a38bcc4749808edbc848f1bcf232042770fc ......
checking 6cab60ac6a0a978ac58e27f79012122f90e75a1d ......
	 orig commit -> 56521e7a02b7b84a5e72691a1fb15570e6055545 ......
checking a7fbc7f3134ab4848898383a0852a8e768311498 ......
	 orig commit -> d984187e3a1ad7d12447a7ab2c43ce3717a2b5b3 ......
checking a66174eb4a149b7919d174d9a7ce6ad9909c5ee2 ......
	 orig commit -> 16c8d569f5704a84164f30ff01b29879f3438065 ......
checking 66aaeed2796ef50af8775cad209e62c173463d05 ......
	 orig commit -> 025bcbde3634b2c9b316f227fed13ad6ad6817fb ......
checking 710b5124aac67c4a48d29e32c2d9525278db405b ......
	 orig commit -> ee190ca6516bc8257e3d36187ca6f0f71a9ec477 ......
checking cc0600dae30fe2ca2f3783599420a1b9bb88715d ......
	 orig commit -> d391f1207067268261add0485f0f34503539c5b0 ......
		 d391f1207067268261add0485f0f34503539c5b0 has problem. Fixes commit -> c4409905cd6eb42cfd06126e9226b0150e05a715
commit a709c46fdcd07940ae75bbca417b5b825bf92bce
Author: Sean Christopherson <sean.j.christopherson@intel.com>
Date:   Thu Aug 23 13:56:46 2018 -0700

    KVM: VMX: Do not allow reexecute_instruction() when skipping MMIO instr
    
    commit c4409905cd6eb42cfd06126e9226b0150e05a715 upstream.
    
    Re-execution after an emulation decode failure is only intended to
    handle a case where two or vCPUs race to write a shadowed page, i.e.
    we should never re-execute an instruction as part of MMIO emulation.
    As handle_ept_misconfig() is only used for MMIO emulation, it should
    pass EMULTYPE_NO_REEXECUTE when using the emulator to skip an instr
    in the fast-MMIO case where VM_EXIT_INSTRUCTION_LEN is invalid.
    
    And because the cr2 value passed to x86_emulate_instruction() is only
    destined for use when retrying or reexecuting, we can simply call
    emulate_instruction().
    
    Fixes: d391f1207067 ("x86/kvm/vmx: do not use vm-exit instruction length
                          for fast MMIO when running nested")
    Cc: Vitaly Kuznetsov <vkuznets@redhat.com>
    Signed-off-by: Sean Christopherson <sean.j.christopherson@intel.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking d757c3a9cf4a8af26d085054731ebd9b5bc9983c ......
	 orig commit -> a340b3e229b24a56f1c7f5826b15a3af0f4b13e5 ......
checking a6a25002e6d83c4b66297a0fd192927c8fa0988d ......
	 orig commit -> e4823fbd229bfbba368b40cdadb8f4eeb20604cc ......
checking ad10785a706e63ff155fc97860cdcc5e3bc5992d ......
	 orig commit -> 1e98ffea5a8935ec040ab72299e349cb44b8defd ......
checking 2b7cc93682acf720f6b2e1a690ccdae71129e6fc ......
	 orig commit -> 89a8f6d4904c8cf3ff8fee9fdaff392a6bbb8bf6 ......
checking cdf635a66c5ba80fa03275265d6191fb3adf33c8 ......
	 orig commit -> 202a0a70e445caee1d0ec7aae814e64b1189fa4d ......
checking 67fa8bfff771973a6867ca4be8b6c29e6e2e312f ......
	 orig commit -> cbd27448faff4843ac4b66cc71445a10623ff48d ......
checking d810c548157f9f2533864bfb220787eaa9e36e3e ......
	 orig commit -> b081808a66345ba725b77ecd8d759bee874cd937 ......
checking 0bddd43ac2001d87471117ff29e789aa3bcfd18b ......
	 orig commit -> ea05ba7c559c8e5a5946c3a94a2a266e9a6680a6 ......
checking 0caebc3810328467cc67dadee612603d24087a9f ......
	 orig commit -> a346137e9142b039fd13af2e59696e3d40c487ef ......
checking b086dd2d79d911abbc6001ef2d59dc6a042ae5d9 ......
	 orig commit -> c25ef6a5e62fa212d298ce24995ce239f29b5f96 ......
checking 64e5e46cdd8b3fcfed016dc89f057087346ad742 ......
	 orig commit -> 40339af33c703bacb336493157d43c86a8bf2fed ......
checking 1ec85fe4e259a25e69c7d73fa5efe47074fcff46 ......
	 orig commit -> 02b4016bfe43d2d5ed043be7ffa56cda6a4d1100 ......
checking 7addb3e4ad3db6a95a953c59884921b5883dcdec ......
	 orig commit -> 2bafa8fac19a31ca72ae1a3e48df35f73661dbed ......
checking 27eb641f236843b34819ed05d6288dd54053827b ......
	 orig commit -> 5bdd0c6f89fba430e18d636493398389dadc3b17 ......
checking 19b3638ce46065936c2092c983227ae7f2161220 ......
	 orig commit -> 3624a8f02568f08aef299d3b117f2226f621177d ......
checking 827aab45cb16862083415abdb3e56313d59c347e ......
	 orig commit -> 980b4c95e78e4113cb7b9f430f121dab1c814b6c ......
checking 592ea370bf1ce685bdb5bdf71eaf7e65190c551f ......
	 orig commit -> c505cbd45f6e9c539d57dd171d95ec7e5e9f9cd0 ......
checking c5fda2b8610b96f0035210952fb1dedcd73bf2ee ......
	 orig commit -> c7e1b4059075c9e8eed101d7cc5da43e95eb5e18 ......
		 c7e1b4059075c9e8eed101d7cc5da43e95eb5e18 has problem. Fixes commit -> 60ab0fafc4b652fcaf7cbc3bb8555a0cf1149c28
commit da93a03fdd0a40ed91568434fade58d9043be20e
Author: Aaron Sierra <asierra@xes-inc.com>
Date:   Tue Jul 24 14:23:46 2018 -0500

    serial: 8250_exar: Read INT0 from slave device, too
    
    commit 60ab0fafc4b652fcaf7cbc3bb8555a0cf1149c28 upstream.
    
    The sleep wake-up refactoring that I introduced in
    
      commit c7e1b4059075 ("tty: serial: exar: Relocate sleep wake-up handling")
    
    did not account for devices with a slave device on the expansion port.
    This patch pokes the INT0 register in the slave device, if present, in
    order to ensure that MSI interrupts don't get permanently "stuck"
    because of a sleep wake-up interrupt as described here:
    
      commit 2c0ac5b48a35 ("serial: exar: Fix stuck MSIs")
    
    This also converts an ioread8() to readb() in order to provide visual
    consistency with the MMIO-only accessors used elsewhere in the driver.
    
    Reported-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Signed-off-by: Aaron Sierra <asierra@xes-inc.com>
    Fixes: c7e1b4059075 ("tty: serial: exar: Relocate sleep wake-up handling")
    Reviewed-by: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 519a7119527c26984e6804abc422808681d1a117 ......
	 orig commit -> 617ab45c9a8900e64a78b43696c02598b8cad68b ......
checking 9a1dda252663c930822c933232736cd05a8cb800 ......
	 orig commit -> cf315ea596ec26d7aa542a9ce354990875a920c0 ......
checking 0e7a0c139cbf09d602eabb935ad5a080c99cdd46 ......
	 orig commit -> 3a53285228165225a7f76c7d5ff1ddc0213ce0e4 ......
checking 187bf28199d85d12c68c836e1ba3fe903ba7fec3 ......
	 orig commit -> 177132df5e45b134c147f419f567a3b56aafaf2b ......
checking 048af64fd48f639bb97773c33e87ee6cf250ac99 ......
	 orig commit -> fde7f9dbc71365230eeb8c8ea97ce9b552c8e5bd ......
checking f25ba4f6be4aa368a4ce22d225d4c09257b3667a ......
	 orig commit -> 6b136a24b05c81a24e0b648a4bd938bcd0c4f69e ......
checking a42ebbdae0a58e62906a47fc36b89822c82f627a ......
	 orig commit -> b3ecd4aa8632a86428605ab73393d14779019d82 ......
checking 48d441324a58460e201f15309edf2e082392170d ......
	 orig commit -> 587d8628fb71c3bfae29fb2bbe84c1478c59bac8 ......
checking b9d78055c6aea80faa783b105520efa05b443075 ......
	 orig commit -> e0346f9fcb6c636d2f870e6666de8781413f34ea ......
checking 09f6d65db13b0a58af216d11a8e3f23069dc0f47 ......
	 orig commit -> 06aa040f039404a0039a5158cd12f41187487a1f ......
checking 7c7ae4ed2fcd5a10bdac40b82deaa7f940f001ed ......
	 orig commit -> 783687810e986a15ffbf86c516a1a48ff37f38f7 ......
checking c6c6e38aeff2b4131de2718a993d07995844dcc8 ......
	 orig commit -> 20d59023c5ec4426284af492808bcea1f39787ef ......
checking f2e73df302f31b588086b6eb5a4151b196faf427 ......
	 orig commit -> e58decc9c51eb61697aba35ba8eda33f4b80552d ......
checking 8591958413bfeacbe294dbb846e53c7bbd82e685 ......
	 orig commit -> 7ad81482cad67cbe1ec808490d1ddfc420c42008 ......
checking 6a5505da41faa98555526ba50ca9865a2bd0ef99 ......
	 orig commit -> cba04cdf437d745fac85220d1d692a9ae23d7004 ......
checking 8afed2798e50f3f9b84a6b0c9eb9810119a0fc3f ......
	 orig commit -> 96d5eaa9bb74d299508d811d865c2c41b38b0301 ......
checking 800fda575b119312b429fe488680e990b32e2de6 ......
	 orig commit -> 3f884a0a8bdf28cfd1e9987d54d83350096cdd46 ......
checking a09881cfb7135787375a3975cbd05bc94e07a0d0 ......
	 orig commit -> a9d572c7550044d5b217b5287d99a2e6d34b97b0 ......
checking 889177d172d3a1879742cdd17debbbeb300ca1b5 ......
	 orig commit -> 00db63c128dd3daf38f481371976c24d32678142 ......
checking 48b8839d91a49cde35ddab422a99ef908391aeee ......
	 orig commit -> 7583d8d088ff2c323b1d4f15b191ca2c23d32558 ......
checking ebe064401f078ae68f2532833ad8f212b6ee2be2 ......
	 orig commit -> 18e83ac75bfe67009c4ddcdd581bba8eb16f4030 ......
checking c231cec825a9d72642b712b6b62bb9c99b7407fd ......
	 orig commit -> 6f794e3c5c8f8fdd3b5bb20d9ded894e685b5bbe ......
	 orig commit -> 319e4d0661e5323c9f9945f0f8fb5905e5fe74c3 ......
		 319e4d0661e5323c9f9945f0f8fb5905e5fe74c3 has problem. Fixes commit -> 6f794e3c5c8f8fdd3b5bb20d9ded894e685b5bbe
commit c231cec825a9d72642b712b6b62bb9c99b7407fd
Author: Anand Jain <Anand.Jain@oracle.com>
Date:   Tue Jan 9 09:05:43 2018 +0800

    btrfs: fail mount when sb flag is not in BTRFS_SUPER_FLAG_SUPP
    
    
    [ Upstream commit 6f794e3c5c8f8fdd3b5bb20d9ded894e685b5bbe ]
    
    It appears from the original commit [1] that there isn't any design
    specific reason not to fail the mount instead of just warning. This
    patch will change it to fail.
    
    [1]
     commit 319e4d0661e5323c9f9945f0f8fb5905e5fe74c3
        btrfs: Enhance super validation check
    
    Fixes: 319e4d0661e5323 ("btrfs: Enhance super validation check")
    Signed-off-by: Anand Jain <anand.jain@oracle.com>
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking d91bb7c6988bd6450284c762b33f2e1ea3fe7c97 ......
	 orig commit -> 762221f095e3932669093466aaf4b85ed9ad2ac1 ......
checking db6d651eccded6fe512f0ed02347e0638dd95296 ......
	 orig commit -> 9ea2c7c9da13c9073e371c046cbbc45481ecb459 ......
checking a4909c8518f79875e06d4903d249f2524126c2cd ......
	 orig commit -> 343e4fc1c60971b0734de26dbbd475d433950982 ......
checking fb5d97a19fc39d9fd5238af989a45cc56b4c2b9a ......
	 orig commit -> e749d328b0b450aa78d562fa26a0cd8872325dd9 ......
checking afadc440a1cc08895f451b4a9db551a45f2a1a21 ......
	 orig commit -> 0ddcff49b672239dda94d70d0fcf50317a9f4b51 ......
checking 18004e6f26ec406ee762fd3f8cceaf4ab5acde41 ......
	 orig commit -> 5b1374b3b3c2fc4f63a398adfa446fb8eff791a4 ......
checking 0f511f3dda8c6fb2c799eab22acfb39056047a49 ......
	 orig commit -> ae7440ef0c8013d68c00dad6900e7cce5311bb1c ......
checking 8bf116b258c286137635542a752ec68ffebd809b ......
	 orig commit -> 0724a7c32a54e3e50d28e19e30c59014f61d4e2c ......
checking 9f2df99f9eb020a1fa4fceb460d9a494c3b33341 ......
	 orig commit -> f541c09ebfc61697b586b38c9ebaf4b70defb278 ......
checking ebf5ffca1bf2be571544befa56e37723e8b8356f ......
	 orig commit -> 80db6f08b7af93eddc9487535e6150b220262637 ......
checking c212c855a09d826b95eb18d5adf04f4c65ecb8ca ......
	 orig commit -> 5f2483eb2423152445b39f2db59d372f523e664e ......
checking 81fbb7e26ea1068d6c7777f5c1f8d4f9b4ec68a9 ......
	 orig commit -> cbebc6ef4fc830f4040d4140bf53484812d5d5d9 ......
checking 35ceddc59cd4f70343072247fd5b9995d8fceb87 ......
	 orig commit -> 246d8b184c100e8eb6b4e8c88f232c2ed2a4e672 ......
		 246d8b184c100e8eb6b4e8c88f232c2ed2a4e672 has problem. Fixes commit -> d3b9e8ad425cfd5b9116732e057f1b48e4d3bcb8
commit 76cd54fa70ce7c02e81bc4c3a06de32cdaa84b29
Author: Max Gurtovoy <maxg@mellanox.com>
Date:   Mon Mar 5 20:09:48 2018 +0200

    RDMA/core: Reduce poll batch for direct cq polling
    
    
    [ Upstream commit d3b9e8ad425cfd5b9116732e057f1b48e4d3bcb8 ]
    
    Fix warning limit for kernel stack consumption:
    
    drivers/infiniband/core/cq.c: In function 'ib_process_cq_direct':
    drivers/infiniband/core/cq.c:78:1: error: the frame size of 1032 bytes
    is larger than 1024 bytes [-Werror=frame-larger-than=]
    
    Using smaller ib_wc array on the stack brings us comfortably below that
    limit again.
    
    Fixes: 246d8b184c10 ("IB/cq: Don't force IB_POLL_DIRECT poll context for ib_process_cq_direct")
    Reported-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Sergey Gorenko <sergeygo@mellanox.com>
    Signed-off-by: Max Gurtovoy <maxg@mellanox.com>
    Signed-off-by: Leon Romanovsky <leonro@mellanox.com>
    Reviewed-by: Bart Van Assche <bart.vanassche@wdc.com>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 58bc0fd8434d510c5e86f6739c9856b695730504 ......
	 orig commit -> 44a5f423e70374e5b42cecd85e78f2d79334e0f2 ......
checking 5bb5b9c68192b81e16eef1b7f9d4d526fe6afefe ......
	 orig commit -> fb7d38a70e1d8ffd54f7a7464dcc4889d7e490ad ......
checking 5bfa11c9619283d77cf8193152fba8ae18819557 ......
	 orig commit -> 433c6cab9d298687c097f6ee82e49157044dc7c6 ......
checking 2a71a742f09b390a200110dd3d8ff9f6f51f9443 ......
	 orig commit -> c877154d307f4a91e0b5b85b75535713dab945ae ......
checking a1dfcb01e374729f6920c3c07867914c5e848fb4 ......
	 orig commit -> 7df938fbc4ee641e70e05002ac67c24b19e86e74 ......
checking 2e102fe86ede237ca875da9336648caa5e2fcac6 ......
	 orig commit -> 050af08ffb1b62af69196d61c22a0755f9a3cdbd ......
checking 223ed638e937c53fdb49c6a55aa3c9de2c728b0f ......
	 orig commit -> 9b28a1102efc75d81298198166ead87d643a29ce ......
checking e9c8a5fa078ca85b4a78dfbe837fadfef780608d ......
	 orig commit -> 9d2e6505f6d6934e681aed502f566198cb25c74a ......
checking 6ec6bd8ec2e363f7955a992d97038b7fbed4974b ......
	 orig commit -> 4552d128c26e0f0f27a5bd2fadc24092b8f6c1d7 ......
checking bc5fddf315f8a1664754bac4ef3752f4bc553e44 ......
	 orig commit -> dc98b8480d8a68c2ce9aa28b9f0d714fd258bc0b ......
checking 77d17d0e8934b65864051d74b099f04420066689 ......
	 orig commit -> 81fccd6ca507d3b2012eaf1edeb9b1dbf4bd22db ......
checking 1fe5e88c389a2f7bda893ed57aa0f3fff52b82b0 ......
	 orig commit -> d777f8de99b05d399c0e4e51cdce016f26bd971b ......
checking 4e63115b6b9d040c153a9d4b53cd783e0ce9ae76 ......
	 orig commit -> 249d98e567e25dd03e015e2d31e1b7b9648f34df ......
checking 448bcd67b4c51bd7e4ac3a6d4a1b49e880c5bb5a ......
	 orig commit -> 38d70b7ca1769f26c0b79f3c08ff2cc949712b59 ......
checking 0eda4d03ef4c4c707a3f40c5afe634238775ff8a ......
	 orig commit -> eabad8c6856f185f876b54c426c2cc69fe0f0a7d ......
checking f3a7d11834f30d04a67c68dd572493953c088834 ......
	 orig commit -> 7ac0c332f96bb9688560726f5e80c097ed8de59a ......
checking f3ce194cae63c2d1749dbfe4c92e1ce7b56e0648 ......
	 orig commit -> 6376e926af1a8661dd1b2e6d0896e07f84a35844 ......
checking b3b2ca24d9f7c5c34a073553a983c099a2862119 ......
	 orig commit -> f20d429511affab6a2a9129f46042f43e6ffe396 ......
checking 0d5ef8956c84a4d6667d41085755b09ac54266c6 ......
	 orig commit -> 19eb4ed1141bd1096b9bc84ba9c4d03d5830c143 ......
checking 0d9a46ae3204b0d07ec6a4de00573cf12b0b1822 ......
	 orig commit -> 7110d80d53f472956420cd05a6297f49b558b674 ......
checking d925c308742284e508c984bc820b47a3d5c88397 ......
	 orig commit -> 2bc4298f59d2f15175bb568e2d356b5912d0cdd9 ......
checking 03fdc4ef7a67217506d48e1fcd2a03ab9c1f74bb ......
	 orig commit -> aa008206634363ef800fbd5f0262016c9ff81dea ......
checking c45ab4fb384cb3fc05e0949ca3a6ca4d6f7613fb ......
	 orig commit -> 5e46664703b364434a2cbda3e6988fc24ae0ced5 ......
checking 342d9092a50184b4b6d1c3f1f6bed06321afa88d ......
	 orig commit -> d698c4a02ee02053bbebe051322ff427a2dad56a ......
checking 79f2ced39657f6eb539f70664c355183cf21aa79 ......
	 orig commit -> 4d6bde512a86c32df3a1f289d2b4cd04b17758d1 ......
checking 80bd91ab9ad853d2f4f769b732fb8a501c90ec9d ......
	 orig commit -> 241e3ec0faf5ab1a0d9b1f6c43eefa919fb9c112 ......
checking a5a8ca753c0c4659287416ce282ba357c30098a8 ......
	 orig commit -> 91633eed73a3ac37aaece5c8c1f93a18bae616a9 ......
checking e0a1cec3db0a2fcf002fc101a15fcede7551c699 ......
	 orig commit -> 83f1999caeb14e15df205e80d210699951733287 ......
		 83f1999caeb14e15df205e80d210699951733287 has problem. Fixes commit -> ea23d5e3bf340e413b8e05c13da233c99c64142b
commit 074372c8124cbd62a8edf8b979fa814b4e223ece
Author: Subash Abhinov Kasiviswanathan <subashab@codeaurora.org>
Date:   Wed Jan 31 04:50:01 2018 -0700

    netfilter: ipv6: nf_defrag: Kill frag queue on RFC2460 failure
    
    
    [ Upstream commit ea23d5e3bf340e413b8e05c13da233c99c64142b ]
    
    Failures were seen in ICMPv6 fragmentation timeout tests if they were
    run after the RFC2460 failure tests. Kernel was not sending out the
    ICMPv6 fragment reassembly time exceeded packet after the fragmentation
    reassembly timeout of 1 minute had elapsed.
    
    This happened because the frag queue was not released if an error in
    IPv6 fragmentation header was detected by RFC2460.
    
    Fixes: 83f1999caeb1 ("netfilter: ipv6: nf_defrag: Pass on packets to stack per RFC2460")
    Signed-off-by: Subash Abhinov Kasiviswanathan <subashab@codeaurora.org>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking ddf09f2a0896bb29f1574d0ef983f42eb8592346 ......
	 orig commit -> 5855564c8ab2d9cefca7b2933bd19818eb795e40 ......
checking b7b27e19e374e12b8bb3d12627242e6c5d69d706 ......
	 orig commit -> a6532e7139660c103dda181aa5b2c734aa26ed6c ......
checking 8e40eae185f85426d9d6d667f2e55aa721b84e0d ......
	 orig commit -> 51776043afa415435c7e4636204fbe4f7edc4501 ......
checking 3f3017fa1540cf5eb6bd6af1f76f76a831c99652 ......
	 orig commit -> 123af9043e93cb6f235207d260d50f832cdb5439 ......
checking d3222cfc0b58f022a17f5f936b5c5d2df8a3f868 ......
	 orig commit -> c469652bb5e8fb715db7d152f46d33b3740c9b87 ......
		 c469652bb5e8fb715db7d152f46d33b3740c9b87 has problem. Fixes commit -> 6a30abaa40b62aed46ef12ea4c16c48565bdb376
commit 5f6e6d063ac1836b1a012bf886b2c76b4f86d0de
Author: Takashi Iwai <tiwai@suse.de>
Date:   Fri Apr 27 17:17:35 2018 +0200

    ALSA: hda - Fix incorrect usage of IS_REACHABLE()
    
    commit 6a30abaa40b62aed46ef12ea4c16c48565bdb376 upstream.
    
    The commit c469652bb5e8 ("ALSA: hda - Use IS_REACHABLE() for
    dependency on input") simplified the dependencies with IS_REACHABLE()
    macro, but it broke due to its incorrect usage: it should have been
    IS_REACHABLE(CONFIG_INPUT) instead of IS_REACHABLE(INPUT).
    
    Fixes: c469652bb5e8 ("ALSA: hda - Use IS_REACHABLE() for dependency on input")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 4e7284b34c78a11f04452621b3eb41e1bdb83bff ......
	 orig commit -> e1681599345b8466786b6e54a2db2a00a068a3f3 ......
checking 7a420b5d95a5428887dbcbd338ddb36fdbdc9233 ......
	 orig commit -> dce2630c7da73b0634686bca557cc8945cc450c8 ......
checking 239c948e3266adba944da4ea257362e773f39823 ......
	 orig commit -> 30c7e5b123673d5e570e238dbada2fb68a87212c ......
checking 4a5d70332d57bd473ffe76d8777a2e9f847c7863 ......
	 orig commit -> 188775181bc05f29372b305ef96485840e351fde ......
checking 1f52b0c642157bafda295c16a4650b4f0c26f4d1 ......
	 orig commit -> 94e46a4f2d5eb14059e42f313c098d4854847376 ......
checking de4c4914cce296b8dd9f5381f5d5dad70a065ba0 ......
	 orig commit -> df6b074dbe248d8c43a82131e8fd429e401841a5 ......
checking 43de32cdf0f4f73519e2df12fb93adc24f9746cb ......
	 orig commit -> 17539f2f4f0b7fa906b508765c8ada07a1e45f52 ......
checking 829239740c129fe9aaf276843fd546bdd45f114e ......
	 orig commit -> 5e1df40f40ee45a97bb1066c3d71f0ae920a9672 ......
checking 5c825627d4e5dd1989b44b7c27feba8061084096 ......
	 orig commit -> 7eb2c4dd54ff841f2fe509a84973eb25fa20bda2 ......
checking 6312eff3c70ed43bc0d4a86a042772e4921d649d ......
	 orig commit -> fcf1fadf4c65eea6c519c773d2d9901e8ad94f5f ......
checking 8e0489cf4d098ab4fe1c30941390362fb2843b7c ......
	 orig commit -> b4615730530be85fc45ab4631c2ad6d8e2d0b97d ......
checking c53f225fd792970c75ce0cb4042a11d04ef06d09 ......
	 orig commit -> 9f591ae60e1be026901398ef99eede91237aa3a1 ......
checking 325abf3db041d7ca130a5f84024da2ffffa35f0e ......
	 orig commit -> c0db1b677e1d584fab5d7ac76a32e1c0157542e0 ......
checking 08641a24d4e70607f767b066def49d3b3a3f9c98 ......
	 orig commit -> d3878e164dcd3925a237a20e879432400e369172 ......
checking c6aaaaa4d62ad885a8ca0a255d4af975f843ee98 ......
	 orig commit -> 7407188489c62a7b5694bc75a6db2b82af94c9a5 ......
checking b8d4055372b58aad4a51b67e176eabdcc238fde3 ......
	 orig commit -> 10daf10ab154e31237a8c07242be3063fb6a9bf4 ......
checking f6edc45e21c35f9e0124f7ac8b2d8eb7f551cc3b ......
	 orig commit -> 92d32170847bfff2dd08af2c016085779f2fd2a1 ......
checking 240a528684852cc3231b276b59c3e4bf1b533de5 ......
	 orig commit -> 1d0cffa674cfa7d185a302c8c6850fc50b893bed ......
