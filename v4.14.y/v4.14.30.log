Check from v4.14.30 to v4.14.31
Commit count: 102
checking 9861e6647c856ccf87188fce6d3ff12454de1415 ......
checking 7514cd2f6d212eb27a918a5f5ad33a196d9e5ff7 ......
	 orig commit -> 6007b080d2e2adb7af22bf29165f0594ea12b34c ......
checking b4e02202a0ba47d7ba546ae681f66ed68e69d459 ......
	 orig commit -> 0fa4fe85f4724fff89b09741c437cbee9cf8b008 ......
checking 3e1130970ec38bae0d4dd2a38678e563f092f7b3 ......
	 orig commit -> 87e0d4f0f37fb0c8c4aeeac46fff5e957738df79 ......
checking 3fdc6f0d1484ce777d98a909b0d6f3262affe950 ......
	 orig commit -> 91c49c2deb96ffc3c461eaae70219d89224076b7 ......
checking d6e6e57e60457ad1a9fa4dd83f1d456020f7b5c7 ......
	 orig commit -> cd3f1790b006d91786728c20a01da21ee277aff1 ......
checking 4208d820ed232ed0df7ac3292ff8bcd1545d0093 ......
	 orig commit -> b64149ca016c25f30b39ac5a8f37cfb9017e19bb ......
checking 213b332c71a937040945046e1eaa9f47812e4774 ......
	 orig commit -> c3eec59659cf25916647d2178c541302bb4822ad ......
checking 26023c977975846e739ea40906795d59f64194c0 ......
	 orig commit -> 6d79bd5bb6c79a9dba4842040c9adf39e7806330 ......
checking af00a24c9ea2a1cc16ba38560a5b3ea404ff3c09 ......
	 orig commit -> 7b9ebe428266fb7e0a6d769bb3ff3fcb6044b15e ......
checking c7d20ac820ad4598bd256846a7272cf418cf105f ......
	 orig commit -> b9a3589332c2a25fb7edad25a26fcaada3209126 ......
checking 294a6268bf16c4de6cb59e2c8b96c7398c0084ee ......
	 orig commit -> 320b0651f32b830add6497fcdcfdcb6ae8c7b8a0 ......
checking 59dbc2a449219b188f129f771785af6ef928d47e ......
	 orig commit -> e5ea9b54a055619160bbfe527ebb7d7191823d66 ......
checking 227e2f91f0c93e867086f3dfeaafd0d7a44554d1 ......
	 orig commit -> bd903afeb504db5655a45bb4cf86f38be5b1bf62 ......
checking b69902a42097756b30b943a960dc7e037061712d ......
	 orig commit -> 40c21898ba5372c14ef71717040529794a91ccc2 ......
checking d244e5897c1ff498ab476f6ca7ce4a2e0f8e240f ......
	 orig commit -> 317660940fd9dddd3201c2f92e25c27902c753fa ......
checking 5fb252cad61f20ae5d5a8b199f6cc4faf6f418e1 ......
	 orig commit -> e7cdf5c82f1773c3386b93bbcf13b9bfff29fa31 ......
checking a9b385a59b1f9c658cd585ec53671c32487a6570 ......
	 orig commit -> c55b8550fa57ba4f5e507be406ff9fc2845713e8 ......
checking faf470583a5701c286c62f0dfaaa06964a8c4ed8 ......
	 orig commit -> e3d03598e8ae7d195af5d3d049596dec336f569f ......
checking 06b2810150542cfe0e66407c77ea2de6790e35dc ......
	 orig commit -> 32d43cd391bacb5f0814c2624399a5dad3501d09 ......
checking f7fbe38cc55bedffcf62874d78c6e455e6a31522 ......
	 orig commit -> 19b558db12f9f4e45a22012bae7b4783e62224da ......
checking b08952bbc1712d76c2d63486252073c0406f911f ......
	 orig commit -> 06ace26f4e6fcf747e890a39193be811777a048a ......
checking 373ccbd6eb034834a8b58fc1b7836cf25adb5c37 ......
	 orig commit -> 31ad7f8e7dc94d3b85ccf9b6141ce6dfd35a1781 ......
checking 852d9679a778595fd818aaaca4b4b1c3124e0f6b ......
	 orig commit -> 4b0b37d4cc54b21a6ecad7271cbc850555869c62 ......
checking 5a29ce2b9880a26e1ac95169dedabc988360c734 ......
	 orig commit -> d8ba61ba58c88d5207c1ba2f7d9a2280e7d03be9 ......
checking 3832d40ef22ee981ba821022d2e987addeb484ad ......
	 orig commit -> f1869a890cdedb92a3fab969db5d0fd982850273 ......
checking 5c955c3cfb58c5374f994196d0fc260f4636e0d5 ......
	 orig commit -> 9ffd7503944ec7c0ef41c3245d1306c221aef2be ......
checking 63affa180c7ded05c13a6449cde28a5a2e91d6f8 ......
	 orig commit -> 746201235b3f876792099079f4c6fea941d76183 ......
		 746201235b3f876792099079f4c6fea941d76183 has problem. Fixes commit -> 9ffd7503944ec7c0ef41c3245d1306c221aef2be
commit 5c955c3cfb58c5374f994196d0fc260f4636e0d5
Author: Andri Yngvason <andri.yngvason@marel.com>
Date:   Thu Mar 15 18:23:17 2018 +0000

    can: cc770: Fix use after free in cc770_tx_interrupt()
    
    commit 9ffd7503944ec7c0ef41c3245d1306c221aef2be upstream.
    
    This fixes use after free introduced by the last cc770 patch.
    
    Signed-off-by: Andri Yngvason <andri.yngvason@marel.com>
    Fixes: 746201235b3f ("can: cc770: Fix queue stall & dropped RTR reply")
    Cc: linux-stable <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking b3ab7e3dee87f95f54e1de51136e717aa0d26503 ......
	 orig commit -> f4353daf4905c0099fd25fa742e2ffd4a4bab26a ......
checking 18f29aa5b55de4bf15d9567ebf76253f5ae73c6b ......
	 orig commit -> 591d65d5b15496af8d05e252bc1da611c66c0b79 ......
checking 8a731531d08ff31cee4836b95c151df0df8a83b6 ......
	 orig commit -> 880dd464b4304583c557c4e5f5ecebfd55d232b1 ......
checking e7dc75584302003a2cd50ea8146f6ee60d0af11f ......
	 orig commit -> ffd137f7043cb30067e1bff6fe62a073ae190b23 ......
checking 74f08b1e0de81d8ee15c04177dbe15840e865cea ......
	 orig commit -> e6048a00cfd0863d32f53b226e0b9a3633fc3332 ......
checking 2a2b9ef3092680bdf09751d55420910f81fd0c3c ......
	 orig commit -> 4c41aa24baa4ed338241d05494f2c595c885af8f ......
checking 3f3a6707770af5d1fe49132bd82c18be76221069 ......
	 orig commit -> 6b00c35138b404be98b85f4a703be594cbed501c ......
checking 1aa0e4115330282bcb2e7f2a17d7804959d9344d ......
	 orig commit -> 843c3a59997f18060848b8632607dd04781b52d1 ......
checking 91ff3795b188363ea41950f68cf2c80cca996d25 ......
	 orig commit -> fa8e6d58c5bc260f4369c6699683d69695daed0a ......
checking 84f7a040cf045cf9840f4b4d55a2a03700d9ad0c ......
	 orig commit -> 6de564939e14327148e31ddcf769e34105176447 ......
checking 70001527f44628c60675ed53a975b283b55ad963 ......
	 orig commit -> c5d343b6b7badd1f5fe0873eff2e8d63a193e732 ......
checking 1a697e6ef91bf2fa82065bc6624289bea8edf01f ......
	 orig commit -> 78dc897b7ee67205423dbbc6b56be49fb18d15b5 ......
checking 7964c00a4a7e9bab9c3094bbeec2572ebfeb76ee ......
	 orig commit -> 455f3e76cfc0d893585a5f358b9ddbe9c1e1e53b ......
checking 865a0221c7e25d3a59ef5cd9fa7c9f2eb5b0a21b ......
	 orig commit -> 3ffb0ba9b567a8efb9a04ed3d1ec15ff333ada22 ......
checking 7fbddfb0017600bc5031448755ffa036ee57e31f ......
	 orig commit -> b1abf6fc49829d89660c961fafe3f90f3d843c55 ......
checking 8f860adbb3d80f1844fc284b2c2688f8c0905b87 ......
	 orig commit -> dc9e0a9347e932e3fd3cd03e7ff241022ed6ea8a ......
checking b8b8151806ffbe00db383fb574c2fb6c81ccd310 ......
	 orig commit -> 1c610d5f93c709df56787f50b3576704ac271826 ......
checking c8deec7181212f170191c7ffbb01a16367682f5b ......
	 orig commit -> 3b82a4db8eaccce735dffd50b4d4e1578099b8e8 ......
checking fc1142a8ca2dd83335fa82fea1315fe4064eb4bd ......
	 orig commit -> b24791fe00f8b089d5b10cb7bcc4e1ae88b4831b ......
checking b53d42b4ab924c2860cb8357dca821d3e8adc388 ......
	 orig commit -> 2681bc79eeb640562c932007bfebbbdc55bf6a7d ......
checking 19246741a6dfabb59ddb43ec1af3d0d7cc9aa64a ......
	 orig commit -> 73a88250b70954a8f27c2444e1c2411bba3c29d9 ......
		 73a88250b70954a8f27c2444e1c2411bba3c29d9 has problem. Fixes commit -> 13f149d47392782baafd96d54d4e65f3b5ca342f
commit df9703e7e72adc0f333b03e3e86096ff3d1ff315
Author: Thomas Hellstrom <thellstrom@vmware.com>
Date:   Thu Apr 26 09:59:30 2018 +0200

    drm/vmwgfx: Fix a buffer object leak
    
    commit 13f149d47392782baafd96d54d4e65f3b5ca342f upstream.
    
    A buffer object leak was introduced when fixing a premature buffer
    object release. Fix this.
    
    Cc: <stable@vger.kernel.org>
    Fixes: 73a88250b709 ("Fix a destoy-while-held mutex problem.")
    Signed-off-by: Thomas Hellstrom <thellstrom@vmware.com>
    Reviewed-by: Deepak Rawat <drawat@vmware.com>
    Reviewed-by: Sinclair Yeh <syeh@vmware.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 4be50a9fe670525e19d7173f9441302a57df6ac3 ......
	 orig commit -> 140bcaa23a1c37b694910424075a15e009120dbe ......
checking 99b6ead444cff9fcdcb93b2c145cbdf94e29eea3 ......
	 orig commit -> f59f1caf72ba00d519c793c3deb32cd3be32edc2 ......
checking f5dad0409a72a16136c64bbdcf9bcf75c2e51246 ......
	 orig commit -> b3cd54b257ad95d344d121dc563d943ca39b0921 ......
checking b6b6783c8097f7561af6f9b4c6a6204040ad990f ......
	 orig commit -> fa41b900c30b45fab03783724932dc30cd46a6be ......
checking 8b8b5c4f7f3af41e9e79fd04b49a0dcfb5020d5e ......
	 orig commit -> fece2029a9e65b9a990831afe2a2b83290cbbe26 ......
checking 5bbd932ff58f518ab2de7893940ca98f4f6c43e8 ......
	 orig commit -> 28ee90fe6048fa7b7ceaeb8831c0e4e454a4cf89 ......
		 28ee90fe6048fa7b7ceaeb8831c0e4e454a4cf89 has problem. Fixes commit -> 5e0fb5df2ee871b841f96f9cb6a7f2784e96aa4e
785a19f9d1dd8a4ab2d0633be4656653bd3de1fc
f967db0b9ed44ec3057a28f3b28efc51df51b835
commit a34806961be4b42f3f40c8026eca95bbbbaf78a3
Author: Chintan Pandya <cpandya@codeaurora.org>
Date:   Wed Jun 27 08:13:47 2018 -0600

    ioremap: Update pgtable free interfaces with addr
    
    commit 785a19f9d1dd8a4ab2d0633be4656653bd3de1fc upstream.
    
    The following kernel panic was observed on ARM64 platform due to a stale
    TLB entry.
    
     1. ioremap with 4K size, a valid pte page table is set.
     2. iounmap it, its pte entry is set to 0.
     3. ioremap the same address with 2M size, update its pmd entry with
        a new value.
     4. CPU may hit an exception because the old pmd entry is still in TLB,
        which leads to a kernel panic.
    
    Commit b6bdb7517c3d ("mm/vmalloc: add interfaces to free unmapped page
    table") has addressed this panic by falling to pte mappings in the above
    case on ARM64.
    
    To support pmd mappings in all cases, TLB purge needs to be performed
    in this case on ARM64.
    
    Add a new arg, 'addr', to pud_free_pmd_page() and pmd_free_pte_page()
    so that TLB purge can be added later in seprate patches.
    
    [toshi.kani@hpe.com: merge changes, rewrite patch description]
    Fixes: 28ee90fe6048 ("x86/mm: implement free pmd/pte page interfaces")
    Signed-off-by: Chintan Pandya <cpandya@codeaurora.org>
    Signed-off-by: Toshi Kani <toshi.kani@hpe.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: mhocko@suse.com
    Cc: akpm@linux-foundation.org
    Cc: hpa@zytor.com
    Cc: linux-mm@kvack.org
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Joerg Roedel <joro@8bytes.org>
    Cc: stable@vger.kernel.org
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lkml.kernel.org/r/20180627141348.21777-3-toshi.kani@hpe.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d0170b8af8dd66f67989e71469cb905b2a20bdd
Author: Toshi Kani <toshi.kani@hpe.com>
Date:   Wed Jun 27 08:13:46 2018 -0600

    x86/mm: Disable ioremap free page handling on x86-PAE
    
    commit f967db0b9ed44ec3057a28f3b28efc51df51b835 upstream.
    
    ioremap() supports pmd mappings on x86-PAE.  However, kernel's pmd
    tables are not shared among processes on x86-PAE.  Therefore, any
    update to sync'd pmd entries need re-syncing.  Freeing a pte page
    also leads to a vmalloc fault and hits the BUG_ON in vmalloc_sync_one().
    
    Disable free page handling on x86-PAE.  pud_free_pmd_page() and
    pmd_free_pte_page() simply return 0 if a given pud/pmd entry is present.
    This assures that ioremap() does not update sync'd pmd entries at the
    cost of falling back to pte mappings.
    
    Fixes: 28ee90fe6048 ("x86/mm: implement free pmd/pte page interfaces")
    Reported-by: Joerg Roedel <joro@8bytes.org>
    Signed-off-by: Toshi Kani <toshi.kani@hpe.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: mhocko@suse.com
    Cc: akpm@linux-foundation.org
    Cc: hpa@zytor.com
    Cc: cpandya@codeaurora.org
    Cc: linux-mm@kvack.org
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: stable@vger.kernel.org
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lkml.kernel.org/r/20180627141348.21777-2-toshi.kani@hpe.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 21ed56ef827e3574ffbe67a933e480b4f6f32cf5
Author: Toshi Kani <toshi.kani@hpe.com>
Date:   Wed Jun 27 08:13:48 2018 -0600

    x86/mm: Add TLB purge to free pmd/pte page interfaces
    
    commit 5e0fb5df2ee871b841f96f9cb6a7f2784e96aa4e upstream.
    
    ioremap() calls pud_free_pmd_page() / pmd_free_pte_page() when it creates
    a pud / pmd map.  The following preconditions are met at their entry.
     - All pte entries for a target pud/pmd address range have been cleared.
     - System-wide TLB purges have been peformed for a target pud/pmd address
       range.
    
    The preconditions assure that there is no stale TLB entry for the range.
    Speculation may not cache TLB entries since it requires all levels of page
    entries, including ptes, to have P & A-bits set for an associated address.
    However, speculation may cache pud/pmd entries (paging-structure caches)
    when they have P-bit set.
    
    Add a system-wide TLB purge (INVLPG) to a single page after clearing
    pud/pmd entry's P-bit.
    
    SDM 4.10.4.1, Operation that Invalidate TLBs and Paging-Structure Caches,
    states that:
      INVLPG invalidates all paging-structure caches associated with the
      current PCID regardless of the liner addresses to which they correspond.
    
    Fixes: 28ee90fe6048 ("x86/mm: implement free pmd/pte page interfaces")
    Signed-off-by: Toshi Kani <toshi.kani@hpe.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: mhocko@suse.com
    Cc: akpm@linux-foundation.org
    Cc: hpa@zytor.com
    Cc: cpandya@codeaurora.org
    Cc: linux-mm@kvack.org
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: Joerg Roedel <joro@8bytes.org>
    Cc: stable@vger.kernel.org
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lkml.kernel.org/r/20180627141348.21777-4-toshi.kani@hpe.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a34806961be4b42f3f40c8026eca95bbbbaf78a3
Author: Chintan Pandya <cpandya@codeaurora.org>
Date:   Wed Jun 27 08:13:47 2018 -0600

    ioremap: Update pgtable free interfaces with addr
    
    commit 785a19f9d1dd8a4ab2d0633be4656653bd3de1fc upstream.
    
    The following kernel panic was observed on ARM64 platform due to a stale
    TLB entry.
    
     1. ioremap with 4K size, a valid pte page table is set.
     2. iounmap it, its pte entry is set to 0.
     3. ioremap the same address with 2M size, update its pmd entry with
        a new value.
     4. CPU may hit an exception because the old pmd entry is still in TLB,
        which leads to a kernel panic.
    
    Commit b6bdb7517c3d ("mm/vmalloc: add interfaces to free unmapped page
    table") has addressed this panic by falling to pte mappings in the above
    case on ARM64.
    
    To support pmd mappings in all cases, TLB purge needs to be performed
    in this case on ARM64.
    
    Add a new arg, 'addr', to pud_free_pmd_page() and pmd_free_pte_page()
    so that TLB purge can be added later in seprate patches.
    
    [toshi.kani@hpe.com: merge changes, rewrite patch description]
    Fixes: 28ee90fe6048 ("x86/mm: implement free pmd/pte page interfaces")
    Signed-off-by: Chintan Pandya <cpandya@codeaurora.org>
    Signed-off-by: Toshi Kani <toshi.kani@hpe.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: mhocko@suse.com
    Cc: akpm@linux-foundation.org
    Cc: hpa@zytor.com
    Cc: linux-mm@kvack.org
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: Will Deacon <will.deacon@arm.com>
    Cc: Joerg Roedel <joro@8bytes.org>
    Cc: stable@vger.kernel.org
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lkml.kernel.org/r/20180627141348.21777-3-toshi.kani@hpe.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 3d0170b8af8dd66f67989e71469cb905b2a20bdd
Author: Toshi Kani <toshi.kani@hpe.com>
Date:   Wed Jun 27 08:13:46 2018 -0600

    x86/mm: Disable ioremap free page handling on x86-PAE
    
    commit f967db0b9ed44ec3057a28f3b28efc51df51b835 upstream.
    
    ioremap() supports pmd mappings on x86-PAE.  However, kernel's pmd
    tables are not shared among processes on x86-PAE.  Therefore, any
    update to sync'd pmd entries need re-syncing.  Freeing a pte page
    also leads to a vmalloc fault and hits the BUG_ON in vmalloc_sync_one().
    
    Disable free page handling on x86-PAE.  pud_free_pmd_page() and
    pmd_free_pte_page() simply return 0 if a given pud/pmd entry is present.
    This assures that ioremap() does not update sync'd pmd entries at the
    cost of falling back to pte mappings.
    
    Fixes: 28ee90fe6048 ("x86/mm: implement free pmd/pte page interfaces")
    Reported-by: Joerg Roedel <joro@8bytes.org>
    Signed-off-by: Toshi Kani <toshi.kani@hpe.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: mhocko@suse.com
    Cc: akpm@linux-foundation.org
    Cc: hpa@zytor.com
    Cc: cpandya@codeaurora.org
    Cc: linux-mm@kvack.org
    Cc: linux-arm-kernel@lists.infradead.org
    Cc: stable@vger.kernel.org
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: <stable@vger.kernel.org>
    Link: https://lkml.kernel.org/r/20180627141348.21777-2-toshi.kani@hpe.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking acdb4981644c8e31ccee294bdefff475c0cf587b ......
	 orig commit -> b6bdb7517c3d3f41f20e5c2948d6bc3f8897394e ......
checking 04d47fc40367d77c6e3fae82da0a60e673746dfd ......
	 orig commit -> 1705f7c534163594f8b05e060cb49fbea86ca70b ......
checking 1e8628443ede418464b0ab101b24fbb7030949b2 ......
	 orig commit -> 63489f8e821144000e0bdca7e65a8d1cc23a7ee7 ......
		 63489f8e821144000e0bdca7e65a8d1cc23a7ee7 has problem. Fixes commit -> 5df63c2a149ae65a9ec239e7c2af44efa6f79beb
commit 61534984904eaf3604626170dc718556210642a2
Author: Mike Kravetz <mike.kravetz@oracle.com>
Date:   Thu Apr 5 16:18:21 2018 -0700

    hugetlbfs: fix bug in pgoff overflow checking
    
    commit 5df63c2a149ae65a9ec239e7c2af44efa6f79beb upstream.
    
    This is a fix for a regression in 32 bit kernels caused by an invalid
    check for pgoff overflow in hugetlbfs mmap setup.  The check incorrectly
    specified that the size of a loff_t was the same as the size of a long.
    The regression prevents mapping hugetlbfs files at offsets greater than
    4GB on 32 bit kernels.
    
    On 32 bit kernels conversion from a page based unsigned long can not
    overflow a loff_t byte offset.  Therefore, skip this check if
    sizeof(unsigned long) != sizeof(loff_t).
    
    Link: http://lkml.kernel.org/r/20180330145402.5053-1-mike.kravetz@oracle.com
    Fixes: 63489f8e8211 ("hugetlbfs: check for pgoff value overflow")
    Reported-by: Dan Rue <dan.rue@linaro.org>
    Signed-off-by: Mike Kravetz <mike.kravetz@oracle.com>
    Tested-by: Anders Roxell <anders.roxell@linaro.org>
    Cc: Michal Hocko <mhocko@kernel.org>
    Cc: Yisheng Xie <xieyisheng1@huawei.com>
    Cc: "Kirill A . Shutemov" <kirill.shutemov@linux.intel.com>
    Cc: Nic Losby <blurbdust@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 797bfd05d4040fbf766198b3cfcc1838002cc890 ......
	 orig commit -> 68ef3bc3166468678d5e1fdd216628c35bd1186f ......
checking aa0533f4f7b283f9cf4e3c91fc6c719d433bb7f6 ......
	 orig commit -> d1897c9538edafd4ae6bbd03cc075962ddde2c21 ......
checking 2b4bb9f3869b3bdba46ef4a683fcaafeffb30852 ......
	 orig commit -> d418ff56b8f2d2b296daafa8da151fe27689b757 ......
checking 65ab5809b48d7c7b5d49d95b83d67c4b5c9bf12a ......
	 orig commit -> 3bf7b5d6d017c27e0d3b160aafb35a8e7cfeda1f ......
checking 596d0a8e7c774b6d18990a6ca0f79d3d5763fe8e ......
	 orig commit -> 62ac3f7305470e3f52f159de448bc1a771717e88 ......
checking 01b6d6839a2803b068348eaa4e48a00e90785f28 ......
	 orig commit -> ca6bfcb2f6d9deab3924bf901e73622a94900473 ......
checking 603f0168c1ef898dfe10abe361960fc7b0349fb5 ......
	 orig commit -> b17e5729a630d8326a48ec34ef02e6b4464a6aef ......
		 b17e5729a630d8326a48ec34ef02e6b4464a6aef has problem. Fixes commit -> 3bf7b5d6d017c27e0d3b160aafb35a8e7cfeda1f
commit 65ab5809b48d7c7b5d49d95b83d67c4b5c9bf12a
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Mar 19 16:33:59 2018 +0100

    libata: Make Crucial BX100 500GB LPM quirk apply to all firmware versions
    
    commit 3bf7b5d6d017c27e0d3b160aafb35a8e7cfeda1f upstream.
    
    Commit b17e5729a630 ("libata: disable LPM for Crucial BX100 SSD 500GB
    drive"), introduced a ATA_HORKAGE_NOLPM quirk for Crucial BX100 500GB SSDs
    but limited this to the MU02 firmware version, according to:
    http://www.crucial.com/usa/en/support-ssd-firmware
    
    MU02 is the last version, so there are no newer possibly fixed versions
    and if the MU02 version has broken LPM then the MU01 almost certainly
    also has broken LPM, so this commit changes the quirk to apply to all
    firmware versions.
    
    Fixes: b17e5729a630 ("libata: disable LPM for Crucial BX100 SSD 500GB...")
    Cc: stable@vger.kernel.org
    Cc: Kai-Heng Feng <kai.heng.feng@canonical.com>
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 3962dd60a67b5991cf583e890c69296ecdefced9 ......
	 orig commit -> 9c7be59fc519af9081c46c48f06f2b8fadf55ad8 ......
		 9c7be59fc519af9081c46c48f06f2b8fadf55ad8 has problem. Fixes commit -> d418ff56b8f2d2b296daafa8da151fe27689b757
commit 2b4bb9f3869b3bdba46ef4a683fcaafeffb30852
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Mar 19 16:34:00 2018 +0100

    libata: Modify quirks for MX100 to limit NCQ_TRIM quirk to MU01 version
    
    commit d418ff56b8f2d2b296daafa8da151fe27689b757 upstream.
    
    When commit 9c7be59fc519af ("libata: Apply NOLPM quirk to Crucial MX100
    512GB SSDs") was added it inherited the ATA_HORKAGE_NO_NCQ_TRIM quirk
    from the existing "Crucial_CT*MX100*" entry, but that entry sets model_rev
    to "MU01", where as the entry adding the NOLPM quirk sets it to NULL.
    
    This means that after this commit we no apply the NO_NCQ_TRIM quirk to
    all "Crucial_CT512MX100*" SSDs even if they have the fixed "MU02"
    firmware. This commit splits the "Crucial_CT512MX100*" quirk into 2
    quirks, one for the "MU01" firmware and one for all other firmware
    versions, so that we once again only apply the NO_NCQ_TRIM quirk to the
    "MU01" firmware version.
    
    Fixes: 9c7be59fc519af ("libata: Apply NOLPM quirk to ... MX100 512GB SSDs")
    Cc: stable@vger.kernel.org
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 5e67e65d21d0313337c8af375ca756f102ca8d7e ......
	 orig commit -> 2c1ec6fda2d07044cda922ee25337cf5d4b429b3 ......
checking cd47a2ccc60276ad683355b1fb55494ba1295e48 ......
	 orig commit -> 9173e5e80729c8434b8d27531527c5245f4a5594 ......
checking 8745d2063d2849f670edda260ce0a7a625d207e6 ......
	 orig commit -> 058f58e235cbe03e923b30ea7c49995a46a8725f ......
checking 15a4417cc65212d2cf895e872d9757b0785af4f4 ......
	 orig commit -> f44cb4b19ed40b655c2d422c9021ab2c2625adb6 ......
checking cd3141c02404597638f8c92831bf66e590f08354 ......
	 orig commit -> 0c6e526646c04ce31d4aaa280ed2237dd1cd774c ......
checking 3a64bcc3e67ab20f93410f382a4b5bde4c881ca3 ......
	 orig commit -> f0e8c61110c2c85903b136ba070daf643a8b6842 ......
checking b64ffeecfbdd2bc75edfc637f81670e95666d204 ......
	 orig commit -> 93b0beae721b3344923b4b8317e9d83b542f4ca6 ......
checking a1da0548a932db416d69ded28418dff11b05eecd ......
	 orig commit -> 655296c8bbeffcf020558c4455305d597a73bde1 ......
checking 8f59abbdeb9dd626310d259925323902cee0ed31 ......
	 orig commit -> f3f134f5260ae9ee1f5a4d0a8cc625c6c77655b4 ......
		 f3f134f5260ae9ee1f5a4d0a8cc625c6c77655b4 has problem. Fixes commit -> dd9a403495704fc80fb9f399003013ef2be2ee23
checking 9efd9903f5611d41172c40cea405e0d6a0cd2ca9 ......
	 orig commit -> 5682e268350f9eccdbb04006605c1b7068a7b323 ......
checking 55306d632ab8557991b2c7425b3f7b7878f1a07e ......
	 orig commit -> 7997f3b2df751aab0b8e60149b226a32966c41ac ......
checking 2eb67f85d55b46dc89a20501e4d0196ad2d30bf6 ......
	 orig commit -> 49012d1bf5f78782d398adb984a080a88ba42965 ......
checking ef006d43bc617d5dde8c3076a9b49bbce7dc3f82 ......
	 orig commit -> 2e517d681632326ed98399cb4dd99519efe3e32c ......
checking a05b610534a949f37fc38712d887813d5fd53b6a ......
	 orig commit -> 28b2182dad43f6f8fcbd167539a26714fd12bd64 ......
checking 8f5f582cabd70d0c7f2f7ac07ceffd84fd96976c ......
	 orig commit -> 1903be8222b7c278ca897c129ce477c1dd6403a8 ......
checking aa26895af31b1ff9b52fbd2bcf85cf3ce39563a1 ......
	 orig commit -> 47b7de2f6c18f75d1f2716efe752cba43f32a626 ......
checking a592984e03e65e81baff2efd058932e2ac56b60d ......
	 orig commit -> e22842dd64bf86753d3f2b6ea474d73fc1e6ca24 ......
checking 23a8825aea656847e5d18085ec7909e7a05da148 ......
	 orig commit -> c7151602255a36ba07c84fe2baeef846fdb988b8 ......
checking 72439a30c0960a18bb799e5778f9a54f754726ba ......
	 orig commit -> e74ef2194b41ba5e511fab29fe5ff00e72d2f42a ......
checking 39254113845c60996ace5d9c50f845e16c917eb6 ......
	 orig commit -> dbe7dc6b9b28f5b012b0bedc372aa0c52521f3e4 ......
checking fcc71c97a3844dcead693a13ad5c3273df8504ef ......
	 orig commit -> c658dc58c7eaa8569ceb0edd1ddbdfda84fe8aa5 ......
checking 856da5e097e0e1168f8d6d5d9db4eb58e3adda8a ......
	 orig commit -> e40bdb03d3cd7da66bd0bc1e40cbcfb49351265c ......
checking 7a42d11ab86e7528d290d8b487993555886975d1 ......
	 orig commit -> f0ba9d699e5ca2bcd07f70185d18720c4f1b597c ......
		 f0ba9d699e5ca2bcd07f70185d18720c4f1b597c has problem. Fixes commit -> 3ce0d5aa265bcc0a4b281cb0cabf92491276101b
commit adc02ac60919116f61ebcfbb4e5cfd0b6c3cb2f3
Author: Hui Wang <hui.wang@canonical.com>
Date:   Thu Apr 19 13:29:04 2018 +0800

    ALSA: hda/realtek - set PINCFG_HEADSET_MIC to parse_flags
    
    commit 3ce0d5aa265bcc0a4b281cb0cabf92491276101b upstream.
    
    Otherwise, the pin will be regarded as microphone, and the jack name
    is "Mic Phantom", it is always on in the pulseaudio even nothing is
    plugged into the jack. So the UI is confusing to users since the
    microphone always shows up in the UI even there is no microphone
    plugged.
    
    After adding this flag, the jack name is "Headset Mic Phantom", then
    the pulseaudio can handle its detection correctly.
    
    Fixes: f0ba9d699e5c ("ALSA: hda/realtek - Fix Dell headset Mic can't record")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Hui Wang <hui.wang@canonical.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking dc9d942e45c0ee184846d5dfc33012b3939ad5b3 ......
	 orig commit -> 88d42b2b45d7208cc872c2c9dec0b1ae6c6008d7 ......
checking 8d49f5625eda69690929622593bc3a3d8efef660 ......
	 orig commit -> a8d7bde23e7130686b76624b099f3e22dd38aef7 ......
checking 88079d335aac8c37e6ebdc142baab6ec34e27955 ......
	 orig commit -> 8e6b1a72a75bb5067ccb6b56d8ca4aa3a300a64e ......
checking 1fcbcfff716f8d495ec3790264bc3250c4b87e2f ......
	 orig commit -> 67a01afaf3d34893cf7d2ea19b34555d6abb7cb0 ......
checking 3aa7360be3338cc56aa2f52f61bb640656ac0404 ......
	 orig commit -> a6618f4aedb2b60932d766bd82ae7ce866e842aa ......
checking 2b706310e520243a083ed60b2005aef663e88873 ......
	 orig commit -> 3c3e4b3a708a9d6451052e348981f37d2b3e92b0 ......
checking d1138478e071c91fb676119dcc686dc4957637ae ......
	 orig commit -> 8b438686a001db64c21782d04ef68111e53c45d9 ......
checking f81b0e627b6701de3254432a551abef7cefbd0b3 ......
	 orig commit -> b91e146c38b003c899710ede6d05fc824675e386 ......
checking ea26b66f10cbb4f010030c5f33b7fbdd88066d3a ......
	 orig commit -> a821328c2f3003b908880792d71b2781b44fa53c ......
checking 124532fc3c2832a39438f95d0dd9a1cd35f3e456 ......
	 orig commit -> 3223a5a7d3a606dcb7d9190a788b9544a45441ee ......
checking 8b23936074d901351ed7c1b11ea0fd10e154c058 ......
	 orig commit -> 214cbc14734958fe533916fdb4194f5983ad4bc4 ......
checking e73ac1875971d40d5e16cb03a6f5049f65faf490 ......
	 orig commit -> a63d706ea719190a79a6c769e898f70680044d3e ......
checking fb45c56ebd0ffe62f9e45102750c394725d7b2e0 ......
	 orig commit -> 891731f6a5dbe508d12443175a7e166a2fba616a ......
