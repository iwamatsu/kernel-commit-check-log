Check from v4.14.21 to v4.14.22
Commit count: 160
checking 55b195735142c1a8ffccb21a4af0b1bd8bd4d1eb ......
checking c902ff1e4b2535a43980302d573020a16be29a2e ......
	 orig commit -> 698d0831ba87b92ae10b15e8203cfd59f5a59a35 ......
checking eff339b5d25029ce5aed6c85c59f1708b22ef9b2 ......
	 orig commit -> 2a4ac172c2f257d28c47b90c9e381bec31edcc44 ......
checking 06320148eecdd7377c4e512b1d694a26b7b61cd8 ......
	 orig commit -> f8f4aa68a8ae98ed79c8fee3488c38a2f5d2de8c ......
checking 95c0853883973c9c065959a33208751dcf8c57d1 ......
	 orig commit -> c927b080c67e3e97193c81fc1d27f4251bf4e036 ......
checking fc4cb30f2cd5f42631f81cb7afb7f5b325f5a23a ......
	 orig commit -> ac29fc66855b79c2960c63a4a66952d5b721d698 ......
checking 68a2a52047602994f5ded220f172da9e7e17a310 ......
	 orig commit -> 87a81dce53b1ea61acaeefa5191a0376a2d1d721 ......
checking e94fc847bd6e405e7c2b8849e52c102070777387 ......
	 orig commit -> 6e266610eb6553cfb7e7eb5d11914bd01509c406 ......
checking 385aeea7128918b57f7a4dd70c0fa55c50c6daa3 ......
	 orig commit -> ad2b6e01024ef23bddc3ce0bcb115ecd8c520b7e ......
checking 473900cd523a9d11a03a2eb5fec2e2ef029fb21b ......
	 orig commit -> 0c31f1d7be1b5c4858b1d714dcefa25f41428cab ......
checking 73974676f802f6634054539757dd66fee0754190 ......
	 orig commit -> c4f9d9cb2c29ff04c6b4bb09b72802d8aedfc7cb ......
checking 8babb53208856c1ec982c7bc26024865d0fba3a4 ......
	 orig commit -> 68a213d325c23d39f109f4c7c824b906a7d209de ......
checking 721d4b02495c917032ec66e8de4251f55717ca9b ......
	 orig commit -> 6d60ce384d1d5ca32b595244db4077a419acc687 ......
checking d91c3f2e540f978ee98558e10f108fd5f13b1e2a ......
	 orig commit -> 7f6f60a1ba52538c16f26930bfbcfe193d9d746a ......
checking abe8e59ab2f26645830bd61ed94063b00b84cda3 ......
	 orig commit -> ded600ea9fb51a495d2fcd21e90351df876488e8 ......
checking 98b35258b3941badc6998092d738a17f4c5d63fd ......
	 orig commit -> 8722e095f5a44d0e409e45c5ddc2ee9cf589c777 ......
checking 58d3cc9687f5baf704c866d61af302c50d302d91 ......
	 orig commit -> eb9436966fdc84cebdf222952a99898ab46d9bb0 ......
checking 4826773306b5275055632a59eda7957ae543eecd ......
	 orig commit -> babc8110057cb9ca542c3c1666cbda4e8ccf9250 ......
checking 645ad410dcbd32d2566ada0dd1eb65abfcfa3b9d ......
	 orig commit -> 33f801366bdf3f8b67dfe325b84f4051a090d01e ......
checking 06078bd640c3d5b339c841366963447a9f9a67b7 ......
	 orig commit -> 33cd3c07a976e11c3c4cc6b0b3db6760ad1590c5 ......
checking 20db5b3e3da3a112cb25baa0446af80976bd2208 ......
	 orig commit -> 732706afe1cc46ef48493b3d2b69c98f36314ae4 ......
checking 1840744a7f2e977f726f0197ecca5085f2e682da ......
	 orig commit -> 4d02ebd9bbbdde1d524e62b540b0402cee7bbcdf ......
		 4d02ebd9bbbdde1d524e62b540b0402cee7bbcdf has problem. Fixes commit -> 4f9ca2d8686ecfdd40ca4f0294a3d94f83f05cea
checking 8edeefab9ef2ddb13fad02594457c87386b7c2e0 ......
	 orig commit -> c810daba0ab5226084a56893a789af427a801146 ......
checking e8e50037b6dee16b7f7a4f2b0bc71f496c49c2b7 ......
	 orig commit -> c7b92172a61b91936be985cb9bc499a4ebc6489b ......
checking 5be88596c7b04b896a231d81d97948adb890a018 ......
	 orig commit -> aece09024414b54158e03aa45f4a4436e7cb996c ......
checking 30fe9f094c1784f03d08a977e17f66ef88095ca3 ......
	 orig commit -> 975b820b6836b6b6c42fb84cd2e772e2b41bca67 ......
checking 03e82f2b21579e8ff032a8aee018e2f5022eb4b4 ......
	 orig commit -> 6ab405114b0b229151ef06f4e31c7834dd09d0c0 ......
checking c232fd3d703499b352d293f6dbc76cda8c7783ed ......
	 orig commit -> 4ce3dbe397d7b6b15f272ae757c78c35e9e4b61d ......
checking 05fc2b8ba00a94587f9c3f9bed70e71266ceb08d ......
	 orig commit -> 62a277d43d47e74972de44d33bd3763e31992414 ......
checking 27e2830b31154c1034111115b75e4d26942bc26b ......
	 orig commit -> 5c9afbda911ce20b3f2181d1e440a0222e1027dd ......
checking 249d9f3ef5e93290168b00a98b8a3756e149907f ......
	 orig commit -> 48d83282db077f93b2cf40de120f4d6f29eb293b ......
checking e748a5ea4ff2693db71303f23454d0c620695906 ......
	 orig commit -> 45349821ab3a8d378b8f37e52c6fe1aa1b870c47 ......
		 45349821ab3a8d378b8f37e52c6fe1aa1b870c47 has problem. Fixes commit -> 48d83282db077f93b2cf40de120f4d6f29eb293b
commit 249d9f3ef5e93290168b00a98b8a3756e149907f
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Dec 6 15:14:18 2017 +0100

    scsi: bfa: fix type conversion warning
    
    commit 48d83282db077f93b2cf40de120f4d6f29eb293b upstream.
    
    A regression fix introduced a harmless type mismatch warning:
    
    drivers/scsi/bfa/bfad_bsg.c: In function 'bfad_im_bsg_vendor_request':
    drivers/scsi/bfa/bfad_bsg.c:3137:35: error: initialization of 'struct bfad_im_port_s *' from 'long unsigned int' makes pointer from integer without a cast [-Werror=int-conversion]
      struct bfad_im_port_s *im_port = shost->hostdata[0];
                                       ^~~~~
    drivers/scsi/bfa/bfad_bsg.c: In function 'bfad_im_bsg_els_ct_request':
    drivers/scsi/bfa/bfad_bsg.c:3353:35: error: initialization of 'struct bfad_im_port_s *' from 'long unsigned int' makes pointer from integer without a cast [-Werror=int-conversion]
      struct bfad_im_port_s *im_port = shost->hostdata[0];
    
    This changes the code back to shost_priv() once more, but encapsulates
    it in an inline function to document the rather unusual way of
    using the private data only as a pointer to the previously allocated
    structure.
    
    I did not try to get rid of the extra indirection level entirely,
    which would have been rather invasive and required reworking the entire
    initialization sequence.
    
    Fixes: 45349821ab3a ("scsi: bfa: fix access to bfad_im_port_s")
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Cc: Sasha Levin <Alexander.Levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking dd079e26a0e488267af0aeae1317245d60433111 ......
	 orig commit -> 9816ef6ecbc102b9bcbb1d83e12c7fb19924f38c ......
checking 9b8ffbead22d93673ac41b60eeb73869be20c860 ......
	 orig commit -> b6b5e8a691185606dfffff3198c89e3b4fd9d4f6 ......
		 b6b5e8a691185606dfffff3198c89e3b4fd9d4f6 has problem. Fixes commit -> 0231b1a074c672f8c00da00a57144072890d816b
5df7af85ecd88e8b5f1f31d6456c3cf38a8bbdda
commit 8b882dbba71768ff1d9a70e85488a9b5210f7b8f
Author: Kevin Hao <haokexin@gmail.com>
Date:   Tue Mar 20 09:44:52 2018 +0800

    net: phy: Add general dummy stubs for MMD register access
    
    [ Upstream commit 5df7af85ecd88e8b5f1f31d6456c3cf38a8bbdda ]
    
    For some phy devices, even though they don't support the MMD extended
    register access, it does have some side effect if we are trying to
    read/write the MMD registers via indirect method. So introduce general
    dummy stubs for MMD register access which these devices can use to avoid
    such side effect.
    
    Fixes: b6b5e8a69118 ("gianfar: Disable EEE autoneg by default")
    Signed-off-by: Kevin Hao <haokexin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 8d9d7f018464129de99ba5c63e00866a3a88750c
Author: Kevin Hao <haokexin@gmail.com>
Date:   Tue Mar 20 09:44:53 2018 +0800

    net: phy: realtek: Use the dummy stubs for MMD register access for rtl8211b
    
    [ Upstream commit 0231b1a074c672f8c00da00a57144072890d816b ]
    
    The Ethernet on mpc8315erdb is broken since commit b6b5e8a69118
    ("gianfar: Disable EEE autoneg by default"). The reason is that
    even though the rtl8211b doesn't support the MMD extended registers
    access, it does return some random values if we trying to access
    the MMD register via indirect method. This makes it seem that the
    EEE is supported by this phy device. And the subsequent writing to
    the MMD registers does cause the phy malfunction. So use the dummy
    stubs for the MMD register access to fix this issue.
    
    Fixes: b6b5e8a69118 ("gianfar: Disable EEE autoneg by default")
    Signed-off-by: Kevin Hao <haokexin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
commit 8d9d7f018464129de99ba5c63e00866a3a88750c
Author: Kevin Hao <haokexin@gmail.com>
Date:   Tue Mar 20 09:44:53 2018 +0800

    net: phy: realtek: Use the dummy stubs for MMD register access for rtl8211b
    
    [ Upstream commit 0231b1a074c672f8c00da00a57144072890d816b ]
    
    The Ethernet on mpc8315erdb is broken since commit b6b5e8a69118
    ("gianfar: Disable EEE autoneg by default"). The reason is that
    even though the rtl8211b doesn't support the MMD extended registers
    access, it does return some random values if we trying to access
    the MMD register via indirect method. This makes it seem that the
    EEE is supported by this phy device. And the subsequent writing to
    the MMD registers does cause the phy malfunction. So use the dummy
    stubs for the MMD register access to fix this issue.
    
    Fixes: b6b5e8a69118 ("gianfar: Disable EEE autoneg by default")
    Signed-off-by: Kevin Hao <haokexin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
checking f2f12ea19faee9dc0b1d80a90630df47cbb6d5f5 ......
	 orig commit -> 8dfd2f22d3bf3ab7714f7495ad5d897b8845e8c1 ......
checking 9c65a55722acf228bdf194954fe02084c1f1eeb1 ......
	 orig commit -> 3126aeec5313565bfa19e2dd8fd7e3c3390514cb ......
checking 0ef99ba03888ea4be143d0a9e9b401071d0fcbf8 ......
	 orig commit -> 3d5fdba1842bdd2eef29364c660558cb4cbb3fe0 ......
checking 74875198a68e352a1e5d55abff956552a50b762d ......
	 orig commit -> e46772a6946a7d1f3fbbc1415871851d6651f1d4 ......
checking f04764307af8ae268b133c5066068246574a3e39 ......
	 orig commit -> 03e9f8a05bce7330bcd9c5cc54c8e42d0fcbf993 ......
checking 64313a130c3d79561b55a9d82e5b3ffb9353b824 ......
	 orig commit -> 51ef7925e10688c57186d438e784532e063492e4 ......
checking 90b0805d6085a5d157b5a4488ca81ede00f1a065 ......
	 orig commit -> c8bcbfbd239ed60a6562964b58034ac8a25f4c31 ......
checking 27b0dc31686b212fb1996ece086a184d5eaac624 ......
	 orig commit -> 1b9e619c5bc8235cfba3dc4ced2fb0e3554a05d4 ......
checking 8edc5b9772d04af3871f71c68aa8a5b468a27a72 ......
	 orig commit -> b430b7751286b3acff2d324553c8cec4f1e87764 ......
checking a59eb84df2b793856fd3ba2eaca4098e95231058 ......
	 orig commit -> 5e351ad106997e06b2dc3da9c6b939b95f67fb88 ......
checking 0aeed5daaf62a38261f1198e4491c0ebf59528d9 ......
	 orig commit -> c20a548792f15f8d8e38cd74356301c6db0d241f ......
checking 8172a467adaebddf2577d79ccdbacdcc54ee9cbf ......
	 orig commit -> 2895db67b01cb875457c9c3f30a14723b6b5dfd5 ......
checking 034ddb54c33ecfb3408bd87415eb8f07712895b5 ......
	 orig commit -> c9d3fe9da094a9a7a3d3cd365b334b822e05f5e8 ......
	 orig commit -> 3b4477d2dcf2709d0be89e2a8dced3d0f4a017f2 ......
checking 8001a37b83c4b716936a40ab451b75d9f43d0c6b ......
	 orig commit -> 8afa10cbe281b10371fee5a87ab266e48d71a7f9 ......
checking e428e8ce3a008852e56e25c2fab4bc14c9f16915 ......
	 orig commit -> 5c472203421ab4f928aa1ae9e1dbcfdd80324148 ......
checking 6e95c4f921770c62b4c7f88b2b9da7bccaa6514e ......
	 orig commit -> 58117672943734715bbe7565ac9f062effa524f0 ......
checking 4bbd45c38ed6d0ded82ab453a1395f110814c389 ......
	 orig commit -> 42d779ffc186f6dd26271fc60a7417cb51aca93e ......
checking 45f9e44667c135f629c8e965a788b4f9030289f1 ......
	 orig commit -> d364b038bc962f494cffb8f6cb6cddbe41bcb5b6 ......
checking 29c9acbc7463e8d94c6527ba46ce3e1b6366a4ca ......
	 orig commit -> da340f921d3454f1521671c7a5a43ad3331fbe50 ......
checking dfb48332d6021a854160a1f5e131c3258b9f60f0 ......
	 orig commit -> edfb8d8fcb94a75b2e61c63549d4a5f6474ad3d2 ......
checking 0b028b06afc9b2acbae933fa1fd3be120252a4d3 ......
	 orig commit -> 31eb7431805493e10f4731f366cf4d4e3e952035 ......
checking 8b9d371a8c01c9ee321f87559f66f207e85a18c5 ......
	 orig commit -> 5aa04b3eb6fca63d2e9827be656dcadc26d54e11 ......
checking 30791140de2148c5fd1bd82e0ba986dd1c9e3441 ......
	 orig commit -> 969de0988b77e5a57aac2f7270191a3c50540c52 ......
checking ae5a0acea27346c1b32ab82ba6409adf15384fb1 ......
	 orig commit -> a98a4ebc8c61d20f0150d6be66e0e65223a347af ......
checking b35e7321347a0ff2f06516f85797e35e277ea8b5 ......
	 orig commit -> a7f3f939dd7d8398acebecd1ceb2e9e7ffbe91d2 ......
checking 9537ff76fa06b7dfac07a6634d213282d6406fec ......
	 orig commit -> e814bccbafece52a24e152d2395b5d49eef55841 ......
checking b0d049e9131406607cabe6e508463584613fb36e ......
	 orig commit -> c175cb7cd953782bbf4e8bdf088ad61440d6dde5 ......
checking 4c5ae538b3da25b47c0b8c87209697ea46579641 ......
	 orig commit -> e53111ad5deaef98d8c18a9933ef1f5624c5979d ......
checking 567c1f767ef4b8fcd96dcf1599b36dbce94d3c14 ......
	 orig commit -> 18022a1bd3709b74ca31ef0b28fccd52bcd6c504 ......
checking 86659fbb32a5f6d4c97e6f9058bf3f65d7501049 ......
	 orig commit -> 2012b7d6b2868c532f22d9172c8b24611637eb48 ......
checking 778e7124f71dc42e0863c21aefd99b7c2155a4b8 ......
	 orig commit -> acf1c02f023926b8b04672a9e81b1711ae681619 ......
checking 7a7bcee6d73cb8c1c22b18c709496af767d8dc46 ......
	 orig commit -> d30fc5126efb0c33b7adf5966d3051db2c3d7721 ......
checking 559be170a4702d6546141584e5e784f9da9f8fe6 ......
	 orig commit -> aff69d89bdebc39235cddb4445371eb979b49685 ......
checking 2ded534c9074c8e8df4636e617f778618c695593 ......
	 orig commit -> a9cd1a673737dd81332fce1145801bfacfb90d90 ......
checking 1ffc1b361ac23ee73efd87f5fc812d5e39e06b2e ......
	 orig commit -> 23a9cd2ad90543e9da3786878d2b2729c095439d ......
checking f917b1c60e4a5570886976c1baac8980c41e9d66 ......
	 orig commit -> a283cdc4d3670700182c820b59078387f9a01a30 ......
checking 03f23424aa2b2809275db1b535862b9d8ddc7056 ......
	 orig commit -> 10499986dbd8778e1acf9f9d2e166800dfee44b4 ......
checking f10f5b89c13635c32ebf6435c7849aef46e2ef4e ......
	 orig commit -> 100d6de2ced538c539d923dc14a1b5cbae234503 ......
checking 97ef3a5027b043bcb6a9c4aeefdcbfe4cf6221f7 ......
	 orig commit -> 7465894e90e5a47e0e52aa5f1f708653fc40020f ......
checking 2117bba3cfbb120dee072a11aba4a116f316dff5 ......
	 orig commit -> 044d71bc6cdee8980d0fdc35ec79a0d5818b2ce3 ......
checking 844dfa1b41887029fce142f83cae07dfb9e6e86e ......
	 orig commit -> 8935780b9f7bbad0f2eb5dd43f61ba7b509a1575 ......
checking 04521caaea964d627d4c969da7887935150d7280 ......
	 orig commit -> 7c5c2c2d18d778e51fd8b899965097168306031c ......
checking b1f0445d07f356a1b79c2fc6a370d755f703bc5e ......
	 orig commit -> 6ad4cc8d1ac483e0fd33f605fb2788b0ecf51ed4 ......
checking 073cd31e2fd18de990c6a1617c6c281eb6fb8ba3 ......
	 orig commit -> 7f8e2a85c1b0bd440ffe87be82c79fdc319e8291 ......
checking 4c194e5b0d90869a2fad206d106d524ba1c9232b ......
	 orig commit -> a158531f3c92467df0e93e000d58185acae78a6e ......
checking d4ec37fab6008e17a1f2af26db8c6a801c9f7ec6 ......
	 orig commit -> a154f8e399a063137fc42b961f437248d55ece29 ......
checking 801f3b0c40da62ddc27dbd3e06331c8144cf394e ......
	 orig commit -> fce8ba670b7418319da14a6fc6668db1f1a96267 ......
checking b8c033b1f4bfda9315bf35063530cff79dec8f28 ......
	 orig commit -> 070250a1715cee2297de0d9e7e2cea58be999d37 ......
checking 2dc548c0671dc614358f6fc2ca98ad2d5e149593 ......
	 orig commit -> 23721a755f98ac846897a013c92cccb281c1bcc8 ......
checking 49a3efa81147c088505baa35eca827c4df6d4c38 ......
	 orig commit -> 58d0d19a204604ca0da26058828a53558b265da3 ......
checking c05bbe5dc862789cbbc809a4c6b4422d0b158adb ......
	 orig commit -> 4bd6683da2e64590bdc27ecf7e61ad8376861768 ......
checking 6f8a0b09520b15b66c44ff135c3cd482600e1549 ......
	 orig commit -> 996548499df61babae5306544c7daf5fd39db31c ......
checking 8b6c6ab154b95b862f9dfd75bca6acebb5bd138d ......
	 orig commit -> 321a7c35c90cc834851ceda18a8ee18f1d032b92 ......
checking 7efaeefce5c9bdfa015aa56f7d581f4f01a64e70 ......
	 orig commit -> 89d0aeab4252adc2a7ea693637dd21c588bfa2d1 ......
checking 984d85a69da98ef34389a31e8ed7f527e02cf637 ......
	 orig commit -> 34900ec5c9577cc1b0f22887ac7349f458ba8ac2 ......
checking 475e6b835d8c395eab9d7e633e37d6daa20999f0 ......
	 orig commit -> ccafc38f1c778847ab6d53dd7933260426731cf3 ......
checking 863b61caaeb83cdd5ae7bc8e8a7da6b4bf103832 ......
	 orig commit -> 05d0e62d9fa0f1002cf82009ef31b36174da5472 ......
checking 182d948c7ae957a152251d34e66d0e3ee382c197 ......
	 orig commit -> af98f2273fd0af31ce327cd1406b67c7be0b6734 ......
checking bfb3906919d12aabc9d1974bb12c01902f7d2506 ......
	 orig commit -> 59622fd496a3175c7bf549046e091d81c303ecff ......
checking 76103695459665e6f1cc19097a619b57766d2798 ......
	 orig commit -> ca41e244517d6d3f1600c229ff7ca615049c1e9c ......
checking a1fd303e1e4160e5fe9e41e5738e9e04d311dc4a ......
	 orig commit -> 627395a6f8091c0aa18f49dca7df59ba3ec147ef ......
checking c601b98e14dfbda5175a2aabc6578c3b903cc095 ......
	 orig commit -> cd7594ac3281722cb8f10d6f6c7e4287747c7a9d ......
checking 90e4395ca72da52dd1ecda333b5612f546806d4c ......
	 orig commit -> 3c18bbf3d11d2005da08b57ff26f44ff1c2b12d0 ......
checking 104df4374d5d75fe3b6d2d7e9c67aa9510e4a385 ......
	 orig commit -> cf87634c8b24e24bf379b8c6807c8b0fb5f23567 ......
checking 17e712b1294a35773ed3a7c43b68bfb8fbe1b8f9 ......
	 orig commit -> b6d6af7226465b6d11eac09d0be2ab78a4a9eb62 ......
checking b59a1da647f163d0bf035f823a908b45c357643a ......
	 orig commit -> d09220a887f70368afa79e850c95e74890c0a32d ......
		 d09220a887f70368afa79e850c95e74890c0a32d has problem. Fixes commit -> 863204cfdae98626a92535ac928ad79f4d6b74ff
commit c116baf79f0ecedd94be496be622ab6b65a243e7
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Dec 6 14:17:17 2017 +0100

    ARM: omap2: hide omap3_save_secure_ram on non-OMAP3 builds
    
    commit 863204cfdae98626a92535ac928ad79f4d6b74ff upstream.
    
    In configurations without CONFIG_OMAP3 but with secure RAM support,
    we now run into a link failure:
    
    arch/arm/mach-omap2/omap-secure.o: In function `omap3_save_secure_ram':
    omap-secure.c:(.text+0x130): undefined reference to `save_secure_ram_context'
    
    The omap3_save_secure_ram() function is only called from the OMAP34xx
    power management code, so we can simply hide that function in the
    appropriate #ifdef.
    
    Fixes: d09220a887f7 ("ARM: OMAP2+: Fix SRAM virt to phys translation for save_secure_ram_context")
    Acked-by: Tony Lindgren <tony@atomide.com>
    Tested-by: Dan Murphy <dmurphy@ti.com>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 2ba11e4309b58d290d471f24b2f89d481e4d873f ......
	 orig commit -> fd00cf81a9a84776ba58e56bd042c726dcf75cf3 ......
checking 371cf4043b29e55cfa30c68e7304659e6e253222 ......
	 orig commit -> c9d24f78268be444e803fb2bb138a2f598de9c23 ......
checking c276379fa71576b9ae082dd8c1dc00ecb32bdba1 ......
	 orig commit -> 009f41aed4b3e11e6dc1e3c07377a10c20f1a5ed ......
checking d74450a91a4af7bc7406403064e4325513d1fcdf ......
	 orig commit -> 7d2b8e6aaf9ee87910c2337e1c59bb5d3e3ba8c5 ......
checking 5ccf5138bd107624a9ef371166399a6c970babd7 ......
	 orig commit -> e31b617d0a63c6558485aaa730fd162faa95a766 ......
checking 6648ab4f03c01bd84815d1d0e4ab55485c0994c7 ......
	 orig commit -> 02b7b2844c2ffd3b614ec2b9293e8c7f041d60da ......
checking b46af094b82a47ca1cbba9092578f8f96af82798 ......
	 orig commit -> 8ca86f1639ec5890d400fff9211aca22d0a392eb ......
checking 047ba51a55e369ba2b5a9e7e5dfa179cb10a7569 ......
	 orig commit -> f88982679f54f75daa5b8eff3da72508f1e7422f ......
checking 95f9c2edcbaea324be43d45540dda080fcd677f8 ......
	 orig commit -> ce8a3a9e76d0193e2e8d74a06d275b3c324ca652 ......
		 ce8a3a9e76d0193e2e8d74a06d275b3c324ca652 has problem. Fixes commit -> 740a5759bf222332fbb5eda42f89aa25ba38f9b2
commit 23081c335df988f3ddcceae253aa7504c78c3094
Author: Yisheng Xie <xieyisheng1@huawei.com>
Date:   Wed Feb 28 14:59:22 2018 +0800

    staging: android: ashmem: Fix possible deadlock in ashmem_ioctl
    
    commit 740a5759bf222332fbb5eda42f89aa25ba38f9b2 upstream.
    
    ashmem_mutex may create a chain of dependencies like:
    
    CPU0                                    CPU1
     mmap syscall                           ioctl syscall
     -> mmap_sem (acquired)                 -> ashmem_ioctl
     -> ashmem_mmap                            -> ashmem_mutex (acquired)
        -> ashmem_mutex (try to acquire)       -> copy_from_user
                                                  -> mmap_sem (try to acquire)
    
    There is a lock odering problem between mmap_sem and ashmem_mutex causing
    a lockdep splat[1] during a syzcaller test. This patch fixes the problem
    by move copy_from_user out of ashmem_mutex.
    
    [1] https://www.spinics.net/lists/kernel/msg2733200.html
    
    Fixes: ce8a3a9e76d0 (staging: android: ashmem: Fix a race condition in pin ioctls)
    Reported-by: syzbot+d7a918a7a8e1c952bc36@syzkaller.appspotmail.com
    Signed-off-by: Yisheng Xie <xieyisheng1@huawei.com>
    Cc: "Joel Fernandes (Google)" <joel.opensrc@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 441b5d10e4602b25ad960d1ca1c6bb77e788c220 ......
	 orig commit -> 5eeb2ca02a2f6084fc57ae5c244a38baab07033a ......
checking 129926c3756ac93c19608f8065d9654a99006fbf ......
	 orig commit -> e46a3b3ba7509cb7fda0e07bc7c63a2cd90f579b ......
checking f6b581e3db4a5d9cf81ed7587f2655095259d0a1 ......
	 orig commit -> dfec091439bb2acf763497cfc58f2bdfc67c56b7 ......
checking 80b1c636a72b7999fc5b91c2259839393fc4fb3e ......
	 orig commit -> acbf76ee05067c3942852019993f7beb69a0f45f ......
checking 225fcdd0e33b26d3269b0cc517d6c91bf5ce9285 ......
	 orig commit -> a21b4c10c7bf5b58112afa20d6fa829e8d74e3e6 ......
checking 52d4c1978cb49e7228c4d8c8bcddfdb734a51a3f ......
	 orig commit -> c1530ac5a3ce93a1f02adabc4508b5fbf862dfe2 ......
checking 1f4f5777e5fa10f8d4c50aeece7d3eb2e9865d09 ......
	 orig commit -> 1783c9d7cb7bc3181b9271665959b87280d98d8e ......
checking 14b2ad0bb2fa7bbc5b5b90ec3b3b3e7a68aa10c2 ......
	 orig commit -> 40ca54e3a686f13117f3de0c443f8026dadf7c44 ......
checking 701ba0df95205187f1afc4f3f520bff57ba4001d ......
	 orig commit -> 8d74e9f88d65af8bb2e095aff506aa6eac755ada ......
checking 83ee02de2c8d958b598498a81323635f02bc4b1e ......
	 orig commit -> f10b4cff98c6977668434fbf5dd58695eeca2897 ......
checking c64534f82608a8f9d58d7c74d4a12122bdb2c3fe ......
	 orig commit -> 681648e67d43cf269c5590ecf021ed481f4551fc ......
checking 6e12516df1367e80f25fc204b6002db2a700a6ad ......
	 orig commit -> 7dc68e98757a8eccf8ca7a53a29b896f1eef1f76 ......
checking be6c08bf9aea46775232e48241b55e768362b9e0 ......
	 orig commit -> ba7cd5d95f25cc6005f687dabdb4e7a6063adda9 ......
checking 516c855cf51462678eb50ec52da845c10734d0bf ......
	 orig commit -> 3f34cfae1238848fd53f25e5c8fd59da57901f4b ......
		 3f34cfae1238848fd53f25e5c8fd59da57901f4b has problem. Fixes commit -> dfec091439bb2acf763497cfc58f2bdfc67c56b7
01ea306f2ac2baff98d472da719193e738759d93
commit 485595768d89f53581a7527285acf97880fc65a6
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Thu Feb 8 12:19:00 2018 +0100

    netfilter: drop outermost socket lock in getsockopt()
    
    commit 01ea306f2ac2baff98d472da719193e738759d93 upstream.
    
    The Syzbot reported a possible deadlock in the netfilter area caused by
    rtnl lock, xt lock and socket lock being acquired with a different order
    on different code paths, leading to the following backtrace:
    Reviewed-by: Xin Long <lucien.xin@gmail.com>
    
    ======================================================
    WARNING: possible circular locking dependency detected
    4.15.0+ #301 Not tainted
    ------------------------------------------------------
    syzkaller233489/4179 is trying to acquire lock:
      (rtnl_mutex){+.+.}, at: [<0000000048e996fd>] rtnl_lock+0x17/0x20
    net/core/rtnetlink.c:74
    
    but task is already holding lock:
      (&xt[i].mutex){+.+.}, at: [<00000000328553a2>]
    xt_find_table_lock+0x3e/0x3e0 net/netfilter/x_tables.c:1041
    
    which lock already depends on the new lock.
    ===
    
    Since commit 3f34cfae1230 ("netfilter: on sockopt() acquire sock lock
    only in the required scope"), we already acquire the socket lock in
    the innermost scope, where needed. In such commit I forgot to remove
    the outer-most socket lock from the getsockopt() path, this commit
    addresses the issues dropping it now.
    
    v1 -> v2: fix bad subj, added relavant 'fixes' tag
    
    Fixes: 22265a5c3c10 ("netfilter: xt_TEE: resolve oif using netdevice notifiers")
    Fixes: 202f59afd441 ("netfilter: ipt_CLUSTERIP: do not hold dev")
    Fixes: 3f34cfae1230 ("netfilter: on sockopt() acquire sock lock only in the required scope")
    Reported-by: syzbot+ddde1c7b7ff7442d7f2d@syzkaller.appspotmail.com
    Suggested-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Tested-by: Krzysztof Piotr Oledzki <ole@ans.pl>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 485595768d89f53581a7527285acf97880fc65a6
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Thu Feb 8 12:19:00 2018 +0100

    netfilter: drop outermost socket lock in getsockopt()
    
    commit 01ea306f2ac2baff98d472da719193e738759d93 upstream.
    
    The Syzbot reported a possible deadlock in the netfilter area caused by
    rtnl lock, xt lock and socket lock being acquired with a different order
    on different code paths, leading to the following backtrace:
    Reviewed-by: Xin Long <lucien.xin@gmail.com>
    
    ======================================================
    WARNING: possible circular locking dependency detected
    4.15.0+ #301 Not tainted
    ------------------------------------------------------
    syzkaller233489/4179 is trying to acquire lock:
      (rtnl_mutex){+.+.}, at: [<0000000048e996fd>] rtnl_lock+0x17/0x20
    net/core/rtnetlink.c:74
    
    but task is already holding lock:
      (&xt[i].mutex){+.+.}, at: [<00000000328553a2>]
    xt_find_table_lock+0x3e/0x3e0 net/netfilter/x_tables.c:1041
    
    which lock already depends on the new lock.
    ===
    
    Since commit 3f34cfae1230 ("netfilter: on sockopt() acquire sock lock
    only in the required scope"), we already acquire the socket lock in
    the innermost scope, where needed. In such commit I forgot to remove
    the outer-most socket lock from the getsockopt() path, this commit
    addresses the issues dropping it now.
    
    v1 -> v2: fix bad subj, added relavant 'fixes' tag
    
    Fixes: 22265a5c3c10 ("netfilter: xt_TEE: resolve oif using netdevice notifiers")
    Fixes: 202f59afd441 ("netfilter: ipt_CLUSTERIP: do not hold dev")
    Fixes: 3f34cfae1230 ("netfilter: on sockopt() acquire sock lock only in the required scope")
    Reported-by: syzbot+ddde1c7b7ff7442d7f2d@syzkaller.appspotmail.com
    Suggested-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
    Tested-by: Krzysztof Piotr Oledzki <ole@ans.pl>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f6b581e3db4a5d9cf81ed7587f2655095259d0a1
Author: Paolo Abeni <pabeni@redhat.com>
Date:   Thu Feb 15 16:59:49 2018 +0100

    dn_getsockoptdecnet: move nf_{get/set}sockopt outside sock lock
    
    commit dfec091439bb2acf763497cfc58f2bdfc67c56b7 upstream.
    
    After commit 3f34cfae1238 ("netfilter: on sockopt() acquire sock lock
    only in the required scope"), the caller of nf_{get/set}sockopt() must
    not hold any lock, but, in such changeset, I forgot to cope with DECnet.
    
    This commit addresses the issue moving the nf call outside the lock,
    in the dn_{get,set}sockopt() with the same schema currently used by
    ipv4 and ipv6. Also moves the unhandled sockopts of the end of the main
    switch statements, to improve code readability.
    
    Reported-by: Petr Vandrovec <petr@vandrovec.name>
    BugLink: https://bugzilla.kernel.org/show_bug.cgi?id=198791#c2
    Fixes: 3f34cfae1238 ("netfilter: on sockopt() acquire sock lock only in the required scope")
    Signed-off-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 2852a7dd15fe311e96be2d36a7361faac471b7a9 ......
	 orig commit -> 1a38956cce5eabd7b74f94bab70265e4df83165e ......
checking f25f048d3bde992239b7e019467b4fb4832bac99 ......
	 orig commit -> da17c73b6eb74aad3c3c0654394635675b623b3e ......
checking 6609d112229fff5dbccf57bbc31facffc1ba06dd ......
	 orig commit -> 889c604fd0b5f6d3b8694ade229ee44124de1127 ......
checking 4249e8af8108afadc6316d9e4815f3333c9770d0 ......
	 orig commit -> a77660d231f8b3d84fd23ed482e0964f7aa546d6 ......
checking 7b5ec5505945ee2ba6f6dbab51483a1102720623 ......
	 orig commit -> efdab992813fb2ed825745625b83c05032e9cda2 ......
checking 2cc50a1946e69400399575f8ea63c2131baa83b7 ......
	 orig commit -> 69e0927b3774563c19b5fb32e91d75edc147fb62 ......
checking 2c565a9538a13e0b427ff7c3fbd2ee8e8cd59709 ......
	 orig commit -> e4e179a844f52e907e550f887d0a2171f1508af1 ......
checking 747ad3d315923647ca4d79d92b28b512e85cd96e ......
	 orig commit -> 0c75f10312a35b149b2cebb1832316b35c2337ca ......
checking 392e03283a3ddddf7c48dcc002b8668e1612a578 ......
	 orig commit -> d8c7fe9f2a486a6e5f0d5229ca43807af5ab22c6 ......
checking 9bae74042eb17eeaed782f85438a7a131fe68282 ......
	 orig commit -> 72c27a68a2a3f650f0dc7891ee98f02283fc11af ......
checking ca181454e726e47434566d9a126e9cfc29db48ae ......
	 orig commit -> 4b14752ec4e0d87126e636384cf37c8dd9df157c ......
checking 116df867dbc12297d0e04cd6540ecad401f4c060 ......
	 orig commit -> ef28df55ac27e1e5cd122e19fa311d886d47a756 ......
checking b517942f5126c04fff8ff341cdd6a28b0a8de84f ......
	 orig commit -> 0bf7800f1799b5b1fd7d4f024e9ece53ac489011 ......
		 0bf7800f1799b5b1fd7d4f024e9ece53ac489011 has problem. Fixes commit -> 7fc17e909edfb9bf421ee04e981d3d474175c7c7
checking 6688494804d87dcc8c936941f3f9969797af5419 ......
	 orig commit -> 6e6e41c3112276288ccaf80c70916779b84bb276 ......
		 6e6e41c3112276288ccaf80c70916779b84bb276 has problem. Fixes commit -> 54e02162d4454a99227f520948bf4494c3d972d0
commit 6fc72fd1565bcd7f872ad89cd0c7a60a7cf68c96
Author: Jason Wang <jasowang@redhat.com>
Date:   Sun Feb 11 11:28:12 2018 +0800

    ptr_ring: prevent integer overflow when calculating size
    
    [ Upstream commit 54e02162d4454a99227f520948bf4494c3d972d0 ]
    
    Switch to use dividing to prevent integer overflow when size is too
    big to calculate allocation size properly.
    
    Reported-by: Eric Biggers <ebiggers3@gmail.com>
    Fixes: 6e6e41c31122 ("ptr_ring: fail early if queue occupies more than KMALLOC_MAX_SIZE")
    Signed-off-by: Jason Wang <jasowang@redhat.com>
    Acked-by: Michael S. Tsirkin <mst@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 73e6a383d1509d8bee58579041e76e5d36793c18 ......
	 orig commit -> 6815a0b444572527256f0d0efd8efe3ddede6018 ......
checking b43a3e21937c869706e94efb53ad166478ad1a93 ......
	 orig commit -> 58fc7f73a85d45a47057dad2af53502fdf6cf778 ......
checking 90bca3712acb0ddffbb85beb099eb7eeafba6cd3 ......
	 orig commit -> 2a4340c57717162c6bf07a0860d05711d4de994b ......
checking 8c666e6471acb1fe33b6b88d95486ed2d548d944 ......
	 orig commit -> d18d1a5ac811d12f7ebc1129230312b5f2c50cb8 ......
checking 3587188ad596da05a8dd691fc28ee56d335f41b8 ......
	 orig commit -> b3a0066005821acdc0cdb092cb72587182ab583f ......
checking 90f9a1ff1e8eaa15c1e33fefa44705707db4de2b ......
	 orig commit -> a6da0024ffc19e0d47712bb5ca4fd083f76b07df ......
checking 2df0d6de5eff25b8fb4e858c9d77c98cae8a0bc0 ......
	 orig commit -> ecca8f88da5c4260cc2bccfefd2a24976704c366 ......
checking 4d4d55665f32c20117ec1d1a96dc807f6d04fc09 ......
	 orig commit -> 6a53b7593233ab9e4f96873ebacc0f653a55c3e1 ......
		 6a53b7593233ab9e4f96873ebacc0f653a55c3e1 has problem. Fixes commit -> dbb2483b2a46fbaf833cfb5deb5ed9cace9c7399
checking 70c5e41f4734ee5cbafb5c49576bdc914f02c6b8 ......
	 orig commit -> ddc47e4404b58f03e98345398fb12d38fe291512 ......
checking d6b36a2616ab94040b24ce622bd6befb1a28e4aa ......
	 orig commit -> d0e312fe3d34c1bc014a7f8ec6540d05e8077483 ......
checking 846666fad8d7de79b47a4147e39330fe96e1bdc3 ......
	 orig commit -> f29810335965ac1f7bcb501ee2af5f039f792416 ......
		 f29810335965ac1f7bcb501ee2af5f039f792416 has problem. Fixes commit -> 37b95951c58fdf08dc10afa9d02066ed9f176fb5
commit 615462370ab6c9a22d033ecf4ac3d005274701a6
Author: Tianyu Lan <lantianyu1986@gmail.com>
Date:   Tue Jan 16 17:34:07 2018 +0800

    KVM/x86: Fix wrong macro references of X86_CR0_PG_BIT and X86_CR4_PAE_BIT in kvm_valid_sregs()
    
    commit 37b95951c58fdf08dc10afa9d02066ed9f176fb5 upstream.
    
    kvm_valid_sregs() should use X86_CR0_PG and X86_CR4_PAE to check bit
    status rather than X86_CR0_PG_BIT and X86_CR4_PAE_BIT. This patch is
    to fix it.
    
    Fixes: f29810335965a(KVM/x86: Check input paging mode when cs.l is set)
    Reported-by: Jeremi Piotrowski <jeremi.piotrowski@gmail.com>
    Cc: Paolo Bonzini <pbonzini@redhat.com>
    Cc: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Tianyu Lan <Tianyu.Lan@microsoft.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Jack Wang <jinpu.wang@profitbricks.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 7880fc541566166d140954825fc83c826534e622 ......
	 orig commit -> bb422a738f6566f7439cd347d54e321e4fe92a9f ......
checking 8e754b4ec589f14ef6efa454ee872580ba1802fa ......
	 orig commit -> 862591bf4f519d1b8d859af720fafeaebdd0162a ......
checking e8370258ca0bc9e630043157db862be2c5c341a6 ......
	 orig commit -> 2f10a61cee8fdb9f8da90f5db687e1862b22cf06 ......
checking 85c31887a20da06fe2803b4ec1031b9af89c1899 ......
	 orig commit -> b1bdcb59b64f806ef08d25a85c39ffb3ad841ce6 ......
checking 201941360944afbde6ab6f5ff70f96f16d334971 ......
	 orig commit -> 374d1b5a81f7f9cc5e7f095ac3d5aff3f6600376 ......
checking 447f1170c23bea791c3b5efdc0264519fd22f565 ......
	 orig commit -> 51a1aaa631c90223888d8beac4d649dc11d2ca55 ......
checking b9e441e2e6346284120c9e8e24c4050c245b8895 ......
	 orig commit -> 59b179b48ce2a6076448a44531242ac2b3f6cef2 ......
checking ddf0936b9eefe0af6d046cd7d6a9212478812c9a ......
	 orig commit -> 6f16101e6a8b4324c36e58a29d9e0dbb287cdedb ......
checking 6c0b71202f83f7851f173caee9059f830e3b0dfd ......
	 orig commit -> 581e7226a5d43f629eb6399a121f85f6a15f81be ......
checking 44890e9ff771ef11777b2d1ebf8589255eb12502 ......
	 orig commit -> e5571240236c5652f3e079b1d5866716a7ad819c ......
		 e5571240236c5652f3e079b1d5866716a7ad819c has problem. Fixes commit -> dff8baa261174de689a44572d0ea182d7aa70598
commit 19042316b9e12c93bf334a04d4dd7a4e846c7311
Author: Tom Herbert <tom@quantonium.net>
Date:   Wed Feb 14 09:22:42 2018 -0800

    kcm: Call strp_stop before strp_done in kcm_attach
    
    commit dff8baa261174de689a44572d0ea182d7aa70598 upstream.
    
    In kcm_attach strp_done is called when sk_user_data is already
    set to fail the attach. strp_done needs the strp to be stopped and
    warns if it isn't. Call strp_stop in this case to eliminate the
    warning message.
    
    Reported-by: syzbot+88dfb55e4c8b770d86e3@syzkaller.appspotmail.com
    Fixes: e5571240236c5652f ("kcm: Check if sk_user_data already set in kcm_attach"
    Signed-off-by: Tom Herbert <tom@quantonium.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking ed25667f33032b7715bc4af67e6728020fe75f5e ......
	 orig commit -> e9cb4239134c860e5f92c75bf5321bd377bb505b ......
checking ebf7d035c39a70756a9b68a6a670ee8a39ecc586 ......
	 orig commit -> e901b9873876ca30a09253731bd3a6b00c44b5b0 ......
