Check from v4.14.37 to v4.14.38
Commit count: 80
checking a87463f7420cd33c8cb3ece420468023c16f27b4 ......
checking 3e4915873cff08e6b02b5807336ef559690ddecf ......
	 orig commit -> 53fa1f6e8a5958da698a31edf366ffe90596b490 ......
		 53fa1f6e8a5958da698a31edf366ffe90596b490 has problem. Fixes commit -> d693c008e3ca04db5916ff72e68ce661888a913b
cecf3e3e0803462335e25d083345682518097334
commit 30d7823d1d8386ff4d5378a374a3a6713be90892
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Jan 7 17:08:21 2019 +0100

    ACPI / video: Extend chassis-type detection with a "Lunch Box" check
    
    [ Upstream commit d693c008e3ca04db5916ff72e68ce661888a913b ]
    
    Commit 53fa1f6e8a59 ("ACPI / video: Only default only_lcd to true on
    Win8-ready _desktops_") introduced chassis type detection, limiting the
    lcd_only check for the backlight to devices where the chassis-type
    indicates their is no builtin LCD panel.
    
    The purpose of the lcd_only check is to avoid advertising a backlight
    interface on desktops, since skylake and newer machines seem to always
    have a backlight interface even if there is no LCD panel. The limiting
    of this check to desktops only was done to avoid breaking backlight
    support on some laptops which do not have the lcd flag set.
    
    The Fujitsu ESPRIMO Q910 which is a compact (NUC like) desktop machine
    has a chassis type of 0x10 aka "Lunch Box". Without the lcd_only check
    we end up falsely advertising backlight/brightness control on this
    device. This commit extend the dmi_is_desktop check to return true
    for type 0x10 to fix this.
    
    Fixes: 53fa1f6e8a59 ("ACPI / video: Only default only_lcd to true ...")
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 67dcd5d73fc92a2a76dfc90331e64a52f8b6f01b
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Jan 7 17:08:20 2019 +0100

    ACPI / video: Refactor and fix dmi_is_desktop()
    
    [ Upstream commit cecf3e3e0803462335e25d083345682518097334 ]
    
    This commit refactors the chassis-type detection introduced by
    commit 53fa1f6e8a59 ("ACPI / video: Only default only_lcd to true on
    Win8-ready _desktops_") (where desktop means anything without a builtin
    screen).
    
    The DMI chassis_type is an unsigned integer, so rather then doing a
    whole bunch of string-compares on it, convert it to an int and feed
    the result to a switch case.
    
    Note the switch case uses hex values, this is done because the spec
    uses hex values too. This changes the check for "Main Server Chassis"
    from checking for 11 decimal to 11 hexadecimal, this is a bug fix,
    the original check for 11 decimal was wrong.
    
    Fixes: 53fa1f6e8a59 ("ACPI / video: Only default only_lcd to true ...")
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    [ rjw: Drop redundant return statements ]
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
commit 30d7823d1d8386ff4d5378a374a3a6713be90892
Author: Hans de Goede <hdegoede@redhat.com>
Date:   Mon Jan 7 17:08:21 2019 +0100

    ACPI / video: Extend chassis-type detection with a "Lunch Box" check
    
    [ Upstream commit d693c008e3ca04db5916ff72e68ce661888a913b ]
    
    Commit 53fa1f6e8a59 ("ACPI / video: Only default only_lcd to true on
    Win8-ready _desktops_") introduced chassis type detection, limiting the
    lcd_only check for the backlight to devices where the chassis-type
    indicates their is no builtin LCD panel.
    
    The purpose of the lcd_only check is to avoid advertising a backlight
    interface on desktops, since skylake and newer machines seem to always
    have a backlight interface even if there is no LCD panel. The limiting
    of this check to desktops only was done to avoid breaking backlight
    support on some laptops which do not have the lcd flag set.
    
    The Fujitsu ESPRIMO Q910 which is a compact (NUC like) desktop machine
    has a chassis type of 0x10 aka "Lunch Box". Without the lcd_only check
    we end up falsely advertising backlight/brightness control on this
    device. This commit extend the dmi_is_desktop check to return true
    for type 0x10 to fix this.
    
    Fixes: 53fa1f6e8a59 ("ACPI / video: Only default only_lcd to true ...")
    Signed-off-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
checking c371fe019001c56ac3d91a8a2c30158c1be5fcc0 ......
	 orig commit -> 783c3b53b9506db3e05daacfe34e0287eebb09d8 ......
checking 5dad51054d8a72117a8601ccfeb76a1086942bfd ......
	 orig commit -> 5d27a2bf6e14f5c7d1033ad1e993fcd0eba43e83 ......
checking 3b5c2e1d163a500821079938fbfd55afcc82ac55 ......
	 orig commit -> af2e460ade0b0180d0f3812ca4f4f59cc9597f3e ......
checking a75bf6f71744ec27db4092a1e9a00536e9c4c1d1 ......
	 orig commit -> 9a0fd675304d410f3a9586e1b333e16f4658d56c ......
checking d82923c017deeeec73ce871e742de42935f871cf ......
	 orig commit -> 5a13388d7aa1177b98d7168330ecbeeac52f844d ......
checking 06dc2e91959344adafbf34071d8c1d23e719c67d ......
	 orig commit -> 7ae6a2b6cc058005ee3d0d2b9ce27688e51afa4b ......
checking 8c37ac3c04e7122843505c7bfd054fbb7f320777 ......
	 orig commit -> b3906535ccc6cd04c42f9b1c7e31d1947b3ebc74 ......
checking cdb0d5fa252864dccb223ba5437598c2b1684289 ......
	 orig commit -> 56a1c5ee54f69dd767fb61d301883dc919ddc259 ......
checking f359e87feb8859f687e43bb99f52e566ee82b347 ......
	 orig commit -> c1d6207cc0eef2a7f8551f9c7420d8776268f6e1 ......
checking b7100feb26d21c27a8a75e5351a618bbc94fff49 ......
	 orig commit -> 8e2ab5a4efaac77fb93e5b5b109d0b3976fdd3a0 ......
checking 0dd9146a229147c526223cb06bf3468261ec79eb ......
	 orig commit -> 8a500df63d07d8aee44b7ee2c54e462e47ce93ec ......
checking 43f8a4f2c8b2d7cd2565f8f455aa9e336ad31df0 ......
	 orig commit -> b64576cbf36afa5fabf3b31f62a1994c429ef855 ......
checking 75b98294e09a9a027eecaff448b4c59f521b6b56 ......
	 orig commit -> d90a10e2444ba5a351fa695917258ff4c5709fa5 ......
checking 68c09d548bfc61aec99fa9a24e703c3d6fdba9b1 ......
	 orig commit -> 9de4ee40547fd315d4a0ed1dd15a2fa3559ad707 ......
checking f4df47e36ac052e772899b0d141daed1c9b008ae ......
	 orig commit -> 94e5395d2403c8bc2504a7cbe4c4caaacb7b8b84 ......
checking 77df079be9b480fbac36d407e76df4c29d719407 ......
	 orig commit -> 1f5781725dcbb026438e77091c91a94f678c3522 ......
checking 540e7b5be492df4aab0ebbd13f658cc096149575 ......
	 orig commit -> 25df8b83e867dcfb660123e9589ebf6f094fcdd3 ......
	 orig commit -> b28b08de436a638c82d0cf3dcdbdbad055baf1fc ......
checking a252b9732243da8f9ff2b761cd020b386e944972 ......
	 orig commit -> 87eba0716011e528f7841026f2cc65683219d0ad ......
checking fcc347bc1e34ef384335438680871e16edc5710d ......
	 orig commit -> 18ffc0cce4ff947a2acc9b2e06ae5309a6e6fb43 ......
checking 5787b55b50196ad1e462789acc49d5bcefff57fb ......
	 orig commit -> 6cf09958f32b9667bb3ebadf74367c791112771b ......
checking f836b34fb0562cf193a076769a5adf71b030f59f ......
	 orig commit -> 6a3d1e81a434fc311f224b8be77258bafc18ccc6 ......
checking fce1bf054f0bc1dec6fef6cf5840c6ad7c662e17 ......
	 orig commit -> d424986f1d6b16079b3231db0314923f4f8deed1 ......
		 d424986f1d6b16079b3231db0314923f4f8deed1 has problem. Fixes commit -> 4253b0e0627ee3461e64c2495c616f1c8f6b127b
commit a206c82f9bc98a314d8aa98f93d9977147e1b6d0
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Wed May 23 18:22:07 2018 +0200

    s390: move spectre sysfs attribute code
    
    [ Upstream commit 4253b0e0627ee3461e64c2495c616f1c8f6b127b ]
    
    The nospec-branch.c file is compiled without the gcc options to
    generate expoline thunks. The return branch of the sysfs show
    functions cpu_show_spectre_v1 and cpu_show_spectre_v2 is an indirect
    branch as well. These need to be compiled with expolines.
    
    Move the sysfs functions for spectre reporting to a separate file
    and loose an '.' for one of the messages.
    
    Cc: stable@vger.kernel.org # 4.16
    Fixes: d424986f1d ("s390: add sysfs attributes for spectre")
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 68cb884e12288cdbc044895affd528ceb98a815b ......
	 orig commit -> bc035599718412cfba9249aa713f90ef13f13ee9 ......
checking 719b84c9aec27953da3da75838f50fd89ea950a2 ......
	 orig commit -> 6e179d64126b909f0b288fa63cdbf07c531e9b1d ......
		 6e179d64126b909f0b288fa63cdbf07c531e9b1d has problem. Fixes commit -> 6a3d1e81a434fc311f224b8be77258bafc18ccc6
commit f836b34fb0562cf193a076769a5adf71b030f59f
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Fri Apr 27 07:36:42 2018 +0200

    s390: correct nospec auto detection init order
    
    [ Upstream commit 6a3d1e81a434fc311f224b8be77258bafc18ccc6 ]
    
    With CONFIG_EXPOLINE_AUTO=y the call of spectre_v2_auto_early() via
    early_initcall is done *after* the early_param functions. This
    overwrites any settings done with the nobp/no_spectre_v2/spectre_v2
    parameters. The code patching for the kernel is done after the
    evaluation of the early parameters but before the early_initcall
    is done. The end result is a kernel image that is patched correctly
    but the kernel modules are not.
    
    Make sure that the nospec auto detection function is called before the
    early parameters are evaluated and before the code patching is done.
    
    Fixes: 6e179d64126b ("s390: add automatic detection of the spectre defense")
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking ea1bbd53f0558fa625f07fd69f5dbb58cbb8a95c ......
	 orig commit -> b2e2f43a01bace1a25bdbae04c9f9846882b727a ......
checking 6cdc4b21d219d47a96317942667339460281959d ......
	 orig commit -> d3f468963cd6fd6d2aa5e26aed8b24232096d0e1 ......
checking 74a93ae5c328da09951990e1fece3382b544616c ......
	 orig commit -> d5feec04fe578c8dbd9e2e1439afc2f0af761ed4 ......
checking 6288e169a25e416c656604be74f436002fa567a0 ......
	 orig commit -> 2cb370d615e9fbed9e95ed222c2c8f337181aa90 ......
checking 1d966a6aded36b2f0d2f4d7a1c88a94f96ea59ac ......
	 orig commit -> f315104ad8b0c32be13eac628569ae707c332cb5 ......
checking b609eb65f3158b986e7b80e4fa48665291a50564 ......
	 orig commit -> f19fbd5ed642dc31c809596412dab1ed56f2f156 ......
		 f19fbd5ed642dc31c809596412dab1ed56f2f156 has problem. Fixes commit -> 9f18fff63cfd6f559daa1eaae60640372c65f84b
c50c84c3ac4d5db683904bdb3257798b6ef980ae
23a4d7fd34856da8218c4cfc23dba7a6ec0a423a
97489e0663fa700d6e7febddc43b58df98d7bcda
467a3bf219cee12259182c5cb4821f88fd518a51
6dd85fbb87d1d6b87a3b1f02ca28d7b2abd2e7ba
6cf09958f32b9667bb3ebadf74367c791112771b
dc24b7b49a53c7ee5502c877b133558acec0b3f8
2cb370d615e9fbed9e95ed222c2c8f337181aa90
commit 2a146a9b32400b52ca763df14344f7ab8c161f55
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Wed May 23 18:22:06 2018 +0200

    s390/kernel: use expoline for indirect branches
    
    [ Upstream commit c50c84c3ac4d5db683904bdb3257798b6ef980ae ]
    
    The assember code in arch/s390/kernel uses a few more indirect branches
    which need to be done with execute trampolines for CONFIG_EXPOLINE=y.
    
    Cc: stable@vger.kernel.org # 4.16
    Fixes: f19fbd5ed6 ("s390: introduce execute-trampolines for branches")
    Reviewed-by: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1bd3b99607b1e131b07847d3a763295ceacc51e
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Wed May 23 18:22:05 2018 +0200

    s390/ftrace: use expoline for indirect branches
    
    [ Upstream commit 23a4d7fd34856da8218c4cfc23dba7a6ec0a423a ]
    
    The return from the ftrace_stub, _mcount, ftrace_caller and
    return_to_handler functions is done with "br %r14" and "br %r1".
    These are indirect branches as well and need to use execute
    trampolines for CONFIG_EXPOLINE=y.
    
    The ftrace_caller function is a special case as it returns to the
    start of a function and may only use %r0 and %r1. For a pre z10
    machine the standard execute trampoline uses a LARL + EX to do
    this, but this requires *two* registers in the range %r1..%r15.
    To get around this the 'br %r1' located in the lowcore is used,
    then the EX instruction does not need an address register.
    But the lowcore trick may only be used for pre z14 machines,
    with noexec=on the mapping for the first page may not contain
    instructions. The solution for that is an ALTERNATIVE in the
    expoline THUNK generated by 'GEN_BR_THUNK %r1' to switch to
    EXRL, this relies on the fact that a machine that supports
    noexec=on has EXRL as well.
    
    Cc: stable@vger.kernel.org # 4.16
    Fixes: f19fbd5ed6 ("s390: introduce execute-trampolines for branches")
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d201ff077a8160f1bba570a767ea98e901f3323
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Wed May 23 18:22:04 2018 +0200

    s390/lib: use expoline for indirect branches
    
    [ Upstream commit 97489e0663fa700d6e7febddc43b58df98d7bcda ]
    
    The return from the memmove, memset, memcpy, __memset16, __memset32 and
    __memset64 functions are done with "br %r14". These are indirect branches
    as well and need to use execute trampolines for CONFIG_EXPOLINE=y.
    
    Cc: stable@vger.kernel.org # 4.16
    Fixes: f19fbd5ed6 ("s390: introduce execute-trampolines for branches")
    Reviewed-by: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7aa3f13e146418b7cbf12e64f1e2cb0261681ca
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Wed May 23 18:22:03 2018 +0200

    s390/crc32-vx: use expoline for indirect branches
    
    [ Upstream commit 467a3bf219cee12259182c5cb4821f88fd518a51 ]
    
    The return from the crc32_le_vgfm_16/crc32c_le_vgfm_16 and the
    crc32_be_vgfm_16 functions are done with "br %r14". These are indirect
    branches as well and need to use execute trampolines for CONFIG_EXPOLINE=y.
    
    Cc: stable@vger.kernel.org # 4.16
    Fixes: f19fbd5ed6 ("s390: introduce execute-trampolines for branches")
    Reviewed-by: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e3ad546e6094d1be00d71087c5d0d8656ef5d6c2
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Wed May 23 18:22:02 2018 +0200

    s390: move expoline assembler macros to a header
    
    [ Upstream commit 6dd85fbb87d1d6b87a3b1f02ca28d7b2abd2e7ba ]
    
    To be able to use the expoline branches in different assembler
    files move the associated macros from entry.S to a new header
    nospec-insn.h.
    
    While we are at it make the macros a bit nicer to use.
    
    Cc: stable@vger.kernel.org # 4.16
    Fixes: f19fbd5ed6 ("s390: introduce execute-trampolines for branches")
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5787b55b50196ad1e462789acc49d5bcefff57fb
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Fri Apr 27 07:36:43 2018 +0200

    s390: correct module section names for expoline code revert
    
    [ Upstream commit 6cf09958f32b9667bb3ebadf74367c791112771b ]
    
    The main linker script vmlinux.lds.S for the kernel image merges
    the expoline code patch tables into two section ".nospec_call_table"
    and ".nospec_return_table". This is *not* done for the modules,
    there the sections retain their original names as generated by gcc:
    ".s390_indirect_call", ".s390_return_mem" and ".s390_return_reg".
    
    The module_finalize code has to check for the compiler generated
    section names, otherwise no code patching is done. This slows down
    the module code in case of "spectre_v2=off".
    
    Cc: stable@vger.kernel.org # 4.16
    Fixes: f19fbd5ed6 ("s390: introduce execute-trampolines for branches")
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6288e169a25e416c656604be74f436002fa567a0
Author: Eugeniu Rosca <erosca@de.adit-jv.com>
Date:   Fri Apr 27 07:36:35 2018 +0200

    s390: Replace IS_ENABLED(EXPOLINE_*) with IS_ENABLED(CONFIG_EXPOLINE_*)
    
    [ Upstream commit 2cb370d615e9fbed9e95ed222c2c8f337181aa90 ]
    
    I've accidentally stumbled upon the IS_ENABLED(EXPOLINE_*) lines, which
    obviously always evaluate to false. Fix this.
    
    Fixes: f19fbd5ed642 ("s390: introduce execute-trampolines for branches")
    Signed-off-by: Eugeniu Rosca <erosca@de.adit-jv.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 2a146a9b32400b52ca763df14344f7ab8c161f55
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Wed May 23 18:22:06 2018 +0200

    s390/kernel: use expoline for indirect branches
    
    [ Upstream commit c50c84c3ac4d5db683904bdb3257798b6ef980ae ]
    
    The assember code in arch/s390/kernel uses a few more indirect branches
    which need to be done with execute trampolines for CONFIG_EXPOLINE=y.
    
    Cc: stable@vger.kernel.org # 4.16
    Fixes: f19fbd5ed6 ("s390: introduce execute-trampolines for branches")
    Reviewed-by: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f1bd3b99607b1e131b07847d3a763295ceacc51e
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Wed May 23 18:22:05 2018 +0200

    s390/ftrace: use expoline for indirect branches
    
    [ Upstream commit 23a4d7fd34856da8218c4cfc23dba7a6ec0a423a ]
    
    The return from the ftrace_stub, _mcount, ftrace_caller and
    return_to_handler functions is done with "br %r14" and "br %r1".
    These are indirect branches as well and need to use execute
    trampolines for CONFIG_EXPOLINE=y.
    
    The ftrace_caller function is a special case as it returns to the
    start of a function and may only use %r0 and %r1. For a pre z10
    machine the standard execute trampoline uses a LARL + EX to do
    this, but this requires *two* registers in the range %r1..%r15.
    To get around this the 'br %r1' located in the lowcore is used,
    then the EX instruction does not need an address register.
    But the lowcore trick may only be used for pre z14 machines,
    with noexec=on the mapping for the first page may not contain
    instructions. The solution for that is an ALTERNATIVE in the
    expoline THUNK generated by 'GEN_BR_THUNK %r1' to switch to
    EXRL, this relies on the fact that a machine that supports
    noexec=on has EXRL as well.
    
    Cc: stable@vger.kernel.org # 4.16
    Fixes: f19fbd5ed6 ("s390: introduce execute-trampolines for branches")
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0d201ff077a8160f1bba570a767ea98e901f3323
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Wed May 23 18:22:04 2018 +0200

    s390/lib: use expoline for indirect branches
    
    [ Upstream commit 97489e0663fa700d6e7febddc43b58df98d7bcda ]
    
    The return from the memmove, memset, memcpy, __memset16, __memset32 and
    __memset64 functions are done with "br %r14". These are indirect branches
    as well and need to use execute trampolines for CONFIG_EXPOLINE=y.
    
    Cc: stable@vger.kernel.org # 4.16
    Fixes: f19fbd5ed6 ("s390: introduce execute-trampolines for branches")
    Reviewed-by: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d7aa3f13e146418b7cbf12e64f1e2cb0261681ca
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Wed May 23 18:22:03 2018 +0200

    s390/crc32-vx: use expoline for indirect branches
    
    [ Upstream commit 467a3bf219cee12259182c5cb4821f88fd518a51 ]
    
    The return from the crc32_le_vgfm_16/crc32c_le_vgfm_16 and the
    crc32_be_vgfm_16 functions are done with "br %r14". These are indirect
    branches as well and need to use execute trampolines for CONFIG_EXPOLINE=y.
    
    Cc: stable@vger.kernel.org # 4.16
    Fixes: f19fbd5ed6 ("s390: introduce execute-trampolines for branches")
    Reviewed-by: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e3ad546e6094d1be00d71087c5d0d8656ef5d6c2
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Wed May 23 18:22:02 2018 +0200

    s390: move expoline assembler macros to a header
    
    [ Upstream commit 6dd85fbb87d1d6b87a3b1f02ca28d7b2abd2e7ba ]
    
    To be able to use the expoline branches in different assembler
    files move the associated macros from entry.S to a new header
    nospec-insn.h.
    
    While we are at it make the macros a bit nicer to use.
    
    Cc: stable@vger.kernel.org # 4.16
    Fixes: f19fbd5ed6 ("s390: introduce execute-trampolines for branches")
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a6565fdd90cbe63e60bf8edc447992bf47f4791c
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Tue Apr 24 11:18:49 2018 +0200

    s390: remove indirect branch from do_softirq_own_stack
    
    commit 9f18fff63cfd6f559daa1eaae60640372c65f84b upstream.
    
    The inline assembly to call __do_softirq on the irq stack uses
    an indirect branch. This can be replaced with a normal relative
    branch.
    
    Cc: stable@vger.kernel.org # 4.16
    Fixes: f19fbd5ed6 ("s390: introduce execute-trampolines for branches")
    Reviewed-by: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 5787b55b50196ad1e462789acc49d5bcefff57fb
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Fri Apr 27 07:36:43 2018 +0200

    s390: correct module section names for expoline code revert
    
    [ Upstream commit 6cf09958f32b9667bb3ebadf74367c791112771b ]
    
    The main linker script vmlinux.lds.S for the kernel image merges
    the expoline code patch tables into two section ".nospec_call_table"
    and ".nospec_return_table". This is *not* done for the modules,
    there the sections retain their original names as generated by gcc:
    ".s390_indirect_call", ".s390_return_mem" and ".s390_return_reg".
    
    The module_finalize code has to check for the compiler generated
    section names, otherwise no code patching is done. This slows down
    the module code in case of "spectre_v2=off".
    
    Cc: stable@vger.kernel.org # 4.16
    Fixes: f19fbd5ed6 ("s390: introduce execute-trampolines for branches")
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 0bd4c47c20265763f280bddeabfc3e67b24a26f0 ......
	 orig commit -> 6b73044b2b0081ee3dd1cd6eaab7dee552601efb ......
checking 43cccd87c184dc7414d74fb2deab8dd271129676 ......
	 orig commit -> d768bd892fc8f066cd3aa000eb1867bcf32db0ee ......
checking c257f81b6d4557bc1c22972696305d1f397f2030 ......
	 orig commit -> cf1489984641369611556bf00c48f945c77bcf02 ......
checking 2ae89b86a77fd96ca9a20236730bf599becc7550 ......
	 orig commit -> e2dd833389cc4069a96b57bdd24227b5f52288f5 ......
checking 2ae8b68382ce0c5e911090b502e0fda14191c730 ......
	 orig commit -> 7041d28115e91f2144f811ffe8a195c696b1e1d0 ......
		 7041d28115e91f2144f811ffe8a195c696b1e1d0 has problem. Fixes commit -> d3f468963cd6fd6d2aa5e26aed8b24232096d0e1
commit 6cdc4b21d219d47a96317942667339460281959d
Author: Christian Borntraeger <borntraeger@de.ibm.com>
Date:   Fri Apr 27 07:36:37 2018 +0200

    s390/entry.S: fix spurious zeroing of r0
    
    [ Upstream commit d3f468963cd6fd6d2aa5e26aed8b24232096d0e1 ]
    
    when a system call is interrupted we might call the critical section
    cleanup handler that re-does some of the operations. When we are between
    .Lsysc_vtime and .Lsysc_do_svc we might also redo the saving of the
    problem state registers r0-r7:
    
    .Lcleanup_system_call:
    [...]
    0:      # update accounting time stamp
            mvc     __LC_LAST_UPDATE_TIMER(8),__LC_SYNC_ENTER_TIMER
            # set up saved register r11
            lg      %r15,__LC_KERNEL_STACK
            la      %r9,STACK_FRAME_OVERHEAD(%r15)
            stg     %r9,24(%r11)            # r11 pt_regs pointer
            # fill pt_regs
            mvc     __PT_R8(64,%r9),__LC_SAVE_AREA_SYNC
    --->    stmg    %r0,%r7,__PT_R0(%r9)
    
    The problem is now, that we might have already zeroed out r0.
    The fix is to move the zeroing of r0 after sysc_do_svc.
    
    Reported-by: Farhan Ali <alifm@linux.vnet.ibm.com>
    Fixes: 7041d28115e91 ("s390: scrub registers on kernel entry and KVM exit")
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking ea5566fecd035bc5d84d8bd341b655238134deb8 ......
	 orig commit -> 35b3fde6203b932b2b1a5b53b3d8808abc9c4f60 ......
checking 37e79747128bbabdff0e244a41bdcd4892a4e7cb ......
	 orig commit -> 049a2c2d486e8cc82c5cd79fa479c5b105b109e9 ......
checking b44533a06fd8f50c425c9cfa3cbfa70f62c39a84 ......
	 orig commit -> 686140a1a9c41d85a4212a1c26d671139b76404b ......
checking 55c80adf0d0e528f4e4de92cecc5bf7c9201fc8a ......
	 orig commit -> d7fad4c840f33a6bd333dd7fbb3006edbcf0017a ......
checking d86aacaaf9d2f5f9fc1e96f53173124ce077f140 ......
	 orig commit -> 12e571693837d6164bda61e316b1944972ee0d97 ......
checking 16c36a2c763296de03291a1317df376eadb0b09b ......
	 orig commit -> 5e391dc5a8d801a2410d0032ad4a428d1d61800c ......
checking 7814c479de7ae7b36649cd2644287e47eca46b49 ......
	 orig commit -> 3a04ce7130a7e5dad4e78d45d50313747f8c830f ......
checking 543a60112f019f8968ec6312721f8ccc3f26a0df ......
	 orig commit -> f7e43672683b097bb074a8fe7af9bc600a23f231 ......
		 f7e43672683b097bb074a8fe7af9bc600a23f231 has problem. Fixes commit -> 3a04ce7130a7e5dad4e78d45d50313747f8c830f
commit 7814c479de7ae7b36649cd2644287e47eca46b49
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Thu Apr 19 21:54:34 2018 -0700

    llc: fix NULL pointer deref for SOCK_ZAPPED
    
    
    [ Upstream commit 3a04ce7130a7e5dad4e78d45d50313747f8c830f ]
    
    For SOCK_ZAPPED socket, we don't need to care about llc->sap,
    so we should just skip these refcount functions in this case.
    
    Fixes: f7e43672683b ("llc: hold llc_sap before release_sock()")
    Reported-by: kernel test robot <lkp@intel.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 4c2c574cf6ed0bbbddaac3d78061116230adea11 ......
	 orig commit -> d57493d6d1be26c8ac8516a4463bfe24956978eb ......
checking 388f3d9708fcc96cea44fe343ffe055e58ba6e6b ......
	 orig commit -> cc74eddd0ff325d57373cea99f642b787d7f76f5 ......
checking 75020d6319eec226a5829359a23322a69f1d7525 ......
checking da499024f6fe0899af76346abc93542494aa9e05 ......
	 orig commit -> f6cd14537ff9919081be19b9c53b9b19c0d3ea97 ......
checking 2f781ebfb08ffdc62d3cb82cd9129aba86b8a70e ......
	 orig commit -> 9d0c75bf6e03d9bf80c55b0f677dc9b982958fd5 ......
checking 109feb04c85152dcff5c9922760dacd1b89b7ddd ......
	 orig commit -> 117df655f8ed51adb6e6b163812a06ebeae9f453 ......
checking 9a66123182a64083b5f8606dcdd7963e48b90d62 ......
	 orig commit -> 7c5aba211dd61f41d737a2c51729eb9fdcd3edf4 ......
checking 346ba2f22107ad3aa6769cf4abcf564bea920e41 ......
	 orig commit -> 96f4d430c507ed4856048c2dc9c1a2ea5b5e74e4 ......
checking 29b623b60549d5897af0842bf439d897de0560d8 ......
	 orig commit -> 1071ec9d453a38023579714b64a951a2fb982071 ......
		 1071ec9d453a38023579714b64a951a2fb982071 has problem. Fixes commit -> d625329b06e46bd20baf9ee40847d11982569204
commit d3d4d69d9bbd497a051cf73ce8b4c73444d157f5
Author: Xin Long <lucien.xin@gmail.com>
Date:   Thu Apr 26 14:13:57 2018 +0800

    sctp: handle two v4 addrs comparison in sctp_inet6_cmp_addr
    
    [ Upstream commit d625329b06e46bd20baf9ee40847d11982569204 ]
    
    Since sctp ipv6 socket also supports v4 addrs, it's possible to
    compare two v4 addrs in pf v6 .cmp_addr, sctp_inet6_cmp_addr.
    
    However after Commit 1071ec9d453a ("sctp: do not check port in
    sctp_inet6_cmp_addr"), it no longer calls af1->cmp_addr, which
    in this case is sctp_v4_cmp_addr, but calls __sctp_v6_cmp_addr
    where it handles them as two v6 addrs. It would cause a out of
    bounds crash.
    
    syzbot found this crash when trying to bind two v4 addrs to a
    v6 socket.
    
    This patch fixes it by adding the process for two v4 addrs in
    sctp_inet6_cmp_addr.
    
    Fixes: 1071ec9d453a ("sctp: do not check port in sctp_inet6_cmp_addr")
    Reported-by: syzbot+cd494c1dd681d4d93ebb@syzkaller.appspotmail.com
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking f42036e8051e75e4a74aa4f9bec53631c5981da5 ......
	 orig commit -> 4d945663a6a0acf3cbe45940503f2eb9584bfee7 ......
checking dd997151740f1abcd13aaa3da719f712cf959759 ......
	 orig commit -> 7ce2367254e84753bceb07327aaf5c953cfce117 ......
checking 88b7895e7c6ddeec0986ec90d6983d655006b796 ......
	 orig commit -> a49e2f5d5fb141884452ddb428f551b123d436b5 ......
checking ed2ba25f6d509431103ea3916f6db34595d62406 ......
	 orig commit -> ec518f21cb1a1b1f8a516499ea05c60299e04963 ......
checking 6da813d79cfaa8dbc545e194484185b6b5639c92 ......
	 orig commit -> a6361f0ca4b25460f2cdf3235ebe8115f622901e ......
checking 70a615d7daa04923d9f255307de26819f2f6dbd4 ......
	 orig commit -> 9cf2f437ca5b39828984064fad213e68fc17ef11 ......
checking 07cb0b54d7d99d0c67f8f7aebc1bb8f276bdf2b8 ......
	 orig commit -> 1255fcb2a655f05e02f3a74675a6d6525f187afd ......
checking 7b4f4d759c8ea9b4b607d13d3c89c59dd78a6ed7 ......
	 orig commit -> 4fb0534fb7bbc2346ba7d3a072b538007f4135a5 ......
		 4fb0534fb7bbc2346ba7d3a072b538007f4135a5 has problem. Fixes commit -> 2fdeee2549231b1f989f011bb18191f5660d3745
commit 90dbd485b32b80633e37bef242619f48bf312ea7
Author: Cong Wang <xiyou.wangcong@gmail.com>
Date:   Mon Feb 11 21:59:51 2019 -0800

    team: avoid complex list operations in team_nl_cmd_options_set()
    
    [ Upstream commit 2fdeee2549231b1f989f011bb18191f5660d3745 ]
    
    The current opt_inst_list operations inside team_nl_cmd_options_set()
    is too complex to track:
    
        LIST_HEAD(opt_inst_list);
        nla_for_each_nested(...) {
            list_for_each_entry(opt_inst, &team->option_inst_list, list) {
                if (__team_option_inst_tmp_find(&opt_inst_list, opt_inst))
                    continue;
                list_add(&opt_inst->tmp_list, &opt_inst_list);
            }
        }
        team_nl_send_event_options_get(team, &opt_inst_list);
    
    as while we retrieve 'opt_inst' from team->option_inst_list, it could
    be added to the local 'opt_inst_list' for multiple times. The
    __team_option_inst_tmp_find() doesn't work, as the setter
    team_mode_option_set() still calls team->ops.exit() which uses
    ->tmp_list too in __team_options_change_check().
    
    Simplify the list operations by moving the 'opt_inst_list' and
    team_nl_send_event_options_get() into the nla_for_each_nested() loop so
    that it can be guranteed that we won't insert a same list entry for
    multiple times. Therefore, __team_option_inst_tmp_find() can be removed
    too.
    
    Fixes: 4fb0534fb7bb ("team: avoid adding twice the same option to the event list")
    Fixes: 2fcdb2c9e659 ("team: allow to send multiple set events in one message")
    Reported-by: syzbot+4d4af685432dc0e56c91@syzkaller.appspotmail.com
    Reported-by: syzbot+68ee510075cf64260cc4@syzkaller.appspotmail.com
    Cc: Jiri Pirko <jiri@resnulli.us>
    Cc: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Acked-by: Jiri Pirko <jiri@mellanox.com>
    Reviewed-by: Paolo Abeni <pabeni@redhat.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 012e5e5b6991c83d96173f643ab1cafb7e38c451 ......
	 orig commit -> 53b76cdf7e8fecec1d09e38aad2f8579882591a8 ......
checking d5387e66388f73152afe7f8e341fccc4469bba10 ......
	 orig commit -> 7212303268918b9a203aebeacfdbd83b5e87b20d ......
checking 7c2352520e513dfb4f2a7a84fe3502ec1fd40705 ......
	 orig commit -> 5171b37d959641bbc619781caf62e61f7b940871 ......
checking b76d3f3309cf7d7ae8ef5e4b2c2010ae39189bc6 ......
	 orig commit -> 7e5a206ab686f098367b61aca989f5cdfa8114a3 ......
checking cb225e80c9a3364c43ae4219da05ebb5a4b86c39 ......
	 orig commit -> b905ef9ab90115d001c1658259af4b1c65088779 ......
checking 15efa783286c6f4fb3deeff215c7fb33667b40a9 ......
	 orig commit -> 7dd07c143a4b54d050e748bee4b4b9e94a7b1744 ......
checking dbf57fd1e05efc0d37503af5f08a532aff2c9823 ......
	 orig commit -> eb1c28c05894a4b1f6b56c5bf072205e64cfa280 ......
checking c7a936b1dd0f75727b776479f739236a05317f7b ......
	 orig commit -> 9c438d7a3a52dcc2b9ed095cb87d3a5e83cf7e60 ......
checking a370d8a3aaf268896eabaf510e1e8ca4b7ea0a34 ......
	 orig commit -> a957fa190aa9d9168b33d460a5241a6d088c6265 ......
checking 8d34c67734593fc6b10b92905381c365de2c9ff6 ......
	 orig commit -> aa8f8778493c85fff480cdf8b349b1e1dcb5f243 ......
checking e0286ea0846c7fb6ebae03f305f6895f7e64b836 ......
	 orig commit -> ddea788c63094f7c483783265563dd5b50052e28 ......
checking 5f50186dd8106ee83e767225278ebafe8484b4a1 ......
	 orig commit -> 55cc11da69895a680940c1733caabc37be685f5e ......
checking 781eeb7af2bdd4e7d0450f7b7cd5c39a04c7a841 ......
	 orig commit -> e2fb992d82c626c43ed0566e07c410e56a087af3 ......
checking f6891ec29c597405c0223ac20bdaf64f65acba3a ......
	 orig commit -> 65520d46a4adbf7f23bbb6d9b1773513f7bc7821 ......
checking ac5881b7814d53d9834b25f3845d6f18a0f027ba ......
	 orig commit -> 888d867df4417deffc33927e6fc2c6925736fe92 ......
		 888d867df4417deffc33927e6fc2c6925736fe92 has problem. Fixes commit -> 627448e85c766587f6fdde1ea3886d6615081c77
1fbad3028664e114d210dc65d768947a3a553eaa
commit 9de255666ce3729cdd50e7defb649b82dbb538f6
Author: Winkler, Tomas <tomas.winkler@intel.com>
Date:   Sat Apr 7 19:12:36 2018 +0300

    tpm: tpm_crb: relinquish locality on error path.
    
    [ Upstream commit 1fbad3028664e114d210dc65d768947a3a553eaa ]
    
    In crb_map_io() function, __crb_request_locality() is called prior
    to crb_cmd_ready(), but if one of the consecutive function fails
    the flow bails out instead of trying to relinquish locality.
    This patch adds goto jump to __crb_relinquish_locality() on the error path.
    
    Fixes: 888d867df441 (tpm: cmd_ready command can be issued only after granting locality)
    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Tested-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Reviewed-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
commit e5d857d5f1fc0893a2efa46a7acdec1ef67363d7
Author: Tomas Winkler <tomas.winkler@intel.com>
Date:   Thu Jun 28 18:13:33 2018 +0300

    tpm: separate cmd_ready/go_idle from runtime_pm
    
    commit 627448e85c766587f6fdde1ea3886d6615081c77 upstream.
    
    Fix tpm ptt initialization error:
    tpm tpm0: A TPM error (378) occurred get tpm pcr allocation.
    
    We cannot use go_idle cmd_ready commands via runtime_pm handles
    as with the introduction of localities this is no longer an optional
    feature, while runtime pm can be not enabled.
    Though cmd_ready/go_idle provides a power saving, it's also a part of
    TPM2 protocol and should be called explicitly.
    This patch exposes cmd_read/go_idle via tpm class ops and removes
    runtime pm support as it is not used by any driver.
    
    When calling from nested context always use both flags:
    TPM_TRANSMIT_UNLOCKED and TPM_TRANSMIT_RAW. Both are needed to resolve
    tpm spaces and locality request recursive calls to tpm_transmit().
    TPM_TRANSMIT_RAW should never be used standalone as it will fail
    on double locking. While TPM_TRANSMIT_UNLOCKED standalone should be
    called from non-recursive locked contexts.
    
    New wrappers are added tpm_cmd_ready() and tpm_go_idle() to
    streamline tpm_try_transmit code.
    
    tpm_crb no longer needs own power saving functions and can drop using
    tpm_pm_suspend/resume.
    
    This patch cannot be really separated from the locality fix.
    Fixes: 888d867df441 (tpm: cmd_ready command can be issued only after granting locality)
    
    Cc: stable@vger.kernel.org
    Fixes: 888d867df441 (tpm: cmd_ready command can be issued only after granting locality)
    Signed-off-by: Tomas Winkler <tomas.winkler@intel.com>
    Tested-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Reviewed-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 3b38734ed9fe7e12fa71aa9a99e31e92a7d74f53 ......
	 orig commit -> 028daf80117376b22909becd9720daaefdfceff4 ......
checking 00c54b3544112fa2e19a6c19fb1fa9cc4802b0d4 ......
	 orig commit -> 9c305eb442f3b371fc722ade827bbf673514123e ......
checking 94c0308279ec7d550a675140e73262cf0732b70a ......
	 orig commit -> f5a26acf0162477af6ee4c11b4fb9cffe5d3e257 ......
