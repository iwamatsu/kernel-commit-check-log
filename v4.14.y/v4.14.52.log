Check from v4.14.52 to v4.14.53
Commit count: 158
checking fa745a1bd983b601c3f9c081ebf07dad9e0e3cb9 ......
checking 4798e96b7646d562f839b9a87332d86a5aa5bf10 ......
	 orig commit -> 44a182b9d17765514fa2b1cc911e4e65134eef93 ......
		 44a182b9d17765514fa2b1cc911e4e65134eef93 has problem. Fixes commit -> d850c1658328e757635a46763783c6fd56390dcb
2278446e2b7cd33ad894b32e7eb63afc7db6c86e
commit 67f7c68a9085957a291e91ee5a177f2b208aeda6
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Mon May 14 11:57:23 2018 +0300

    xhci: Fix USB3 NULL pointer dereference at logical disconnect.
    
    commit 2278446e2b7cd33ad894b32e7eb63afc7db6c86e upstream.
    
    Hub driver will try to disable a USB3 device twice at logical disconnect,
    racing with xhci_free_dev() callback from the first port disable.
    
    This can be triggered with "udisksctl power-off --block-device <disk>"
    or by writing "1" to the "remove" sysfs file for a USB3 device
    in 4.17-rc4.
    
    USB3 devices don't have a similar disabled link state as USB2 devices,
    and use a U3 suspended link state instead. In this state the port
    is still enabled and connected.
    
    hub_port_connect() first disconnects the device, then later it notices
    that device is still enabled (due to U3 states) it will try to disable
    the port again (set to U3).
    
    The xhci_free_dev() called during device disable is async, so checking
    for existing xhci->devs[i] when setting link state to U3 the second time
    was successful, even if device was being freed.
    
    The regression was caused by, and whole thing revealed by,
    Commit 44a182b9d177 ("xhci: Fix use-after-free in xhci_free_virt_device")
    which sets xhci->devs[i]->udev to NULL before xhci_virt_dev() returned.
    and causes a NULL pointer dereference the second time we try to set U3.
    
    Fix this by checking xhci->devs[i]->udev exists before setting link state.
    
    The original patch went to stable so this fix needs to be applied there as
    well.
    
    Fixes: 44a182b9d177 ("xhci: Fix use-after-free in xhci_free_virt_device")
    Cc: <stable@vger.kernel.org>
    Reported-by: Jordan Glover <Golden_Miller83@protonmail.ch>
    Tested-by: Jordan Glover <Golden_Miller83@protonmail.ch>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 67f7c68a9085957a291e91ee5a177f2b208aeda6
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Mon May 14 11:57:23 2018 +0300

    xhci: Fix USB3 NULL pointer dereference at logical disconnect.
    
    commit 2278446e2b7cd33ad894b32e7eb63afc7db6c86e upstream.
    
    Hub driver will try to disable a USB3 device twice at logical disconnect,
    racing with xhci_free_dev() callback from the first port disable.
    
    This can be triggered with "udisksctl power-off --block-device <disk>"
    or by writing "1" to the "remove" sysfs file for a USB3 device
    in 4.17-rc4.
    
    USB3 devices don't have a similar disabled link state as USB2 devices,
    and use a U3 suspended link state instead. In this state the port
    is still enabled and connected.
    
    hub_port_connect() first disconnects the device, then later it notices
    that device is still enabled (due to U3 states) it will try to disable
    the port again (set to U3).
    
    The xhci_free_dev() called during device disable is async, so checking
    for existing xhci->devs[i] when setting link state to U3 the second time
    was successful, even if device was being freed.
    
    The regression was caused by, and whole thing revealed by,
    Commit 44a182b9d177 ("xhci: Fix use-after-free in xhci_free_virt_device")
    which sets xhci->devs[i]->udev to NULL before xhci_virt_dev() returned.
    and causes a NULL pointer dereference the second time we try to set U3.
    
    Fix this by checking xhci->devs[i]->udev exists before setting link state.
    
    The original patch went to stable so this fix needs to be applied there as
    well.
    
    Fixes: 44a182b9d177 ("xhci: Fix use-after-free in xhci_free_virt_device")
    Cc: <stable@vger.kernel.org>
    Reported-by: Jordan Glover <Golden_Miller83@protonmail.ch>
    Tested-by: Jordan Glover <Golden_Miller83@protonmail.ch>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 716382f1c1eaca706ab694a61215b5e3416a0ea6
Author: Zhengjun Xing <zhengjun.xing@linux.intel.com>
Date:   Thu Jun 21 16:19:42 2018 +0300

    xhci: Fix kernel oops in trace_xhci_free_virt_device
    
    commit d850c1658328e757635a46763783c6fd56390dcb upstream.
    
    commit 44a182b9d177 ("xhci: Fix use-after-free in xhci_free_virt_device")
    set dev->udev pointer to NULL in xhci_free_dev(), it will cause kernel
    panic in trace_xhci_free_virt_device. This patch reimplement the trace
    function trace_xhci_free_virt_device, remove dev->udev dereference and
    added more useful parameters to show in the trace function,it also makes
    sure dev->udev is not NULL before calling trace_xhci_free_virt_device.
    This issue happened when xhci-hcd trace is enabled and USB devices hot
    plug test. Original use-after-free patch went to stable so this needs so
    be applied there as well.
    
    [ 1092.022457] usb 2-4: USB disconnect, device number 6
    [ 1092.092772] BUG: unable to handle kernel NULL pointer dereference at 0000000000000000
    [ 1092.101694] PGD 0 P4D 0
    [ 1092.104601] Oops: 0000 [#1] SMP
    [ 1092.207734] Workqueue: usb_hub_wq hub_event
    [ 1092.212507] RIP: 0010:trace_event_raw_event_xhci_log_virt_dev+0x6c/0xf0
    [ 1092.220050] RSP: 0018:ffff8c252e883d28 EFLAGS: 00010086
    [ 1092.226024] RAX: ffff8c24af86fa84 RBX: 0000000000000003 RCX: ffff8c25255c2a01
    [ 1092.234130] RDX: 0000000000000000 RSI: 00000000aef55009 RDI: ffff8c252e883d28
    [ 1092.242242] RBP: ffff8c252550e2c0 R08: ffff8c24af86fa84 R09: 0000000000000a70
    [ 1092.250364] R10: 0000000000000a70 R11: 0000000000000000 R12: ffff8c251f21a000
    [ 1092.258468] R13: 000000000000000c R14: ffff8c251f21a000 R15: ffff8c251f432f60
    [ 1092.266572] FS:  0000000000000000(0000) GS:ffff8c252e880000(0000) knlGS:0000000000000000
    [ 1092.275757] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [ 1092.282281] CR2: 0000000000000000 CR3: 0000000154209001 CR4: 00000000003606e0
    [ 1092.290384] Call Trace:
    [ 1092.293156]  <IRQ>
    [ 1092.295439]  xhci_free_virt_device.part.34+0x182/0x1a0
    [ 1092.301288]  handle_cmd_completion+0x7ac/0xfa0
    [ 1092.306336]  ? trace_event_raw_event_xhci_log_trb+0x6e/0xa0
    [ 1092.312661]  xhci_irq+0x3e8/0x1f60
    [ 1092.316524]  __handle_irq_event_percpu+0x75/0x180
    [ 1092.321876]  handle_irq_event_percpu+0x20/0x50
    [ 1092.326922]  handle_irq_event+0x36/0x60
    [ 1092.331273]  handle_edge_irq+0x6d/0x180
    [ 1092.335644]  handle_irq+0x16/0x20
    [ 1092.339417]  do_IRQ+0x41/0xc0
    [ 1092.342782]  common_interrupt+0xf/0xf
    [ 1092.346955]  </IRQ>
    
    Fixes: 44a182b9d177 ("xhci: Fix use-after-free in xhci_free_virt_device")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Zhengjun Xing <zhengjun.xing@linux.intel.com>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 0b19825ffa2838c7a3eaa83851dc19e8d5c527b3 ......
	 orig commit -> a685557fbbc3122ed11e8ad3fa63a11ebc5de8c3 ......
checking fb4d8744a8f92626309e391f4b52138662275d0a ......
	 orig commit -> 2d0b2d64d325e22939d9db3ba784f1236459ed98 ......
checking 0cfb151b93527711b7af2fea8313bd67459299e2 ......
	 orig commit -> cfe19577047e74cdac5826adbdc2337d8437f8fb ......
checking 251141340fd8028607a20329217900ce4aac909e ......
	 orig commit -> 297ba57dcdec7ea37e702bcf1a577ac32a034e21 ......
checking 29413e068b2b4b81c0423066029025244f43d32d ......
	 orig commit -> 15bfd21fbc5d35834b9ea383dc458a1f0c9e3434 ......
checking 804a0db743e01f8d613051497c9c5f6ff03b40c6 ......
	 orig commit -> d50d82faa0c964e31f7a946ba8aba7c715ca7ab0 ......
checking cd41a8fac35a92e3b19365181a337d4dd657bb06 ......
	 orig commit -> e41fc8c5bd41b96bfae5ce4c66bee6edabc932e8 ......
checking c75f047560cbc39d39ee31a0088fbb8eacd36446 ......
	 orig commit -> 275ec0cb946cb75ac8977f662e608fce92f8b8a8 ......
checking 59bcd69457c7f0d64531ca4b572e2aab0d061b3f ......
	 orig commit -> d5a6cabf02210b896a60eee7c04c670ee9ba6dca ......
checking 69f96e9b570a7e09e8493a50068d08174ce3a3a2 ......
	 orig commit -> b41f794f284966fd6ec634111e3b40d241389f96 ......
checking 3d1de95138fbf54bab0049ae669299e3f1a4c4fe ......
	 orig commit -> e0ae2519ca004a628fa55aeef969c37edce522d3 ......
checking 524a0c6f2efde4262356de3d31769439abb27cb5 ......
	 orig commit -> 24bb555e6e46d96e2a954aa0295029a81cc9bbaa ......
checking ade767642cc7abee7f14a1d7331fa64e5f475191 ......
	 orig commit -> 50fc7b61959af4b95fafce7fe5dd565199e0b61a ......
checking 8fa052853d4862988f22f1f9a030d1df44a2e8c1 ......
	 orig commit -> dd6bee81c942c0ea01030da9356026afb88f9d18 ......
checking 1b241aa840df5c7af16eb1ad0b614a372a639caa ......
	 orig commit -> fa65653e575fbd958bdf5fb9c4a71a324e39510d ......
checking d08dfdeaf49d240674fff55189a0d8349aeb0858 ......
	 orig commit -> eef04c7b3786ff0c9cb1019278b6c6c2ea0ad4ff ......
checking fff76ff5e2b0b299d9c9ed0003b88c2837d9e745 ......
	 orig commit -> 2bdce74412c249ac01dfe36b6b0043ffd7a5361e ......
checking 6f23028480c435a58873a1bb9d4d51cba8e6c1b2 ......
	 orig commit -> 1105a2fc022f3c7482e32faf516e8bc44095f778 ......
checking 76022230aa643deebdc4e4c551f3da7782bb3dee ......
	 orig commit -> 23edca864951250af845a11da86bb3ea63522ed2 ......
checking 3c718460f5a3adc0e1363e37430330295477b108 ......
	 orig commit -> 1d375b58c12f08d8570b30b865def4734517f04f ......
checking 24ab6e6858e762ade66aebf80ba02f6c4f2311b9 ......
	 orig commit -> 8938fc7b8fe9ccfa11751ead502a8d385b607967 ......
checking a7f3c0abac1dbba0581904ef9c9643efb0415154 ......
	 orig commit -> fdcb613d49321b5bf5d5a1bd0fba8e7c241dcc70 ......
checking 9aa818d42bf5f5477f66dbc941b4daddfcae290d ......
	 orig commit -> 9f645bcc566a1e9f921bdae7528a01ced5bc3713 ......
checking fb7fecb4d90fd0808b45f50befa7a07917b3ff9e ......
	 orig commit -> 995891006ccbb73c0c9c3923cf9d25c4d07ec16b ......
checking 63715ead82c5d784798427ba5e5d21b9bc7717e2 ......
	 orig commit -> fc40724fc6731d90cc7fb6d62d66135f85a33dd2 ......
checking c92d800fc9c408d09526e6651154743cd6c23c29 ......
	 orig commit -> d68894800ec5712d7ddf042356f11e36f87d7f78 ......
checking 89864c2e7506ff0b5d62734b31872a5b6ddfb3ab ......
	 orig commit -> 9c2ece6ef67e9d376f32823086169b489c422ed0 ......
checking c508ed236c8b2dab6f19a6727704cc77ffe5dc1e ......
	 orig commit -> 76d81243a487c09619822ef8e7201a756e58a87d ......
checking 2c40fa51428b50343e7964faea0aae2810750bc2 ......
	 orig commit -> 29e61d6ef061b012d320327af7dbb3990e75be45 ......
checking 06b846486668e1de1d350f8adc86c3d36f01a4ac ......
	 orig commit -> ea72fbf588ac9c017224dcdaa2019ff52ca56fee ......
checking b28f53169c0f4947f6745a993fe655c7c7a9ff8a ......
	 orig commit -> 83967993f2320575c0ab27a80bf1d7535909c2f4 ......
checking 3564366d550960865c273e8ce90130f6e1929aaa ......
	 orig commit -> bb9fbe1b57503f790dbbf9f06e72cb0fb9e60740 ......
checking 5cb6105d2211e96250db10cda6202d7e40c3d3fc ......
	 orig commit -> 65db92e0965ab56e8031d5c804f26d5be0e47047 ......
checking c3382e70a0435cb93eb09fd39c3419d2f8875b5d ......
	 orig commit -> 621a5a327c1e36ffd7bb567f44a559f64f76358f ......
checking 4e7b3632eafa50c8d2225a4f70c7012a0ff8258b ......
	 orig commit -> 9fb523363f6e3984457fee95bb7019395384ffa7 ......
checking 65a163984abe6450c0f7f957581c1a8fc019e946 ......
	 orig commit -> dd27b87ab5fcf3ea1c060b5e3ab5d31cc78e9f4c ......
checking e1587f178eb14ae98443494adafde35b8ac6f43c ......
	 orig commit -> bd2e49ec48feb1855f7624198849eea4610e2286 ......
checking 9e9db211cfb9e29456edc7cbf302b2b4c44b3d87 ......
	 orig commit -> dbcb82b93f3e8322891e47472c89e63058b81e99 ......
checking 5009bd5b93212a206cdf09bd849779ac63847a73 ......
	 orig commit -> aef4feace285f27c8ed35830a5d575bec7f3e90a ......
checking f810961e06c6a8b2cdff26a8bac1e38921608673 ......
	 orig commit -> c0b0d540db1a8bfb041166c4991dd6f624e8de45 ......
checking 18be8bd3aceb282c145b74144caaccb51b24bf92 ......
	 orig commit -> 4e93a658576ab115977225c9d0992b97ff19ba8c ......
checking f79c97198b5596fa8052938471bd67ae6ccb4067 ......
	 orig commit -> d28b62520830b2d0bffa2d98e81afc9f5e537e8b ......
checking 779d5f71c2323ef5610e7c3d9bdb73e5f92f660e ......
	 orig commit -> 2b12dfa124dbadf391cb9a616aaa6b056823bf75 ......
checking f893fca0a4b5ac0ea6003945e791486eac32b90c ......
	 orig commit -> d1cc0ec3da23e44c23712579515494b374f111c9 ......
checking 3db7c40093f6dc58fdfaf2723980955dedadf0a3 ......
	 orig commit -> 4a9c8bb2aca5b5a2a15744333729745dd9903562 ......
checking b7261fc5f5748b3f6f1a839dbc5a744b8871dfcd ......
	 orig commit -> 353748a359f1821ee934afc579cf04572406b420 ......
checking a23cf10d9abb04652ec2daf93d494dc0e2cd835f ......
	 orig commit -> 781932375ffc6411713ee0926ccae8596ed0261c ......
checking b24d90f4d66d9e1f1313cd9bb47cdf0643894ab1 ......
	 orig commit -> 6e7d80161066c99d12580d1b985cb1408bb58cf1 ......
checking db04f92b658083a0a2842919c6d8f9013bff2d08 ......
	 orig commit -> 4a2e84c6ed85434ce7843e4844b4d3263f7e233b ......
checking dfeb333b590c78d0dbadfa00a56635f1b2489d58 ......
	 orig commit -> 011abdc9df559ec75779bb7c53a744c69b2a94c6 ......
checking 88896a963b4e80f5d4f6fe508ab7ce399d7bcb4c ......
	 orig commit -> 09018d4bd7994c2c9f775029bc24589bc85f76fa ......
checking b90f3eccf8aa9eb2990e98bf8c67bd613d44aa0f ......
	 orig commit -> a982e45dc150da3a08907b6dd676b735391704b4 ......
		 a982e45dc150da3a08907b6dd676b735391704b4 has problem. Fixes commit -> 0f5cb0e6225cae2f029944cb8c74617aab6ddd49
commit abe960b761eb6b3b32b099c80535b3d3943db040
Author: Ronald Wahl <rwahl@gmx.de>
Date:   Wed Oct 10 15:54:54 2018 +0200

    clk: at91: Fix division by zero in PLL recalc_rate()
    
    commit 0f5cb0e6225cae2f029944cb8c74617aab6ddd49 upstream.
    
    Commit a982e45dc150 ("clk: at91: PLL recalc_rate() now using cached MUL
    and DIV values") removed a check that prevents a division by zero. This
    now causes a stacktrace when booting the kernel on a at91 platform if
    the PLL DIV register contains zero. This commit reintroduces this check.
    
    Fixes: a982e45dc150 ("clk: at91: PLL recalc_rate() now using cached...")
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Ronald Wahl <rwahl@gmx.de>
    Acked-by: Ludovic Desroches <ludovic.desroches@microchip.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking a98f1946ea58a21ea8004e07d414ba2f99bc6434 ......
	 orig commit -> 254a4cd50b9fe2291a12b8902e08e56dcc4e9b10 ......
checking a64be479ef08c945a94626e90b11ec46bcb66a5e ......
	 orig commit -> 6a76550841d412330bd86aed3238d1888ba70f0e ......
checking beadcfcca2577f56e70f99cde38f1307aed09f03 ......
	 orig commit -> 8c3d20aada70042a39c6a6625be037c1472ca610 ......
checking 60ed2673986f6c47a5fd12f328da8d92090524d9 ......
	 orig commit -> d70aab55924b44f213fec2b900b095430b33eec6 ......
checking 071f23266c301c8e07007a8f05f266f9f04c5623 ......
	 orig commit -> 96d9270499471545048ed8a6d7f425a49762283d ......
checking 3d0d31e512f29ad34ea078f1ad86ec074b7311b0 ......
	 orig commit -> 512857a795cbbda5980efa4cdb3c0b6602330408 ......
checking 941e8bee351e5224ab3f5d6de77da82969e723db ......
	 orig commit -> 81979ae63e872ef650a7197f6ce6590059d37172 ......
checking 74da693a03ceaa21c38c604c5e0b314340a84781 ......
	 orig commit -> df30781699f53e4fd4c494c6f7dd16e3d5c21d30 ......
checking 9db2ad79b8f03d2ddef33e860fb9cf9cd52e7cbc ......
	 orig commit -> 3cedc8797b9c0f2222fd45a01f849c57c088828b ......
checking 9224583a5ee225969577ba4992322420e805fd2b ......
	 orig commit -> 413c2f33489b134e3cc65d9c3ff7861e8fdfe899 ......
checking 2829829c3e61b8ff7245345613f10344e1bf3d22 ......
	 orig commit -> 0d98ba8d70b0070ac117452ea0b663e26bbf46bf ......
checking 2d329968a883f4b64758df6a6c972a02392b3a24 ......
	 orig commit -> a9b6de77b1a3ff729f7bfc54b2e17711776a416c ......
checking 5d6ad5a030675c6527956cf8737657b6be81b41b ......
	 orig commit -> 4a5b45383ca371e123ba103d34d4b3b87616245c ......
checking d55209eeb1215c66d5e2b8360760c6c2ff53ae93 ......
	 orig commit -> 7eb6b35d93c356f1afebbfb808bc296d6351e708 ......
checking 6101eea47bf3a74345e5d722537cc9531ea85a72 ......
	 orig commit -> c5b4a50b74018b3677098151ec5f4fce07d5e6a0 ......
checking af20e4eccc2d5a6d8985c4ff671cabd2c1ef2016 ......
	 orig commit -> b65c32ec5a942ab3ada93a048089a938918aba7f ......
checking 7dfc81992a3e0da45e45eab2f113658f3628f743 ......
	 orig commit -> c1797b11a09c8323c92b074fd48b89a936c991d0 ......
checking 88c4318d36337ddaeb21eeae34a405a6b9f93bc0 ......
	 orig commit -> abcbcb80cd09cd40f2089d912764e315459b71f7 ......
checking 0fe95015fb93d171b6cd0e315b33c26ea33e82f1 ......
	 orig commit -> 18f3e95b90b28318ef35910d21c39908de672331 ......
checking 93e1297f9edce474df6839d5434a511cb130a4a2 ......
	 orig commit -> ff7c9917143b3a6cf2fa61212a32d67cf259bf9c ......
checking 55be2e6f50ac817bcb553d79ab703838b2760226 ......
	 orig commit -> bc3322bc166a2905bc91f774d7b22773dc7c063a ......
checking 7cc7ae5ce0189f5032fe42eabeb80361eede6783 ......
	 orig commit -> 5cf9a338db94cfd570aa2607bef1b30996f188e3 ......
checking 9e838b2e5a3c2ee04e46302f7d3d644b7dc4daf5 ......
	 orig commit -> b5b903fba96a4d1771422efd5c713ebb73f7dc82 ......
checking 226ffbf6135c0a4adf52f6f4c693c26e23d69b90 ......
	 orig commit -> 13c65840feab8109194f9490c9870587173cb29d ......
checking fc0096bceae9385dbed081a7922294cfccfde827 ......
	 orig commit -> f154a718e6cc0d834f5ac4dc4c3b174e65f3659e ......
		 f154a718e6cc0d834f5ac4dc4c3b174e65f3659e has problem. Fixes commit -> 50ca031b51106b1b46162d4e9ecccb7edc95682f
commit 0e5cdbac030358fea3b757d033c8fda29138b866
Author: Mika Westerberg <mika.westerberg@linux.intel.com>
Date:   Wed Sep 5 14:09:54 2018 +0300

    Revert "PCI: Add ACS quirk for Intel 300 series"
    
    commit 50ca031b51106b1b46162d4e9ecccb7edc95682f upstream.
    
    This reverts f154a718e6cc ("PCI: Add ACS quirk for Intel 300 series").
    
    It turns out that erratum "PCH PCIe* Controller Root Port (ACSCTLR) Appear
    As Read Only" has been fixed in 300 series chipsets, even though the
    datasheet [1] claims otherwise.  To make ACS work properly on 300 series
    root ports, revert the faulty commit.
    
    [1] https://www.intel.com/content/dam/www/public/us/en/documents/specification-updates/300-series-c240-series-chipset-pch-spec-update.pdf
    
    Fixes: f154a718e6cc ("PCI: Add ACS quirk for Intel 300 series")
    Signed-off-by: Mika Westerberg <mika.westerberg@linux.intel.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    Cc: stable@vger.kernel.org      # v4.18+
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 78923ba967799cf5125651c345952e790b744940 ......
	 orig commit -> e8440f4bfedc623bee40c84797ac78d9303d0db6 ......
checking e4a424c550b61d05de509aea2eea6415bb8c185f ......
	 orig commit -> 29927dfb7f69bcf2ae7fd1cda10997e646a5189c ......
checking 43f6a09c8c5b181afff4956fe748b7d6d481618d ......
	 orig commit -> 2a027b47dba6b77ab8c8e47b589ae9bbc5ac6175 ......
checking c375d0bd66840b9932353332e0e0a304581d0575 ......
	 orig commit -> f1ce87f6080b1dda7e7b1eda3da332add19d87b9 ......
checking fbbde9343c3e2452f304cc7715d77d4c9481ac3a ......
	 orig commit -> 0cd8116f172eed018907303dbff5c112690eeb91 ......
checking 2f11a0c8c23ab092feef59a941c373b0f93c51d7 ......
	 orig commit -> 5fdfc3dbad099281bf027a353d5786c09408a8e5 ......
checking 80349943d56c1fdf361e6cf2f1f44ca7d210675c ......
	 orig commit -> f93aa8c4de307069c270b2d81741961162bead6c ......
checking 746c1362c434d4c4d48eb53fa0ef757bc191e55f ......
	 orig commit -> dfeae1073583dc35c33b32150e18b7048bbb37e6 ......
		 dfeae1073583dc35c33b32150e18b7048bbb37e6 has problem. Fixes commit -> d9b8a67b3b95a5c5aae6422b8113adc1c2485f2b
checking d097e5b5a1bc3cc601f11b61455210414c4f8b59 ......
	 orig commit -> a8f688ec437dc2045cc8f0c89fe877d5803850da ......
checking 786c8d79f34f0c54d3f9028e994e397207ae769c ......
	 orig commit -> 6b1ca7ece15e94251d1d0d919f813943e4a58059 ......
checking a336999251226e5451afce56173c322cdc9d873a ......
	 orig commit -> 1bc0299d976e000ececc6acd76e33b4582646cb7 ......
checking 964705c4a69183182362977c28786e789a384700 ......
	 orig commit -> af8aab71370a692eaf7e7969ba5b1a455ac20113 ......
checking 2bd28cba43bd24ad3c8b485c3ab4bb4a65564b0c ......
	 orig commit -> a93a0a31111231bb1949f4a83b17238f0fa32d6a ......
checking 9e81f9a2cef15c7563181a00d103c2b2fb4184eb ......
	 orig commit -> 8c79d8223bb11b2f005695a32ddd3985de97727c ......
checking c32951862c1a32c978643fc3cc5d47cc70c33da4 ......
	 orig commit -> 0e12af84cdd3056460f928adc164f9e87f4b303b ......
checking 7d4aaca8d0937ea5ff434f5a7039f27e163f476a ......
	 orig commit -> 763b69654bfb88ea3230d015e7d755ee8339f8ee ......
checking c06f8c2173b2c848b28c4cf2ee2e82c4f791c638 ......
	 orig commit -> 7b74a83cf54a3747e22c57e25712bd70eef8acee ......
checking 96fb9b88385f9b8b308cf2c8b050cd38ed038a59 ......
	 orig commit -> 08bb558ac11ab944e0539e78619d7b4c356278bd ......
checking 1c82abc1b26ae3ce8c81f939e579b9e44452b81b ......
	 orig commit -> d8f9cc328c8888369880e2527e9186d745f2bbf6 ......
		 d8f9cc328c8888369880e2527e9186d745f2bbf6 has problem. Fixes commit -> 3dc7c7badb7502ec3e3aa817a8bdd9e53aa54c52
commit da327a4b9d096a0734fc345ea96b483feafd0b4b
Author: Christophe Jaillet <christophe.jaillet@wanadoo.fr>
Date:   Mon Jun 11 20:15:11 2018 +0200

    IB/mlx4: Fix an error handling path in 'mlx4_ib_rereg_user_mr()'
    
    [ Upstream commit 3dc7c7badb7502ec3e3aa817a8bdd9e53aa54c52 ]
    
    Before returning -EPERM we should release some resources, as already done
    in the other error handling path of the function.
    
    Fixes: d8f9cc328c88 ("IB/mlx4: Mark user MR as writable if actual virtual memory is writable")
    Signed-off-by: Christophe JAILLET <christophe.jaillet@wanadoo.fr>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 49e1083214c68a151b9395388791061a8d0de710 ......
	 orig commit -> 8d3e71136a080d007620472f50c7b3e63ba0f5cf ......
checking e884ed82995ad9d31b6fa93bbaa7870a584700dd ......
	 orig commit -> 0252f73334f9ef68868e4684200bea3565a4fcee ......
checking c41cb9cb5611747d64c3d569c1e9937f3d90e965 ......
	 orig commit -> 3ab2011ea368ec3433ad49e1b9e1c7b70d2e65df ......
checking 1bf1a5e21798518fd6a025c6e0c0168955f5e8e6 ......
	 orig commit -> 8c81c24758ffbf17cf06c6835d361ffa57be2f0e ......
checking 1ed6871464b813c9fbdfac6878ce96af7725f614 ......
	 orig commit -> 522811e944ed9b36806faa019faec10f9d259cca ......
checking 6ba51909693c7bf8c463b9c90f7f8726b710fe42 ......
	 orig commit -> 3b9cf7905fe3ab35ab437b5072c883e609d3498d ......
checking 4910cc250b4dab82b42a743377d359abaee07b73 ......
	 orig commit -> 482137bf2aecd887ebfa8756456764a2f6a0e545 ......
checking 728ea2302acc19cd83164b38408fd5f84e5153b2 ......
	 orig commit -> d5b4885b1dff72ac670b518cfeaac719d768bd4d ......
checking 64df84dcf1e4dd3b63c60dd6f36473d19060af48 ......
	 orig commit -> 71c8fc0c96abf8e53e74ed4d891d671e585f9076 ......
checking ee6ae5ac75abf889e89c7ad3cdb75bb15d0a6308 ......
	 orig commit -> b5b7dd647f2d21b93f734ce890671cd908e69b0a ......
checking cdfa28c29ad4b5933c84ac13293739040fa1a3e9 ......
	 orig commit -> 0fe42512b2f03f9e5a20b9f55ef1013a68b4cd48 ......
checking 14ca7d344e271c89858858abb3757642bc4c7a76 ......
	 orig commit -> 3877ef7a1ccecaae378c497e1dcddbc2dccb664c ......
checking ae6647c78ff831380851869344161f460896892a ......
	 orig commit -> 4eda9b766b042ea38d84df91581b03f6145a2ab0 ......
checking 3482130d8d1e60b5b08ed09874dbfafa9908df98 ......
	 orig commit -> d9a695f3c8098ac9684689774a151cff30d8aa25 ......
checking 3db24d2e192f1ccf1723550184e38f94d173e8ab ......
	 orig commit -> 975ba94c2c3aca4d9f1ae26f3916d7787495ce86 ......
checking eda170a9fe51284303f4999957e57e1c4b3c9ff3 ......
	 orig commit -> 76ed0b803a2ab793a1b27d1dfe0de7955282cd34 ......
checking c9debbd1a5b84014d8651da82ca30651d83ca322 ......
	 orig commit -> b6c84ba22ff3a198eb8d5552cf9b8fda1d792e54 ......
checking 971a55574b4789c64d43c6d34f5549c337567731 ......
	 orig commit -> 9e59c5f66c624b43c766a9fe3b2430e0e976bf0e ......
checking 56fbab60aa47c64898c3d18540322c317ada32ef ......
	 orig commit -> 722cde76d68e8cc4f3de42e71c82fd40dea4f7b9 ......
checking 3b185e667b5222f170a337d57ca338fd2f66f828 ......
	 orig commit -> 0a4ec6aa035a52c422eceb2ed51ed88392a3d6c2 ......
checking a5d49dfb20c943d6b9b49bdca3142795db2c55ef ......
	 orig commit -> ac9816dcbab53c57bcf1d7b15370b08f1e284318 ......
checking 134e70c22eb0a47dcb30f20859f331344b5018db ......
	 orig commit -> 75743649064ec0cf5ddd69f240ef23af66dde16e ......
checking 0e8bb91c6dd6a77c60279c4fd83975ef257ed3c2 ......
	 orig commit -> 98fd72fe82527fd26618062b60cfd329451f2329 ......
checking 919c9b8187bc8aa66388e50248c7f6c5b0c87e97 ......
	 orig commit -> cd6ef7eebf171bfcba7dc2df719c2a4958775040 ......
checking 1ab9092356a13ab26cf28f35943571bb35d5d875 ......
	 orig commit -> d2032678e57fc508d7878307badde8f89b632ba3 ......
checking c12d24161611e6038631778e614581edc4647eb6 ......
	 orig commit -> 4f7c06e26ec9cf7fe9f0c54dc90079b6a4f4b2c3 ......
checking 5fefd9a5d97a45bc2927acc0aa53a098e80a4d41 ......
	 orig commit -> 91d06971881f71d945910de128658038513d1b24 ......
checking 69829f749a432eeb1c208b113bfec598a23ee823 ......
	 orig commit -> 6becdb601bae2a043d7fb9762c4d48699528ea6e ......
checking 3a37d85a90dafb4986dbfc356c6d662f0db665a8 ......
	 orig commit -> 543b8f8662fe6d21f19958b666ab0051af9db21a ......
checking 2f7bf369b5f8699231398aef585cb680828f3ac9 ......
	 orig commit -> df0e91d488276086bc07da2e389986cae0048c37 ......
checking 02832578eb9d4572a3194e50e5d2268ff049f9f4 ......
	 orig commit -> 8a301eb16d99983a4961f884690ec97b92e7dcfe ......
checking a47c3c48769ab1e41f1dd53aa116a89f1f208aa1 ......
	 orig commit -> 988a35f8da1dec5a8cd2788054d1e717be61bf25 ......
checking affd84024cbedfc0ee091396d064fbf1366ea8fe ......
	 orig commit -> 7dc5fe0814c35ec4e7d2e8fa30abab72e0e6a172 ......
checking 3ffecef63d0932c3becceb1ef166e95e9a1ca33d ......
	 orig commit -> fe50a7d0393a552e4539da2d31261a59d6415950 ......
checking 26e03f8dcd347a543f62eb58831ff417736d9d53 ......
	 orig commit -> 2026d35741f2c3ece73c11eb7e4a15d7c2df9ebe ......
checking 5eff5dbf3108017efe46ad3803b2122dfd1128b5 ......
	 orig commit -> 6fb8656646f996d1eef42e6d56203c4915cb9e08 ......
checking 5f7a15af646d8c9cf52f7d86b43a590fabf4e808 ......
	 orig commit -> 756b56a9e832e063edc83be7c3889e98c536dd2b ......
checking ea0ac01f68aa01cc391f18148342fc4ecc912860 ......
	 orig commit -> 666902e42fd8344b923c02dc5b0f37948ff4f225 ......
		 666902e42fd8344b923c02dc5b0f37948ff4f225 has problem. Fixes commit -> b60706644282af04e4aa57da5af57470d453cd1f
checking 9fcc267de242acb5da81861334519c150c3dc445 ......
	 orig commit -> ef4b0be62641d296cf4c0ad8f75ab83ab066ed51 ......
checking 0cf93821e34da487c5c86d0078c70dcd47b9ae7e ......
	 orig commit -> bd2a07f71a1e2e198f8a30cb551d9defe422d83d ......
checking b2291a435c292743cc6f9ec528e9e2d72cabfa9a ......
	 orig commit -> 5d302ed3cc80564fb835bed5fdba1e1250ecc9e5 ......
checking b5e8118779e54b6e31a00e7e96fb4be94b62a18f ......
	 orig commit -> 2d534113be9a2aa532a1ae127a57e83558aed358 ......
checking 7a1d79de77f531a4d227f93554215678f8c7ad31 ......
	 orig commit -> 6a6ad7face95af0b9e6aaf1eb2261eb70240b89b ......
checking 040fecfd714a67decf3334727da4d6ea99a2f576 ......
	 orig commit -> ff2faf1289c1f81b5b26b9451dd1c2006aac8db8 ......
checking 4e0ce7053a12dcc0fc19628fccea7f0bed77eaf5 ......
	 orig commit -> 065c09563c872e52813a17218c52cd642be1dca6 ......
checking 3c22218ed86921ac18b4554093a1034feb3ebb5b ......
	 orig commit -> 6e01827ed93947895680fbdad68c072a0f4e2450 ......
checking 8b03376580c9c2b4d239bc43527bb9a35dc2078e ......
	 orig commit -> c5c2a97b3ac7d1ec19e7cff9e38caca6afefc3de ......
checking ba0be5973f9e5eef705409a021159a6cc0571135 ......
	 orig commit -> 47e5abfb546a3ace23a77453dc2e9db92704c5ac ......
checking b7ac0389770aacc2dc91d17dc44fd4dcc1438faf ......
	 orig commit -> 72038df3c580c4c326b83c86149d7ac34007532a ......
checking 8ae5d476a3b7bd7938abcd0f926925c7c81fd79b ......
	 orig commit -> 7de712ccc096b81d23cc0a941cd9b8cb3956605d ......
checking 980899da5dc9249aef2329ae662f16a97062e8b1 ......
	 orig commit -> 8afb1d2c12163f77777f84616a8e9444d0050ebe ......
checking 60711b27c5f5d1dda01078df21520cfb63d06419 ......
	 orig commit -> 3e2816c1078eb2b5a3276eb83d4da156b3e2d04f ......
checking da9ad89c72d58df3534fed2963972e932c70fdd7 ......
	 orig commit -> 3f90f9ef2dda316d64e420d5d51ba369587ccc55 ......
checking ab693cc665ca539d3d79783fd1699fc52697469a ......
	 orig commit -> 3ae6295ccb7cf6d344908209701badbbbb503e40 ......
checking 64d44661e2207a408783360f3029b9a2c48a6daf ......
	 orig commit -> 1f74c8a64798e2c488f86efc97e308b85fb7d7aa ......
checking 5b8e086891b038adc667f3ae2f6839f76b54b264 ......
	 orig commit -> 40c36e2741d7fe1e66d6ec55477ba5fd19c9c5d2 ......
		 40c36e2741d7fe1e66d6ec55477ba5fd19c9c5d2 has problem. Fixes commit -> d28af26faa0b1daf3c692603d46bc4687c16f19e
commit 96ae22dc8cd1c817cdd94a9bfaf72a7068c499ae
Author: Tony Luck <tony.luck@intel.com>
Date:   Thu Jan 31 16:33:41 2019 -0800

    x86/MCE: Initialize mce.bank in the case of a fatal error in mce_no_way_out()
    
    commit d28af26faa0b1daf3c692603d46bc4687c16f19e upstream.
    
    Internal injection testing crashed with a console log that said:
    
      mce: [Hardware Error]: CPU 7: Machine Check Exception: f Bank 0: bd80000000100134
    
    This caused a lot of head scratching because the MCACOD (bits 15:0) of
    that status is a signature from an L1 data cache error. But Linux says
    that it found it in "Bank 0", which on this model CPU only reports L1
    instruction cache errors.
    
    The answer was that Linux doesn't initialize "m->bank" in the case that
    it finds a fatal error in the mce_no_way_out() pre-scan of banks. If
    this was a local machine check, then this partially initialized struct
    mce is being passed to mce_panic().
    
    Fix is simple: just initialize m->bank in the case of a fatal error.
    
    Fixes: 40c36e2741d7 ("x86/mce: Fix incorrect "Machine check from unknown source" message")
    Signed-off-by: Tony Luck <tony.luck@intel.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Vishal Verma <vishal.l.verma@intel.com>
    Cc: x86-ml <x86@kernel.org>
    Cc: stable@vger.kernel.org # v4.18 Note pre-v5.0 arch/x86/kernel/cpu/mce/core.c was called arch/x86/kernel/cpu/mcheck/mce.c
    Link: https://lkml.kernel.org/r/20190201003341.10638-1-tony.luck@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking d292f33b74942e1419311887b0054794d779ce3f ......
	 orig commit -> 4c5717da1d021cf368eabb3cb1adcaead56c0d1e ......
checking 1d1dd2011adca8fa1e0715a83fc751eae31acf1d ......
	 orig commit -> c7d606f560e4c698884697fef503e4abacdd8c25 ......
		 c7d606f560e4c698884697fef503e4abacdd8c25 has problem. Fixes commit -> 41f035a86b5b72a4f947c38e94239d20d595352a
commit 5323688fc3ed7064a3a4a70f2aa6be8dcddfe330
Author: Tony Luck <tony.luck@intel.com>
Date:   Mon Feb 25 12:59:40 2019 -0800

    x86/mce: Improve error message when kernel cannot recover, p2
    
    commit 41f035a86b5b72a4f947c38e94239d20d595352a upstream.
    
    In
    
      c7d606f560e4 ("x86/mce: Improve error message when kernel cannot recover")
    
    a case was added for a machine check caused by a DATA access to poison
    memory from the kernel. A case should have been added also for an
    uncorrectable error during an instruction fetch in the kernel.
    
    Add that extra case so the error message now reads:
    
      mce: [Hardware Error]: Machine check: Instruction fetch error in kernel
    
    Fixes: c7d606f560e4 ("x86/mce: Improve error message when kernel cannot recover")
    Signed-off-by: Tony Luck <tony.luck@intel.com>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Pu Wen <puwen@hygon.cn>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: x86-ml <x86@kernel.org>
    Link: https://lkml.kernel.org/r/20190225205940.15226-1-tony.luck@intel.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking dbb37d98b93d239269420cd9848bd730cb33530b ......
	 orig commit -> 74899d92e66663dc7671a8017b3146dcd4735f3b ......
checking 3ce79716a9ff97cfe2283606aed360ff7a8e3955 ......
	 orig commit -> eab6870fee877258122a042bfd99ee7908c40280 ......
