Check from v4.14.9 to v4.14.10
Commit count: 75
checking b8ce8232fcc37fe7a97db79ea0a5f32098c25e72 ......
checking af1eddcc176e36104f50abf32b14cb979385d9f6 ......
checking 646809937c02396f06a38a38ac686eff1b5e85fb ......
	 orig commit -> 2eecb2e04abb62ef8ea7b43e1a46bdb5b99d1bf8 ......
checking c00802d53ddf3724602c1da0344c6fcaf9001358 ......
	 orig commit -> ca5902a6547f662419689ca28b3c29a772446caa ......
checking b7c0181c47c4369cfccd97bca7e9e211026aa94c ......
	 orig commit -> 4423c18e466afdfb02a36ee8b9f901d144b3c607 ......
checking 01b1a29e32c13c69c0fd8a70e6cd66ac91316862 ......
	 orig commit -> 19deaa217bc04e83b59b5e8c8229eb0e53ad9efc ......
checking 166f39bc340d0eb739d31ddd347df593d7b6ff97 ......
	 orig commit -> 24e3a7fb60a9187e5df90e5fa655ffc94b9c4f77 ......
checking 6d80b15a226e59ebbc3ca8c14b65885bc8ffb2b9 ......
	 orig commit -> 41fce90f26333c4fa82e8e43b9ace86c4e8a0120 ......
checking e7681f90a45a8f0eb6da8c0dc68a8334e3ed2251 ......
	 orig commit -> 92411f6d7f1afcc95e54295d40e96a75385212ec ......
checking 6209cb514d977e323a7dad1b0ee7e83fc906215d ......
	 orig commit -> 2797c4a11f373b2545c2398ccb02e362ee66a142 ......
checking a971d10f67df27a16cce5084092e151dba3e037d ......
	 orig commit -> f41d84dddc66b164ac16acf3f584c276146f1c48 ......
checking e2d769198ff7cb3eecb60a427706d498d87aa0a0 ......
	 orig commit -> 61d2f2a05765a5f57149efbd93e3e81a83cbc2c1 ......
checking 6461005967ed1a92ad67f8d864fdb3f0794a8682 ......
	 orig commit -> fae1a3e775cca8c3a9e0eb34443b310871a15a92 ......
checking 6cc3f6f10240df375f6d7457187b467c1817bdad ......
	 orig commit -> d73235d17ba63b53dc0e1051dbc10a1f1be91b71 ......
checking 41e1386388dc53bc0b9d7744fd1a99567d737fed ......
	 orig commit -> ed52870f4676489124d8697fd00e6ae6c504e586 ......
checking 5aa30b450a8b8b6c8a0921e00e900c0ab9b8c4ae ......
	 orig commit -> 7333b5aca412d6ad02667b5a513485838a91b136 ......
checking 8708f682836827e8c593e370430a3156766b2fe2 ......
	 orig commit -> dc1c4165d189350cb51bdd3057deb6ecd164beda ......
checking 4e9cca9267feb13658a3bb6785a5649b76e684e0 ......
	 orig commit -> 7839c672e58bf62da8f2f0197fefb442c02ba1dd ......
checking 8a74c8e87e46fa85fbd0c73273c831559c25d576 ......
	 orig commit -> bfe766cf65fb65e68c4764f76158718560bdcee5 ......
checking efc9b7ae524dfbd4cb9122d2f1d4e9c33d0f11dd ......
	 orig commit -> d2b3c353595a855794f8b9df5b5bdbe8deb0c413 ......
checking ed1918e287547d92a795729993ce8e6ca7940eda ......
	 orig commit -> 251c201bf4f8b5bf4f1ccb4f8920eed2e1f57580 ......
checking e8f28db0f737690e3d7ecb26cfaf60c7af74f7e5 ......
	 orig commit -> 5a1314fa697fc65cefaba64cd4699bfc3e6882a6 ......
checking 1b1f78c02c79d8e5398d3a0cbf45c4a3dee2e9ee ......
	 orig commit -> 9352aeada4d8d8753fc0e414fbfe8fdfcb68a12c ......
checking 13a41fbd867ae482650aab1cee068e1f7f5ad94a ......
	 orig commit -> bcf3f1752a622f1372d3252d0fea8855d89812e7 ......
checking 117b8b85e5777b76128a808533c4f711be564360 ......
	 orig commit -> 203c110b39a89b48156c7450504e454fedb7f7f6 ......
checking 482b6942a8c1e5110a44787f6e72e0d0775bf4c0 ......
	 orig commit -> 0ed9d3de5f8f97e6efd5ca0e3377cab5f0451ead ......
checking 3ef1c33f98c82876555813e301aca7a765f28f92 ......
	 orig commit -> 111be883981748acc9a56e855c8336404a8e787c ......
checking f349652293fb79fbd5768dfc18605200177b74d7 ......
	 orig commit -> 4ccafe032005e9b96acbef2e389a4de5b1254add ......
checking d8f477a5cd2021552b135764b77df7c39b7dc504 ......
	 orig commit -> 5839ee7389e893a31e4e3c9cf17b50d14103c902 ......
checking 2c7b98ffac666d4f54d1b57b82c3341f473f7dc5 ......
	 orig commit -> 5a15f289ee87eaf33f13f08a4909ec99d837ec5f ......
checking 39384674586f371503728661d0ded892c348717a ......
	 orig commit -> 866f7ed7d67936dcdbcddc111c8af878c918fe7c ......
checking 70709c277cdcee4e1700e9155a316700ba1446b9 ......
	 orig commit -> 2b4584d00a6bc02b63ab3c7213060d41a74bdff1 ......
checking 7a6a8463978679e3453785270543abadecb07ab7 ......
	 orig commit -> 9226665159f0367ad08bc7d5dd194aeadb90316f ......
		 9226665159f0367ad08bc7d5dd194aeadb90316f has problem. Fixes commit -> 0700d3d117a7f110ddddbd83873e13652f69c54b
commit bfa5aa541c1ed6ec031551c1b7817410b2f09b41
Author: Kailang Yang <kailang@realtek.com>
Date:   Fri Apr 26 16:13:54 2019 +0800

    ALSA: hda/realtek - Fixed Dell AIO speaker noise
    
    commit 0700d3d117a7f110ddddbd83873e13652f69c54b upstream.
    
    Fixed Dell AIO speaker noise.
    spec->gen.auto_mute_via_amp = 1, this option was solved speaker white
    noise at boot.
    codec->power_save_node = 0, this option was solved speaker noise at
    resume back.
    
    Fixes: 9226665159f0 ("ALSA: hda/realtek - Fix Dell AIO LineOut issue")
    Signed-off-by: Kailang Yang <kailang@realtek.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 065a28657370ce3a7ebbc13030ba6231db4a6138 ......
	 orig commit -> c1cfd9025cc394fd137a01159d74335c5ac978ce ......
checking 637de99c7a1523b31aedb83537b0fcba8775663e ......
	 orig commit -> 85e9b13cbb130a3209f21bd7933933399c389ffe ......
checking 6300daa071b21eec1e7411609a09f050966b392e ......
	 orig commit -> 0a423772de2f3d7b00899987884f62f63ae00dcb ......
checking de3b66c01edc8ac2bea82c0337e75f6b5498bf37 ......
	 orig commit -> 15d8374874ded0bec37ef27f8301a6d54032c0e5 ......
checking f09fca41e29c68944e75ab5f65a2efcfcc88aceb ......
	 orig commit -> d53c5135792319e095bb126bc43b2ee98586f7fe ......
checking c692698ebebed838627aa3879e30959c4a75f033 ......
	 orig commit -> 11edb555966ed2c66c533d17c604f9d7e580a829 ......
checking 88990591f0b0e7d4aedf0255fc26a09a2f899212 ......
	 orig commit -> 9abffc6f2efe46c3564c04312e52e07622d40e51 ......
checking 29082870f58a9b0c793bea745de52a07c74f09aa ......
	 orig commit -> 2b4f27c36bcd46e820ddb9a8e6fe6a63fa4250b8 ......
checking 94e0c5ab52e2bdc1ddbaec32ca0e477a2737eb04 ......
	 orig commit -> adf6895754e2503d994a765535fd1813f8834674 ......
checking 7a5d5789819417d67ccb6c81f9339ee75f97370a ......
	 orig commit -> bb82e0b4a7e96494f0c1004ce50cec3d7b5fb3d1 ......
checking 752d01704ad18371fa6d15ef16f5dea7972be821 ......
	 orig commit -> f6c4fd506cb626e4346aa81688f255e593a7c5a0 ......
checking 763f7eaf606281ccfaa2f95445219f797697ed70 ......
	 orig commit -> 613e396bc0d4c7604fba23256644e78454c68cf6 ......
checking 3440093266b786d8b8b2506ea788f4462437cd7a ......
	 orig commit -> 92a0f81d89571e3e8759366e050ee05cc545ef99 ......
		 92a0f81d89571e3e8759366e050ee05cc545ef99 has problem. Fixes commit -> 945fd17ab6bab8a4d05da6c3170519fbcfe62ddb
1dddd25125112ba49706518ac9077a1026a18f37
f2078904810373211fb15f91888fba14c01a4acc
f6c4fd506cb626e4346aa81688f255e593a7c5a0
commit 67f67244f80a37fba03c9e6011853dba94952c7c
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu Jan 4 12:32:03 2018 +0100

    x86/kaslr: Fix the vaddr_end mess
    
    commit 1dddd25125112ba49706518ac9077a1026a18f37 upstream.
    
    vaddr_end for KASLR is only documented in the KASLR code itself and is
    adjusted depending on config options. So it's not surprising that a change
    of the memory layout causes KASLR to have the wrong vaddr_end. This can map
    arbitrary stuff into other areas causing hard to understand problems.
    
    Remove the whole ifdef magic and define the start of the cpu_entry_area to
    be the end of the KASLR vaddr range.
    
    Add documentation to that effect.
    
    Fixes: 92a0f81d8957 ("x86/cpu_entry_area: Move it out of the fixmap")
    Reported-by: Benjamin Gilbert <benjamin.gilbert@coreos.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Benjamin Gilbert <benjamin.gilbert@coreos.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Garnier <thgarnie@google.com>
    Cc: Alexander Kuleshov <kuleshovmail@gmail.com>
    Link: https://lkml.kernel.org/r/alpine.DEB.2.20.1801041320360.1771@nanos
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1af9b74bfa59250f69578f6e6424aae7cb46d063
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu Jan 4 13:01:40 2018 +0100

    x86/mm: Map cpu_entry_area at the same place on 4/5 level
    
    commit f2078904810373211fb15f91888fba14c01a4acc upstream.
    
    There is no reason for 4 and 5 level pagetables to have a different
    layout. It just makes determining vaddr_end for KASLR harder than
    necessary.
    
    Fixes: 92a0f81d8957 ("x86/cpu_entry_area: Move it out of the fixmap")
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Benjamin Gilbert <benjamin.gilbert@coreos.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Garnier <thgarnie@google.com>
    Cc: Alexander Kuleshov <kuleshovmail@gmail.com>
    Link: https://lkml.kernel.org/r/alpine.DEB.2.20.1801041320360.1771@nanos
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 752d01704ad18371fa6d15ef16f5dea7972be821
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sat Dec 23 19:45:11 2017 +0100

    x86/cpu_entry_area: Prevent wraparound in setup_cpu_entry_area_ptes() on 32bit
    
    commit f6c4fd506cb626e4346aa81688f255e593a7c5a0 upstream.
    
    The loop which populates the CPU entry area PMDs can wrap around on 32bit
    machines when the number of CPUs is small.
    
    It worked wonderful for NR_CPUS=64 for whatever reason and the moron who
    wrote that code did not bother to test it with !SMP.
    
    Check for the wraparound to fix it.
    
    Fixes: 92a0f81d8957 ("x86/cpu_entry_area: Move it out of the fixmap")
    Reported-by: kernel test robot <fengguang.wu@intel.com>
    Signed-off-by: Thomas "Feels stupid" Gleixner <tglx@linutronix.de>
    Tested-by: Borislav Petkov <bp@alien8.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 71978491bb6600d39ef68f421c23aeb11c10053f
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Feb 28 21:14:26 2018 +0100

    x86/cpu_entry_area: Sync cpu_entry_area to initial_page_table
    
    commit 945fd17ab6bab8a4d05da6c3170519fbcfe62ddb upstream.
    
    The separation of the cpu_entry_area from the fixmap missed the fact that
    on 32bit non-PAE kernels the cpu_entry_area mapping might not be covered in
    initial_page_table by the previous synchronizations.
    
    This results in suspend/resume failures because 32bit utilizes initial page
    table for resume. The absence of the cpu_entry_area mapping results in a
    triple fault, aka. insta reboot.
    
    With PAE enabled this works by chance because the PGD entry which covers
    the fixmap and other parts incindentally provides the cpu_entry_area
    mapping as well.
    
    Synchronize the initial page table after setting up the cpu entry
    area. Instead of adding yet another copy of the same code, move it to a
    function and invoke it from the various places.
    
    It needs to be investigated if the existing calls in setup_arch() and
    setup_per_cpu_areas() can be replaced by the later invocation from
    setup_cpu_entry_areas(), but that's beyond the scope of this fix.
    
    Fixes: 92a0f81d8957 ("x86/cpu_entry_area: Move it out of the fixmap")
    Reported-by: Woody Suwalski <terraluna977@gmail.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Woody Suwalski <terraluna977@gmail.com>
    Cc: William Grant <william.grant@canonical.com>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/alpine.DEB.2.21.1802282137290.1392@nanos.tec.linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 67f67244f80a37fba03c9e6011853dba94952c7c
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu Jan 4 12:32:03 2018 +0100

    x86/kaslr: Fix the vaddr_end mess
    
    commit 1dddd25125112ba49706518ac9077a1026a18f37 upstream.
    
    vaddr_end for KASLR is only documented in the KASLR code itself and is
    adjusted depending on config options. So it's not surprising that a change
    of the memory layout causes KASLR to have the wrong vaddr_end. This can map
    arbitrary stuff into other areas causing hard to understand problems.
    
    Remove the whole ifdef magic and define the start of the cpu_entry_area to
    be the end of the KASLR vaddr range.
    
    Add documentation to that effect.
    
    Fixes: 92a0f81d8957 ("x86/cpu_entry_area: Move it out of the fixmap")
    Reported-by: Benjamin Gilbert <benjamin.gilbert@coreos.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Tested-by: Benjamin Gilbert <benjamin.gilbert@coreos.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Garnier <thgarnie@google.com>
    Cc: Alexander Kuleshov <kuleshovmail@gmail.com>
    Link: https://lkml.kernel.org/r/alpine.DEB.2.20.1801041320360.1771@nanos
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 1af9b74bfa59250f69578f6e6424aae7cb46d063
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Thu Jan 4 13:01:40 2018 +0100

    x86/mm: Map cpu_entry_area at the same place on 4/5 level
    
    commit f2078904810373211fb15f91888fba14c01a4acc upstream.
    
    There is no reason for 4 and 5 level pagetables to have a different
    layout. It just makes determining vaddr_end for KASLR harder than
    necessary.
    
    Fixes: 92a0f81d8957 ("x86/cpu_entry_area: Move it out of the fixmap")
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Benjamin Gilbert <benjamin.gilbert@coreos.com>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Garnier <thgarnie@google.com>
    Cc: Alexander Kuleshov <kuleshovmail@gmail.com>
    Link: https://lkml.kernel.org/r/alpine.DEB.2.20.1801041320360.1771@nanos
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 752d01704ad18371fa6d15ef16f5dea7972be821
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Sat Dec 23 19:45:11 2017 +0100

    x86/cpu_entry_area: Prevent wraparound in setup_cpu_entry_area_ptes() on 32bit
    
    commit f6c4fd506cb626e4346aa81688f255e593a7c5a0 upstream.
    
    The loop which populates the CPU entry area PMDs can wrap around on 32bit
    machines when the number of CPUs is small.
    
    It worked wonderful for NR_CPUS=64 for whatever reason and the moron who
    wrote that code did not bother to test it with !SMP.
    
    Check for the wraparound to fix it.
    
    Fixes: 92a0f81d8957 ("x86/cpu_entry_area: Move it out of the fixmap")
    Reported-by: kernel test robot <fengguang.wu@intel.com>
    Signed-off-by: Thomas "Feels stupid" Gleixner <tglx@linutronix.de>
    Tested-by: Borislav Petkov <bp@alien8.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 1b0eddf0a1d1beabc2f3b23bf807758667c30fc7 ......
	 orig commit -> ed1bbc40a0d10e0c5c74fe7bdc6298295cf40255 ......
checking b6167aeb9faf5966daca3f9f973e1b428a43510c ......
	 orig commit -> 1a3b0caeb77edeac5ce5fa05e6a61c474c9a9745 ......
checking acefb4516bcecc7d084205e00fe2de589d8259bc ......
	 orig commit -> dd95f1a4b5ca904c78e6a097091eb21436478abb ......
checking 1765d0a565ee2585cf7b400e81be9a4da96fd7da ......
	 orig commit -> cb0a9144a744e55207e24dcef812f05cd15a499a ......
checking b72e0abe99abaa4e64db83776c11ff6847e829cf ......
	 orig commit -> 50fb83a62cf472dc53ba23bd3f7bd6c1b2b3b53e ......
checking 29606f10f399dd159ab6718d05060294b29a4481 ......
	 orig commit -> 3f67af51e56f291d7417d77c4f67cd774633c5e1 ......
checking 6472c50292d4e4b342f4ea4e3e46e7786ca5c99c ......
	 orig commit -> b5fc6d943808b570bdfbec80f40c6b3855f1c48b ......
checking a0edc4947db9a3cbc6219143ff72e163ad7dbf80 ......
	 orig commit -> a501686b2923ce6f2ff2b1d0d50682c6411baf72 ......
checking de4c8bbd6e1b631fa5f38e75453e331244ad7028 ......
	 orig commit -> 23cb7d46f371844c004784ad9552a57446f73e5a ......
checking 032fd2e383cb112789bcbb9a728dd4d96a1c280d ......
	 orig commit -> 3e46e0f5ee3643a1239be9046c7ba6c66ca2b329 ......
checking 06f9acfe0abcc9386bbeee8438b87f90ff2e04d1 ......
	 orig commit -> 4fe2d8b11a370af286287a2661de9d4e6c9a145a ......
checking d8f29ac7363778f38dab7bcb79ca076b8534904c ......
	 orig commit -> e8ffe96e5933d417195268478479933d56213a3f ......
checking 88569f5e3a5648331066b49dd6918b8c70067ae7 ......
	 orig commit -> 5a7ccf4754fb3660569a6de52ba7f7fc3dfaf280 ......
checking 2c8e9099aecec2baaac8d34c7b823493f2d0eeed ......
	 orig commit -> a4828f81037f491b2cc986595e3a969a6eeb2fb5 ......
checking b17459342c55a209014a783d74bff6a0a5374339 ......
	 orig commit -> c2b3496bb30bd159e9de42e5c952e1f1f33c9a77 ......
checking ee8e8b2df6d3f2a4ce25182d18964f891760ac65 ......
	 orig commit -> c10e83f598d08046dd1ebc8360d4bb12d802d51b ......
checking 49c01662d3177e1814ceb52337add473fb4d264b ......
	 orig commit -> 4831b779403a836158917d59a7ca880483c67378 ......
checking beb899c4bcdfb006293a593ffe31c9f13ec7c66b ......
	 orig commit -> 49275fef986abfb8b476e4708aaecc07e7d3e087 ......
		 49275fef986abfb8b476e4708aaecc07e7d3e087 has problem. Fixes commit -> 31ad7f8e7dc94d3b85ccf9b6141ce6dfd35a1781
commit 373ccbd6eb034834a8b58fc1b7836cf25adb5c37
Author: Boris Ostrovsky <boris.ostrovsky@oracle.com>
Date:   Mon Mar 19 10:31:54 2018 -0400

    x86/vsyscall/64: Use proper accessor to update P4D entry
    
    commit 31ad7f8e7dc94d3b85ccf9b6141ce6dfd35a1781 upstream.
    
    Writing to it directly does not work for Xen PV guests.
    
    Fixes: 49275fef986a ("x86/vsyscall/64: Explicitly set _PAGE_USER in the pagetable hierarchy")
    Signed-off-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Acked-by: Andy Lutomirski <luto@kernel.org>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20180319143154.3742-1-boris.ostrovsky@oracle.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 7b45ad6e0fd7710cb5a5fb9a6bdd0632f510bf50 ......
	 orig commit -> 146122e24bdf208015d629babba673e28d090709 ......
checking c4bc398080d80008e7d4a8cff528b8f3e8d8fb63 ......
	 orig commit -> c05344947b37f7cda726e802457370bc6eac4d26 ......
checking 662fd946aa4637a822bff0ec02afd59a8e2c2ba2 ......
	 orig commit -> 7bbcbd3d1cdcbacd0f9f8dc4c98d550972f1ca30 ......
checking adc37e209d954ffa235d036c1b71ca84691ae4f7 ......
	 orig commit -> 32d0b95300db03c2b23b2ea2c94769a4a138e79d ......
checking da8eb8ad0e695ed34b114df28505d4dd5b4ea693 ......
	 orig commit -> f5b5fab1780c98b74526dbac527574bd02dc16f8 ......
checking 76358c8d90c73c896000ccee3375b709bc955bc5 ......
	 orig commit -> 14c47b54b0d9389e3ca0718e805cdd90c5a4303a ......
checking 6a8f7688094c05e02b392b98e6977497a5096e20 ......
	 orig commit -> a356d2ae50790f49858ebed35da9e206336fafee ......
checking 3033f9e601f45f372d48bd266629abd681cea116 ......
	 orig commit -> 9eb719855f6c9b21eb5889d9ac2ca1c60527ad89 ......
checking 2845aee45c363e15c1e677b1f4d0043f361c102b ......
	 orig commit -> 3bd51c5a371de917e4e7401c9df006b5998579df ......
		 3bd51c5a371de917e4e7401c9df006b5998579df has problem. Fixes commit -> 0f908ccbeca99ddf0ad60afa710e72aded4a5ea7
commit 50c1c6cc09dcea608ace4bd258714d01909fed45
Author: Andrew Morton <akpm@linux-foundation.org>
Date:   Fri Jan 12 16:53:17 2018 -0800

    tools/objtool/Makefile: don't assume sync-check.sh is executable
    
    commit 0f908ccbeca99ddf0ad60afa710e72aded4a5ea7 upstream.
    
    patch(1) loses the x bit.  So if a user follows our patching
    instructions in Documentation/admin-guide/README.rst, their kernel will
    not compile.
    
    Fixes: 3bd51c5a371de ("objtool: Move kernel headers/code sync check to a script")
    Reported-by: Nicolas Bock <nicolasbock@gentoo.org>
    Reported-by Joakim Tjernlund <Joakim.Tjernlund@infinera.com>
    Cc: Ingo Molnar <mingo@kernel.org>
    Cc: Josh Poimboeuf <jpoimboe@redhat.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Holger Hoffstätte <holger@applied-asynchrony.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 62c37437a110cfec0d2b46f5d28113a631187978 ......
	 orig commit -> 6a77cff819ae3e31992bde6432c9b5720748a89b ......
checking add9f2a47035fe94603b8ffe8d1d323b5fb0429f ......
	 orig commit -> 9704f8147e88213f2fa580f713b42b08a4f1a7d2 ......
