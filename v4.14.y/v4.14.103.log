Check from v4.14.103 to v4.14.104
Commit count: 73
checking 30921fc1e5fcf904f9afddeece1288f5b16ba017 ......
checking 418d77caf233c1fa01ec1c9c880b8af855cfd02e ......
	 orig commit -> 87454b6edc1b0143fdb3d9853285477e95af74a4 ......
checking 81bafd09bb8d98370d8d5d21a1b3bbc48f3dcf28 ......
	 orig commit -> a9903f04e0a4ea522d959c2f287cdf0ab029e324 ......
checking cc96cdc8e6532f2b3c934318e65901c599f2175c ......
	 orig commit -> a0dd6773038f3fd2bd1b4f7ec193887cffc49046 ......
checking f6de4ca8627b74fca198df8c0c02c52acb8231aa ......
	 orig commit -> 1f60652dd586d1b3eee7c4602892a97a62fa937a ......
checking 8c2183d845a2ba36eefd9df8d3e975932ce5fd6b ......
	 orig commit -> 15df03c661cb362366ecfc3a21820cb934f3e4ca ......
checking 7cfbf4cefbc9374abe54b4838a737e348e907337 ......
	 orig commit -> 753c111f655e38bbd52fc01321266633f022ebe2 ......
checking c92ba8820aca58e38dceeec554904307ac2e0851 ......
	 orig commit -> 23b7ca4f745f21c2b9cfcb67fdd33733b3ae7e66 ......
checking 9ac5e6507acbe06a25de03ea9f3089c2f662a72f ......
	 orig commit -> 278e2148c07559dd4ad8602f22366d61eb2ee7b7 ......
checking d996573ebd5c528c613e90b7e7daa961d58fa16e ......
	 orig commit -> 9e8db5913264d3967b93c765a6a9e464d9c473db ......
checking dac7d4432b13d6b58923c1178b786bcda37c9e9e ......
	 orig commit -> d5be7f632bad0f489879eed0ff4b99bd7fe0b74c ......
		 d5be7f632bad0f489879eed0ff4b99bd7fe0b74c has problem. Fixes commit -> 9e8db5913264d3967b93c765a6a9e464d9c473db
commit d996573ebd5c528c613e90b7e7daa961d58fa16e
Author: Willem de Bruijn <willemb@google.com>
Date:   Mon Feb 18 23:37:12 2019 -0500

    net: avoid false positives in untrusted gso validation
    
    commit 9e8db5913264d3967b93c765a6a9e464d9c473db upstream.
    
    GSO packets with vnet_hdr must conform to a small set of gso_types.
    The below commit uses flow dissection to drop packets that do not.
    
    But it has false positives when the skb is not fully initialized.
    Dissection needs skb->protocol and skb->network_header.
    
    Infer skb->protocol from gso_type as the two must agree.
    SKB_GSO_UDP can use both ipv4 and ipv6, so try both.
    
    Exclude callers for which network header offset is not known.
    
    Fixes: d5be7f632bad ("net: validate untrusted gso packets without csum offload")
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 6964c1d5062de1fb26864f59b41a5ad00f641db9 ......
	 orig commit -> d179b88deb3bf6fed4991a31fd6f0f2cad21fab5 ......
checking 238209c654d50e74deed8ec1fdb3ff61f4d0ea32 ......
	 orig commit -> b6835ea77729e7faf4656ca637ba53f42b8ee3fd ......
checking e7264579eb80ef67efd337ffb32b7d57e7b1ea54 ......
	 orig commit -> a66f2e57bd566240d8b3884eedf503928fbbe557 ......
checking 1f44814198f800319b56945199c82d28ab700d47 ......
	 orig commit -> 252f6e8eae909bc075a1b1e3b9efb095ae4c0b56 ......
checking bc423b651a3ea0f8d4abf108b24eb7a130ea5284 ......
	 orig commit -> b7dc5a071ddf69c0350396b203cba32fe5bab510 ......
	 orig commit -> 910cd32e552ea09caa89cdbe328e468979b030dd ......
		 910cd32e552ea09caa89cdbe328e468979b030dd has problem. Fixes commit -> b7dc5a071ddf69c0350396b203cba32fe5bab510
commit bc423b651a3ea0f8d4abf108b24eb7a130ea5284
Author: Dmitry V. Levin <ldv@altlinux.org>
Date:   Sat Feb 16 16:10:39 2019 +0300

    parisc: Fix ptrace syscall number modification
    
    commit b7dc5a071ddf69c0350396b203cba32fe5bab510 upstream.
    
    Commit 910cd32e552e ("parisc: Fix and enable seccomp filter support")
    introduced a regression in ptrace-based syscall tampering: when tracer
    changes syscall number to -1, the kernel fails to initialize %r28 with
    -ENOSYS and subsequently fails to return the error code of the failed
    syscall to userspace.
    
    This erroneous behaviour could be observed with a simple strace syscall
    fault injection command which is expected to print something like this:
    
    $ strace -a0 -ewrite -einject=write:error=enospc echo hello
    write(1, "hello\n", 6) = -1 ENOSPC (No space left on device) (INJECTED)
    write(2, "echo: ", 6) = -1 ENOSPC (No space left on device) (INJECTED)
    write(2, "write error", 11) = -1 ENOSPC (No space left on device) (INJECTED)
    write(2, "\n", 1) = -1 ENOSPC (No space left on device) (INJECTED)
    +++ exited with 1 +++
    
    After commit 910cd32e552ea09caa89cdbe328e468979b030dd it loops printing
    something like this instead:
    
    write(1, "hello\n", 6../strace: Failed to tamper with process 12345: unexpectedly got no error (return value 0, error 0)
    ) = 0 (INJECTED)
    
    This bug was found by strace test suite.
    
    Fixes: 910cd32e552e ("parisc: Fix and enable seccomp filter support")
    Cc: stable@vger.kernel.org # v4.5+
    Signed-off-by: Dmitry V. Levin <ldv@altlinux.org>
    Tested-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Helge Deller <deller@gmx.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 50d039d91d1007a1799b036763eed07e17feb75b ......
	 orig commit -> ede0fa98a900e657d1fcd80b50920efc896c1a4c ......
checking 56a682bde39c5f16135ef513d062ace480ca679e ......
	 orig commit -> cc1780fc42c76c705dd07ea123f1143dc5057630 ......
checking 4040907e22d2441574871ea35befa4e3d6ec8028 ......
	 orig commit -> 48396e80fb6526ea5ed267bd84f028bae56d2f9e ......
checking 3daca16bdddef8b84cb79f4327c81fb2af2d2cb3 ......
	 orig commit -> 1ec17dbd90f8b638f41ee650558609c1af63dfa0 ......
checking fde4151ca8c2b7673769a6e150115b25f414173e ......
	 orig commit -> 29dded89e80e3fff61efb34f07a8a3fba3ea146d ......
checking 67b462305b2345a8b673aa69b2d4c1f4ce554364 ......
	 orig commit -> 173656accaf583698bac3f9e269884ba60d51ef4 ......
checking 90dbd485b32b80633e37bef242619f48bf312ea7 ......
	 orig commit -> 2fdeee2549231b1f989f011bb18191f5660d3745 ......
checking 77278f05f0bbc3409363b844d179aea19504acb6 ......
	 orig commit -> fc228abc2347e106a44c0e9b29ab70b712c4ca51 ......
checking c4ba68b8691e4879cc43c37ad395ea529709bf81 ......
	 orig commit -> b5bfc21af5cb3d53f9cee0ef82eaa43762a90f81 ......
		 b5bfc21af5cb3d53f9cee0ef82eaa43762a90f81 has problem. Fixes commit -> 87454b6edc1b0143fdb3d9853285477e95af74a4
commit 418d77caf233c1fa01ec1c9c880b8af855cfd02e
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Mon Feb 11 15:04:24 2019 +0000

    net: phylink: avoid resolving link state too early
    
    commit 87454b6edc1b0143fdb3d9853285477e95af74a4 upstream.
    
    During testing on Armada 388 platforms, it was found with a certain
    module configuration that it was possible to trigger a kernel oops
    during the module load process, caused by the phylink resolver being
    triggered for a currently disabled interface.
    
    This problem was introduced by changing the way the SFP registration
    works, which now can result in the sfp link down notification being
    called during phylink_create().
    
    Fixes: b5bfc21af5cb ("net: sfp: do not probe SFP module before we're attached")
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 2226f9592422c320e37585825a4f7b8bfb8c8504 ......
	 orig commit -> fc62814d690cf62189854464f4bd07457d5e9e50 ......
		 fc62814d690cf62189854464f4bd07457d5e9e50 has problem. Fixes commit -> 398f0132c14754fcd03c1c4f8e7176d001ce8ea1
commit 1a3acbd6adb551a5f807148d6512d8aeba8cb8bb
Author: Christoph Paasch <cpaasch@apple.com>
Date:   Mon Mar 18 23:14:52 2019 -0700

    net/packet: Set __GFP_NOWARN upon allocation in alloc_pg_vec
    
    [ Upstream commit 398f0132c14754fcd03c1c4f8e7176d001ce8ea1 ]
    
    Since commit fc62814d690c ("net/packet: fix 4gb buffer limit due to overflow check")
    one can now allocate packet ring buffers >= UINT_MAX. However, syzkaller
    found that that triggers a warning:
    
    [   21.100000] WARNING: CPU: 2 PID: 2075 at mm/page_alloc.c:4584 __alloc_pages_nod0
    [   21.101490] Modules linked in:
    [   21.101921] CPU: 2 PID: 2075 Comm: syz-executor.0 Not tainted 5.0.0 #146
    [   21.102784] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 0.5.1 01/01/2011
    [   21.103887] RIP: 0010:__alloc_pages_nodemask+0x2a0/0x630
    [   21.104640] Code: fe ff ff 65 48 8b 04 25 c0 de 01 00 48 05 90 0f 00 00 41 bd 01 00 00 00 48 89 44 24 48 e9 9c fe 3
    [   21.107121] RSP: 0018:ffff88805e1cf920 EFLAGS: 00010246
    [   21.107819] RAX: 0000000000000000 RBX: ffffffff85a488a0 RCX: 0000000000000000
    [   21.108753] RDX: 0000000000000000 RSI: dffffc0000000000 RDI: 0000000000000000
    [   21.109699] RBP: 1ffff1100bc39f28 R08: ffffed100bcefb67 R09: ffffed100bcefb67
    [   21.110646] R10: 0000000000000001 R11: ffffed100bcefb66 R12: 000000000000000d
    [   21.111623] R13: 0000000000000000 R14: ffff88805e77d888 R15: 000000000000000d
    [   21.112552] FS:  00007f7c7de05700(0000) GS:ffff88806d100000(0000) knlGS:0000000000000000
    [   21.113612] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [   21.114405] CR2: 000000000065c000 CR3: 000000005e58e006 CR4: 00000000001606e0
    [   21.115367] Call Trace:
    [   21.115705]  ? __alloc_pages_slowpath+0x21c0/0x21c0
    [   21.116362]  alloc_pages_current+0xac/0x1e0
    [   21.116923]  kmalloc_order+0x18/0x70
    [   21.117393]  kmalloc_order_trace+0x18/0x110
    [   21.117949]  packet_set_ring+0x9d5/0x1770
    [   21.118524]  ? packet_rcv_spkt+0x440/0x440
    [   21.119094]  ? lock_downgrade+0x620/0x620
    [   21.119646]  ? __might_fault+0x177/0x1b0
    [   21.120177]  packet_setsockopt+0x981/0x2940
    [   21.120753]  ? __fget+0x2fb/0x4b0
    [   21.121209]  ? packet_release+0xab0/0xab0
    [   21.121740]  ? sock_has_perm+0x1cd/0x260
    [   21.122297]  ? selinux_secmark_relabel_packet+0xd0/0xd0
    [   21.123013]  ? __fget+0x324/0x4b0
    [   21.123451]  ? selinux_netlbl_socket_setsockopt+0x101/0x320
    [   21.124186]  ? selinux_netlbl_sock_rcv_skb+0x3a0/0x3a0
    [   21.124908]  ? __lock_acquire+0x529/0x3200
    [   21.125453]  ? selinux_socket_setsockopt+0x5d/0x70
    [   21.126075]  ? __sys_setsockopt+0x131/0x210
    [   21.126533]  ? packet_release+0xab0/0xab0
    [   21.127004]  __sys_setsockopt+0x131/0x210
    [   21.127449]  ? kernel_accept+0x2f0/0x2f0
    [   21.127911]  ? ret_from_fork+0x8/0x50
    [   21.128313]  ? do_raw_spin_lock+0x11b/0x280
    [   21.128800]  __x64_sys_setsockopt+0xba/0x150
    [   21.129271]  ? lockdep_hardirqs_on+0x37f/0x560
    [   21.129769]  do_syscall_64+0x9f/0x450
    [   21.130182]  entry_SYSCALL_64_after_hwframe+0x49/0xbe
    
    We should allocate with __GFP_NOWARN to handle this.
    
    Cc: Kal Conley <kal.conley@dectris.com>
    Cc: Andrey Konovalov <andreyknvl@google.com>
    Fixes: fc62814d690c ("net/packet: fix 4gb buffer limit due to overflow check")
    Signed-off-by: Christoph Paasch <cpaasch@apple.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 7c3969ff8bd40272dfbbc00dd16bf87547c818c8 ......
	 orig commit -> 218d05ce326f9e1b40a56085431fa1068b43d5d9 ......
checking bb506ddb2f72ca3973f692e7d901776043f62158 ......
	 orig commit -> d1f20798a119be71746949ba9b2e2ff330fdc038 ......
checking f08f5424a728156caca52efc2678fdec05e51439 ......
	 orig commit -> 4ffcbfac60642f63ae3d80891f573ba7e94a265c ......
checking 3cbc51d68f485a7b339562db0d95175e4a7014ac ......
	 orig commit -> 7afa81c55fca0cad589722cb4bce698b4803b0e1 ......
checking 1bbc4cbe1f77b77267f2d0b46aff51efd1dec08b ......
	 orig commit -> 7fdc1adc52d3975740547a78c2df329bb207f15d ......
checking 91252e8e872272d09b3f7b5552b2f90cf02be669 ......
	 orig commit -> 64254a2054611205798e6bde634639bc704573ac ......
checking f040249c14ed75436f86e9b59e7e0eeb1027ff6c ......
	 orig commit -> f4924f24da8c7ef64195096817f3cde324091d97 ......
checking caa27a81df46e5a697ca6731677deeb45100883b ......
	 orig commit -> 248b57015f35c94d4eae2fdd8c6febf5cd703900 ......
checking 733d1915bf571616746f563632015d3bf568bc87 ......
	 orig commit -> f422449b58548a41e98fc97b259a283718e527db ......
checking e5d7ffdeec096953e097d4f7b5565c455fcc9bf6 ......
	 orig commit -> cb12d72b27a6f41325ae23a11033cf5fedfa1b97 ......
checking 170c71065fec7c5851b2219793788cfdbf2c6eba ......
	 orig commit -> f672b93e4a0a4947d2e1103ed8780e01e13eadb6 ......
checking b226fe953da01c4f6267e65c178e315526cb244f ......
	 orig commit -> 5268c8f39e0efef81af2aaed160272d9eb507beb ......
checking 88c556795a158bbdee44abb46ac195eef4d5e2f6 ......
	 orig commit -> 34a2ce887668db9dda4b56e6f155c49ac13f3e54 ......
checking f7e2a3857feb21fe06fc1d65363b6e3c5aef0cee ......
	 orig commit -> ce9e7bce43526626f7cffe2e657953997870197e ......
checking 64717501b578a37243d6ad8bb9698745d260386e ......
	 orig commit -> 2ff33d6637393fe9348357285931811b76e1402f ......
checking 486942ea8d78a034942a2f6729b8b013bc34a012 ......
	 orig commit -> 6dea7e1881fd86b80da64e476ac398008daed857 ......
checking b1bf951df56775f4401ece4101470936b47c27c1 ......
	 orig commit -> 31aa6503a15ba00182ea6dbbf51afb63bf9e851d ......
checking d6e33e07b8311764414969f5ddde93e052d226ea ......
	 orig commit -> 41af167fbc0032f9d7562854f58114eaa9270336 ......
checking d8c1fc1b64727399f196f72ef5ed766188c010ad ......
	 orig commit -> cc29a1b0a3f2597ce887d339222fa85b9307706d ......
checking c9062c77b061ff44176ec06466857a271718999b ......
	 orig commit -> 72b4a0465f995175a2e22cf4a636bf781f1f28a7 ......
checking 4c541a5aec7dde179457cdff8b0f50c8d4ace050 ......
	 orig commit -> b91d9036883793122cf6575ca4dfbfbdd201a83d ......
checking 0fe178a747ddbfdf7cf68d03ec9771e01ac95087 ......
	 orig commit -> 565dc8a4f55e491935bfb04866068d21784ea9a4 ......
checking ada3ccb5e9b90961416734c882e3705af2695e35 ......
	 orig commit -> bb989501abcafa0de5f18b0ec0ec459b5b817908 ......
checking 10b1df1928ab64d5904d07cdb5445621046b02c5 ......
	 orig commit -> 46721c3d9e273aea880e9ff835b0e1271e1cd2fb ......
checking a096429cac56f3d4571ae7914f98bd2eb201b5fe ......
	 orig commit -> 2d533a9287f2011632977e87ce2783f4c689c984 ......
checking 3abbc145c7f7dd6f2ba3e89a8e2e691fb16e1f85 ......
	 orig commit -> 1f8ce09b36c41a026a37a24b20efa32000892a64 ......
checking 1f1408d9088c3bb2ce9c4ca066f24b3e147ba14e ......
	 orig commit -> 9e28989d41c0eab57ec0bb156617a8757406ff8a ......
checking b0d7f5c733ca24aa549a54f78333102b4d197a24 ......
	 orig commit -> 75d4c5e03c2ae9902ab521024b10291f6fc9515b ......
checking 3c324254fce40ad0ab1c30a9d0be1ed7c6110afa ......
	 orig commit -> 04c801c18ded421845324255e660147a6f58dcd6 ......
checking 74c14405e96dcdbebf07aa57f5737a24cb666271 ......
	 orig commit -> 504e4175829c44328773b96ad9c538e4783a8d22 ......
checking 8949511dfaa0f4314402f632091e6add32d76d31 ......
	 orig commit -> b0aff01e7aa6ad2d6998ef1323843212d1db8b04 ......
checking c8f1d61766adeb1839eb39b04ddde5299bfc101a ......
	 orig commit -> 10628e3ecf544fa2e4e24f8e112d95c37884dc98 ......
checking bf0abe19df03fe398c7bc4fec954469d9ab467f0 ......
	 orig commit -> a177276aa098aa47a100d51a13eaaef029604b6d ......
checking 9856cd1a04dc15f8199147caf3f7e8ba2864cb15 ......
	 orig commit -> a3888f62fe66429fad3be7f2ba962e1e08c26fd6 ......
checking 8a195375096d2ce059b29f7c15a63204ebc6866a ......
	 orig commit -> 8838555089f0345b87f4277fe5a8dd647dc65589 ......
checking 46625b8a4687e321394643609291ebe6637a30e1 ......
	 orig commit -> e6587cdbd732eacb4c7ce592ed46f7bbcefb655f ......
checking 368a5c8beed054f8069de5f480b99e8f1008ce1f ......
	 orig commit -> b40ee006fe6a8a25093434e5d394128c356a48f3 ......
checking fe303ba7ab936c0f5dedf931fdef8fd419053336 ......
	 orig commit -> a08bf91ce28ed3ae7b6fef35d843fef8dc8c2cd9 ......
checking e69eb7e8a0c70f2316228aefa3cbf87a190d8fd0 ......
	 orig commit -> b2b469939e93458753cfbf8282ad52636495965e ......
checking 3af9907c2a544d3d3a55f68cb75018a98b4c1899 ......
	 orig commit -> 050c17f239fd53adb55aa768d4f41bc76c0fe045 ......
checking eddbdfe4a2c4db0760f5d134e9f97c6bdcc975b6 ......
	 orig commit -> 04242ff3ac0abbaa4362f97781dac268e6c3541a ......
checking 41b824a63da3af6c9f0abf51c830df6ced8e098d ......
	 orig commit -> 0fd3fd0a9bb0b02b6435bb7070e9f7b82a23f068 ......
checking 62bb080fa345122d14eea764e577bc29458ffdb3 ......
	 orig commit -> 4ff3a9d14c6c06eaa4e5976c61599ea2bd9e81b2 ......
checking 5f9d7b24e6fae276260c6dafc3c7d753c766a947 ......
	 orig commit -> 83e37e0bdd1470bbe6612250b745ad39b1a7b130 ......
checking b3f5fbb23264a0a7cebbcd1b24c4b494b3229fe7 ......
	 orig commit -> 13443154f6cac61d148471ede6d7f1f6b5ea946a ......
checking ee6e4d34b4d9b5da00ac502e68e4d2ac04c5c1f3 ......
	 orig commit -> 9e7382153f80ba45a0bbcd540fb77d4b15f6e966 ......
checking d783d3ceb4005584751ca01f71004f1fb4c30f8f ......
	 orig commit -> 0ac569bf6a7983c0c5747d6df8db9dc05bc92b6c ......
