Check from v4.14.85 to v4.14.86
Commit count: 150
checking 7152401aeedd9685fcf1cb58138c868890d9164f ......
checking 862e7aaa90f63b1e3e3ab498dc3a3ac9a011b8d0 ......
	 orig commit -> 89d13c38501df730cbb2e02c4499da1b5187119d ......
checking 0c5f2e899241aceab46e6dcba01c6fb2223bdeb5 ......
	 orig commit -> 130f52f2b203aa0aec179341916ffb2e905f3afd ......
checking 14118df4e7b4738815f222f5b20fceb3957ab206 ......
	 orig commit -> f1d10e04637924f2b00a0fecdd2ca4565f5cfc3f ......
checking fd6cc33d0775b0d902906d88dd05cc1a2a059f8d ......
	 orig commit -> 7bada55ab50697861eee6bb7d60b41e68a961a9c ......
checking f7d33988bd923310934c8481a2e68b53f716df13 ......
	 orig commit -> 6484a677294aa5d08c0210f2f387ebb9be646115 ......
checking 3c44b197448dfb8bef4fa9cab92b7a73153a6f76 ......
	 orig commit -> eceb05965489784f24bbf4d61ba60e475a983016 ......
checking 7c1ba1a1bb0d1a5dcebc737343f0c45840cf181d ......
	 orig commit -> c1cb20d43728aa9b5393bd8d489bc85c142949b2 ......
checking 397dbde6149057b4b84acb37012b57801fbc9221 ......
	 orig commit -> 5618cf031fecda63847cafd1091e7b8bd626cdb1 ......
checking d08c62878fe2040e2cbc70554f86c54895a9f708 ......
	 orig commit -> fe5192ac81ad0d4dfe1395d11f393f0513c15f7f ......
checking f1a4876f0435dc43fc55f42bd30763de5e5ef9ec ......
	 orig commit -> 38317f5c0f2faae5110854f36edad810f841d62f ......
checking 2b7456f46ff957a3f04b3658a8d71b645d8cf172 ......
	 orig commit -> effd14f66cc1ef6701a19c5a56e39c35f4d395a5 ......
checking 403a2001bd795c43f59a5dd6695273fdfe0a3dcf ......
	 orig commit -> a84a1bcc992f0545a51d2e120b8ca2ef20e2ea97 ......
checking 74abe400e12b45f871c98c99f0f65521cc0c8ca6 ......
	 orig commit -> 8561fb31a1f9594e2807681f5c0721894e367f19 ......
checking ca0908ddcd303d5e91982c6e5a91ad3d99cc99b6 ......
	 orig commit -> 5a96b2d38dc054c0bbcbcd585b116566cbd877fe ......
checking 85df1f9f8fb0c9c4801f5cc8ab1b25e77c1f06cd ......
checking 39c49a757d7c3e27d3bfabd1e102e9544372e103 ......
	 orig commit -> 77e75fda94d2ebb86aa9d35fb1860f6395bf95de ......
checking 7e572222d3c9d67581f5409d7dbaf1e0e7b8de19 ......
	 orig commit -> 98f5f932254b88ce828bc8e4d1642d14e5854caa ......
checking 2a9443a9358031c6192c876f3e51e1fa00c4d497 ......
	 orig commit -> 672e60b72bbe7aace88721db55b380b6a51fb8f9 ......
checking 086d1f60f874829124ebeaf7d2223a414221ca3b ......
	 orig commit -> ecebf55d27a11538ea84aee0be643dd953f830d5 ......
checking e2ec0cb4d09277730decd5e1a9c75fb18ccb7d7a ......
	 orig commit -> 8cd65271f8e545ddeed10ecc2e417936bdff168e ......
checking e50476e9da270e1dfc742187aa1520ac4edb3a74 ......
	 orig commit -> 1078bef0cd9291355a20369b21cd823026ab8eaa ......
checking 46663071adbc33e7b2a299b8e15bf36166101bcf ......
	 orig commit -> 9a20332ab373b1f8f947e0a9c923652b32dab031 ......
checking 73ce314c172d4f7340b217c08861863665888972 ......
	 orig commit -> e1a7bfe3807974e66f971f2589d4e0197ec0fced ......
checking ef8944bf5a97557bf0cb7b0da78bc60eb78bff33 ......
	 orig commit -> 7194eda1ba0872d917faf3b322540b4f57f11ba5 ......
checking 0d542d58b6b5fe01095484c2628e46afe88312a9 ......
	 orig commit -> 7b69154171b407844c273ab4c10b5f0ddcd6aa29 ......
checking b7c769ebd9db6e67a6e01c962f7c92b706fa6acf ......
	 orig commit -> 41e817bca3acd3980efe5dd7d28af0e6f4ab9247 ......
	 orig commit -> e259221763a40403d5bb232209998e8c45804ab8 ......
		 e259221763a40403d5bb232209998e8c45804ab8 has problem. Fixes commit -> 41e817bca3acd3980efe5dd7d28af0e6f4ab9247
commit b7c769ebd9db6e67a6e01c962f7c92b706fa6acf
Author: Maximilian Heyne <mheyne@amazon.de>
Date:   Fri Nov 30 08:35:14 2018 -0700

    fs: fix lost error code in dio_complete
    
    commit 41e817bca3acd3980efe5dd7d28af0e6f4ab9247 upstream.
    
    commit e259221763a40403d5bb232209998e8c45804ab8 ("fs: simplify the
    generic_write_sync prototype") reworked callers of generic_write_sync(),
    and ended up dropping the error return for the directio path. Prior to
    that commit, in dio_complete(), an error would be bubbled up the stack,
    but after that commit, errors passed on to dio_complete were eaten up.
    
    This was reported on the list earlier, and a fix was proposed in
    https://lore.kernel.org/lkml/20160921141539.GA17898@infradead.org/, but
    never followed up with.  We recently hit this bug in our testing where
    fencing io errors, which were previously erroring out with EIO, were
    being returned as success operations after this commit.
    
    The fix proposed on the list earlier was a little short -- it would have
    still called generic_write_sync() in case `ret` already contained an
    error. This fix ensures generic_write_sync() is only called when there's
    no pending error in the write. Additionally, transferred is replaced
    with ret to bring this code in line with other callers.
    
    Fixes: e259221763a4 ("fs: simplify the generic_write_sync prototype")
    Reported-by: Ravi Nankani <rnankani@amazon.com>
    Signed-off-by: Maximilian Heyne <mheyne@amazon.de>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    CC: Torsten Mehlan <tomeh@amazon.de>
    CC: Uwe Dannowski <uwed@amazon.de>
    CC: Amit Shah <aams@amazon.de>
    CC: David Woodhouse <dwmw@amazon.co.uk>
    CC: stable@vger.kernel.org
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking ecef7c1ad46bfdc64c99574488252f4ba029afbc ......
	 orig commit -> 67266c1080ad56c31af72b9c18355fde8ccc124a ......
checking fae1bec5c2b29e809bd81b2ce8b5ba979ad23a92 ......
	 orig commit -> ed6101bbf6266ee83e620b19faa7c6ad56bb41ab ......
checking e8499ab5b93aca271c343786084c000c6f7839b5 ......
	 orig commit -> 68239654acafe6aad5a3c1dc7237e60accfebc03 ......
checking 855eefd9124a5a963625c046faca862c9369b37c ......
	 orig commit -> 60c8144afc287ef09ce8c1230c6aa972659ba1bb ......
checking ad953dfdfa9543d224abd18fbf12bcac6454c376 ......
	 orig commit -> c1d91f86a1b4c9c05854d59c6a0abd5d0f75b849 ......
checking ee48a9df170c233b406d49aa8840625a51ee9c0c ......
	 orig commit -> c6fd6fe9dea44732cdcd970f1130b8cc50ad685a ......
checking e380f318e63d851607cfc8b288281668aad11d53 ......
	 orig commit -> 42a657f57628402c73237547f0134e083e2f6764 ......
checking 52fa8eaac8149594d57bd4fe0cfeaa329037d400 ......
	 orig commit -> f505754fd6599230371cb01b9332754ddc104be1 ......
checking d36e4ee3b3ce4cf93e8fa145841287bbdb140fec ......
	 orig commit -> 38a35a78c5e270cbe53c4fef6b0d3c2da90dd849 ......
checking b35182226166c03713a10ffebcf2838569c95d57 ......
	 orig commit -> 03bc996af0cc71c7f30c384d8ce7260172423b34 ......
checking d039837ab8cb7fb7095ec9746fb04a854987179e ......
	 orig commit -> 2958b66694e018c552be0b60521fec27e8d12988 ......
checking 83f00ab9a7c03e9f1410727d985b7fe9473002e1 ......
	 orig commit -> e97f852fd4561e77721bb9a4e0ea9d98305b1e93 ......
checking 08b9a96720a1e67dfed4b22a5192892d556fc5fc ......
	 orig commit -> bcbfbd8ec21096027f1ee13ce6c185e8175166f6 ......
checking 57e972ecad4fdee027a690b64c7d619dae489015 ......
	 orig commit -> fd65d3142f734bc4376053c8d75670041903134d ......
checking a06361526cc71cb0ebef6ab7aa698ec63465b562 ......
	 orig commit -> 0e0fee5c539b61fdd098332e0e2cc375d9073706 ......
checking 78085d7e3816606d6aa211245ab2cde3463d7795 ......
	 orig commit -> 55a974021ec952ee460dc31ca08722158639de72 ......
checking ca97dd0009e688a67f6e22ce3fce0b4523741243 ......
	 orig commit -> 6b3e64c237c072797a9ec918654a60e3a46488e2 ......
checking 605b2828ff55471d8b2ab0b405991895a2216e06 ......
	 orig commit -> 7cc765a67d8e04ef7d772425ca5a2a1e2b894c15 ......
checking 6a847a6057721011b9534e709e5286c51ea31b9f ......
	 orig commit -> 9137bb27e60e554dab694eafa4cca241fa3a694f ......
checking 99f1cb80daab80107c4b7f7f9a9ddf041a8b2137 ......
	 orig commit -> 6893a959d7fdebbab5f5aa112c277d5a44435ba1 ......
checking e3f822b628a0d715a46d233e81881f6c2885247b ......
	 orig commit -> 6d991ba509ebcfcc908e009d1db51972a4f7a064 ......
checking dcb4ac34f9373b1f4365b24ddfac2bcdefd59f6e ......
	 orig commit -> e6da8bb6f9abb2628381904b24163c770e630bac ......
checking dae4d59096700703266190f8dff92f9edb82b1b5 ......
	 orig commit -> 46f7ecb1e7359f183f5bbd1e08b90e10e52164f9 ......
checking cbca99b96f06f540669f07f768e228014e38b3b6 ......
	 orig commit -> 4c71a2b6fd7e42814aa68a6dec88abf3b42ea573 ......
checking ba523588b1bc0b9601e7ef102b56dc246a91d026 ......
	 orig commit -> 5635d99953f04b550738f6f4c1c532667c3fd872 ......
checking 7fe6a4baff26dc90fa8ebcbb8f844cc8d3fb256f ......
	 orig commit -> ff16701a29cba3aafa0bd1656d766813b2d0a811 ......
checking 1fe4e69a5ce7bf36fbd303e64cb63adb14708c0b ......
	 orig commit -> 5bfbe3ad5840d941b89bcac54b821ba14f50a0ba ......
checking 90f293cc49fa44e24c07e74c89f3d87bc97cf41e ......
	 orig commit -> fa1202ef224391b6f5b26cdd44cc50495e8fab54 ......
		 fa1202ef224391b6f5b26cdd44cc50495e8fab54 has problem. Fixes commit -> 1de7edbb59c8f1b46071f66c5c97b8a59569eb51
commit 607d291cfc7b5df5df5194fe8a32d22ec1960aa4
Author: Andi Kleen <ak@linux.intel.com>
Date:   Fri Mar 29 17:47:43 2019 -0700

    x86/cpu/bugs: Use __initconst for 'const' init data
    
    commit 1de7edbb59c8f1b46071f66c5c97b8a59569eb51 upstream.
    
    Some of the recently added const tables use __initdata which causes section
    attribute conflicts.
    
    Use __initconst instead.
    
    Fixes: fa1202ef2243 ("x86/speculation: Add command line control")
    Signed-off-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190330004743.29541-9-andi@firstfloor.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking ebd473909994d4ecce8e973f048f06d999f84845 ......
	 orig commit -> 495d470e9828500e0155027f230449ac5e29c025 ......
checking 95d41f1332f78fa6ad19459d1b98ad70407dd88b ......
	 orig commit -> 30ba72a990f5096ae08f284de17986461efcc408 ......
checking caa118cf4c7997a35f6a18f5a16c38c7a9c71e3f ......
	 orig commit -> 8770709f411763884535662744a3786a1806afd3 ......
checking 72f90a89be9e125c1dd44a4d70b83055d1c3753e ......
	 orig commit -> 15d6b7aab0793b2de8a05d8a828777dd24db424e ......
checking 8345d546238f68e7fe219df25eeecb200f34334b ......
	 orig commit -> 130d6f946f6f2a972ee3ec8540b7243ab99abe97 ......
checking 36a4c5fc92857711019dc56be2669e19f8c3c86e ......
	 orig commit -> a74cfffb03b73d41e08f84c2e5c87dec0ce3db9f ......
		 a74cfffb03b73d41e08f84c2e5c87dec0ce3db9f has problem. Fixes commit -> 34d66caf251df91ff27b24a3a786810d29989eca
checking 0e797117f18573ab31f72aed0924ff7999d860ea ......
	 orig commit -> 321a874a7ef85655e93b3206d0f36b4a6097f948 ......
checking 44ac7cd01544dd12241bc0c0e0eb5604ad77379a ......
	 orig commit -> dbe733642e01dd108f71436aaea7b328cb28fd87 ......
checking 01659361c63fdc91c0af239d08cdd211d590a656 ......
	 orig commit -> c5511d03ec090980732e929c318a7a6374b5550e ......
checking bc4aa78e6954bd71295543163271262fede5d46f ......
	 orig commit -> 01daf56875ee0cd50ed496a09b20eb369b45dfa5 ......
checking 999b295ad1a9980754c6d63e9f8be109a3574118 ......
	 orig commit -> 26c4d75b234040c11728a8acb796b3a85ba7507c ......
checking aca2ddbc23800652ec2f09c2df76f417823cda77 ......
	 orig commit -> 34bce7c9690b1d897686aac89604ba7adc365556 ......
checking 8588c7d4a487927356a5026982bd89b45a2092fe ......
	 orig commit -> a8f76ae41cd633ac00be1b3019b1eb4741be3828 ......
checking 05dd5dc4c4fba8a8457b0bcb5336d4fe22d5c013 ......
	 orig commit -> b86bda0426853bfe8a3506c7d2a5b332760ae46b ......
checking 4398714cb7d595725a4840da137faeac47c10669 ......
	 orig commit -> 24848509aa55eac39d524b587b051f4e86df3c12 ......
checking 7d422ca1950a1f04bc467e706ae6f89840b0bd16 ......
	 orig commit -> 8eb729b77faf83ac4c1f363a9ad68d042415f24c ......
checking 8bbb50b6de99c178acd648a73098009073139f46 ......
	 orig commit -> ef014aae8f1cd2793e4e014bbb102bed53f852b7 ......
checking a9c90037af800bcc74bbdac338355c7f331bd913 ......
	 orig commit -> 4cd24de3a0980bf3100c9dcb08ef65ca7c31af48 ......
		 4cd24de3a0980bf3100c9dcb08ef65ca7c31af48 has problem. Fixes commit -> e4f358916d528d479c3c12bd2fd03f2d5a576380
25896d073d8a0403b07e6dec56f58e6c33678207
commit f02ef68bdad39ebf881f64cab027e8696fe57ade
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Wed Dec 5 15:27:19 2018 +0900

    x86/build: Fix compiler support check for CONFIG_RETPOLINE
    
    commit 25896d073d8a0403b07e6dec56f58e6c33678207 upstream.
    
    It is troublesome to add a diagnostic like this to the Makefile
    parse stage because the top-level Makefile could be parsed with
    a stale include/config/auto.conf.
    
    Once you are hit by the error about non-retpoline compiler, the
    compilation still breaks even after disabling CONFIG_RETPOLINE.
    
    The easiest fix is to move this check to the "archprepare" like
    this commit did:
    
      829fe4aa9ac1 ("x86: Allow generating user-space headers without a compiler")
    
    Reported-by: Meelis Roos <mroos@linux.ee>
    Tested-by: Meelis Roos <mroos@linux.ee>
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Acked-by: Zhenzhong Duan <zhenzhong.duan@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Zhenzhong Duan <zhenzhong.duan@oracle.com>
    Fixes: 4cd24de3a098 ("x86/retpoline: Make CONFIG_RETPOLINE depend on compiler support")
    Link: http://lkml.kernel.org/r/1543991239-18476-1-git-send-email-yamada.masahiro@socionext.com
    Link: https://lkml.org/lkml/2018/12/4/206
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Cc: Gi-Oh Kim <gi-oh.kim@cloud.ionos.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 64ac5483a1b187f4e3fa47c65ba53546f9089bd6
Author: WANG Chao <chao.wang@ucloud.cn>
Date:   Tue Dec 11 00:37:25 2018 +0800

    x86, modpost: Replace last remnants of RETPOLINE with CONFIG_RETPOLINE
    
    commit e4f358916d528d479c3c12bd2fd03f2d5a576380 upstream.
    
    Commit
    
      4cd24de3a098 ("x86/retpoline: Make CONFIG_RETPOLINE depend on compiler support")
    
    replaced the RETPOLINE define with CONFIG_RETPOLINE checks. Remove the
    remaining pieces.
    
     [ bp: Massage commit message. ]
    
    Fixes: 4cd24de3a098 ("x86/retpoline: Make CONFIG_RETPOLINE depend on compiler support")
    Signed-off-by: WANG Chao <chao.wang@ucloud.cn>
    Signed-off-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Zhenzhong Duan <zhenzhong.duan@oracle.com>
    Reviewed-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Cc: "H. Peter Anvin" <hpa@zytor.com>
    Cc: Andi Kleen <ak@linux.intel.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Daniel Borkmann <daniel@iogearbox.net>
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Geert Uytterhoeven <geert@linux-m68k.org>
    Cc: Jessica Yu <jeyu@kernel.org>
    Cc: Jiri Kosina <jkosina@suse.cz>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: Luc Van Oostenryck <luc.vanoostenryck@gmail.com>
    Cc: Michal Marek <michal.lkml@markovi.net>
    Cc: Miguel Ojeda <miguel.ojeda.sandonis@gmail.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Tim Chen <tim.c.chen@linux.intel.com>
    Cc: Vasily Gorbik <gor@linux.ibm.com>
    Cc: linux-kbuild@vger.kernel.org
    Cc: srinivas.eeda@oracle.com
    Cc: stable <stable@vger.kernel.org>
    Cc: x86-ml <x86@kernel.org>
    Link: https://lkml.kernel.org/r/20181210163725.95977-1-chao.wang@ucloud.cn
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f02ef68bdad39ebf881f64cab027e8696fe57ade
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Wed Dec 5 15:27:19 2018 +0900

    x86/build: Fix compiler support check for CONFIG_RETPOLINE
    
    commit 25896d073d8a0403b07e6dec56f58e6c33678207 upstream.
    
    It is troublesome to add a diagnostic like this to the Makefile
    parse stage because the top-level Makefile could be parsed with
    a stale include/config/auto.conf.
    
    Once you are hit by the error about non-retpoline compiler, the
    compilation still breaks even after disabling CONFIG_RETPOLINE.
    
    The easiest fix is to move this check to the "archprepare" like
    this commit did:
    
      829fe4aa9ac1 ("x86: Allow generating user-space headers without a compiler")
    
    Reported-by: Meelis Roos <mroos@linux.ee>
    Tested-by: Meelis Roos <mroos@linux.ee>
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Acked-by: Zhenzhong Duan <zhenzhong.duan@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Zhenzhong Duan <zhenzhong.duan@oracle.com>
    Fixes: 4cd24de3a098 ("x86/retpoline: Make CONFIG_RETPOLINE depend on compiler support")
    Link: http://lkml.kernel.org/r/1543991239-18476-1-git-send-email-yamada.masahiro@socionext.com
    Link: https://lkml.org/lkml/2018/12/4/206
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Cc: Gi-Oh Kim <gi-oh.kim@cloud.ionos.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 46dfe55fbee9be96f70482f3053b084fad3858d0 ......
	 orig commit -> 0cbb76d6285794f30953bfa3ab831714b59dd700 ......
checking 0d55dce78a0e96f0909f4b7395887e84ba637254 ......
	 orig commit -> bb4b3b7762735cdaba5a40fd94c9303d9ffa147a ......
checking 4741e31931b27b9eba1e9df02d781a2f808b7d82 ......
	 orig commit -> dbfe2953f63c640463c630746cd5d9de8b2f63ae ......
checking 300a6f27dd8277843e39b37cca5e0c5b203743cb ......
	 orig commit -> 53c613fe6349994f023245519265999eed75957f ......
checking 82647e461639a7cae7beaf2391f6b58f69b81110 ......
	 orig commit -> 612bc3b3d4be749f73a513a17d9b3ee1330d3487 ......
checking 0071cdff923922f85a8204fd9bff56a44af2b9a3 ......
	 orig commit -> 845d382bb15c6e7dc5026c0ff919c5b13fc7e11b ......
checking 6d2533a6818274602ef1a783594f2d6fc65d8fc6 ......
	 orig commit -> 108fab4b5c8f12064ef86e02cb0459992affb30f ......
checking 54b65f8eaf75872052565976f524e91133778c54 ......
	 orig commit -> 6ac2f49edb1ef5446089c7c660017732886d62d6 ......
		 6ac2f49edb1ef5446089c7c660017732886d62d6 has problem. Fixes commit -> 612bc3b3d4be749f73a513a17d9b3ee1330d3487
commit 82647e461639a7cae7beaf2391f6b58f69b81110
Author: Tom Lendacky <thomas.lendacky@amd.com>
Date:   Mon Jul 2 16:36:02 2018 -0500

    x86/bugs: Fix the AMD SSBD usage of the SPEC_CTRL MSR
    
    commit 612bc3b3d4be749f73a513a17d9b3ee1330d3487 upstream
    
    On AMD, the presence of the MSR_SPEC_CTRL feature does not imply that the
    SSBD mitigation support should use the SPEC_CTRL MSR. Other features could
    have caused the MSR_SPEC_CTRL feature to be set, while a different SSBD
    mitigation option is in place.
    
    Update the SSBD support to check for the actual SSBD features that will
    use the SPEC_CTRL MSR.
    
    Signed-off-by: Tom Lendacky <thomas.lendacky@amd.com>
    Cc: Borislav Petkov <bpetkov@suse.de>
    Cc: David Woodhouse <dwmw@amazon.co.uk>
    Cc: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Fixes: 6ac2f49edb1e ("x86/bugs: Add AMD's SPEC_CTRL MSR usage")
    Link: http://lkml.kernel.org/r/20180702213602.29202.33151.stgit@tlendack-t1.amdoffice.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking da06d6d14a0a14d398b1e7c8024b090e40f4ec89 ......
	 orig commit -> 24809860012e0130fbafe536709e08a22b3e959e ......
checking e5d981df9a1d3f13dfff083ab0578daedbcd9e8a ......
	 orig commit -> ce48c146495a1a50e48cdbfbfaba3e708be7c07c ......
checking 72e5a2bdf753f5ba82ea6bfb7706aabc9587d0cb ......
	 orig commit -> 45611c61dd503454b2edae00aabe1e429ec49ebe ......
checking eb09c6dbe4bb799ba153c5d729e2d26098a3b410 ......
	 orig commit -> 9a764c1e59684c0358e16ccaafd870629f2cfe67 ......
checking 47897682fe041a5898cfd30a5f24d3173e856d5a ......
	 orig commit -> cfc435198f53a6fa1f656d98466b24967ff457d0 ......
checking 67f6fba765ef8cb19089d476e3c367212a2fbdfd ......
	 orig commit -> 5cd8d46ea1562be80063f53c7c6a5f40224de623 ......
checking 42412faf1a9356e6967c5c5fc530fe0ab5e32e9f ......
	 orig commit -> ef2a7cf1d8831535b8991459567b385661eb4a36 ......
checking 0435cabc0d6a0f0ebb60589a9ad28d1a3aecd748 ......
	 orig commit -> 18ba58e1c234ea1a2d9835ac8c1735d965ce4640 ......
checking e5cfda6c5d04a04e9ec9834925e590f7e921c57f ......
	 orig commit -> e59ff2c49ae16e1d179de679aca81405829aee6c ......
checking 44e4f3644934b65c91bc05245a9447dde2c7af40 ......
	 orig commit -> 6d0f60b0f8588fd4380ea5df9601e12fddd55ce2 ......
checking 3a8a411c927716fad4004a6953a5b2cf988eb2df ......
	 orig commit -> b5dd186d10ba59e6b5ba60e42b3b083df56df6f3 ......
checking 04d269610ea35656fe4d9609f5a5fa043daa866e ......
	 orig commit -> e87efc44dd36ba3db59847c418354711ebad779b ......
	 orig commit -> 3fdd34643ffc378b5924941fad40352c04610294 ......
	 orig commit -> afeeecc764436f31d4447575bb9007732333818c ......
checking cb7ccb9924bb3596f211badf0d2becf131a979cd ......
	 orig commit -> 7b38460dc8e4eafba06c78f8e37099d3b34d473c ......
checking 30130700acfad8a705c109325379f5bbe21b3ccc ......
	 orig commit -> e494c2f995d6181d6e29c4927d68e0f295ecf75b ......
checking d7d9d29a837358636e12fe09c90a7882b53b2220 ......
	 orig commit -> 18dd6470c2d14d10f5a2dd926925dc80dbd3abfd ......
checking ad19d1e78fd51f5b4bf3ebbcbf3a133c8c03c49d ......
	 orig commit -> c9b60788fc760d136211853f10ce73dc152d1f4a ......
		 c9b60788fc760d136211853f10ce73dc152d1f4a has problem. Fixes commit -> 89d13c38501df730cbb2e02c4499da1b5187119d
commit 862e7aaa90f63b1e3e3ab498dc3a3ac9a011b8d0
Author: Jaegeuk Kim <jaegeuk@kernel.org>
Date:   Thu Sep 27 22:15:31 2018 -0700

    f2fs: fix missing up_read
    
    commit 89d13c38501df730cbb2e02c4499da1b5187119d upstream.
    
    This patch fixes missing up_read call.
    
    Fixes: c9b60788fc76 ("f2fs: fix to do sanity check with block address in main area")
    Cc: <stable@vger.kernel.org> # 4.19+
    Reviewed-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking b8321ccd045710ee04fd5322c34cadd13a5e58af ......
	 orig commit -> e34438c903b653daca2b2a7de95aed46226f8ed3 ......
checking f9cf5462b51d98026275cc51437fc531e808b64a ......
	 orig commit -> 9dc956b2c8523aed39d1e6508438be9fea28c8fc ......
checking 0081c90ebacebb3a82d0d24bf0f42273ce2d902e ......
	 orig commit -> 76d56d4ab4f2a9e4f085c7d77172194ddaccf7d2 ......
checking 2598fc56ed65f69e303ccee6d5fe756a56f87779 ......
checking f3d6361a96a455c8ba12226a04efa67a0ada4966 ......
	 orig commit -> 42bf546c1fe3f3654bdf914e977acbc2b80a5be5 ......
checking eea715704673314769f2613b1ead310306b7de05 ......
	 orig commit -> e1da7872f6eda977bd812346bf588c35e4495a1e ......
checking 9e6c4a8557e27c4f074a47e27ce981edfb1f8b91 ......
	 orig commit -> 7b525dd01365c6764018e374d391c92466be1b7a ......
checking e60b97231950fb5b55d2a981b080e3a6f7516a00 ......
	 orig commit -> 0cfe75c5b011994651a4ca6d74f20aa997bfc69a ......
		 0cfe75c5b011994651a4ca6d74f20aa997bfc69a has problem. Fixes commit -> 88960068f25fcc3759455d85460234dcc9d43fef
commit c5e4022f25d05429c53cafe84701b5136e628663
Author: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date:   Sat Dec 22 11:22:26 2018 +0100

    f2fs: fix validation of the block count in sanity_check_raw_super
    
    commit 88960068f25fcc3759455d85460234dcc9d43fef upstream.
    
    Treat "block_count" from struct f2fs_super_block as 64-bit little endian
    value in sanity_check_raw_super() because struct f2fs_super_block
    declares "block_count" as "__le64".
    
    This fixes a bug where the superblock validation fails on big endian
    devices with the following error:
      F2FS-fs (sda1): Wrong segment_count / block_count (61439 > 0)
      F2FS-fs (sda1): Can't find valid F2FS filesystem in 1th superblock
      F2FS-fs (sda1): Wrong segment_count / block_count (61439 > 0)
      F2FS-fs (sda1): Can't find valid F2FS filesystem in 2th superblock
    As result of this the partition cannot be mounted.
    
    With this patch applied the superblock validation works fine and the
    partition can be mounted again:
      F2FS-fs (sda1): Mounted with checkpoint version = 7c84
    
    My little endian x86-64 hardware was able to mount the partition without
    this fix.
    To confirm that mounting f2fs filesystems works on big endian machines
    again I tested this on a 32-bit MIPS big endian (lantiq) device.
    
    Fixes: 0cfe75c5b01199 ("f2fs: enhance sanity_check_raw_super() to avoid potential overflows")
    Cc: stable@vger.kernel.org
    Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
    Reviewed-by: Chao Yu <yuchao0@huawei.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking a8f40be69f80c7c5f969ae5cd93497dc7a764358 ......
	 orig commit -> b2ca374f33bd33fd822eb871876e4888cf79dc97 ......
checking aec6ccb3dcc1ad9b8cfe12d086430ffcce887dda ......
	 orig commit -> 0833721ec3658a4e9d5e58b6fa82cf9edc431e59 ......
checking 4b356df11ba2b44627e2fad7441e05abee46a628 ......
	 orig commit -> 761333f2f50ccc887aa9957ae829300262c0d15b ......
checking cf968bbccba9860eef9480ae560711fbc5cbc1b5 ......
	 orig commit -> f556faa46eb4e96d0d0772e74ecf66781e132f72 ......
checking 34407a175a59b668a1a2bbf0d0e495d87a7777d8 ......
	 orig commit -> 514c7dca85a0bf40be984dab0b477403a6db901f ......
checking c0dfb99847851fb830d1e8ea7d5e0571f50c325a ......
	 orig commit -> ba480dd4db9f1798541eb2d1c423fc95feee8d36 ......
checking 9f268b5cf2d6a716779dfe11f4bc02d6461db693 ......
	 orig commit -> fce466eab7ac6baa9d2dcd88abcf945be3d4a089 ......
		 fce466eab7ac6baa9d2dcd88abcf945be3d4a089 has problem. Fixes commit -> 10950929e994c5ecee149ff0873388d3c98f12b5
761333f2f50ccc887aa9957ae829300262c0d15b
commit 4b356df11ba2b44627e2fad7441e05abee46a628
Author: Shaokun Zhang <zhangshaokun@hisilicon.com>
Date:   Mon Nov 5 18:49:09 2018 +0800

    btrfs: tree-checker: Fix misleading group system information
    
    commit 761333f2f50ccc887aa9957ae829300262c0d15b upstream.
    
    block_group_err shows the group system as a decimal value with a '0x'
    prefix, which is somewhat misleading.
    
    Fix it to print hexadecimal, as was intended.
    
    Fixes: fce466eab7ac6 ("btrfs: tree-checker: Verify block_group_item")
    Reviewed-by: Nikolay Borisov <nborisov@suse.com>
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: Shaokun Zhang <zhangshaokun@hisilicon.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
commit 1aadbb4a325b81989c9dd454c44b846d590cda49
Author: Qu Wenruo <wqu@suse.com>
Date:   Fri Nov 23 09:06:36 2018 +0800

    btrfs: tree-checker: Don't check max block group size as current max chunk size limit is unreliable
    
    commit 10950929e994c5ecee149ff0873388d3c98f12b5 upstream.
    
    [BUG]
    A completely valid btrfs will refuse to mount, with error message like:
      BTRFS critical (device sdb2): corrupt leaf: root=2 block=239681536 slot=172 \
        bg_start=12018974720 bg_len=10888413184, invalid block group size, \
        have 10888413184 expect (0, 10737418240]
    
    This has been reported several times as the 4.19 kernel is now being
    used. The filesystem refuses to mount, but is otherwise ok and booting
    4.18 is a workaround.
    
    Btrfs check returns no error, and all kernels used on this fs is later
    than 2011, which should all have the 10G size limit commit.
    
    [CAUSE]
    For a 12 devices btrfs, we could allocate a chunk larger than 10G due to
    stripe stripe bump up.
    
    __btrfs_alloc_chunk()
    |- max_stripe_size = 1G
    |- max_chunk_size = 10G
    |- data_stripe = 11
    |- if (1G * 11 > 10G) {
           stripe_size = 976128930;
           stripe_size = round_up(976128930, SZ_16M) = 989855744
    
    However the final stripe_size (989855744) * 11 = 10888413184, which is
    still larger than 10G.
    
    [FIX]
    For the comprehensive check, we need to do the full check at chunk read
    time, and rely on bg <-> chunk mapping to do the check.
    
    We could just skip the length check for now.
    
    Fixes: fce466eab7ac ("btrfs: tree-checker: Verify block_group_item")
    Cc: stable@vger.kernel.org # v4.19+
    Reported-by: Wang Yugui <wangyugui@e16-tech.com>
    Signed-off-by: Qu Wenruo <wqu@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 4b356df11ba2b44627e2fad7441e05abee46a628
Author: Shaokun Zhang <zhangshaokun@hisilicon.com>
Date:   Mon Nov 5 18:49:09 2018 +0800

    btrfs: tree-checker: Fix misleading group system information
    
    commit 761333f2f50ccc887aa9957ae829300262c0d15b upstream.
    
    block_group_err shows the group system as a decimal value with a '0x'
    prefix, which is somewhat misleading.
    
    Fix it to print hexadecimal, as was intended.
    
    Fixes: fce466eab7ac6 ("btrfs: tree-checker: Verify block_group_item")
    Reviewed-by: Nikolay Borisov <nborisov@suse.com>
    Reviewed-by: Qu Wenruo <wqu@suse.com>
    Signed-off-by: Shaokun Zhang <zhangshaokun@hisilicon.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
checking e07e1c7561a7e087a5e512c972aa7d3e1388c057 ......
	 orig commit -> e2683fc9d219430f5b78889b50cde7f40efeba7b ......
checking 52ea16655aeed2571b9042c18db3eb089c37910c ......
	 orig commit -> 7cfad65297bfe0aa2996cd72d21c898aa84436d9 ......
checking fe09fe216e502b17716689721a5c59d6a21277ac ......
	 orig commit -> ad7b0368f33cffe67fecd302028915926e50ef7e ......
checking b6a07f903543e45d3660d5fbc8385f89da763c81 ......
	 orig commit -> 69fc6cbbac542c349b3d350d10f6e394c253c81d ......
checking b3032dc25fb4d7ffdbb61df875cc09b3ec662c85 ......
	 orig commit -> bba4f29896c986c4cec17bc0f19f2ce644fceae1 ......
checking eb3493e2476c5ce60c6a376a6b50d465f2864968 ......
	 orig commit -> 557ea5dd003d371536f6b4e8f7c8209a2b6fd4e3 ......
checking 64948fd63f662180c00f0fe70b623eab51108a89 ......
	 orig commit -> 4b865cab96fe2a30ed512cf667b354bd291b3b0a ......
checking fa5d29e6d7cbfac45e3b7bdb7bb3d48f124bbe55 ......
	 orig commit -> 40c3c40947324d9f40bf47830c92c59a9bbadf4a ......
checking ac6ea50bb6306ed056222a5967b2bad3c3a9e2dd ......
	 orig commit -> 7f43d4affb2a254d421ab20b0cf65ac2569909fb ......
checking a5cc85fe139c181e53cc557230c5ea4001a90c80 ......
	 orig commit -> c3267bbaa9cae09b62960eafe33ad19196803285 ......
checking 895586ecb7a4528336d41f81d0ce3985e8abbed6 ......
	 orig commit -> 7ef49515fa6727cb4b6f2f5b0ffbc5fc20a9f8c6 ......
checking f7eef132ccc95c9af50b647c5da0511d2b8492f8 ......
	 orig commit -> 315409b0098fb2651d86553f0436b70502b29bb2 ......
checking 107b02c81a8761f1f7efc1e8b54d435324ccd13e ......
	 orig commit -> b5a8ffcae4103a9d823ea3aa3a761f65779fbe2a ......
checking 39d9e1c62e3f8b5569a0d9bf4d47a3d5d8ae02e2 ......
	 orig commit -> 150085791afb8054e11d2e080d4b9cd755dd7f69 ......
checking 2a0f5919e1e6a1c0423d895ab75eb15f94a67c69 ......
	 orig commit -> c113187d38ff85dc302a1bb55864b203ebb2ba10 ......
checking 2b8b2e76222f1241cec381eb0ec599ee33e9cd00 ......
	 orig commit -> ee181e5201e640a4b92b217e9eab2531dab57d2c ......
checking 93f16446c8ddacbf26ae8408ecd9c9c397b8d5b4 ......
	 orig commit -> 196c31b4b54474b31dee3c30352c45c2a93e9226 ......
checking 797b8bb47fb27ee49a3b59ad110e5264585415aa ......
	 orig commit -> ff45d820a2df163957ad8ab459b6eb6976144c18 ......
checking 25f03991a5210f31491e1e2fccec7cf0d080772e ......
	 orig commit -> 6d88207fcfddc002afe3e2e4a455e5201089d5d9 ......
checking 83b570c004da47b51d7417ac18d8491d9fc91420 ......
	 orig commit -> af86ca4e3088fe5eacf2f7e58c01fa68ca067672 ......
checking b16d0c5d32468a0624505a7b6b211e20488295e9 ......
	 orig commit -> cc255c76c70f7a87d97939621eae04b600d9f4a1 ......
checking 3fd73c8a71f299e30359a63add1f33e3fd834831 ......
	 orig commit -> 6daca13d2e72bedaaacfc08f873114c9307d5aea ......
checking a55056e1523990e1ef9d70531ffaf27fd1ddff55 ......
	 orig commit -> 149cac4a50b0b4081b38b2f38de6ef71c27eaa85 ......
checking 0858417b5c2e7bcc0b9e52c4b76e2af3d69e138b ......
	 orig commit -> c571fe24d243bfe7017f0e67fe800b3cc2a1d1f7 ......
checking 66abd96062b627f0ee20a684ebba48cec80233d7 ......
	 orig commit -> c0f56b483aa09c99bfe97409a43ad786f33b8a5a ......
checking 2fd0d0f9bb59ec5b628622e30f22158cb564c4ea ......
	 orig commit -> 262614c4294d33b1f19e0d18c0091d9c329b544a ......
checking ba9606d0121b644019d0699b5973926cc1a91c10 ......
	 orig commit -> 25677478474a91fa1b46f19a4a591a9848bca6fb ......
checking 30cdc0c3bac950bebd3ba59f5ff980cdd3710e0f ......
	 orig commit -> 910b0797fa9e8af09c44a3fa36cb310ba7a7218d ......
checking 8f85b74fb1c0a7fa267f828a90b582e27fdf56e7 ......
	 orig commit -> 06a5e1268a5fb9c2b346a3da6b97e85f2eba0f07 ......
checking 84c55f8d40102855f3b86ffdfad6b5e4da517858 ......
	 orig commit -> 87c460a0bded56195b5eb497d44709777ef7b415 ......
checking b447a6adf423cd80862a5944e4e9d9c91afff05a ......
	 orig commit -> 042a30824871fa3149b0127009074b75cc25863c ......
checking 5021918a515cd86fb8715ec0f24ae66f15f5aba5 ......
	 orig commit -> 2af8ff291848cc4b1cce24b6c943394eb2c761e8 ......
checking 98f1ae169c2e7264b198c3df08612f1bcd0fcfac ......
	 orig commit -> aaa52e340073b7f4593b3c4ddafcafa70cf838b5 ......
checking 81d2848c99cc4951eb3f7c3ce4313e830b07cc2b ......
	 orig commit -> 701270fa193aadf00bdcf607738f64997275d4c7 ......
checking 6f75a09833839caef7450275cc227dcef1679493 ......
	 orig commit -> 006d3ff27e884f80bd7d306b041afc415f63598f ......
checking 16d07443b27746fc819600fbe79742335a471d47 ......
	 orig commit -> 173d9d9fd3ddae84c110fea8aedf1f26af6be9ec ......
checking 30241d721f90ea1cd783b79049024379d4a5b4f0 ......
	 orig commit -> 605ca5ede7643a01f4c4a15913f9714ac297f8a6 ......
checking e12b67d81b08a79994ee9b1484a7e0c4601bfdad ......
	 orig commit -> 906f9cdfc2a0800f13683f9e4ebdfd08c12ee81b ......
