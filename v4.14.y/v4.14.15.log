Check from v4.14.15 to v4.14.16
Commit count: 73
checking 6c70076667f246dc200c7a3e9aeabd2f8f388416 ......
checking 54e67ba7d20a5921cfe712cfe4bd773e75df10e0 ......
	 orig commit -> 1995266727fa8143897e89b55f5d3c79aa828420 ......
checking c83189edf416ac10b55ca48292158df460c13cd5 ......
	 orig commit -> 56026645e2b6f11ede34a5e6ab69d3eb56f9c8fc ......
checking c43db1a3c7caf82a6d59401e617fd5c6fc0bf40d ......
	 orig commit -> a2284d912bfc865cdca4c00488e08a3550f9a405 ......
checking a17536742bb9a5df561cce54c7cc3cd1e2cd480d ......
	 orig commit -> f37a8cb84cce18762e8f86a70bd6a49a66ab964c ......
checking ca0a0967205b65a197dccb80688f3588cc14d745 ......
	 orig commit -> 68fda450a7df51cff9e5a4d4a4d9d0d5f2589153 ......
checking 6eca013bef784aaf7be1a6262e3fe2de75476166 ......
	 orig commit -> c366287ebd698ef5e3de300d90cd62ee9ee7373e ......
checking 3ea4247ec1b7efc423cf4f75450ebf5cffab9ed8 ......
	 orig commit -> be95a845cc4402272994ce290e3ad928aff06cb9 ......
checking 6fde36d5ce7ba4303865d5e11601cd3094e5909b ......
	 orig commit -> 290af86629b25ffd1ed6232c4e9107da031705cb ......
		 290af86629b25ffd1ed6232c4e9107da031705cb has problem. Fixes commit -> ede95a63b5e84ddeea6b0c473b36ab8bfd8c6ce3
09584b406742413ac4c8d7e030374d4daa045b69
commit 3e01c16d87511071679d3d3d14c0f8d37b856b52
Author: Yonghong Song <yhs@fb.com>
Date:   Fri Feb 2 22:37:15 2018 -0800

    bpf: fix selftests/bpf test_kmod.sh failure when CONFIG_BPF_JIT_ALWAYS_ON=y
    
    
    [ Upstream commit 09584b406742413ac4c8d7e030374d4daa045b69 ]
    
    With CONFIG_BPF_JIT_ALWAYS_ON is defined in the config file,
    tools/testing/selftests/bpf/test_kmod.sh failed like below:
      [root@localhost bpf]# ./test_kmod.sh
      sysctl: setting key "net.core.bpf_jit_enable": Invalid argument
      [ JIT enabled:0 hardened:0 ]
      [  132.175681] test_bpf: #297 BPF_MAXINSNS: Jump, gap, jump, ... FAIL to prog_create err=-524 len=4096
      [  132.458834] test_bpf: Summary: 348 PASSED, 1 FAILED, [340/340 JIT'ed]
      [ JIT enabled:1 hardened:0 ]
      [  133.456025] test_bpf: #297 BPF_MAXINSNS: Jump, gap, jump, ... FAIL to prog_create err=-524 len=4096
      [  133.730935] test_bpf: Summary: 348 PASSED, 1 FAILED, [340/340 JIT'ed]
      [ JIT enabled:1 hardened:1 ]
      [  134.769730] test_bpf: #297 BPF_MAXINSNS: Jump, gap, jump, ... FAIL to prog_create err=-524 len=4096
      [  135.050864] test_bpf: Summary: 348 PASSED, 1 FAILED, [340/340 JIT'ed]
      [ JIT enabled:1 hardened:2 ]
      [  136.442882] test_bpf: #297 BPF_MAXINSNS: Jump, gap, jump, ... FAIL to prog_create err=-524 len=4096
      [  136.821810] test_bpf: Summary: 348 PASSED, 1 FAILED, [340/340 JIT'ed]
      [root@localhost bpf]#
    
    The test_kmod.sh load/remove test_bpf.ko multiple times with different
    settings for sysctl net.core.bpf_jit_{enable,harden}. The failed test #297
    of test_bpf.ko is designed such that JIT always fails.
    
    Commit 290af86629b2 (bpf: introduce BPF_JIT_ALWAYS_ON config)
    introduced the following tightening logic:
        ...
            if (!bpf_prog_is_dev_bound(fp->aux)) {
                    fp = bpf_int_jit_compile(fp);
        #ifdef CONFIG_BPF_JIT_ALWAYS_ON
                    if (!fp->jited) {
                            *err = -ENOTSUPP;
                            return fp;
                    }
        #endif
        ...
    With this logic, Test #297 always gets return value -ENOTSUPP
    when CONFIG_BPF_JIT_ALWAYS_ON is defined, causing the test failure.
    
    This patch fixed the failure by marking Test #297 as expected failure
    when CONFIG_BPF_JIT_ALWAYS_ON is defined.
    
    Fixes: 290af86629b2 (bpf: introduce BPF_JIT_ALWAYS_ON config)
    Signed-off-by: Yonghong Song <yhs@fb.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking fdd88d753d4b3142f7cd38b0278c29b03c1e0929 ......
	 orig commit -> d5421ea43d30701e03cadc56a38854c36a8b4433 ......
checking ba07aba771974be3d3dfae5241c8d3db40363b26 ......
	 orig commit -> 5beda7d54eafece4c974cfa9fbb9f60fb18fd20a ......
checking cbfb351be483a239a2afaa4702826b0ad359fd1e ......
	 orig commit -> 1d080f096fe33f031d26e19b3ef0146f66b8b0f1 ......
checking ac2cc887653808e988f9d7ece50aacc755a4f879 ......
	 orig commit -> 7e702d17ed138cf4ae7c00e8c00681ed464587c7 ......
checking 34c1acc2f7f5c26e8d0cd2f0b5eba8bd06d8e0b2 ......
	 orig commit -> 40d4071ce2d20840d224b4a77b5dc6f752c9ab15 ......
checking 74026a188fe7f8739fbd9f6a960a1486ce6f9c96 ......
	 orig commit -> 848b159835ddef99cc4193083f7e786c3992f580 ......
checking c2fd0b217068d6ef0b71bc5fbfd3c8f9f48c42eb ......
	 orig commit -> 6503a30440962f1e1ccb8868816b4e18201218d4 ......
checking ed10b9affb3af663d2cdb8a1e9134fb0a6358ab0 ......
	 orig commit -> 6db959c82eb039a151d95a0f8b7dea643657327a ......
checking 2f54941c886c9f4d788ab0d4a81830a177ab7fd1 ......
	 orig commit -> 877d17c79b66466942a836403773276e34fe3614 ......
checking 3a28f04bc4c20e56d75327165f2922a525225b7c ......
	 orig commit -> cf6d43ef66f416282121f436ce1bee9a25199d52 ......
checking a022bbe393fbe3a1f471ee94d846be03f7fe2136 ......
	 orig commit -> d91c3e17f75f218022140dee18cf515292184a8f ......
checking 48606bb1eef7c46f154cb4a6c5509729e60a4e91 ......
	 orig commit -> cd443f1e91ca600a092e780e8250cd6a2954b763 ......
checking a8c21ba721d4bfc614ecb46f9507cc042b6a6d6b ......
	 orig commit -> 0d9c9f0f40ca262b67fc06a702b85f3976f5e1a1 ......
checking 4f97adffa33f41f5b9d4b9b01291f12bb74afe22 ......
	 orig commit -> e58edaa4863583b54409444f11b4f80dff0af1cd ......
checking 3eae0ba8c9b51d83d2293249fb9c82e90fc6dc31 ......
	 orig commit -> cbbdf8433a5f117b1a2119ea30fc651b61ef7570 ......
		 cbbdf8433a5f117b1a2119ea30fc651b61ef7570 has problem. Fixes commit -> cd443f1e91ca600a092e780e8250cd6a2954b763
commit 48606bb1eef7c46f154cb4a6c5509729e60a4e91
Author: Xin Long <lucien.xin@gmail.com>
Date:   Thu Jan 18 14:48:03 2018 +0800

    netlink: reset extack earlier in netlink_rcv_skb
    
    
    [ Upstream commit cd443f1e91ca600a092e780e8250cd6a2954b763 ]
    
    Move up the extack reset/initialization in netlink_rcv_skb, so that
    those 'goto ack' will not skip it. Otherwise, later on netlink_ack
    may use the uninitialized extack and cause kernel crash.
    
    Fixes: cbbdf8433a5f ("netlink: extack needs to be reset each time through loop")
    Reported-by: syzbot+03bee3680a37466775e7@syzkaller.appspotmail.com
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: David Ahern <dsahern@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 3c6e5f2f5ef11bdba41e8158cc3c3e8ee6cfd198 ......
	 orig commit -> 625637bf4afa45204bd87e4218645182a919485a ......
checking 80f327285cab6ab8e10c3ea03278add5dd99fb02 ......
	 orig commit -> d0c081b49137cd3200f2023c0875723be66e7ce5 ......
checking 51c1f513fe965c5136be85d8af46d99166e0b121 ......
	 orig commit -> 4df0bfc79904b7169dc77dcce44598b1545721f9 ......
checking 8496f7dbb1e5210e272b3a0e6f1fd20c28c8890e ......
	 orig commit -> 1ecdaea02ca6bfacf2ecda500dc1af51e9780c42 ......
checking dd7e1cbd26183e4b8c816fb8b9ecc6356b0cb19d ......
	 orig commit -> 121d57af308d0cf943f08f4738d24d3966c38cd9 ......
checking 8af27b14b9c9028ad486b7f73c7466164d20ae40 ......
	 orig commit -> 128bb975dc3c25d00de04e503e2fe0a780d04459 ......
checking ace99769a1f9f94a204ebaf5d946b4cf1f049153 ......
	 orig commit -> 52acf06451930eb4cefabd5ecea56e2d46c32f76 ......
checking 759cd103ddb1df8ca0cb46e59e1c2cabb139fa27 ......
	 orig commit -> 0171c41835591e9aa2e384b703ef9a6ae367c610 ......
checking ce1e51d842baa8cf55a05a26933402e55d9b6217 ......
	 orig commit -> 05e0cc84e00c54fb152d1f4b86bc211823a83d0c ......
		 05e0cc84e00c54fb152d1f4b86bc211823a83d0c has problem. Fixes commit -> 6082d9c9c94a408d7409b5f2e4e42ac9e8b16d0d
2572cf57d75a7f91835d9a38771e9e76d575d122
commit 71a9d1240a30504af52fdd48995a3c9ef2cc467c
Author: Israel Rukshin <israelr@mellanox.com>
Date:   Thu Apr 12 09:49:11 2018 +0000

    net/mlx5: Fix mlx5_get_vector_affinity function
    
    [ Upstream commit 6082d9c9c94a408d7409b5f2e4e42ac9e8b16d0d ]
    
    Adding the vector offset when calling to mlx5_vector2eqn() is wrong.
    This is because mlx5_vector2eqn() checks if EQ index is equal to vector number
    and the fact that the internal completion vectors that mlx5 allocates
    don't get an EQ index.
    
    The second problem here is that using effective_affinity_mask gives the same
    CPU for different vectors.
    This leads to unmapped queues when calling it from blk_mq_rdma_map_queues().
    This doesn't happen when using affinity_hint mask.
    
    Fixes: 2572cf57d75a ("mlx5: fix mlx5_get_vector_affinity to start from completion vector 0")
    Fixes: 05e0cc84e00c ("net/mlx5: Fix get vector affinity helper function")
    Signed-off-by: Israel Rukshin <israelr@mellanox.com>
    Reviewed-by: Max Gurtovoy <maxg@mellanox.com>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e7cedb56ae9a1c00b76df98d2adebb6208d2b71e
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Mon Feb 5 16:24:52 2018 +0200

    mlx5: fix mlx5_get_vector_affinity to start from completion vector 0
    
    commit 2572cf57d75a7f91835d9a38771e9e76d575d122 upstream.
    
    The consumers of this routine expects the affinity map of of vector
    index relative to the first completion vector. The upper layers are
    not aware of internal/private completion vectors that mlx5 allocates
    for its own usage.
    
    Hence, return the affinity map of vector index relative to the first
    completion vector.
    
    Fixes: 05e0cc84e00c ("net/mlx5: Fix get vector affinity helper function")
    Reported-by: Logan Gunthorpe <logang@deltatee.com>
    Tested-by: Max Gurtovoy <maxg@mellanox.com>
    Reviewed-by: Max Gurtovoy <maxg@mellanox.com>
    Cc: <stable@vger.kernel.org> # v4.15
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 71a9d1240a30504af52fdd48995a3c9ef2cc467c
Author: Israel Rukshin <israelr@mellanox.com>
Date:   Thu Apr 12 09:49:11 2018 +0000

    net/mlx5: Fix mlx5_get_vector_affinity function
    
    [ Upstream commit 6082d9c9c94a408d7409b5f2e4e42ac9e8b16d0d ]
    
    Adding the vector offset when calling to mlx5_vector2eqn() is wrong.
    This is because mlx5_vector2eqn() checks if EQ index is equal to vector number
    and the fact that the internal completion vectors that mlx5 allocates
    don't get an EQ index.
    
    The second problem here is that using effective_affinity_mask gives the same
    CPU for different vectors.
    This leads to unmapped queues when calling it from blk_mq_rdma_map_queues().
    This doesn't happen when using affinity_hint mask.
    
    Fixes: 2572cf57d75a ("mlx5: fix mlx5_get_vector_affinity to start from completion vector 0")
    Fixes: 05e0cc84e00c ("net/mlx5: Fix get vector affinity helper function")
    Signed-off-by: Israel Rukshin <israelr@mellanox.com>
    Reviewed-by: Max Gurtovoy <maxg@mellanox.com>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit e7cedb56ae9a1c00b76df98d2adebb6208d2b71e
Author: Sagi Grimberg <sagi@grimberg.me>
Date:   Mon Feb 5 16:24:52 2018 +0200

    mlx5: fix mlx5_get_vector_affinity to start from completion vector 0
    
    commit 2572cf57d75a7f91835d9a38771e9e76d575d122 upstream.
    
    The consumers of this routine expects the affinity map of of vector
    index relative to the first completion vector. The upper layers are
    not aware of internal/private completion vectors that mlx5 allocates
    for its own usage.
    
    Hence, return the affinity map of vector index relative to the first
    completion vector.
    
    Fixes: 05e0cc84e00c ("net/mlx5: Fix get vector affinity helper function")
    Reported-by: Logan Gunthorpe <logang@deltatee.com>
    Tested-by: Max Gurtovoy <maxg@mellanox.com>
    Reviewed-by: Max Gurtovoy <maxg@mellanox.com>
    Cc: <stable@vger.kernel.org> # v4.15
    Signed-off-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 2ac1797da0f79013ef166df6a5124db267b9e1b6 ......
	 orig commit -> 8978cc921fc7fad3f4d6f91f1da01352aeeeff25 ......
checking 8de7fb3dfb0d381358fbfc8632d0818d8a1fec7e ......
	 orig commit -> 59b36613e85fb16ebf9feaf914570879cd5c2a21 ......
checking a940c196461b8430dd21024203d3916032096839 ......
	 orig commit -> a0ff660058b88d12625a783ce9e5c1371c87951f ......
checking f2e957097905dd53a9ca513702fe0c9eecb73ddc ......
	 orig commit -> c5006b8aa74599ce19104b31d322d2ea9ff887cc ......
checking 72d4f3abd6d3521f5cd978b63f9301051f127812 ......
	 orig commit -> a78e93661c5fd30b9e1dee464b2f62f966883ef7 ......
checking d32e5740001972c1bb193dd60af02721d047a17e ......
	 orig commit -> 02612bb05e51df8489db5e94d0cf8d1c81f87b0c ......
checking 6ea6b86ae73e1b36ddba3015739cedd24b062523 ......
	 orig commit -> 1e19c4d689dc1e95bafd23ef68fbc0c6b9e05180 ......
checking d3048a12f3eccc00d62db373df4cd50b1218f6f1 ......
	 orig commit -> 30be8f8dba1bd2aff73e8447d59228471233a3d4 ......
checking 32e57f8c557faed0cd976abfb800a2f363e6972a ......
	 orig commit -> 4ee806d51176ba7b8ff1efd81f271d7252e03a1d ......
checking 450449fff22687db76d7611acb48f94b685bc762 ......
	 orig commit -> 7c68d1a6b4db9012790af7ac0f0fdc0d2083422a ......
checking d9bee33e397150b43be9ac2271b813552a94345f ......
	 orig commit -> ad23b750933ea7bf962678972a286c78a8fa36aa ......
checking 2afdce2c76b2ccc2c882b5f5eefc8521c8877dee ......
	 orig commit -> a5b1379afbfabf91e3a689e82ac619a7157336b3 ......
checking 3472170784d849018356e0bcb7d5c993ffc65699 ......
	 orig commit -> 95ef498d977bf44ac094778fd448b98af158a3e6 ......
checking 8278804e05f6bcfe3fdfea4a404020752ead15a6 ......
	 orig commit -> 749439bfac6e1a2932c582e2699f91d329658196 ......
checking 2295b3dd543f9a5a1834e4265d506a5bc0819983 ......
	 orig commit -> e9191ffb65d8e159680ce0ad2224e1acbde6985c ......
checking c277f3420a638d455162a8bfccb40ebe22ba57b4 ......
	 orig commit -> dd5684ecae3bd8e44b644f50e2c12c7e57fdfef5 ......
checking 42d68bf2a42381642ea5ae460c6a5d86a56213f0 ......
	 orig commit -> cd9ff4de0107c65d69d02253bb25d6db93c3dbc1 ......
		 cd9ff4de0107c65d69d02253bb25d6db93c3dbc1 has problem. Fixes commit -> 4b2a2bfeb3f056461a90bd621e8bd7d03fa47f60
checking f703437099b4ec09a643ad0ae2839ca292601166 ......
	 orig commit -> 096b9854c04df86f03b38a97d40b6506e5730919 ......
checking 9ad970c8a13595e38d3af98114bcbbec6d8a5be4 ......
	 orig commit -> 17b11b76b87afe9f8be199d7a5f442497133e2b0 ......
checking dd55bfca560733d37f53a04cf628c5d6a7d5d0da ......
	 orig commit -> 091f02483df7b56615b524491f404e574c5e0668 ......
checking 5911dd3f92aefd86b4a86286c94398681c453802 ......
	 orig commit -> ec19e02b343db991d2d1610c409efefebf4e2ca9 ......
checking 0da4a4d0c7f941638e2e7e515c2d758de8976418 ......
	 orig commit -> 02088d9b392f605c892894b46aa8c83e3abd0115 ......
checking 295bcfbbcf5a741e9103605c3252276ed21433bb ......
	 orig commit -> 0005e55a79cfda88199e41a406a829c88d708c67 ......
checking 403f4c6ae9d15afd0776316728db18f20600dba6 ......
	 orig commit -> 70ec3a6c2c11e4b0e107a65de943a082f9aff351 ......
checking bfd2c2b9915cb3c82743251ab365b64ca2280e19 ......
	 orig commit -> d1220efd23484c72c82d5471f05daeb35b5d1916 ......
checking e7119caa7cd93ff4a01788ebd2fc95edeaa16da3 ......
	 orig commit -> f4483f2cc1fdc03488c8a1452e545545ae5bda93 ......
checking 124047a81eae1fad08482aa122e683f602fe85dc ......
	 orig commit -> e9062481824384f00299971f923fecf6b3668001 ......
checking 326efb49e153fbb9ccacaed9858bd9da91204061 ......
	 orig commit -> 6793f1c450b1533a5e9c2493490de771d38b24f9 ......
checking d529ba9b270c8713440c63f64af6a7d522591990 ......
	 orig commit -> 1de1ea7efeb9e8543212210e34518b4049ccd285 ......
checking 5c7b881331f825fe97a47aed6bb4a32c542eca2d ......
	 orig commit -> e4fd493c0541d36953f7b9d3bfced67a1321792f ......
checking 203a60330e040f2aa326f028b8c41a774bcb0990 ......
	 orig commit -> 2a924d71794c530e55e73d0ce2cc77233307eaa9 ......
checking 7e4cd0ad576a75d26ea1658cf76c2ce00774ba73 ......
	 orig commit -> f5d07b9e98022d50720e38aa936fc11c67868ece ......
checking 25cb145272525e819b21fb44dc338d08b6af816f ......
	 orig commit -> e5c9c6a885fad00aa559b49d8fc23a60e290824e ......
		 e5c9c6a885fad00aa559b49d8fc23a60e290824e has problem. Fixes commit -> a6754fae1e66e9a40fed406290d7ca3f2b4d227c
commit cf980cebed0313ef417ffa845fd92b7f00184e5e
Author: Cameron Gutman <aicommander@gmail.com>
Date:   Thu Nov 29 10:09:33 2018 -0800

    Input: xpad - quirk all PDP Xbox One gamepads
    
    commit a6754fae1e66e9a40fed406290d7ca3f2b4d227c upstream.
    
    Since we continue to find tons of new variants [0,1,2,3,4,5,6] that
    need the PDP quirk, let's just quirk all devices from PDP.
    
    [0]: https://github.com/paroj/xpad/pull/104
    [1]: https://github.com/paroj/xpad/pull/105
    [2]: https://github.com/paroj/xpad/pull/108
    [3]: https://github.com/paroj/xpad/pull/109
    [4]: https://github.com/paroj/xpad/pull/112
    [5]: https://github.com/paroj/xpad/pull/115
    [6]: https://github.com/paroj/xpad/pull/116
    
    Fixes: e5c9c6a885fa ("Input: xpad - add support for PDP Xbox One controllers")
    Cc: stable@vger.kernel.org
    Signed-off-by: Cameron Gutman <aicommander@gmail.com>
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 5cc765d69c4faf7dabfa5816add84ee52bc7912b ......
	 orig commit -> 5132ede0fe8092b043dae09a7cc32b8ae7272baa ......
checking ceab06885c09f685910779a8685b7659d66de4b5 ......
	 orig commit -> 76a4201191814a0061cb5c861fafb9ecaa764846 ......
checking 19848ca7b7dad5153860239c893c1eadd603217e ......
	 orig commit -> 916a27901de01446bcf57ecca4783f6cff493309 ......
checking 671624872144abc37bc5e8f3b27987890f6e87f3 ......
	 orig commit -> 4b380c42f7d00a395feede754f0bc2292eebe6e5 ......
checking bd9fa7822f789f3ec32058440c246f7924d8ca9a ......
	 orig commit -> b050e3769c6b4013bb937e879fc43bf1847ee819 ......
checking e1166d9491a0eb7b854d6868e62a9066c7dff277 ......
	 orig commit -> a0ec1ded22e6a6bc41981fae22406835b006a66e ......
checking 1d00dacda89dca83b9899fe3ed1588b08bdd4b88 ......
	 orig commit -> 0afc0decf247f65b7aba666a76a0a68adf4bc435 ......
