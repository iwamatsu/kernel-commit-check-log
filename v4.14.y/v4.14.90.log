Check from v4.14.90 to v4.14.91
Commit count: 37
checking d2dd9f1593dc4d5ceb5cf4a973ed2c6e3a49d799 ......
checking d04e6ea0cec9e7d6cba806508f657d2d0dc6cacf ......
	 orig commit -> 505b5240329b922f21f91d5b5d1e535c805eca6d ......
checking 5cebd962c97f3ee64555718169cc00c8fe7a228a ......
	 orig commit -> ea5751ccd665a2fd1b24f9af81f6167f0718c5f6 ......
checking 36f93a2e7dce0a4f58b96a7ecb3af4e5897a60d4 ......
	 orig commit -> 68600f623d69da428c6163275f97ca126e1a8ec5 ......
checking ed0d232df97fcba2ae621c4eb1283b1c790b7989 ......
	 orig commit -> e58725d51fa8da9133f3f1c54170aa2e43056b91 ......
checking 089651ef038eb4af77b0847615f909d2edce1bc2 ......
checking 0cc6feb5c4b5e6e1d1fa98f97b28ba79d6b5cb1b ......
checking 20e985263c31166c639163116e681b1aa8775c8f ......
	 orig commit -> f108703cb5f199d0fc98517ac29a997c4c646c94 ......
checking adb7ea126e6315895aaa47f7cb376bfb6360be5e ......
	 orig commit -> eca1e56ceedd9cc185eb18baf307d3ff2e4af376 ......
checking e1240a10f34d452bf9f50da7cc062022b586c2f4 ......
	 orig commit -> c7c3f05e341a9a2bd1a92993d4f996cfd6e7348e ......
checking 0761921fa6cbe6859b7994eb77811f100adb9ffe ......
	 orig commit -> 32043fa065b51e0b1433e48d118821c71b5cd65d ......
checking ff53cc3576d3d728dec87e866c3ae84e33ef07a8 ......
	 orig commit -> fc96df16a1ce80cbb3c316ab7d4dc8cd5c2852ce ......
		 fc96df16a1ce80cbb3c316ab7d4dc8cd5c2852ce has problem. Fixes commit -> ba50bf1ce9a51fc97db58b96d01306aa70bc3979
commit be0cb9e226b7c594070eb64ef8c18f3793f63976
Author: Dexuan Cui <decui@microsoft.com>
Date:   Mon Dec 17 20:16:09 2018 +0000

    Drivers: hv: vmbus: Check for ring when getting debug info
    
    commit ba50bf1ce9a51fc97db58b96d01306aa70bc3979 upstream.
    
    fc96df16a1ce is good and can already fix the "return stack garbage" issue,
    but let's also improve hv_ringbuffer_get_debuginfo(), which would silently
    return stack garbage, if people forget to check channel->state or
    ring_info->ring_buffer, when using the function in the future.
    
    Having an error check in the function would eliminate the potential risk.
    
    Add a Fixes tag to indicate the patch depdendency.
    
    Fixes: fc96df16a1ce ("Drivers: hv: vmbus: Return -EINVAL for the sys files for unopened channels")
    Cc: stable@vger.kernel.org
    Cc: K. Y. Srinivasan <kys@microsoft.com>
    Cc: Haiyang Zhang <haiyangz@microsoft.com>
    Signed-off-by: Stephen Hemminger <sthemmin@microsoft.com>
    Signed-off-by: Dexuan Cui <decui@microsoft.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking cc70f14956fa0ea84ee1a3a5b79347730c6c2d08 ......
	 orig commit -> c2dd5146e9fe1f22c77c1b011adf84eea0245806 ......
checking df4ee073061999ebaed0d2ce0a6cd3380a2ed67f ......
	 orig commit -> 0e1b869fff60c81b510c2d00602d778f8f59dd9a ......
checking 2f8f9e280abcb7b2a933091b65ceb19549d85e3e ......
	 orig commit -> 0e334db6bb4b1fd1e2d72c1f3d8f004313cd9f94 ......
		 0e334db6bb4b1fd1e2d72c1f3d8f004313cd9f94 has problem. Fixes commit -> 93ad0fc088c5b4631f796c995bdd27a082ef33a6
commit c5d2a2cf774b1b34704b07a79df96f43b1f6693a
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Fri Jan 11 14:33:16 2019 +0100

    posix-cpu-timers: Unbreak timer rearming
    
    commit 93ad0fc088c5b4631f796c995bdd27a082ef33a6 upstream.
    
    The recent commit which prevented a division by 0 issue in the alarm timer
    code broke posix CPU timers as an unwanted side effect.
    
    The reason is that the common rearm code checks for timer->it_interval
    being 0 now. What went unnoticed is that the posix cpu timer setup does not
    initialize timer->it_interval as it stores the interval in CPU timer
    specific storage. The reason for the separate storage is historical as the
    posix CPU timers always had a 64bit nanoseconds representation internally
    while timer->it_interval is type ktime_t which used to be a modified
    timespec representation on 32bit machines.
    
    Instead of reverting the offending commit and fixing the alarmtimer issue
    in the alarmtimer code, store the interval in timer->it_interval at CPU
    timer setup time so the common code check works. This also repairs the
    existing inconistency of the posix CPU timer code which kept a single shot
    timer armed despite of the interval being 0.
    
    The separate storage can be removed in mainline, but that needs to be a
    separate commit as the current one has to be backported to stable kernels.
    
    Fixes: 0e334db6bb4b ("posix-timers: Fix division by zero bug")
    Reported-by: H.J. Lu <hjl.tools@gmail.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: John Stultz <john.stultz@linaro.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20190111133500.840117406@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 23572a68e828374d4076c296ced075340253b435 ......
	 orig commit -> e59f5e08ece1060073d92c66ded52e1f2c43b5bb ......
checking 07cfa7ac9e52d3250061e3cb91acfecb905afefb ......
	 orig commit -> abf221d2f51b8ce7b9959a8953f880a8b0a1400d ......
checking 4d7a081d0a35a2cd1908451edf66755914cc6ef1 ......
	 orig commit -> 0b479790684192ab7024ce6a621f93f6d0a64d92 ......
checking b097c4436eefdb59902aa74818897bd23d6a0551 ......
	 orig commit -> e3ae3401aa19432ee4943eb0bbc2ec704d07d793 ......
checking 2b591835dcc5185302fbc69c351d3acc64ec4018 ......
	 orig commit -> ba9f39a785a9977e72233000711ef1eb48203551 ......
checking 8af6fad484c24e9d5b6b8f32ab9cfb262dfcbe21 ......
	 orig commit -> a0741ba40a009f97c019ae7541dc61c1fdf41efb ......
checking fe646761cb20a36ed395c323d47db5139db509a7 ......
	 orig commit -> 61cce6f6eeced5ddd9cac55e807fe28b4f18c1ba ......
checking 61c1a4a5ba4c90e8a35fdfb75b815025a84cdf61 ......
	 orig commit -> 28a86092b1753b802ef7e3de8a4c4a69a9c1bb03 ......
checking 4363aa8fb114592e2cba5b748b82b993afd7e141 ......
	 orig commit -> 30360224441ce89a98ed627861e735beb4010775 ......
checking 4497e8fa2361427fe3ee72de57541d8d677707a2 ......
	 orig commit -> cc6730df08a291e51e145bc65e24ffb5e2f17ab6 ......
checking 0b3b6c5ba96f5e4b8497a33db563d5738dfe8d55 ......
	 orig commit -> d57ec3c83b5153217a70b561d4fb6ed96f2f7a25 ......
checking ed101ab689be374d95c8edd517dec35941067596 ......
	 orig commit -> 70a7444c550a75584ffcfae95267058817eff6a7 ......
checking 4aa9cf83b766c2b0b31a360c5c93e1987c19e44c ......
	 orig commit -> 2419f30a4a4fcaa5f35111563b4c61f1b2b26841 ......
checking 2ab5db613774c2c743d109eb63f71c5ee3b6a4ea ......
	 orig commit -> 45f750c16cae3625014c14c77bd9005eda975d35 ......
checking 49be8dc589aee04c64d61e362c5029ab20fd6fd7 ......
	 orig commit -> 5146f95df782b0ac61abde36567e718692725c89 ......
checking 3845c73607ae8de8c7b60d701cdecdc5505c821d ......
	 orig commit -> 2d204ee9d671327915260071c19350d84344e096 ......
checking 0d9b51366d2da5dc5537c1c6e856cf4c0d08de0e ......
	 orig commit -> a2015516c5c0be932a69e1d3405c2fb03b4eacf1 ......
checking 179c8da7f3acdd04f2c23cac81989f24609f281c ......
	 orig commit -> 14d15c2b278011056482eb015dff89f9cbf2b841 ......
checking 56303ade45046b4470eaa47181d83e648d768b2d ......
	 orig commit -> 00ee8b60102862f4daf0814d12a2ea2744fc0b9b ......
checking 2e5981029574928d073f381c2b446c6750d84bd1 ......
	 orig commit -> 747df19747bc9752cd40b9cce761e17a033aa5c2 ......
checking 07eae146f5b76da9d5bb41bc8825fe486bf0f05a ......
	 orig commit -> b88aef36b87c9787a4db724923ec4f57dfd513f3 ......
checking 1e9290ca9d6fa96b69c4d6125f87dc77793179e1 ......
	 orig commit -> af097f5d199e2aa3ab3ef777f0716e487b8f7b08 ......
