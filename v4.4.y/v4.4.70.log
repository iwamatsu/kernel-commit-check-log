Check from v4.4.70 to v4.4.71
Commit count: 52
checking 4bbbc769640554a216a25b2dbaa3d4d2869bbf79 ......
checking 9d65be36a7cc0f69666b71f27874fc058d720417 ......
	 orig commit -> 2a6fba6d2311151598abaa1e7c9abd5f8d024a43 ......
checking 1b03d85a4f37af5889d11c8a300423fbad45aea4 ......
	 orig commit -> 0facef7fb053be4353c0a48c2f48c9dbee91cb19 ......
		 0facef7fb053be4353c0a48c2f48c9dbee91cb19 has problem. Fixes commit -> c456d64449efe37da50832b63d91652a85ea1d20
checking c56605c69ba66087fafe609bb9f936501bc7162e ......
	 orig commit -> a4d768e702de224cc85e0c8eac9311763403b368 ......
checking 9f7b5da0570fe627badd43941b8d8b50cfda5c8a ......
	 orig commit -> 892d2a5f705723b2cb488bfb38bcbdcf83273184 ......
checking 3ba13d7f5b2bad97a2df48f9bb6e4d52c244a979 ......
	 orig commit -> 0daaecacb83bc6b656a56393ab77a31c28139bc7 ......
checking 1d41dd5c1fd6dca4f7fa5980de2e2194e4f6d4d3 ......
	 orig commit -> e20c8a517f259cb4d258e10b0cd5d4b30d4167a0 ......
checking 9d97d6a152655bc58bc7833fd45d912eb966f189 ......
	 orig commit -> ae2c4ac2dd39b23a87ddb14ceddc3f2872c6aef5 ......
checking 8e25af0dc5adac8ee297256558c3ca1c06f15578 ......
	 orig commit -> 756baca27fff3ecaeab9dbc7a5ee35a1d7bc0c7f ......
checking cf55c35974e177dd3d9e7084528c47fe0dab2422 ......
	 orig commit -> 20e8a063786050083fe05b4f45be338c60b49126 ......
checking a76647a71c8e7287271bcaa2768e45a1bb107f8d ......
	 orig commit -> cb52ee334a45ae6c78a3999e4b473c43ddc528f4 ......
checking 8caa9a54b32b950e82a9cbbeb83e1a73b2828b07 ......
	 orig commit -> 023cc840b40fad95c6fe26fff1d380a8c9d45939 ......
checking 0ace12c11401b813a60a2d8b3b95aee183312dde ......
	 orig commit -> be6324c00c4d1e0e665f03ed1fc18863a88da119 ......
checking fe705621b9b43dcc1c2acd0f1c3af66ddeb9f617 ......
	 orig commit -> 8affebe16d79ebefb1d9d6d56a46dc89716f9453 ......
checking b9a7816997a38e4c8643f86757cbc4023f285c51 ......
	 orig commit -> 5375023ae1266553a7baa0845e82917d8803f48c ......
checking 03489bfc78304a0be057ec827a67c0d87dd97b2e ......
	 orig commit -> 70feee0e1ef331b22cc51f383d532a0d043fbdcc ......
checking 7e13bab109eafbd2ce239205b41f38011ec77285 ......
	 orig commit -> 30809f559a0d348c2dfd7ab05e9a451e2384962e ......
checking 4e4b72c0ee3d549e62d92d4ace69ddccd9a7136b ......
	 orig commit -> 82bc9a42cf854fdf63155759c0aa790bd1f361b0 ......
checking 14bfe118dd7d2ee8a00dcf0b880889922b365563 ......
	 orig commit -> 478fe3037b2278d276d4cd9cd0ab06c4cb2e9b32 ......
checking 023a8b0925bef16bf36d1740f41f6fa74167b0ef ......
	 orig commit -> 1fc2e41f7af4572b07190f9dec28396b418e9a36 ......
checking 85ddc41a6c4ad78eab245f9c0d64090621da1392 ......
	 orig commit -> ff5a20169b98d84ad8d7f99f27c5ebbb008204d6 ......
checking 69877793e23da174ed6ac8ffda83809a60f059ac ......
	 orig commit -> 3d18e33735a02b1a90aecf14410bf3edbfd4d3dc ......
checking 15de2e4c90b7f038240077b273dfc3377ceabc13 ......
	 orig commit -> 58d7e3e427db1bd68f33025519a9468140280a75 ......
checking 3529600b16018a1f831f54c32a2d7b2baa0ad036 ......
	 orig commit -> f2e767bb5d6ee0d988cb7d4e54b0b21175802b6b ......
		 f2e767bb5d6ee0d988cb7d4e54b0b21175802b6b has problem. Fixes commit -> c46f09175dabd5dd6a1507f36250bfa734a0156e
checking 58b7cb10f6e2ed0293401e2a8137e046fc71efa9 ......
	 orig commit -> 2ac97f0f6654da14312d125005c77a6010e0ea38 ......
checking c0fd730b678decdc060782db3736b5467b644434 ......
	 orig commit -> f5f968f2371ccdebb8a365487649673c9af68d09 ......
checking 2ca57fc8243655022141ccb89c913abd0470f89a ......
	 orig commit -> 5165da5923d6c7df6f2927b0113b2e4d9288661e ......
checking 1b5286ba9f13073aa47893a3e28f570b71483c67 ......
	 orig commit -> 35d2f80b07bbe03fb358afb0bdeff7437a7d67ff ......
checking e989f9bf2a9dc7064d71d7dcba7eb4bd1040f9a1 ......
	 orig commit -> f2899788353c13891412b273fdff5f02d49aa40f ......
		 f2899788353c13891412b273fdff5f02d49aa40f has problem. Fixes commit -> c505873eaece2b4aefd07d339dc7e1400e0235ac
checking 605b6b2b4d8a8abdafb675abda2e43c11d1b3921 ......
	 orig commit -> f6ba8d33cfbb46df569972e64dbb5bb7e929bfd9 ......
		 f6ba8d33cfbb46df569972e64dbb5bb7e929bfd9 has problem. Fixes commit -> 9142e9007f2d7ab58a587a1e1d921b0064a339aa
checking 338f665acb4ba0b2c7656cc2487326497220168f ......
	 orig commit -> 3fb07daff8e99243366a081e5129560734de4ada ......
		 3fb07daff8e99243366a081e5129560734de4ada has problem. Fixes commit -> 187e5b3ac84d3421d2de3aca949b2791fbcad554
commit 114414b8547525709851b5901b41fda25f9382b1
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Aug 15 05:26:17 2017 -0700

    ipv4: fix NULL dereference in free_fib_info_rcu()
    
    
    [ Upstream commit 187e5b3ac84d3421d2de3aca949b2791fbcad554 ]
    
    If fi->fib_metrics could not be allocated in fib_create_info()
    we attempt to dereference a NULL pointer in free_fib_info_rcu() :
    
        m = fi->fib_metrics;
        if (m != &dst_default_metrics && atomic_dec_and_test(&m->refcnt))
                kfree(m);
    
    Before my recent patch, we used to call kfree(NULL) and nothing wrong
    happened.
    
    Instead of using RCU to defer freeing while we are under memory stress,
    it seems better to take immediate action.
    
    This was reported by syzkaller team.
    
    Fixes: 3fb07daff8e9 ("ipv4: add reference counting to metrics")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 97f54575ff57da3f93f95006802a7892450c1898 ......
	 orig commit -> 804ec7ebe8ea003999ca8d1bfc499edc6a9e07df ......
checking fe22b6005538095f6e95e5152a99fc59e9ad198c ......
	 orig commit -> ba615f675281d76fd19aa03558777f81fb6b6084 ......
checking d7ed7fcecf2082f44ac6b1e7b69055a0e713af03 ......
	 orig commit -> 2836b4f224d4fd7d1a2b23c3eecaf0f0ae199a74 ......
checking 8380f16d0702817d2b5070d82972db03d2462e50 ......
	 orig commit -> cc6e9de62a7f84c9293a2ea41bc412b55bb46e85 ......
checking 38f02f2ce0ca58c45d95567a5d64f7dc90aa9c95 ......
	 orig commit -> 232cd35d0804cc241eb887bb8d4d9b3b9881c64a ......
checking 3a854210f9a555681eef4480ef2400922b31ca2b ......
	 orig commit -> 6d18c732b95c0a9d35e9f978b4438bba15412284 ......
		 6d18c732b95c0a9d35e9f978b4438bba15412284 has problem. Fixes commit -> aeb073241fe7a2b932e04e20c60e47718332877f
commit 0774a35802e9fc03e7075457e1c0131faf04177f
Author: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
Date:   Thu Jun 1 18:07:55 2017 +0300

    net: bridge: start hello timer only if device is up
    
    
    [ Upstream commit aeb073241fe7a2b932e04e20c60e47718332877f ]
    
    When the transition of NO_STP -> KERNEL_STP was fixed by always calling
    mod_timer in br_stp_start, it introduced a new regression which causes
    the timer to be armed even when the bridge is down, and since we stop
    the timers in its ndo_stop() function, they never get disabled if the
    device is destroyed before it's upped.
    
    To reproduce:
    $ while :; do ip l add br0 type bridge hello_time 100; brctl stp br0 on;
    ip l del br0; done;
    
    CC: Xin Long <lucien.xin@gmail.com>
    CC: Ivan Vecera <cera@cera.cz>
    CC: Sebastian Ott <sebott@linux.vnet.ibm.com>
    Reported-by: Sebastian Ott <sebott@linux.vnet.ibm.com>
    Fixes: 6d18c732b95c ("bridge: start hello_timer when enabling KERNEL_STP in br_stp_start")
    Signed-off-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking b543ccc4f627cea5d9aee6009aca39f3e2d4822e ......
	 orig commit -> 486181bcb3248e2f1977f4e69387a898234a4e1e ......
checking 94c0bf3cbb9969ee79c758e4664be0e2a3ecf937 ......
	 orig commit -> a285860211bf257b0e6d522dac6006794be348af ......
checking f76d54a8882ed61d4686707fff58a84a1664860c ......
	 orig commit -> 7dd7eb9513bd02184d45f000ab69d78cb1fa1531 ......
checking 017fabead5c2aacb36df910bbfbfb1e813517ae3 ......
	 orig commit -> 2423496af35d94a87156b063ea5cedffc10a70a1 ......
		 2423496af35d94a87156b063ea5cedffc10a70a1 has problem. Fixes commit -> e3e86b5119f81e5e2499bea7ea1ebe8ac6aab789
6e80ac5cc992ab6256c3dae87f7e57db15e1a58c
7dd7eb9513bd02184d45f000ab69d78cb1fa1531
commit 406752726afc5295bf77dc6b82ee1c6e626b2d56
Author: David S. Miller <davem@davemloft.net>
Date:   Sun Jun 4 21:41:10 2017 -0400

    ipv6: Fix leak in ipv6_gso_segment().
    
    
    [ Upstream commit e3e86b5119f81e5e2499bea7ea1ebe8ac6aab789 ]
    
    If ip6_find_1stfragopt() fails and we return an error we have to free
    up 'segs' because nobody else is going to.
    
    Fixes: 2423496af35d ("ipv6: Prevent overrun when parsing v6 header options")
    Reported-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 491809d0f8d82f5c5d1b4911b1ae1f7863357784
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Wed May 31 13:15:41 2017 +0100

    ipv6: xfrm: Handle errors reported by xfrm6_find_1stfragopt()
    
    
    [ Upstream commit 6e80ac5cc992ab6256c3dae87f7e57db15e1a58c ]
    
    xfrm6_find_1stfragopt() may now return an error code and we must
    not treat it as a length.
    
    Fixes: 2423496af35d ("ipv6: Prevent overrun when parsing v6 header options")
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Acked-by: Craig Gallek <kraig@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit f76d54a8882ed61d4686707fff58a84a1664860c
Author: David S. Miller <davem@davemloft.net>
Date:   Wed May 17 22:54:11 2017 -0400

    ipv6: Check ip6_find_1stfragopt() return value properly.
    
    
    [ Upstream commit 7dd7eb9513bd02184d45f000ab69d78cb1fa1531 ]
    
    Do not use unsigned variables to see if it returns a negative
    error or not.
    
    Fixes: 2423496af35d ("ipv6: Prevent overrun when parsing v6 header options")
    Reported-by: Julia Lawall <julia.lawall@lip6.fr>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 406752726afc5295bf77dc6b82ee1c6e626b2d56
Author: David S. Miller <davem@davemloft.net>
Date:   Sun Jun 4 21:41:10 2017 -0400

    ipv6: Fix leak in ipv6_gso_segment().
    
    
    [ Upstream commit e3e86b5119f81e5e2499bea7ea1ebe8ac6aab789 ]
    
    If ip6_find_1stfragopt() fails and we return an error we have to free
    up 'segs' because nobody else is going to.
    
    Fixes: 2423496af35d ("ipv6: Prevent overrun when parsing v6 header options")
    Reported-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 491809d0f8d82f5c5d1b4911b1ae1f7863357784
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Wed May 31 13:15:41 2017 +0100

    ipv6: xfrm: Handle errors reported by xfrm6_find_1stfragopt()
    
    
    [ Upstream commit 6e80ac5cc992ab6256c3dae87f7e57db15e1a58c ]
    
    xfrm6_find_1stfragopt() may now return an error code and we must
    not treat it as a length.
    
    Fixes: 2423496af35d ("ipv6: Prevent overrun when parsing v6 header options")
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Acked-by: Craig Gallek <kraig@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 640bfcf232a93bdd446552f5417c52a0ad300e8b ......
	 orig commit -> f6c5775ff0bfa62b072face6bf1d40f659f194b2 ......
checking 7ede5c90fcdd6d33b3507203e3b8e57b025f34b2 ......
	 orig commit -> bafbb9c73241760023d8981191ddd30bb1c6dbac ......
checking ffa551def59c9b0e1747955af6a742443ae152fc ......
	 orig commit -> fdcee2cbb8438702ea1b328fb6e0ac5e9a40c7f8 ......
checking 704e6c6b865113c859e5ce3e1f42cec7b1551b79 ......
	 orig commit -> dbc2b5e9a09e9a6664679a667ff81cff6e5f2641 ......
		 dbc2b5e9a09e9a6664679a667ff81cff6e5f2641 has problem. Fixes commit -> 957d761cf91cdbb175ad7d8f5472336a4d54dbf2
commit f99fb569235fbfbec9ae8f1cc78d73d2aed4c5a3
Author: Alexey Kodanev <alexey.kodanev@oracle.com>
Date:   Mon Feb 5 15:10:35 2018 +0300

    sctp: fix dst refcnt leak in sctp_v6_get_dst()
    
    
    [ Upstream commit 957d761cf91cdbb175ad7d8f5472336a4d54dbf2 ]
    
    When going through the bind address list in sctp_v6_get_dst() and
    the previously found address is better ('matchlen > bmatchlen'),
    the code continues to the next iteration without releasing currently
    held destination.
    
    Fix it by releasing 'bdst' before continue to the next iteration, and
    instead of introducing one more '!IS_ERR(bdst)' check for dst_release(),
    move the already existed one right after ip6_dst_lookup_flow(), i.e. we
    shouldn't proceed further if we get an error for the route lookup.
    
    Fixes: dbc2b5e9a09e ("sctp: fix src address selection if using secondary addresses for ipv6")
    Signed-off-by: Alexey Kodanev <alexey.kodanev@oracle.com>
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 90e3f8a5587147f088df361bee984b524b7c0ac1 ......
	 orig commit -> b451e5d24ba6687c6f0e7319c727a709a1846c06 ......
checking 182abc4e74a1599cc35be6acb3e70fe89823a94b ......
	 orig commit -> 25e2c341e7818a394da9abc403716278ee646014 ......
checking 21b871582375ed711311fbfae37db91f789ac10a ......
	 orig commit -> 2d2ebb3ed0c6acfb014f98e427298673a5d07b82 ......
checking 2ac37098ee3db7777ff61cc5a92487cdb6e642d0 ......
	 orig commit -> 9111e7880ccf419548c7b0887df020b08eadb075 ......
checking d1428ee5407396185aab56ca62d49e89726455e0 ......
	 orig commit -> 83eaddab4378db256d00d295bda6ca997cd13a52 ......
checking 5f67a1663c03a73962fb240cf821338f78981a23 ......
	 orig commit -> 657831ffc38e30092a2d5f03d385d710eb88b09a ......
checking b9978c27454cca3a0ba73577c23c15401d30e833 ......
	 orig commit -> deba804c90642c8ed0f15ac1083663976d578f54 ......
