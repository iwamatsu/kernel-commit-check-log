Check from v4.4.114 to v4.4.115
Commit count: 68
checking f0feeec9c246f6518e168daec66d92a4a6bf0965 ......
checking f84a8d446a16379df5844bc2bd50f0b7431a4718 ......
	 orig commit -> d593574aff0ab846136190b1729c151c736727ec ......
checking ec73ade66474b645f2322d78e80746310e657399 ......
	 orig commit -> 38b1f0fb42f772b8c9aac53593883a18ff5eb9d7 ......
checking d489d1e03ca2a1dc39028726974658714cbb6aca ......
checking 1bbdf7649ffef49ba5cd1d08cf488d1b2e9ffd40 ......
	 orig commit -> cbeef22fd611c4f47c494b821b2b105b8af970bb ......
		 cbeef22fd611c4f47c494b821b2b105b8af970bb has problem. Fixes commit -> 9a513c905bb95bef79d96feb08621c1ec8d8c4bb
commit 131967e82b7735a2000a42ecf0c0a38143427637
Author: Oliver Neukum <oneukum@suse.com>
Date:   Tue Mar 6 15:04:24 2018 +0100

    uas: fix comparison for error code
    
    commit 9a513c905bb95bef79d96feb08621c1ec8d8c4bb upstream.
    
    A typo broke the comparison.
    
    Fixes: cbeef22fd611 ("usb: uas: unconditionally bring back host after reset")
    Signed-off-by: Oliver Neukum <oneukum@suse.com>
    CC: stable@kernel.org
    Acked-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 68b43caf4a4b98256bdb67dba025f858bdf21725 ......
	 orig commit -> ce5bf9a50daf2d9078b505aca1cea22e88ecb94a ......
checking bab3a0dac8966ee9dd5f442098957ff15c7f7216 ......
	 orig commit -> 46fe895e22ab3845515ec06b01eaf1282b342e29 ......
checking 46c651aea6afd5c517fa759d91d730ff5408136c ......
	 orig commit -> ef824501f50846589f02173d73ce3fe6021a9d2a ......
checking a7d225692e2adc3c50ba41c8225301b1a67cb7d3 ......
	 orig commit -> ef54cf0c600fb8f5737fb001a9e357edda1a1de8 ......
checking 95bb041eefc4fb4fd613cd2857ec76ea7e47fda9 ......
	 orig commit -> c7b8f77872c73f69a16528a9eb87afefcccdc18b ......
checking aaea9d3f6c0b28ce8a1a9ce306089471bb1264a8 ......
	 orig commit -> df1cc78a52491f71d8170d513d0f6f114faa1bda ......
checking 9d851e1525852493158f496ee5efc0a79f45da74 ......
	 orig commit -> f0386c083c2ce85284dc0b419d7b89c8e567c09f ......
checking 80a2a5dbdc2622040f6c14b709293757b4fe51de ......
	 orig commit -> d08dd3f3dd2ae351b793fc5b76abdbf0fd317b12 ......
checking 1821d49ab7f313b3eb5fdbb3166ef18d79aa5134 ......
	 orig commit -> 69341bd15018da0a662847e210f9b2380c71e623 ......
checking 46a7fd70437702432ab642cc3455e8cd6b72f43f ......
	 orig commit -> b77992d2df9e47144354d1b25328b180afa33442 ......
checking 380d05ee26dcf075a87bfbf97fdfe33035a8beeb ......
	 orig commit -> b2fc059fa549fe6881d4c1f8d698b0f50bcd16ec ......
checking 8d594f95698a098516c7e94fb92a4764e4dec4d0 ......
	 orig commit -> 04226916d2360f56d57ad00bc48d2d1854d1e0b0 ......
checking d8933268bd5d84b2996ce70e1d8061702395675f ......
	 orig commit -> 727535903bea924c4f73abb202c4b3e85fff0ca4 ......
checking 03c2854d14bc4f55b145a9dc94ecdb03b9a231b3 ......
	 orig commit -> e4717292ddebcfe231651b5aff9fa19ca158d178 ......
checking dfd0feb42fc522a934e8b77fd8c2353f2c25f5af ......
	 orig commit -> 22a6c83777ac7c17d6c63891beeeac24cf5da450 ......
checking 15e1f5cf9bff882d6948c38a6e61780e55d39c16 ......
	 orig commit -> 8677b1ac2db021ab30bb1fa34f1e56ebe0051ec3 ......
checking 51d2967fe5d518cbc17dcbe1db159a6e92eaa615 ......
	 orig commit -> bde5f6bc68db51128f875a756e9082a6c6ff7b4c ......
		 bde5f6bc68db51128f875a756e9082a6c6ff7b4c has problem. Fixes commit -> 13ab183d138f607d885e995d625e58d47678bf97
checking ff8417176a69482e40f30036b4e9eb07360ec759 ......
	 orig commit -> 4ba161a793d5f43757c35feff258d9f20a082940 ......
checking cbfe0c04cef3c379e71d6c1f3fe30aacef1a1ba2 ......
	 orig commit -> 88bc0ede8d35edc969350852894dc864a2dc1859 ......
checking 5e7bd57ace5029df81267976bd83015dd88df1f1 ......
	 orig commit -> 15bfe05c8d6386f1a90e9340d15336e85e32aad6 ......
checking 8de0ae8c8bc37e51e2e46ec13145bc8b3f1efe8f ......
	 orig commit -> bd467e4eababe4c04272c1e646f066db02734c79 ......
checking 17375b2735010a400620ca378e4ccd7faafc74e3 ......
	 orig commit -> 81833de1a46edce9ca20cfe079872ac1c20ef359 ......
checking ebd331bed2c9cff8c9874bce07a9397c5d74df24 ......
	 orig commit -> ae254dac721d44c0bfebe2795df87459e2e88219 ......
checking 21db5da6ba10006722a64be9dc679c460b44b87a ......
	 orig commit -> b872285751c1af010e12d02bce7069e2061a58ca ......
checking 19e1d83bbb79586178f2cde6f5ab3f788433a703 ......
	 orig commit -> 9271d7e509c1bfc0b9a418caec29ec8d1ac38270 ......
checking 12a48b3605b80a3f4c143a83b88e4e922eb4a2e0 ......
	 orig commit -> fb500a7cfee7f2f447d2bbf30cb59629feab6ac1 ......
checking 49f1a164d4310a9586f4dbc142a9fdc001b44434 ......
	 orig commit -> 5b5971df3bc2775107ddad164018a8a8db633b81 ......
		 5b5971df3bc2775107ddad164018a8a8db633b81 has problem. Fixes commit -> c2d2e6738a209f0f9dffa2dc8e7292fc45360d61
commit 4c65e94eb476b8e7d806d7e36ca1f5f789e9804a
Author: Jason Andryuk <jandryuk@gmail.com>
Date:   Wed Feb 28 07:23:23 2018 -0500

    xen-netfront: Fix hang on device removal
    
    commit c2d2e6738a209f0f9dffa2dc8e7292fc45360d61 upstream.
    
    A toolstack may delete the vif frontend and backend xenstore entries
    while xen-netfront is in the removal code path.  In that case, the
    checks for xenbus_read_driver_state would return XenbusStateUnknown, and
    xennet_remove would hang indefinitely.  This hang prevents system
    shutdown.
    
    xennet_remove must be able to handle XenbusStateUnknown, and
    netback_changed must also wake up the wake_queue for that state as well.
    
    Fixes: 5b5971df3bc2 ("xen-netfront: remove warning when unloading module")
    
    Signed-off-by: Jason Andryuk <jandryuk@gmail.com>
    Cc: Eduardo Otubo <otubo@redhat.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking fe7832ffea9ab8c579b4bd94f3529380dbb3f6e6 ......
	 orig commit -> c37c28730bb031cc8a44a130c2555c0f3efbe2d0 ......
checking de3d7e13461c5727128ffaa725d254d2c704ba03 ......
	 orig commit -> b77000ed558daa3bef0899d29bf171b8c9b5e6a8 ......
checking 4870fb97221d3fd8d8868e26aa4e61f78ebb32b2 ......
	 orig commit -> fbbdad5edf0bb59786a51b94a9d006bc8c2da9a2 ......
checking 5acc065c6b3e389fa5520e1d171c79c7c5c701b8 ......
	 orig commit -> 67c8d22a73128ff910e2287567132530abcf5b71 ......
checking 44ef4f4033dc9eac4a9697ea7e0f1577dfd9ad06 ......
	 orig commit -> 8c946b8988acec785bcf67088b6bd0747f36d2d3 ......
checking a50f2e242887ad0b0feb62df79cd05f7943c709e ......
	 orig commit -> d12fb13f23199faa7e536acec1db49068e5a067d ......
checking 206fa7b19cb266575bb7c100723d7c060c1bd886 ......
	 orig commit -> cf21654b40968609779751b34e7923180968fe5b ......
checking 1f9bfbe7016b4a772bb6b47f8209ec76f6fad57d ......
	 orig commit -> 6c4ca1e36cdc1a0a7a84797804b87920ccbebf51 ......
checking 5fb21a653095dfc913eb82868143a95b5366f0c1 ......
	 orig commit -> 0d307935fefa6389eb726c6362351c162c949101 ......
checking 0deb9532cafb37a0775e8e853fca0272eb2bee0f ......
	 orig commit -> 10809bb976648ac58194a629e3d7af99e7400297 ......
checking 77e1eb750f4172f0718a6d770798b0ab9eeeb8d6 ......
	 orig commit -> b200dded0a6974a3b69599832b2203483920ab25 ......
checking 3ee7ae2bb537e54d3f6ce7120c5cc39957bec930 ......
	 orig commit -> a8bfec2930525808c01f038825d1df3904638631 ......
checking 19a2c007214931808cbeae3ceb673233e57ed4f9 ......
	 orig commit -> 0fc5a36dd6b345eb0d251a65c236e53bead3eef7 ......
checking 3bad2ece682151144b014bd18506d44acf6c21e4 ......
	 orig commit -> 3853be2603191829b442b64dac6ae8ba0c027bf9 ......
checking 80d2b5af21d2a29abfd58d378195a446dbc3ae43 ......
	 orig commit -> 9b8ae63798cb97e785a667ff27e43fa6220cb734 ......
checking 3d4df917d67191bca18aec35b9d1065d718fc39c ......
	 orig commit -> 1f4dcb3b213235e642088709a1c54964d23365e9 ......
checking 2b84fd62aa402f83fafb1f5bcc014cc135bdcf69 ......
	 orig commit -> 888f22931478a05bc81ceb7295c626e1292bf0ed ......
checking f42132c9610fa22b8377c4636b2e39664293fd66 ......
	 orig commit -> d822401d1c6898a4a4ee03977b78b8cec402e88a ......
checking 40ac08f609145800e1062b24e712f2e1e673f6e4 ......
	 orig commit -> 539340f37e6d6ed4cd93e8e18c9b2e4eafd4b842 ......
checking 35831adf13e869d1b6eceb923229621d55053c3d ......
	 orig commit -> 97b03136e1b637d7a9d2274c099e44ecf23f1103 ......
checking 3f19b9ea13f49aed67192e768f207b7ecbd2cb1f ......
	 orig commit -> 348c7cf5fcbcb68838255759d4cb45d039af36d2 ......
checking fba245f4c6351b1d25dd4594f0a092bb7a78cf12 ......
	 orig commit -> bb30b8848c85e18ca7e371d0a869e94b3e383bdf ......
		 bb30b8848c85e18ca7e371d0a869e94b3e383bdf has problem. Fixes commit -> a466856e0b7ab269cdf9461886d007e88ff575b0
commit 83231e0aae2c6bca967dbd05b0966908e908a036
Author: Eric Dumazet <edumazet@google.com>
Date:   Sat Apr 7 13:42:36 2018 -0700

    crypto: af_alg - fix possible uninit-value in alg_bind()
    
    commit a466856e0b7ab269cdf9461886d007e88ff575b0 upstream.
    
    syzbot reported :
    
    BUG: KMSAN: uninit-value in alg_bind+0xe3/0xd90 crypto/af_alg.c:162
    
    We need to check addr_len before dereferencing sa (or uaddr)
    
    Fixes: bb30b8848c85 ("crypto: af_alg - whitelist mask and type")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Cc: Stephan Mueller <smueller@chronox.de>
    Cc: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 0b69d7f4b5fc1ac0cf49a21139a1384e6d0c934f ......
	 orig commit -> 9c674e1e2f9e24fa4392167efe343749008338e0 ......
checking 623e5c8ae32b39cc8baea83478695dc624935318 ......
	 orig commit -> b3defb791b26ea0683a93a4f49c77ec45ec96f10 ......
checking 145ebf95fb346528dd276c3e23324609e5f4d3f6 ......
checking 5991ee90a270537a8a04751f0097b82274ebc177 ......
	 orig commit -> 445b69e3b75e42362a5bdc13c8b8f61599e2228a ......
checking faa74a862a9442233bff39a496013a74775fb660 ......
	 orig commit -> f37a8cb84cce18762e8f86a70bd6a49a66ab964c ......
checking 02662601a231f8721930168ce71d84bcfb8d9a96 ......
	 orig commit -> 68fda450a7df51cff9e5a4d4a4d9d0d5f2589153 ......
checking b72ba2a0d82447538c7c977ccb3f2b31b19b7767 ......
	 orig commit -> c366287ebd698ef5e3de300d90cd62ee9ee7373e ......
checking 96d9b2338bed553c37f759127d8d18c857449ceb ......
	 orig commit -> be95a845cc4402272994ce290e3ad928aff06cb9 ......
checking 7dcda40e52ff0712a2d7d5353c1722cb1f994330 ......
	 orig commit -> 7891a87efc7116590eaba57acc3c422487802c6f ......
checking 28c486744e6de4d882a1d853aa63d99fcba4b7a6 ......
	 orig commit -> 290af86629b25ffd1ed6232c4e9107da031705cb ......
		 290af86629b25ffd1ed6232c4e9107da031705cb has problem. Fixes commit -> ede95a63b5e84ddeea6b0c473b36ab8bfd8c6ce3
09584b406742413ac4c8d7e030374d4daa045b69
commit e7260c8fb01681591d19826edc8fe4b36b2ef0bf
Author: Yonghong Song <yhs@fb.com>
Date:   Fri Feb 2 22:37:15 2018 -0800

    bpf: fix selftests/bpf test_kmod.sh failure when CONFIG_BPF_JIT_ALWAYS_ON=y
    
    [ Upstream commit 09584b406742413ac4c8d7e030374d4daa045b69 ]
    
    With CONFIG_BPF_JIT_ALWAYS_ON is defined in the config file,
    tools/testing/selftests/bpf/test_kmod.sh failed like below:
      [root@localhost bpf]# ./test_kmod.sh
      sysctl: setting key "net.core.bpf_jit_enable": Invalid argument
      [ JIT enabled:0 hardened:0 ]
      [  132.175681] test_bpf: #297 BPF_MAXINSNS: Jump, gap, jump, ... FAIL to prog_create err=-524 len=4096
      [  132.458834] test_bpf: Summary: 348 PASSED, 1 FAILED, [340/340 JIT'ed]
      [ JIT enabled:1 hardened:0 ]
      [  133.456025] test_bpf: #297 BPF_MAXINSNS: Jump, gap, jump, ... FAIL to prog_create err=-524 len=4096
      [  133.730935] test_bpf: Summary: 348 PASSED, 1 FAILED, [340/340 JIT'ed]
      [ JIT enabled:1 hardened:1 ]
      [  134.769730] test_bpf: #297 BPF_MAXINSNS: Jump, gap, jump, ... FAIL to prog_create err=-524 len=4096
      [  135.050864] test_bpf: Summary: 348 PASSED, 1 FAILED, [340/340 JIT'ed]
      [ JIT enabled:1 hardened:2 ]
      [  136.442882] test_bpf: #297 BPF_MAXINSNS: Jump, gap, jump, ... FAIL to prog_create err=-524 len=4096
      [  136.821810] test_bpf: Summary: 348 PASSED, 1 FAILED, [340/340 JIT'ed]
      [root@localhost bpf]#
    
    The test_kmod.sh load/remove test_bpf.ko multiple times with different
    settings for sysctl net.core.bpf_jit_{enable,harden}. The failed test #297
    of test_bpf.ko is designed such that JIT always fails.
    
    Commit 290af86629b2 (bpf: introduce BPF_JIT_ALWAYS_ON config)
    introduced the following tightening logic:
        ...
            if (!bpf_prog_is_dev_bound(fp->aux)) {
                    fp = bpf_int_jit_compile(fp);
        #ifdef CONFIG_BPF_JIT_ALWAYS_ON
                    if (!fp->jited) {
                            *err = -ENOTSUPP;
                            return fp;
                    }
        #endif
        ...
    With this logic, Test #297 always gets return value -ENOTSUPP
    when CONFIG_BPF_JIT_ALWAYS_ON is defined, causing the test failure.
    
    This patch fixed the failure by marking Test #297 as expected failure
    when CONFIG_BPF_JIT_ALWAYS_ON is defined.
    
    Fixes: 290af86629b2 (bpf: introduce BPF_JIT_ALWAYS_ON config)
    Signed-off-by: Yonghong Song <yhs@fb.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 361fb0481247bea4da3eb122e685c8b72ef7c8a9 ......
	 orig commit -> 90caccdd8cc0215705f18b92771b449b01e2474a ......
checking 5a802e670c46ee2027ae43ec03501ecdb85d080a ......
	 orig commit -> 84ccac6e7854ebbfb56d2fc6d5bef9be49bb304c ......
checking 1367d854b97493bfb1f3d24cf89ba60cb7f059ea ......
	 orig commit -> c131187db2d3fa2f8bf32fdf4e9a4ef805168467 ......
checking b392225467b8066538dfa200dc925c844b76880b ......
	 orig commit -> ae6650163c66a7eff1acd6eb8b0f752dcfa8eba5 ......
