Check from v4.4.160 to v4.4.161
Commit count: 27
checking b001adea66f0e0a7803adfbf9128a2d7969daa4e ......
checking 3a07d58f20c8e0efd9e5d43ee929c3f5c5f35874 ......
	 orig commit -> c953d63548207a085abcb12a15fefc8a11ffdf0a ......
checking 367222df917632b354d193cc861ba0d7e622654f ......
	 orig commit -> c8291988806407e02a01b4b15b4504eafbcc04e0 ......
checking eee1af4e268e10fecb76bce42a8d7343aeb2a5e6 ......
	 orig commit -> 58152ecbbcc6a0ce7fddd5bf5f6ee535834ece0c ......
checking be288481479ca8c1beba02a7e779ffeaa11f1597 ......
	 orig commit -> 8541b21e781a22dce52a74fef0b9bed00404a1cd ......
checking 352b66932a23fb11f0a7c316361220648bca3c79 ......
	 orig commit -> 72cd43ba64fc172a443410ce01645895850844c8 ......
checking e747775172a2d4dc4dae794f248f9687ba793f54 ......
	 orig commit -> 76f0dcbb5ae1a7c3dbeec13dd98233b8e6b0b32a ......
checking 4666b6e2b27d91e05a5b8459e40e4a05dbc1c7b0 ......
	 orig commit -> 9f5afeae51526b3ad7b7cb21ee8b145ce6ea7a7a ......
		 9f5afeae51526b3ad7b7cb21ee8b145ce6ea7a7a has problem. Fixes commit -> 8541b21e781a22dce52a74fef0b9bed00404a1cd
76f0dcbb5ae1a7c3dbeec13dd98233b8e6b0b32a
commit be288481479ca8c1beba02a7e779ffeaa11f1597
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Sep 14 16:24:09 2018 +0800

    tcp: call tcp_drop() from tcp_data_queue_ofo()
    
    [ Upstream commit 8541b21e781a22dce52a74fef0b9bed00404a1cd ]
    
    In order to be able to give better diagnostics and detect
    malicious traffic, we need to have better sk->sk_drops tracking.
    
    Fixes: 9f5afeae5152 ("tcp: use an RB tree for ooo receive queue")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Soheil Hassas Yeganeh <soheil@google.com>
    Acked-by: Yuchung Cheng <ycheng@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Mao Wenan <maowenan@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e747775172a2d4dc4dae794f248f9687ba793f54
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Sep 14 16:24:07 2018 +0800

    tcp: fix a stale ooo_last_skb after a replace
    
    [ Upstream commit 76f0dcbb5ae1a7c3dbeec13dd98233b8e6b0b32a ]
    
    When skb replaces another one in ooo queue, I forgot to also
    update tp->ooo_last_skb as well, if the replaced skb was the last one
    in the queue.
    
    To fix this, we simply can re-use the code that runs after an insertion,
    trying to merge skbs at the right of current skb.
    
    This not only fixes the bug, but also remove all small skbs that might
    be a subset of the new one.
    
    Example:
    
    We receive segments 2001:3001,  4001:5001
    
    Then we receive 2001:8001 : We should replace 2001:3001 with the big
    skb, but also remove 4001:50001 from the queue to save space.
    
    packetdrill test demonstrating the bug
    
    0.000 socket(..., SOCK_STREAM, IPPROTO_TCP) = 3
    +0 setsockopt(3, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
    +0 bind(3, ..., ...) = 0
    +0 listen(3, 1) = 0
    
    +0 < S 0:0(0) win 32792 <mss 1000,sackOK,nop,nop,nop,wscale 7>
    +0 > S. 0:0(0) ack 1 <mss 1460,nop,nop,sackOK,nop,wscale 7>
    +0.100 < . 1:1(0) ack 1 win 1024
    +0 accept(3, ..., ...) = 4
    
    +0.01 < . 1001:2001(1000) ack 1 win 1024
    +0    > . 1:1(0) ack 1 <nop,nop, sack 1001:2001>
    
    +0.01 < . 1001:3001(2000) ack 1 win 1024
    +0    > . 1:1(0) ack 1 <nop,nop, sack 1001:2001 1001:3001>
    
    Fixes: 9f5afeae5152 ("tcp: use an RB tree for ooo receive queue")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: Yuchung Cheng <ycheng@google.com>
    Cc: Yaogong Wang <wygivan@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Mao Wenan <maowenan@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit be288481479ca8c1beba02a7e779ffeaa11f1597
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Sep 14 16:24:09 2018 +0800

    tcp: call tcp_drop() from tcp_data_queue_ofo()
    
    [ Upstream commit 8541b21e781a22dce52a74fef0b9bed00404a1cd ]
    
    In order to be able to give better diagnostics and detect
    malicious traffic, we need to have better sk->sk_drops tracking.
    
    Fixes: 9f5afeae5152 ("tcp: use an RB tree for ooo receive queue")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Soheil Hassas Yeganeh <soheil@google.com>
    Acked-by: Yuchung Cheng <ycheng@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Mao Wenan <maowenan@huawei.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking ec7055c62714326c56dabcf7757069ac7f276bda ......
	 orig commit -> 532182cd610782db8c18230c2747626562032205 ......
checking c4c84454902516b7648a18d5173304da7dffa9d6 ......
	 orig commit -> 37f31b6ca4311b94d985fb398a72e5399ad57925 ......
checking 38ea605f919c61fc0c3ca65abeaa87ca83f2110e ......
	 orig commit -> 5fe23f262e0548ca7f19fb79f89059a60d087d22 ......
checking b4dd80c33338df403868222045d6427295ff54e5 ......
	 orig commit -> c58a584f05e35d1d4342923cd7aac07d9c3d3d16 ......
checking 0cbf366a69887b623108f0a20f8850331a7ffac8 ......
	 orig commit -> 98b8cd7f75643e0a442d7a4c1cef2c9d53b7e92b ......
checking 023fdb64ee8d171f691a97bffa1d168bef750c7f ......
	 orig commit -> 9ef0f58ed7b4a55da4a64641d538e0d9e46579ac ......
checking 75fe5488b22f10844334c0960b12b2cf5c606028 ......
	 orig commit -> 116d2f7496c51b2e02e8e4ecdd2bdf5fb9d5a641 ......
checking fb751efb29d037ee051f326b6f622881ca0b9a14 ......
	 orig commit -> 513f86d73855ce556ea9522b6bfd79f87356dc3a ......
checking 26f9ef6cebbe7af1893efc7720d3270e0139b9cf ......
	 orig commit -> 8894891446c9380709451b99ab45c5c53adfd2fc ......
checking d70a6783f730d83709ca8173558483dba0741b88 ......
	 orig commit -> f5fad711c06e652f90f581fc7c2caee327c33d31 ......
checking ed8649a4691b52228bbbeca87780e284f2c62456 ......
	 orig commit -> ffe84e01bb1b38c7eb9c6b6da127a6c136d251df ......
checking dce708809daaced8d63eda3447b59951186f3f1a ......
	 orig commit -> 5d07384a666d4b2f781dc056bfeec2c27fbdf383 ......
checking 1516d9fa636f1e6276bf37086d06f9847c25bc59 ......
	 orig commit -> 69e445ab8b66a9f30519842ef18be555d3ee9b51 ......
checking 24479b9d2d03c1fde26dae957b18da8164caf3b0 ......
	 orig commit -> 211710ca74adf790b46ab3867fcce8047b573cd1 ......
checking 5527ae62617e69400435aa2f8b95656ad41626a2 ......
	 orig commit -> 083874549fdfefa629dfa752785e20427dde1511 ......
checking e8dc08a109cb0ceb84bd0f5b9e7f13f054f7fba5 ......
	 orig commit -> 02e425668f5c9deb42787d10001a3b605993ad15 ......
checking 5961c3d0064fdc4326d5390b30ceb50ae5d1459e ......
	 orig commit -> 715bd9d12f84d8f5cc8ad21d888f9bc304a8eb0b ......
		 715bd9d12f84d8f5cc8ad21d888f9bc304a8eb0b has problem. Fixes commit -> 02e425668f5c9deb42787d10001a3b605993ad15
commit e8dc08a109cb0ceb84bd0f5b9e7f13f054f7fba5
Author: Andy Lutomirski <luto@kernel.org>
Date:   Wed Oct 3 16:23:49 2018 -0700

    x86/vdso: Fix vDSO syscall fallback asm constraint regression
    
    commit 02e425668f5c9deb42787d10001a3b605993ad15 upstream.
    
    When I added the missing memory outputs, I failed to update the
    index of the first argument (ebx) on 32-bit builds, which broke the
    fallbacks.  Somehow I must have screwed up my testing or gotten
    lucky.
    
    Add another test to cover gettimeofday() as well.
    
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: stable@vger.kernel.org
    Fixes: 715bd9d12f84 ("x86/vdso: Fix asm constraints on vDSO syscall fallbacks")
    Link: http://lkml.kernel.org/r/21bd45ab04b6d838278fa5bebfa9163eceffa13c.1538608971.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 937b51457b5fd9560a2ddb300b5dfbec87082919 ......
	 orig commit -> 1bafcbf59fed92af58955024452f45430d3898c5 ......
checking c6f1725b9cbd208c469142ebfc5bff476352cc08 ......
	 orig commit -> 58bc4c34d249bf1bc50730a9a209139347cfacfe ......
		 58bc4c34d249bf1bc50730a9a209139347cfacfe has problem. Fixes commit -> e8277b3b52240ec1caad8e6df278863e4bf42eac
commit 0e4d4e0d6ba9e33622bcc2dc157b775fe8c5eb6e
Author: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
Date:   Thu Apr 18 17:50:20 2019 -0700

    mm/vmstat.c: fix /proc/vmstat format for CONFIG_DEBUG_TLBFLUSH=y CONFIG_SMP=n
    
    commit e8277b3b52240ec1caad8e6df278863e4bf42eac upstream.
    
    Commit 58bc4c34d249 ("mm/vmstat.c: skip NR_TLB_REMOTE_FLUSH* properly")
    depends on skipping vmstat entries with empty name introduced in
    7aaf77272358 ("mm: don't show nr_indirectly_reclaimable in
    /proc/vmstat") but reverted in b29940c1abd7 ("mm: rename and change
    semantics of nr_indirectly_reclaimable_bytes").
    
    So skipping no longer works and /proc/vmstat has misformatted lines " 0".
    
    This patch simply shows debug counters "nr_tlb_remote_*" for UP.
    
    Link: http://lkml.kernel.org/r/155481488468.467.4295519102880913454.stgit@buzz
    Fixes: 58bc4c34d249 ("mm/vmstat.c: skip NR_TLB_REMOTE_FLUSH* properly")
    Signed-off-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Acked-by: Vlastimil Babka <vbabka@suse.cz>
    Cc: Roman Gushchin <guro@fb.com>
    Cc: Jann Horn <jannh@google.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
