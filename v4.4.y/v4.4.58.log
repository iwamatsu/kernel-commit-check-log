Check from v4.4.58 to v4.4.59
Commit count: 15
checking 61a4577c9a4419b99e647744923517d47255da35 ......
checking 2bed5987692cb6dc3bf3ce15d8abeb79fdf4ab2a ......
	 orig commit -> 619bd4a71874a8fd78eb6ccf9f272c5e98bcc7b7 ......
checking 7a5202190810dde1467718235c1f650fcf57592a ......
	 orig commit -> 1b53cf9815bb4744958d41f3795d5d5a1d365e2d ......
checking 573341eba9c44b0b2198373cb453bbbb5b3f066a ......
	 orig commit -> 7195ee3120d878259e8d94a5d9f808116f34d5ea ......
checking e441102d8c074d63d44329a59f3278573cdc1477 ......
	 orig commit -> 5fe81fe98123ce41265c65e95d34418d30d005d1 ......
checking 2d9bc3695012f1ef7465f56302c1e60c48dccde8 ......
	 orig commit -> a78ce80d2c9178351b34d78fec805140c29c193e ......
checking 962b95a88574359b081e24815fae6aba92fff98d ......
	 orig commit -> d3805c546b275c8cc7d40f759d029ae92c7175f2 ......
checking c8693666856c0db4a1e07235d98ce0b3bde98d9e ......
	 orig commit -> d614fd58a2834cfe4efa472c33c8f3ce2338b09b ......
		 d614fd58a2834cfe4efa472c33c8f3ce2338b09b has problem. Fixes commit -> 006501e039eec411842bb3150c41358867d320c2
80b3ffce0196ea50068885d085ff981e4b8396f4
commit a6972f8bd2b6af5af070c76b8178f8fa87d44cb9
Author: Maciej W. Rozycki <macro@mips.com>
Date:   Mon Dec 11 22:53:14 2017 +0000

    MIPS: Consistently handle buffer counter with PTRACE_SETREGSET
    
    commit 80b3ffce0196ea50068885d085ff981e4b8396f4 upstream.
    
    Update commit d614fd58a283 ("mips/ptrace: Preserve previous registers
    for short regset write") bug and consistently consume all data supplied
    to `fpr_set_msa' with the ptrace(2) PTRACE_SETREGSET request, such that
    a zero data buffer counter is returned where insufficient data has been
    given to fill a whole number of FP general registers.
    
    In reality this is not going to happen, as the caller is supposed to
    only supply data covering a whole number of registers and it is verified
    in `ptrace_regset' and again asserted in `fpr_set', however structuring
    code such that the presence of trailing partial FP general register data
    causes `fpr_set_msa' to return with a non-zero data buffer counter makes
    it appear that this trailing data will be used if there are subsequent
    writes made to FP registers, which is going to be the case with the FCSR
    once the missing write to that register has been fixed.
    
    Fixes: d614fd58a283 ("mips/ptrace: Preserve previous registers for short regset write")
    Signed-off-by: Maciej W. Rozycki <macro@mips.com>
    Cc: James Hogan <james.hogan@mips.com>
    Cc: Paul Burton <Paul.Burton@mips.com>
    Cc: Alex Smith <alex@alex-smith.me.uk>
    Cc: Dave Martin <Dave.Martin@arm.com>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/17927/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 725679dc78a9a6d1441dedda8816a5b1c02f7174
Author: Maciej W. Rozycki <macro@mips.com>
Date:   Mon Dec 11 22:55:40 2017 +0000

    MIPS: Also verify sizeof `elf_fpreg_t' with PTRACE_SETREGSET
    
    commit 006501e039eec411842bb3150c41358867d320c2 upstream.
    
    Complement commit d614fd58a283 ("mips/ptrace: Preserve previous
    registers for short regset write") and like with the PTRACE_GETREGSET
    ptrace(2) request also apply a BUILD_BUG_ON check for the size of the
    `elf_fpreg_t' type in the PTRACE_SETREGSET request handler.
    
    Signed-off-by: Maciej W. Rozycki <macro@mips.com>
    Fixes: d614fd58a283 ("mips/ptrace: Preserve previous registers for short regset write")
    Cc: James Hogan <james.hogan@mips.com>
    Cc: Paul Burton <Paul.Burton@mips.com>
    Cc: Alex Smith <alex@alex-smith.me.uk>
    Cc: Dave Martin <Dave.Martin@arm.com>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/17929/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a6972f8bd2b6af5af070c76b8178f8fa87d44cb9
Author: Maciej W. Rozycki <macro@mips.com>
Date:   Mon Dec 11 22:53:14 2017 +0000

    MIPS: Consistently handle buffer counter with PTRACE_SETREGSET
    
    commit 80b3ffce0196ea50068885d085ff981e4b8396f4 upstream.
    
    Update commit d614fd58a283 ("mips/ptrace: Preserve previous registers
    for short regset write") bug and consistently consume all data supplied
    to `fpr_set_msa' with the ptrace(2) PTRACE_SETREGSET request, such that
    a zero data buffer counter is returned where insufficient data has been
    given to fill a whole number of FP general registers.
    
    In reality this is not going to happen, as the caller is supposed to
    only supply data covering a whole number of registers and it is verified
    in `ptrace_regset' and again asserted in `fpr_set', however structuring
    code such that the presence of trailing partial FP general register data
    causes `fpr_set_msa' to return with a non-zero data buffer counter makes
    it appear that this trailing data will be used if there are subsequent
    writes made to FP registers, which is going to be the case with the FCSR
    once the missing write to that register has been fixed.
    
    Fixes: d614fd58a283 ("mips/ptrace: Preserve previous registers for short regset write")
    Signed-off-by: Maciej W. Rozycki <macro@mips.com>
    Cc: James Hogan <james.hogan@mips.com>
    Cc: Paul Burton <Paul.Burton@mips.com>
    Cc: Alex Smith <alex@alex-smith.me.uk>
    Cc: Dave Martin <Dave.Martin@arm.com>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/17927/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking e1dc8904b33b8c01f22d904fed4cb5f2060f5da3 ......
	 orig commit -> 502585c7555083d4a949c08350306b9ec196779e ......
checking 6e174bbd0631865acc193804fa4043852f3198c5 ......
	 orig commit -> fb411b837b587a32046dc4f369acb93a10b1def8 ......
checking 800791e7e0fd9835be2f55c55147c379888b7442 ......
	 orig commit -> a6566710adaa4a7dd5e0d99820ff9c9c30ee5951 ......
checking 927d04793f8a587532a5c26057bcdcb33bc8f5ba ......
	 orig commit -> fc8653228c8588a120f6b5dad6983b7b61ff669e ......
checking 22c9e7c092f63335ba7a7301e0e0b4c4ebed53a8 ......
	 orig commit -> f843ee6dd019bcece3e74e76ad9df0155655d0df ......
checking cce7e56dd73f75fef0a7f594fb129285a660fec0 ......
	 orig commit -> 677e806da4d916052585301785d847c3b3e6186a ......
checking a9a76a3e318ea559365210916378380109199121 ......
	 orig commit -> c282222a45cb9503cbfbebfdb60491f06ae84b49 ......
