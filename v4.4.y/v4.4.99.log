Check from v4.4.99 to v4.4.100
Commit count: 61
checking 26d6298789e695c9f627ce49a7bbd2286405798a ......
checking f119ff8e5b6b9123ce8f22834b8d0eb3fab45d72 ......
	 orig commit -> 74d471b598444b7f2d964930f7234779c80960a0 ......
checking 8b36209e93df92903f2d37229abc9e730668a6a2 ......
	 orig commit -> 19a565d9af6e0d828bd0d521d3bafd5017f4ce52 ......
checking 5cd938508c815b684f033c291d59158e2576adc1 ......
	 orig commit -> 771394a54148f18926ca86414e51c69eda27d0cd ......
checking 302dd596822ae3a276f7bdaf5c8e065fe8cfc570 ......
	 orig commit -> a0fea6027f19c62727315aba1a7fae75a9caa842 ......
checking 965003b311e0ed764eb6c0d6f86fe14a57d43286 ......
	 orig commit -> 2ef47001b3ee3ded579b7532ebdcf8680e4d8c54 ......
checking 834a5d880a54008e62ba501785337b7f51c43b39 ......
	 orig commit -> feb0869d90e51ce8b6fd8a46588465b1b5a26d09 ......
checking 16e7973f8e47235092abad2d2632edefc64ff03f ......
	 orig commit -> 1786dbf3702e33ce3afd2d3dbe630bd04b1d2e58 ......
checking f5e303d54ac2d739663643f52af4972f8955734d ......
checking d9c8d4adb5a7466cf3000c3c7d7136be5376cf22 ......
checking d2d72c0ee4c90769f43066b89b5831209af37bab ......
	 orig commit -> 9799270affc53414da96e77e454a5616b39cdab0 ......
checking 9a8ef143951f16d37194efcf8d5ba1406be42e7d ......
	 orig commit -> e89ef66d7682f031f026eee6bba03c8c2248d2a9 ......
checking 034347aca034d8c2edd54ed8f6c67753ab2741be ......
	 orig commit -> d9b5b658210f28ed9f70c757d553e679d76e2986 ......
checking a904ebe92a05dd86517b93bad062076e38890788 ......
	 orig commit -> 8f235d1a3eb7198affe7cadf676a10afb8a46a1a ......
checking 7f5eb098ef9590db1998b827a38729daf9d35731 ......
	 orig commit -> 08889582b8aa0bbc01a1e5a0033b9f98d2e11caa ......
checking b15877443a936cb9dd2c58c8a7acf451c7be0fdc ......
	 orig commit -> 502c80744fcac6b16f28699469c70db499fe2f69 ......
checking ade72053f4520f41c8f56b244162f81b37aa898e ......
	 orig commit -> 1fe954b2097bb907b4578e6a74e4c1d23785a601 ......
checking b6e7fb0be1e5aa7d00484bd3da7a1b368d693e41 ......
	 orig commit -> 2bf1a87b903bd81b1448a1cef73de59fb6c4d340 ......
checking 12ec51aaafe39bb2b7698a1a79ee60aaa46a0601 ......
	 orig commit -> 3f0d646b720d541309b11e190db58086f446f41e ......
checking 9d51db4caff961763f49577962730b2f2be18436 ......
	 orig commit -> f7f37e7ff2b9b7eff7fbd035569cab35896869a3 ......
checking f12976ce82cd5ca2a95eb65b891412014a900398 ......
	 orig commit -> 126db13fa0e6d05c9f94e0125f61e773bd5ab079 ......
checking 865fe71c0a060ff8e0d79e1738fea45d5cf750f9 ......
	 orig commit -> 0cc878d678444392ca2a31350f89f489593ef5bb ......
checking e2d12bdaed6b7cee739583490325ed7a236a82d9 ......
	 orig commit -> 28f1f9b26cee161ddd3985b3eb78e3ffada08dda ......
		 28f1f9b26cee161ddd3985b3eb78e3ffada08dda has problem. Fixes commit -> fa16b69f1299004b60b625f181143500a246e5cb
checking b1e8e6d4c06547ad6f1864eefef70ce8e6dbb463 ......
	 orig commit -> 4b0ea93f250afc6c1128e201b0a8a115ae613e47 ......
checking 3e899991b99e0948b1922645945ce67edf758bfe ......
	 orig commit -> 0eb3fba8c68275f0122f65f7316efaaf86448016 ......
checking d6f21ea251182bfee9aad94eed8e242dcdd54d79 ......
	 orig commit -> cc21942bce652d1a92dae85b785378256e1df1f7 ......
checking fe21a3d688196522166686d628e2d8b3e22626e1 ......
	 orig commit -> 874e1f6fad9a5184b67f4cee37c1335cd2cc5677 ......
checking 3b985d39ed4f1a6953c83b62221d2e7cf3509f31 ......
	 orig commit -> ed3c177d960bb5881b945ca6f784868126bb90db ......
checking 51abb2a73f16e884a5bf284acb6bd59d72e054a5 ......
	 orig commit -> e0165f20447c8ca1d367725ee94d8ec9f38ca275 ......
checking 8d8723c8c1879c3233f85c855922db22a965e597 ......
	 orig commit -> e6c6acc0e0223ddaf867628d420ee196349c6fae ......
checking 44eb947094c4c0bf6fd805127a72f20662f6bd8b ......
	 orig commit -> 6c9231f604c2575be24c96d38deb70f145172f92 ......
checking a7e7d319cc963e6d1701490be9a5d5b938e2fd00 ......
	 orig commit -> 104450eb08ca662e6b1d02da11aca9598e978f3e ......
checking 18477baf599e5d2bb98a67e720054bec1844ff91 ......
	 orig commit -> 6b3b3bdb83b4ad51252d21bb13596db879e51850 ......
checking fdc1e9d553e1e4556b0697d3a65aab7091058db6 ......
	 orig commit -> 401579c22ccbcb54244494069973e64b1fe980d2 ......
checking 0c098158785b5c8091c0bae3aa505060414076cc ......
	 orig commit -> 4e768e7645ec4ffa92ee163643777b261ae97142 ......
checking 469e75ddff14da449a090e0baffcbb4dfc0ac963 ......
	 orig commit -> ab3dabb3e8cf077850f20610f73a0def1fed10cb ......
checking bb848b61967f922410421a0c606cded8974dc20d ......
	 orig commit -> 76ed5a8f47476e4984cc8c0c1bc4cee62650f7fd ......
checking ba83011a470cc1246d24a41ca2fe6047799f27e7 ......
	 orig commit -> 9474933caf21a4cb5147223dca1551f527aaac36 ......
		 9474933caf21a4cb5147223dca1551f527aaac36 has problem. Fixes commit -> 888f22931478a05bc81ceb7295c626e1292bf0ed
commit 2b84fd62aa402f83fafb1f5bcc014cc135bdcf69
Author: Lyude Paul <lyude@redhat.com>
Date:   Tue Dec 12 14:31:30 2017 -0500

    igb: Free IRQs when device is hotplugged
    
    commit 888f22931478a05bc81ceb7295c626e1292bf0ed upstream.
    
    Recently I got a Caldigit TS3 Thunderbolt 3 dock, and noticed that upon
    hotplugging my kernel would immediately crash due to igb:
    
    [  680.825801] kernel BUG at drivers/pci/msi.c:352!
    [  680.828388] invalid opcode: 0000 [#1] SMP
    [  680.829194] Modules linked in: igb(O) thunderbolt i2c_algo_bit joydev vfat fat btusb btrtl btbcm btintel bluetooth ecdh_generic hp_wmi sparse_keymap rfkill wmi_bmof iTCO_wdt intel_rapl x86_pkg_temp_thermal coretemp crc32_pclmul snd_pcm rtsx_pci_ms mei_me snd_timer memstick snd pcspkr mei soundcore i2c_i801 tpm_tis psmouse shpchp wmi tpm_tis_core tpm video hp_wireless acpi_pad rtsx_pci_sdmmc mmc_core crc32c_intel serio_raw rtsx_pci mfd_core xhci_pci xhci_hcd i2c_hid i2c_core [last unloaded: igb]
    [  680.831085] CPU: 1 PID: 78 Comm: kworker/u16:1 Tainted: G           O     4.15.0-rc3Lyude-Test+ #6
    [  680.831596] Hardware name: HP HP ZBook Studio G4/826B, BIOS P71 Ver. 01.03 06/09/2017
    [  680.832168] Workqueue: kacpi_hotplug acpi_hotplug_work_fn
    [  680.832687] RIP: 0010:free_msi_irqs+0x180/0x1b0
    [  680.833271] RSP: 0018:ffffc9000030fbf0 EFLAGS: 00010286
    [  680.833761] RAX: ffff8803405f9c00 RBX: ffff88033e3d2e40 RCX: 000000000000002c
    [  680.834278] RDX: 0000000000000000 RSI: 00000000000000ac RDI: ffff880340be2178
    [  680.834832] RBP: 0000000000000000 R08: ffff880340be1ff0 R09: ffff8803405f9c00
    [  680.835342] R10: 0000000000000000 R11: 0000000000000040 R12: ffff88033d63a298
    [  680.835822] R13: ffff88033d63a000 R14: 0000000000000060 R15: ffff880341959000
    [  680.836332] FS:  0000000000000000(0000) GS:ffff88034f440000(0000) knlGS:0000000000000000
    [  680.836817] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [  680.837360] CR2: 000055e64044afdf CR3: 0000000001c09002 CR4: 00000000003606e0
    [  680.837954] Call Trace:
    [  680.838853]  pci_disable_msix+0xce/0xf0
    [  680.839616]  igb_reset_interrupt_capability+0x5d/0x60 [igb]
    [  680.840278]  igb_remove+0x9d/0x110 [igb]
    [  680.840764]  pci_device_remove+0x36/0xb0
    [  680.841279]  device_release_driver_internal+0x157/0x220
    [  680.841739]  pci_stop_bus_device+0x7d/0xa0
    [  680.842255]  pci_stop_bus_device+0x2b/0xa0
    [  680.842722]  pci_stop_bus_device+0x3d/0xa0
    [  680.843189]  pci_stop_and_remove_bus_device+0xe/0x20
    [  680.843627]  trim_stale_devices+0xf3/0x140
    [  680.844086]  trim_stale_devices+0x94/0x140
    [  680.844532]  trim_stale_devices+0xa6/0x140
    [  680.845031]  ? get_slot_status+0x90/0xc0
    [  680.845536]  acpiphp_check_bridge.part.5+0xfe/0x140
    [  680.846021]  acpiphp_hotplug_notify+0x175/0x200
    [  680.846581]  ? free_bridge+0x100/0x100
    [  680.847113]  acpi_device_hotplug+0x8a/0x490
    [  680.847535]  acpi_hotplug_work_fn+0x1a/0x30
    [  680.848076]  process_one_work+0x182/0x3a0
    [  680.848543]  worker_thread+0x2e/0x380
    [  680.848963]  ? process_one_work+0x3a0/0x3a0
    [  680.849373]  kthread+0x111/0x130
    [  680.849776]  ? kthread_create_worker_on_cpu+0x50/0x50
    [  680.850188]  ret_from_fork+0x1f/0x30
    [  680.850601] Code: 43 14 85 c0 0f 84 d5 fe ff ff 31 ed eb 0f 83 c5 01 39 6b 14 0f 86 c5 fe ff ff 8b 7b 10 01 ef e8 b7 e4 d2 ff 48 83 78 70 00 74 e3 <0f> 0b 49 8d b5 a0 00 00 00 e8 62 6f d3 ff e9 c7 fe ff ff 48 8b
    [  680.851497] RIP: free_msi_irqs+0x180/0x1b0 RSP: ffffc9000030fbf0
    
    As it turns out, normally the freeing of IRQs that would fix this is called
    inside of the scope of __igb_close(). However, since the device is
    already gone by the point we try to unregister the netdevice from the
    driver due to a hotplug we end up seeing that the netif isn't present
    and thus, forget to free any of the device IRQs.
    
    So: make sure that if we're in the process of dismantling the netdev, we
    always allow __igb_close() to be called so that IRQs may be freed
    normally. Additionally, only allow igb_close() to be called from
    __igb_close() if it hasn't already been called for the given adapter.
    
    Signed-off-by: Lyude Paul <lyude@redhat.com>
    Fixes: 9474933caf21 ("igb: close/suspend race in netif_device_detach")
    Cc: Todd Fujinaka <todd.fujinaka@intel.com>
    Cc: Stephen Hemminger <stephen@networkplumber.org>
    Tested-by: Aaron Brown <aaron.f.brown@intel.com>
    Signed-off-by: Jeff Kirsher <jeffrey.t.kirsher@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 559a208028387ffb230f502f8137c278b311803b ......
	 orig commit -> 182785335447957409282ca745aa5bc3968facee ......
	 orig commit -> 2a3cdead8b408351fa1e3079b220fa331480ffbc ......
checking 7878dca7ca24f7186cbf2e4635ad74fee0d2ce7f ......
	 orig commit -> 1ae0d5af347df224a6e76334683f13a96d915a44 ......
checking b9ea0af4793b4fce9be0f07dd0cf9ea7c94c1049 ......
	 orig commit -> 62989cebd367a1aae1e009e1a5b1ec046a4c8fdc ......
checking 11cb9dedb2e6386467ac9c958c3d8cb95738e16e ......
	 orig commit -> 2a736e0585e585c2566b5119af8381910a170e44 ......
checking 2066882df7491631f16f93dc7da75e9f4497b994 ......
	 orig commit -> 7bc7ab1e63dfe004931502f90ce7020e375623da ......
checking 4fd669feacd371d39b534b6f16414bf377cf0d6e ......
	 orig commit -> d97556c8012015901a3ce77f46960078139cd79d ......
checking 955840ea50355cdd400683b1ee5c3ac0017cc160 ......
	 orig commit -> 6e613ebf4405fc09e2a8c16ed193b47f80a3cbed ......
checking 4a23041fa5335908acb5a4fef62c1aedfe8ac0b1 ......
	 orig commit -> 1aa09df0854efe16b7a80358a18f0a0bebafd246 ......
checking 84a97ea8b7b166f7f80df6a8f794357ccd729888 ......
	 orig commit -> f62280efe8934a1275fd148ef302d1afec8cd3df ......
checking 62641014202e6681f488ffa72c2956dd97faa0f8 ......
	 orig commit -> 2f3fc1e6200309ccf87f61dea56e57e563c4f800 ......
checking 2bb04f1ff63db7e331179483c1f79d9d9ac30342 ......
	 orig commit -> 9fe172b9be532acc23e35ba693700383ab775e66 ......
checking 8d9142ff444e789d8ac34db1db5214a043484f86 ......
	 orig commit -> a9df21e34b422f79d9a9fa5c3eff8c2a53491be6 ......
checking ec4f8a71c0fc3c2ad0c40e01abcaf12631dd9ce2 ......
	 orig commit -> fd865802c66bc451dc515ed89360f84376ce1a56 ......
checking 977784638f762db11674e96c311eeb41da90ab5c ......
checking e455048c7ae95633c8778a0282d1ee86f78c5349 ......
	 orig commit -> 7fd078337201cf7468f53c3d9ef81ff78cb6df3b ......
checking caeeef8438c30e7d0e43293fcb7beb9f953bb2a9 ......
	 orig commit -> 2cb80187ba065d7decad7c6614e35e07aec8a974 ......
checking 46bdabbca02ebabd292d0ea3f610aa54e53f0e25 ......
	 orig commit -> df80cd9b28b9ebaa284a41df611dbf3a2d05ca74 ......
checking 11e8e55be18cd39c3d54674362aa18695b243e22 ......
	 orig commit -> 089bc0143f489bd3a4578bdff5f4ca68fb26f341 ......
checking 49630dd2e10a3b2fee0cec19feb63f08453b876f ......
	 orig commit -> 0d0e57697f162da4aa218b5feafe614fb666db07 ......
checking 07e3aff243cdcb70d1e81e515aea553df3080f43 ......
	 orig commit -> c8401dda2f0a00cd25c0af6a95ed50e478d25de4 ......
		 c8401dda2f0a00cd25c0af6a95ed50e478d25de4 has problem. Fixes commit -> 5cc244a20b86090c087073c124284381cdf47234
commit 43473a6f6734e83ff5d458bedfe2e88b51d161e9
Author: Alexander Popov <alex.popov@linux.com>
Date:   Mon Jan 21 15:48:40 2019 +0300

    KVM: x86: Fix single-step debugging
    
    commit 5cc244a20b86090c087073c124284381cdf47234 upstream.
    
    The single-step debugging of KVM guests on x86 is broken: if we run
    gdb 'stepi' command at the breakpoint when the guest interrupts are
    enabled, RIP always jumps to native_apic_mem_write(). Then other
    nasty effects follow.
    
    Long investigation showed that on Jun 7, 2017 the
    commit c8401dda2f0a00cd25c0 ("KVM: x86: fix singlestepping over syscall")
    introduced the kvm_run.debug corruption: kvm_vcpu_do_singlestep() can
    be called without X86_EFLAGS_TF set.
    
    Let's fix it. Please consider that for -stable.
    
    Signed-off-by: Alexander Popov <alex.popov@linux.com>
    Cc: stable@vger.kernel.org
    Fixes: c8401dda2f0a00cd25c0 ("KVM: x86: fix singlestepping over syscall")
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking ceb5c560e2e46266cb8fabb0de5a4975e2a0e354 ......
	 orig commit -> 06bd3c36a733ac27962fea7d6f47168841376824 ......
checking 0a418e57717d2d33275e9340c726ded671be7698 ......
	 orig commit -> eb0c19942288569e0ae492476534d5a485fb8ab4 ......
checking c344019c48a92e559b7f910e53e0c6f9018680fb ......
	 orig commit -> 58fd55e838276a0c13d1dc7c387f90f25063cbf3 ......
