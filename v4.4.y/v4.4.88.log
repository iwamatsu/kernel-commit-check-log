Check from v4.4.88 to v4.4.89
Commit count: 66
checking 10def3a6779924f7bb130200b8b940caf2914111 ......
checking ed1bf4397d2219d4b9ec2d5517416ba102186650 ......
	 orig commit -> edb096e00724f02db5f6ec7900f3bbd465c6c76f ......
checking a069d0a43de42e009ec09e76855a1780fbf20938 ......
	 orig commit -> 9276717b9e297a62d1151a43d1cd286213f68eb7 ......
checking f522051a84e566b5552b3ba6127184d9cba54120 ......
	 orig commit -> 9baf30972b5568d8b5bc8b3c46a6ec5b58100463 ......
checking a6c5e7a0cd0184d3cf4fe29b598931329b237569 ......
	 orig commit -> 77fa100f27475d08a569b9d51c17722130f089e7 ......
checking d9c6a28a6a1cf0e0854c8175386898288f7f3ddf ......
	 orig commit -> a8394090a9129b40f9d90dcb7f4a49d60c727ca6 ......
checking 0471f58e18e60dcdbd89f882dc0fa6370b94cd48 ......
	 orig commit -> 69daf03adef5f7bc13e0ac86b4b8007df1767aab ......
checking 093457f2bd329a2fdb253a68c4fffebb0e3d7786 ......
	 orig commit -> 4b758df21ee7081ab41448d21d60367efaa625b3 ......
checking 5025da3b532bc5a16ca89670353aa1c89f33be29 ......
	 orig commit -> 175206cf9ab63161dec74d9cd7f9992e062491f5 ......
checking 4931578fbeb525e717a7aa96f83f4d85cf48d0b2 ......
	 orig commit -> 7e09f7d5c790278ab98e5f2c22307ebe8ad6e8ba ......
checking 04affe4e117169e75c4ff1f12dd30d74c9a629fc ......
	 orig commit -> 9c7ba1d7634cef490b85bc64c4091ff004821bfd ......
checking 7498bd6058405ba17df33be06046fefdb419fe00 ......
	 orig commit -> 48b79a14505349a29b3e20f03619ada9b33c4b17 ......
checking 81306fc3dbb53b11f9c42d31403df3655d50f935 ......
	 orig commit -> 1ee55a8f7f6b7ca4c0c59e0b4b4e3584a085c2d3 ......
checking d28e96be7c6a2a4310c83c13054475836f6ffbae ......
	 orig commit -> 170b3b1050e28d1ba0700e262f0899ffa4fccc52 ......
checking 753154fcfefe0d8be9c68096e7709326b9ede349 ......
	 orig commit -> 46320a6acc4fb58f04bcf78c4c942cc43b20f986 ......
checking d8663aa2778965c75b5e75c7948b44f5de601a88 ......
	 orig commit -> e6f77540c067b48dee10f1e33678415bfcc89017 ......
		 e6f77540c067b48dee10f1e33678415bfcc89017 has problem. Fixes commit -> 5cbdae10bf11f96e30b4d14de7b08c8b490e903c
checking 72896ca30a7f6ceb5238714d5761e4ad4521ccc5 ......
	 orig commit -> 3e0097499839e0fe3af380410eababe5a47c4cf9 ......
checking c04996ad58eefbef5d3aafd340ce64aa54661425 ......
	 orig commit -> 4759df905a474d245752c9dc94288e779b8734dd ......
		 4759df905a474d245752c9dc94288e779b8734dd has problem. Fixes commit -> 587c3c9f286cee5c9cac38d28c8ae1875f4ec85b
commit 62b54cc63a1c5b0de07a52a8ac7ac1bfe66d10f2
Author: Ben Hutchings <ben.hutchings@codethink.co.uk>
Date:   Sun Oct 15 18:16:33 2017 +0100

    scsi: sg: Re-fix off by one in sg_fill_request_table()
    
    commit 587c3c9f286cee5c9cac38d28c8ae1875f4ec85b upstream.
    
    Commit 109bade9c625 ("scsi: sg: use standard lists for sg_requests")
    introduced an off-by-one error in sg_ioctl(), which was fixed by commit
    bd46fc406b30 ("scsi: sg: off by one in sg_ioctl()").
    
    Unfortunately commit 4759df905a47 ("scsi: sg: factor out
    sg_fill_request_table()") moved that code, and reintroduced the
    bug (perhaps due to a botched rebase).  Fix it again.
    
    Fixes: 4759df905a47 ("scsi: sg: factor out sg_fill_request_table()")
    Signed-off-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Acked-by: Douglas Gilbert <dgilbert@interlog.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking f0cd701d475038d3078867cad576f6530c065120 ......
	 orig commit -> bd46fc406b30d1db1aff8dabaff8d18bb423fdcf ......
checking 3682e0c61ffb4fccd1a86bd2af3cbdd23723b9ed ......
	 orig commit -> 109bade9c625c89bb5ea753aaa1a0a97e6fbb548 ......
		 109bade9c625c89bb5ea753aaa1a0a97e6fbb548 has problem. Fixes commit -> bd46fc406b30d1db1aff8dabaff8d18bb423fdcf
commit f0cd701d475038d3078867cad576f6530c065120
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Aug 17 10:09:54 2017 +0300

    scsi: sg: off by one in sg_ioctl()
    
    commit bd46fc406b30d1db1aff8dabaff8d18bb423fdcf upstream.
    
    If "val" is SG_MAX_QUEUE then we are one element beyond the end of the
    "rinfo" array so the > should be >=.
    
    Fixes: 109bade9c625 ("scsi: sg: use standard lists for sg_requests")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Douglas Gilbert <dgilbert@interlog.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 6b498ad144728628c541dbb703d14142c10311a4 ......
	 orig commit -> 136e57bf43dc4babbfb8783abbf707d483cacbe3 ......
checking cf22210c66ca1a252633b8ad9055b082727dff67 ......
	 orig commit -> 0208eeaa650c5c866a3242201678a19e6dc4a14e ......
checking b4730f456e21ee98cec3e19837ca3e32fe689c65 ......
	 orig commit -> eb3fe263a48b0d27b229c213929c4cb3b1b39a0f ......
checking d9b8f1ccbb8c7acddbe2e2fe0dfff51b8c75d361 ......
	 orig commit -> 91b3d9f0069c8307d0b3a4c6843b65a439183318 ......
checking 4dd6cbbc2191587942c0bcd4630b191a1064487c ......
	 orig commit -> 5d4a3d0a2ff23799b956e5962b886287614e7fad ......
checking 1e6c640a75d09064a27d7e08524c0b2d8b17190c ......
	 orig commit -> fdb7cee3b9e3c561502e58137a837341f10cbf8b ......
checking 7194822422f9ebada58f7fa7db824ee97b949fe2 ......
	 orig commit -> 12c3e5754c8022a4f2fd1e9f00d19e99ee0d3cc1 ......
checking d0fbe221b8f13192afffb5fd44024dbfdfb8f656 ......
	 orig commit -> 1a5d999ebfc7bfe28deb48931bb57faa8e4102b6 ......
checking 1a847369487c31b405e3bda614a36612250905ac ......
	 orig commit -> 9fe5d2b2fd30aa8c7827ec62cbbe6d30df4fe3e3 ......
checking 52661717ee664d349ba789cac386e8b046f8ed79 ......
	 orig commit -> 975171b4461be296a35e83ebd748946b81cf0635 ......
checking d0c02c6f3e8589f9276f92b1633629721c13ad20 ......
	 orig commit -> a099b7b1fc1f0418ab8d79ecf98153e1e134656e ......
checking cfc49967434db15f202204eae4306b2a78d9ea03 ......
	 orig commit -> 71b8e45da51a7b64a23378221c0a5868bd79da4f ......
checking 19978c50db689ab0691080a65d4a635aebd0f6a7 ......
	 orig commit -> 5fbd545cd3fd311ea1d6e8be4cedddd0ee5684c7 ......
checking 0bcaf5178fe6cc3169d4ef47e92e84e938bf7b3c ......
	 orig commit -> 7277cc67b3916eed47558c64f9c9c0de00a35cda ......
checking f05dafbd779112307e8dfe0ed8226910d29f0020 ......
	 orig commit -> e8a27f836f165c26f867ece7f31eb5c811692319 ......
checking 30e81e7fe197dd14d5b7653c75140ea75fe5c3d4 ......
	 orig commit -> 4ddd56b003f251091a67c15ae3fe4a5c5c5e390a ......
checking a918d32583e0d4ed9d9aac49988c5dfa384f3ede ......
	 orig commit -> f9effe925039cf54489b5c04e0d40073bb3a123d ......
checking c53f01698f68a3d6880c27e24a4e98ca6cd9feb9 ......
	 orig commit -> 95f1fda47c9d8738f858c3861add7bf0a36a7c0b ......
checking cd46241eb03ca90f58553ad15e484c4f86d6fd64 ......
	 orig commit -> b0a5a9589decd07db755d6a8d9c0910d96ff7992 ......
checking 5e9d28b003b0312bc1c17994edb84bbb9a4a060a ......
checking 9354f4d0beb05f17a9c06315b8c00b25d6c97095 ......
	 orig commit -> 304bfe473e70523e591fb1c9223289d355e0bdcb ......
checking f4d77fc754f2be1db6815cd8ccf26c9c0514a96f ......
	 orig commit -> 3444c4eb534c20e44f0d6670b34263efaf8b531f ......
checking 322bf697bdc4ed16c9ec89d0253c3a01023e51f4 ......
	 orig commit -> 1a41b3b441508ae63b1a9ec699ec94065739eb60 ......
checking a83ffb581f2675250d0127d686a918446975b3e2 ......
	 orig commit -> aabf5cf02e22ebc4e541adf835910f388b6c3e65 ......
checking 6acd1d26c32ea6e9d38f4839ba921cc3780bb205 ......
	 orig commit -> 15560a58bfd4ff82cdd16b2270d4ef9b06d2cc4d ......
checking b6c818d813c66ac86818f0548cf27e1001c0e0c0 ......
	 orig commit -> e78bf0dc4789bdea1453595ae89e8db65918e22e ......
checking bf592dde1262c7c3a65d879d09272902d3fa7c6b ......
	 orig commit -> 697c5d8a36768b36729533fb44622b35d56d6ad0 ......
checking c13c5c7e88d79cae57ac25c6a3946cb17418ae3f ......
	 orig commit -> 8a5a90a2a477b86a3dc2eaa5a706db9bfdd647ca ......
checking 077933dcd5cabd45e82aceab45dec772ebecbd09 ......
	 orig commit -> 065ea0a7afd64d6cf3464bdd1d8cd227527e2045 ......
checking e1e6620f042cd7a6b1846335c46ca7b9897bc823 ......
	 orig commit -> 979990c6284814617d8f2179d197f72ff62b5d85 ......
		 979990c6284814617d8f2179d197f72ff62b5d85 has problem. Fixes commit -> 8a5a90a2a477b86a3dc2eaa5a706db9bfdd647ca
commit c13c5c7e88d79cae57ac25c6a3946cb17418ae3f
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Wed Aug 2 13:11:39 2017 +0200

    tty: fix __tty_insert_flip_char regression
    
    commit 8a5a90a2a477b86a3dc2eaa5a706db9bfdd647ca upstream.
    
    Sergey noticed a small but fatal mistake in __tty_insert_flip_char,
    leading to an oops in an interrupt handler when using any serial
    port.
    
    The problem is that I accidentally took the tty_buffer pointer
    before calling __tty_buffer_request_room(), which replaces the
    buffer. This moves the pointer lookup to the right place after
    allocating the new buffer space.
    
    Fixes: 979990c62848 ("tty: improve tty_insert_flip_char() fast path")
    Reported-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Tested-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking c576160ff3f31c1dd9536188520a41fdf8b5fc95 ......
	 orig commit -> 4855e4a7f29d6d10b0b9c84e189c770c9a94e91e ......
checking 6ea627b20205fcf7e8191b28f9207c97a69bf58f ......
	 orig commit -> f46c445b79906a9da55c13e0a6f6b6a006b892fe ......
checking d5c59ee8482042a0c63fa033c043989d00582525 ......
	 orig commit -> 9c72a18e46ebe0f09484cce8ebf847abdab58498 ......
checking e21d66048d4db2206c12344af07a934fd68418e4 ......
	 orig commit -> 9584d98bed7a7a904d0702ad06bbcc94703cb5b4 ......
checking 53e5f7b8d41bb4af0666fe1e7887c13754b10094 ......
	 orig commit -> 125c9fb1ccb53eb2ea9380df40f3c743f3fb2fed ......
checking be9994817ad5717f64e07c19e5ec2f6b29aad4d0 ......
	 orig commit -> 32a805baf0fb70b6dbedefcd7249ac7f580f9e3b ......
checking 70479eafe3d974c60a71718530a46f8ad3ce9c3f ......
	 orig commit -> ba1cc08d9488c94cb8d94f545305688b72a2a300 ......
		 ba1cc08d9488c94cb8d94f545305688b72a2a300 has problem. Fixes commit -> 32a805baf0fb70b6dbedefcd7249ac7f580f9e3b
commit be9994817ad5717f64e07c19e5ec2f6b29aad4d0
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri Sep 8 15:48:47 2017 -0700

    ipv6: fix typo in fib6_net_exit()
    
    
    [ Upstream commit 32a805baf0fb70b6dbedefcd7249ac7f580f9e3b ]
    
    IPv6 FIB should use FIB6_TABLE_HASHSZ, not FIB_TABLE_HASHSZ.
    
    Fixes: ba1cc08d9488 ("ipv6: fix memory leak with multiple tables during netns destruction")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 9b5e5d8a0045ca7c5dd195cba803eac6de6f589f ......
	 orig commit -> 5d621672bc1a1e5090c1ac5432a18c79e0e13e03 ......
checking 5f529e0d78447e03a3acf125883a3f7826817c01 ......
	 orig commit -> 5a63643e583b6a9789d7a225ae076fb4e603991c ......
checking 40bc5355e134af1d0ac05fe0dcb0aa55f9144bb4 ......
	 orig commit -> fb452a1aa3fd4034d7999e309c5466ff2d7005aa ......
checking 611a98c8eca3098173309642df187056c17e0f65 ......
	 orig commit -> 499350a5a6e7512d9ed369ed63a4244b6536f4f8 ......
checking 081be8c9efd6003e1aa78679b3265732de4cec9b ......
	 orig commit -> ebc8254aeae34226d0bc8fda309fd9790d4dccfe ......
	 orig commit -> 7ad813f208533cebfcc32d3d7474dc1677d1b09a ......
		 7ad813f208533cebfcc32d3d7474dc1677d1b09a has problem. Fixes commit -> ebc8254aeae34226d0bc8fda309fd9790d4dccfe
commit 081be8c9efd6003e1aa78679b3265732de4cec9b
Author: Florian Fainelli <f.fainelli@gmail.com>
Date:   Wed Aug 30 17:49:29 2017 -0700

    Revert "net: phy: Correctly process PHY_HALTED in phy_stop_machine()"
    
    
    [ Upstream commit ebc8254aeae34226d0bc8fda309fd9790d4dccfe ]
    
    This reverts commit 7ad813f208533cebfcc32d3d7474dc1677d1b09a ("net: phy:
    Correctly process PHY_HALTED in phy_stop_machine()") because it is
    creating the possibility for a NULL pointer dereference.
    
    David Daney provide the following call trace and diagram of events:
    
    When ndo_stop() is called we call:
    
     phy_disconnect()
        +---> phy_stop_interrupts() implies: phydev->irq = PHY_POLL;
        +---> phy_stop_machine()
        |      +---> phy_state_machine()
        |              +----> queue_delayed_work(): Work queued.
        +--->phy_detach() implies: phydev->attached_dev = NULL;
    
    Now at a later time the queued work does:
    
     phy_state_machine()
        +---->netif_carrier_off(phydev->attached_dev): Oh no! It is NULL:
    
     CPU 12 Unable to handle kernel paging request at virtual address
    0000000000000048, epc == ffffffff80de37ec, ra == ffffffff80c7c
    Oops[#1]:
    CPU: 12 PID: 1502 Comm: kworker/12:1 Not tainted 4.9.43-Cavium-Octeon+ #1
    Workqueue: events_power_efficient phy_state_machine
    task: 80000004021ed100 task.stack: 8000000409d70000
    $ 0   : 0000000000000000 ffffffff84720060 0000000000000048 0000000000000004
    $ 4   : 0000000000000000 0000000000000001 0000000000000004 0000000000000000
    $ 8   : 0000000000000000 0000000000000000 00000000ffff98f3 0000000000000000
    $12   : 8000000409d73fe0 0000000000009c00 ffffffff846547c8 000000000000af3b
    $16   : 80000004096bab68 80000004096babd0 0000000000000000 80000004096ba800
    $20   : 0000000000000000 0000000000000000 ffffffff81090000 0000000000000008
    $24   : 0000000000000061 ffffffff808637b0
    $28   : 8000000409d70000 8000000409d73cf0 80000000271bd300 ffffffff80c7804c
    Hi    : 000000000000002a
    Lo    : 000000000000003f
    epc   : ffffffff80de37ec netif_carrier_off+0xc/0x58
    ra    : ffffffff80c7804c phy_state_machine+0x48c/0x4f8
    Status: 14009ce3        KX SX UX KERNEL EXL IE
    Cause : 00800008 (ExcCode 02)
    BadVA : 0000000000000048
    PrId  : 000d9501 (Cavium Octeon III)
    Modules linked in:
    Process kworker/12:1 (pid: 1502, threadinfo=8000000409d70000,
    task=80000004021ed100, tls=0000000000000000)
    Stack : 8000000409a54000 80000004096bab68 80000000271bd300 80000000271c1e00
            0000000000000000 ffffffff808a1708 8000000409a54000 80000000271bd300
            80000000271bd320 8000000409a54030 ffffffff80ff0f00 0000000000000001
            ffffffff81090000 ffffffff808a1ac0 8000000402182080 ffffffff84650000
            8000000402182080 ffffffff84650000 ffffffff80ff0000 8000000409a54000
            ffffffff808a1970 0000000000000000 80000004099e8000 8000000402099240
            0000000000000000 ffffffff808a8598 0000000000000000 8000000408eeeb00
            8000000409a54000 00000000810a1d00 0000000000000000 8000000409d73de8
            8000000409d73de8 0000000000000088 000000000c009c00 8000000409d73e08
            8000000409d73e08 8000000402182080 ffffffff808a84d0 8000000402182080
            ...
    Call Trace:
    [<ffffffff80de37ec>] netif_carrier_off+0xc/0x58
    [<ffffffff80c7804c>] phy_state_machine+0x48c/0x4f8
    [<ffffffff808a1708>] process_one_work+0x158/0x368
    [<ffffffff808a1ac0>] worker_thread+0x150/0x4c0
    [<ffffffff808a8598>] kthread+0xc8/0xe0
    [<ffffffff808617f0>] ret_from_kernel_thread+0x14/0x1c
    
    The original motivation for this change originated from Marc Gonzales
    indicating that his network driver did not have its adjust_link callback
    executing with phydev->link = 0 while he was expecting it.
    
    PHYLIB has never made any such guarantees ever because phy_stop() merely just
    tells the workqueue to move into PHY_HALTED state which will happen
    asynchronously.
    
    Reported-by: Geert Uytterhoeven <geert+renesas@glider.be>
    Reported-by: David Daney <ddaney.cavm@gmail.com>
    Fixes: 7ad813f20853 ("net: phy: Correctly process PHY_HALTED in phy_stop_machine()")
    Signed-off-by: Florian Fainelli <f.fainelli@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 6d8c8fd1c4c71fac291e7243becf2de11c82c216 ......
	 orig commit -> e58f95831e7468d25eb6e41f234842ecfe6f014f ......
checking 354d36b746c3fdde7397409ce79ca89a2da2fbce ......
	 orig commit -> 4e587ea71bf924f7dac621f1351653bd41e446cb ......
checking e51bf99be7cc95db97d9fa9031ab09ea037a5c7a ......
	 orig commit -> c5cff8561d2d0006e972bd114afd51f082fee77c ......
		 c5cff8561d2d0006e972bd114afd51f082fee77c has problem. Fixes commit -> 4e587ea71bf924f7dac621f1351653bd41e446cb
3614364527daa870264f6dde77f02853cdecd02c
commit 354d36b746c3fdde7397409ce79ca89a2da2fbce
Author: Wei Wang <weiwan@google.com>
Date:   Fri Aug 25 15:03:10 2017 -0700

    ipv6: fix sparse warning on rt6i_node
    
    
    [ Upstream commit 4e587ea71bf924f7dac621f1351653bd41e446cb ]
    
    Commit c5cff8561d2d adds rcu grace period before freeing fib6_node. This
    generates a new sparse warning on rt->rt6i_node related code:
      net/ipv6/route.c:1394:30: error: incompatible types in comparison
      expression (different address spaces)
      ./include/net/ip6_fib.h:187:14: error: incompatible types in comparison
      expression (different address spaces)
    
    This commit adds "__rcu" tag for rt6i_node and makes sure corresponding
    rcu API is used for it.
    After this fix, sparse no longer generates the above warning.
    
    Fixes: c5cff8561d2d ("ipv6: add rcu grace period before freeing fib6_node")
    Signed-off-by: Wei Wang <weiwan@google.com>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Martin KaFai Lau <kafai@fb.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 354d36b746c3fdde7397409ce79ca89a2da2fbce
Author: Wei Wang <weiwan@google.com>
Date:   Fri Aug 25 15:03:10 2017 -0700

    ipv6: fix sparse warning on rt6i_node
    
    
    [ Upstream commit 4e587ea71bf924f7dac621f1351653bd41e446cb ]
    
    Commit c5cff8561d2d adds rcu grace period before freeing fib6_node. This
    generates a new sparse warning on rt->rt6i_node related code:
      net/ipv6/route.c:1394:30: error: incompatible types in comparison
      expression (different address spaces)
      ./include/net/ip6_fib.h:187:14: error: incompatible types in comparison
      expression (different address spaces)
    
    This commit adds "__rcu" tag for rt6i_node and makes sure corresponding
    rcu API is used for it.
    After this fix, sparse no longer generates the above warning.
    
    Fixes: c5cff8561d2d ("ipv6: add rcu grace period before freeing fib6_node")
    Signed-off-by: Wei Wang <weiwan@google.com>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Martin KaFai Lau <kafai@fb.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 6eb7ae1223f75fe19de8e75df80ac78ab6b7c39d ......
	 orig commit -> 3de33e1ba0506723ab25734e098cf280ecc34756 ......
