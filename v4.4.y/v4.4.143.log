Check from v4.4.143 to v4.4.144
Commit count: 108
checking 762b585c492fedda1b0bc4c6d0a867307bf7cd0f ......
checking f891ee97d9df8407ba1a46f9a7b89d8d57a70b7a ......
	 orig commit -> f78e5623f45bab2b726eec29dc5cefbbab2d0b1c ......
		 f78e5623f45bab2b726eec29dc5cefbbab2d0b1c has problem. Fixes commit -> 7233982ade15eeac05c6f351e8d347406e6bcd2f
commit da7d5af64afd3f18b727c8d7787265c555e2fded
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Thu Jan 18 14:05:05 2018 +0000

    mtd: ubi: wl: Fix error return code in ubi_wl_init()
    
    commit 7233982ade15eeac05c6f351e8d347406e6bcd2f upstream.
    
    Fix to return error code -ENOMEM from the kmem_cache_alloc() error
    handling case instead of 0, as done elsewhere in this function.
    
    Fixes: f78e5623f45b ("ubi: fastmap: Erase outdated anchor PEBs during
    attach")
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Reviewed-by: Boris Brezillon <boris.brezillon@free-electrons.com>
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking a5f958c4eadb8c9214c75b69330d4b5aa03d16e6 ......
	 orig commit -> f7d11b33d4e8cedf19367c09b891bbc705163976 ......
checking 000b4c28bb28d471662a7d8fed80c9f511afe4cf ......
	 orig commit -> 2e8f08deabbc7eefe4c5838aaa6aa9a23a8acf2e ......
checking faf2b8d929a47809eab04f17e21f44ebae377dc6 ......
	 orig commit -> 74f2c6e9a47cf4e508198c8594626cc82906a13d ......
checking 6fdca47fcc1a26b770ce1eb1a440ea06f8d804c5 ......
	 orig commit -> fdf10ed710c0aa177e8dfcd84e65e4e5e8e0956b ......
checking 1ee52929e64c4bd185884ebc22d437ff93f97e3a ......
	 orig commit -> 243a4f8126fcf7facb04b324dbb7c85d10b11ce9 ......
checking 470ee7ab7776085fe5573788df2dea8140d7a0c1 ......
	 orig commit -> 797097301860c64b63346d068ba4fe4992bd5021 ......
checking c9ae49135d83243f12b5a66044302d4a17e0dcfe ......
	 orig commit -> 1dc3039bc87ae7d19a990c3ee71cfd8a9068f428 ......
checking 42a8fe474e0c3e9babad09b4d3e882d7a0f09c76 ......
	 orig commit -> 60d3450167433f2d099ce2869dc52dd9e7dc9b29 ......
checking 399a9d0cc466b0100feee5c6e9de7e6378b18fab ......
	 orig commit -> 74899d92e66663dc7671a8017b3146dcd4735f3b ......
checking cadb98135daf474648d646db5625e9c663b94a3d ......
	 orig commit -> 240da953fcc6a9008c92fae5b1f727ee5ed167ab ......
checking 48805280d05c968e0883e8debf5e33f40f8e56c5 ......
	 orig commit -> 47c61b3955cf712cadfc25635bf9bc174af030ea ......
checking 80d7439fb0c446d006599b6347efd255a86a93ca ......
	 orig commit -> be6fcb5478e95bb1c91f489121238deb3abca46a ......
checking 90cfa767bc12a9931e5e45ed275b069d5b35b52e ......
	 orig commit -> 4b59bdb569453a60b752b274ca61f009e37f4dae ......
checking 9ed7ee52e4e06364f47d6a6e898610bae5f04e93 ......
	 orig commit -> fa8ac4988249c38476f6ad678a4848a736373403 ......
checking d5aec90670c378b6d05e5f904b1a8c8cffb17eef ......
	 orig commit -> cc69b34989210f067b2c51d5539b5f96ebcc3a01 ......
checking 3d60492cea89c0a0fb06c73ee49cc14c55f527dd ......
	 orig commit -> 0270be3e34efb05a88bc4c422572ece038ef3608 ......
checking ecfe9bf30e4b7cd13f3b28f40a587a932b5cb457 ......
	 orig commit -> 11fb0683493b2da112cd64c9dada221b52463bf7 ......
checking e13a6f0955bb5ee6daca1f08027d6561d0830daf ......
	 orig commit -> ccbcd2674472a978b48c91c1fbfb66c0ff959f24 ......
checking ea8efcd4415f70766acb4bb9553fad855eea48e1 ......
	 orig commit -> 1f50ddb4f4189243c05926b842dc1a0332195f31 ......
		 1f50ddb4f4189243c05926b842dc1a0332195f31 has problem. Fixes commit -> 2f5fb19341883bb6e37da351bc3700489d8506a7
024d83cadc6b2af027e473720f3c3da97496c318
74899d92e66663dc7671a8017b3146dcd4735f3b
commit 399a9d0cc466b0100feee5c6e9de7e6378b18fab
Author: Juergen Gross <jgross@suse.com>
Date:   Thu Jun 21 10:43:31 2018 +0200

    x86/xen: Add call of speculative_store_bypass_ht_init() to PV paths
    
    commit 74899d92e66663dc7671a8017b3146dcd4735f3b upstream.
    
    Commit:
    
      1f50ddb4f418 ("x86/speculation: Handle HT correctly on AMD")
    
    ... added speculative_store_bypass_ht_init() to the per-CPU initialization sequence.
    
    speculative_store_bypass_ht_init() needs to be called on each CPU for
    PV guests, too.
    
    Reported-by: Brian Woods <brian.woods@amd.com>
    Tested-by: Brian Woods <brian.woods@amd.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Cc: <stable@vger.kernel.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: boris.ostrovsky@oracle.com
    Cc: xen-devel@lists.xenproject.org
    Fixes: 1f50ddb4f4189243c05926b842dc1a0332195f31 ("x86/speculation: Handle HT correctly on AMD")
    Link: https://lore.kernel.org/lkml/20180621084331.21228-1-jgross@suse.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Srivatsa S. Bhat <srivatsa@csail.mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 399a9d0cc466b0100feee5c6e9de7e6378b18fab
Author: Juergen Gross <jgross@suse.com>
Date:   Thu Jun 21 10:43:31 2018 +0200

    x86/xen: Add call of speculative_store_bypass_ht_init() to PV paths
    
    commit 74899d92e66663dc7671a8017b3146dcd4735f3b upstream.
    
    Commit:
    
      1f50ddb4f418 ("x86/speculation: Handle HT correctly on AMD")
    
    ... added speculative_store_bypass_ht_init() to the per-CPU initialization sequence.
    
    speculative_store_bypass_ht_init() needs to be called on each CPU for
    PV guests, too.
    
    Reported-by: Brian Woods <brian.woods@amd.com>
    Tested-by: Brian Woods <brian.woods@amd.com>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Cc: <stable@vger.kernel.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: boris.ostrovsky@oracle.com
    Cc: xen-devel@lists.xenproject.org
    Fixes: 1f50ddb4f4189243c05926b842dc1a0332195f31 ("x86/speculation: Handle HT correctly on AMD")
    Link: https://lore.kernel.org/lkml/20180621084331.21228-1-jgross@suse.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Srivatsa S. Bhat <srivatsa@csail.mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 21757fc8bafd50ce477fff2bcec6faec27c5548d ......
	 orig commit -> d1035d971829dcf80e8686ccde26f94b0a069472 ......
checking 4ba461d426490b6ed7e8298c4d3b7a13aa5d2686 ......
	 orig commit -> f7f3dc00f61261cdc9ccd8b886f21bc4dffd6fd9 ......
checking 11a0b92f6d57853550f927fe91190b745a5ab945 ......
	 orig commit -> 52817587e706686fcdb27f14c1b000c92f266c96 ......
		 52817587e706686fcdb27f14c1b000c92f266c96 has problem. Fixes commit -> 0aa48468d00959c8a37cd3ac727284f4f7359151
checking e4bb3382cbe9173e7f6e3a13fd1cb39c3a72671f ......
	 orig commit -> 7eb8956a7fec3c1f0abc2a5517dada99ccc8a961 ......
checking 4f4a2c70cf2ecd17ef3899c754fee30caa343286 ......
	 orig commit -> e7c587da125291db39ddf1f49b18e5970adbac17 ......
checking 714f18858ceda6f2b8335686f1f019560fe89283 ......
	 orig commit -> 5f2b745f5e1304f438f9b2cd03ebc8120b6e0d3b ......
checking 95bef2217ece77c345e627eba9cd2e85ada8eeb2 ......
	 orig commit -> ffed645e3be0e32f8e9ab068d257aee8d0fe8eec ......
checking 103b28d8a271c1d650eb5b09bd7a53d8915b51d6 ......
	 orig commit -> 7bb4d366cba992904bffa4820d24e70a3de93e76 ......
		 7bb4d366cba992904bffa4820d24e70a3de93e76 has problem. Fixes commit -> ffed645e3be0e32f8e9ab068d257aee8d0fe8eec
commit 95bef2217ece77c345e627eba9cd2e85ada8eeb2
Author: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
Date:   Sat Jul 14 02:38:01 2018 -0700

    x86/bugs: Fix the parameters alignment and missing void
    
    commit ffed645e3be0e32f8e9ab068d257aee8d0fe8eec upstream
    
    Fixes: 7bb4d366c ("x86/bugs: Make cpu_show_common() static")
    Fixes: 24f7fc83b ("x86/bugs: Provide boot parameters for the spec_store_bypass_disable mitigation")
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Srivatsa S. Bhat <srivatsa@csail.mit.edu>
    Reviewed-by: Matt Helsley (VMware) <matt.helsley@gmail.com>
    Reviewed-by: Alexey Makhalov <amakhalov@vmware.com>
    Reviewed-by: Bo Gan <ganb@vmware.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 631474e1cee0fbc0f346664aea5ee5b1c3600649 ......
	 orig commit -> d66d8ff3d21667b41eddbe86b35ab411e40d8c5f ......
checking e5eea0486470acbe7aa20a0533543c47c942ec93 ......
	 orig commit -> dd0792699c4058e63c0715d9a7c2d40226fcdddc ......
checking 765897c6486de605eae3f94f77f2c800c9a2a254 ......
	 orig commit -> e96f46ee8587607a828f783daa6eb5b44d25004d ......
checking 6e2119e4b8767a6c3a415875ad09596ada00755c ......
	 orig commit -> 9f65fb29374ee37856dbad847b4e121aab72b510 ......
checking afc6bf9131efc36d4ae8a003e8597119a2190661 ......
	 orig commit -> f21b53b20c754021935ea43364dbf53778eeba32 ......
checking 9237a1b0828962191107e702cf56c88db9f9d455 ......
	 orig commit -> 8bf37d8c067bb7eb8e7c381bdadf9bd89182b6bc ......
checking c463c0f037f2d83aea54415ed7c61deb0b90333b ......
	 orig commit -> 00a02d0c502a06d15e07b857f8ff921e3e402675 ......
checking a08c3f484c34df1e3bec3c47818d570483bf67fa ......
	 orig commit -> b849a812f7eb92e96d1c8239b06581b2cfd8b275 ......
checking 3f9cb20f9126db1edb1fad78a0e94ff8e9ae94e2 ......
	 orig commit -> 356e4bfff2c5489e016fdb925adbf12a1e3950ee ......
checking 0b1174054e0f4afd999c56ddecbbfb18f598f099 ......
	 orig commit -> 5c3070890d06ff82eecb808d02d2ca39169533ef ......
checking 484964fa3e5a0d8467891aab8368dab34e8eb13c ......
	 orig commit -> fae1fa0fc6cca8beee3ab8ed71d54f9a78fa3f64 ......
		 fae1fa0fc6cca8beee3ab8ed71d54f9a78fa3f64 has problem. Fixes commit -> e96f46ee8587607a828f783daa6eb5b44d25004d
commit 765897c6486de605eae3f94f77f2c800c9a2a254
Author: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
Date:   Sat Jul 14 02:37:29 2018 -0700

    proc: Use underscores for SSBD in 'status'
    
    commit e96f46ee8587607a828f783daa6eb5b44d25004d upstream
    
    The style for the 'status' file is CamelCase or this. _.
    
    Fixes: fae1fa0fc ("proc: Provide details on speculation flaw mitigations")
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Srivatsa S. Bhat <srivatsa@csail.mit.edu>
    Reviewed-by: Matt Helsley (VMware) <matt.helsley@gmail.com>
    Reviewed-by: Alexey Makhalov <amakhalov@vmware.com>
    Reviewed-by: Bo Gan <ganb@vmware.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking b6f4a6285d7979b45d629e65c880279930b98ef1 ......
	 orig commit -> 7bbf1373e228840bb0295a2ca26d548ef37f448e ......
checking 2cb00ce1273d48dafce848f4e0ea353eb5839475 ......
	 orig commit -> a73ec77ee17ec556fe7f165d00314cb7c047b1ac ......
checking b04a020d0745a7ba18800e86ea678676aeb21278 ......
	 orig commit -> 885f82bfbc6fefb6664ea27965c3ab9ac4194b8c ......
		 885f82bfbc6fefb6664ea27965c3ab9ac4194b8c has problem. Fixes commit -> 15e6c22fd8e5a42c5ed6d487b7c9fe44c2517765
commit 7f77d36ab3f3d3dc09af0afbc7b58198382e9941
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Fri May 11 15:21:01 2018 +0200

    KVM: SVM: Move spec control call after restore of GS
    
    commit 15e6c22fd8e5a42c5ed6d487b7c9fe44c2517765 upstream.
    
    svm_vcpu_run() invokes x86_spec_ctrl_restore_host() after VMEXIT, but
    before the host GS is restored. x86_spec_ctrl_restore_host() uses 'current'
    to determine the host SSBD state of the thread. 'current' is GS based, but
    host GS is not yet restored and the access causes a triple fault.
    
    Move the call after the host GS restore.
    
    Fixes: 885f82bfbc6f x86/process: Allow runtime control of Speculative Store Bypass
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Reviewed-by: Borislav Petkov <bp@suse.de>
    Reviewed-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Acked-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking a1cb23a5e2ea4ed75d3ac37c6a0739c5435406ff ......
	 orig commit -> 5a920155e388ec22a22e0532fb695b9215c9b34d ......
checking 5c5e95c4e50fbec4f101e057520a762662d6e7d7 ......
	 orig commit -> b9894a2f5bd18b1691cb6872c9afe32b148d0132 ......
checking 1a529899c65aff1f4f2f4875e876457d0c2341c5 ......
	 orig commit -> af8b3cd3934ec60f4c2a420d19a9d416554f140b ......
checking 13fa2c65c9a8c2cd5f2a9799891582c40b6f5cfa ......
	 orig commit -> b617cfc858161140d69cc0b5cc211996b557a1c7 ......
checking 49d8e36618f7524611409b8608dd54d399e7097f ......
	 orig commit -> 28a2775217b17208811fa43a9e96bd1fdf417b86 ......
checking ec5bf1a308faac133951877c8b5fbbb0413529cb ......
	 orig commit -> 764f3c21588a059cd783c6ba0734d4db2d72822d ......
checking d9a58c4316857347b0ef77e94bde43379c87a746 ......
	 orig commit -> 1115a859f33276fe8afb31c60cf9d8e657872558 ......
checking 7dc950c1ce909c11c3985802b1aba6b655d8dc23 ......
	 orig commit -> 772439717dbf703b39990be58d8d4e3e4ad0598a ......
checking 46ea6e547d0595f88086bc56c2f032b0e2f3f9ac ......
	 orig commit -> 24f7fc83b9204d20f878c57cb77d261ae825e033 ......
		 24f7fc83b9204d20f878c57cb77d261ae825e033 has problem. Fixes commit -> ffed645e3be0e32f8e9ab068d257aee8d0fe8eec
d66d8ff3d21667b41eddbe86b35ab411e40d8c5f
commit 631474e1cee0fbc0f346664aea5ee5b1c3600649
Author: Jiri Kosina <jkosina@suse.cz>
Date:   Sat Jul 14 02:37:45 2018 -0700

    x86/bugs: Fix __ssb_select_mitigation() return type
    
    commit d66d8ff3d21667b41eddbe86b35ab411e40d8c5f upstream
    
    __ssb_select_mitigation() returns one of the members of enum ssb_mitigation,
    not ssb_mitigation_cmd; fix the prototype to reflect that.
    
    Fixes: 24f7fc83b9204 ("x86/bugs: Provide boot parameters for the spec_store_bypass_disable mitigation")
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Srivatsa S. Bhat <srivatsa@csail.mit.edu>
    Reviewed-by: Matt Helsley (VMware) <matt.helsley@gmail.com>
    Reviewed-by: Alexey Makhalov <amakhalov@vmware.com>
    Reviewed-by: Bo Gan <ganb@vmware.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 95bef2217ece77c345e627eba9cd2e85ada8eeb2
Author: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
Date:   Sat Jul 14 02:38:01 2018 -0700

    x86/bugs: Fix the parameters alignment and missing void
    
    commit ffed645e3be0e32f8e9ab068d257aee8d0fe8eec upstream
    
    Fixes: 7bb4d366c ("x86/bugs: Make cpu_show_common() static")
    Fixes: 24f7fc83b ("x86/bugs: Provide boot parameters for the spec_store_bypass_disable mitigation")
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Srivatsa S. Bhat <srivatsa@csail.mit.edu>
    Reviewed-by: Matt Helsley (VMware) <matt.helsley@gmail.com>
    Reviewed-by: Alexey Makhalov <amakhalov@vmware.com>
    Reviewed-by: Bo Gan <ganb@vmware.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 631474e1cee0fbc0f346664aea5ee5b1c3600649
Author: Jiri Kosina <jkosina@suse.cz>
Date:   Sat Jul 14 02:37:45 2018 -0700

    x86/bugs: Fix __ssb_select_mitigation() return type
    
    commit d66d8ff3d21667b41eddbe86b35ab411e40d8c5f upstream
    
    __ssb_select_mitigation() returns one of the members of enum ssb_mitigation,
    not ssb_mitigation_cmd; fix the prototype to reflect that.
    
    Fixes: 24f7fc83b9204 ("x86/bugs: Provide boot parameters for the spec_store_bypass_disable mitigation")
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: David Woodhouse <dwmw@amazon.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Srivatsa S. Bhat <srivatsa@csail.mit.edu>
    Reviewed-by: Matt Helsley (VMware) <matt.helsley@gmail.com>
    Reviewed-by: Alexey Makhalov <amakhalov@vmware.com>
    Reviewed-by: Bo Gan <ganb@vmware.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 1cdf94bc21610ffbabedd5b6d85700ed1017037d ......
	 orig commit -> 0cc5fa00b0a88dad140b4e5c2cead9951ad36822 ......
checking d8067aba239cbd2bfd64cdd548a914b20c58d189 ......
	 orig commit -> c456442cd3a59eeb1d60293c26cbe2ff2c4e42cf ......
checking 05f8bae8e6b68ee20a26ec6a0683b1bcc31aef28 ......
	 orig commit -> 0047f59834e5947d45f34f5f12eb330d158f700b ......
checking 498efb90b8ad36de4a51a2298887acbfc3cab616 ......
	 orig commit -> f5fbf848303c8704d0e1a1e7cabd08fd0a49552f ......
checking 3e1ec1698244de1b808ae0142dd653e5aded91d7 ......
	 orig commit -> 5cf687548705412da47c9cec342fd952d71ed3d5 ......
checking 51f37b2f0248911465d8f84fb6f547be5316a261 ......
	 orig commit -> 1b86883ccb8d5d9506529d42dbe1a5257cb30b18 ......
checking 96df48c0c42c6816d5b2808ed9e18a428cbf9598 ......
	 orig commit -> d1059518b4789cabe34bb4b714d07e6089c82ca1 ......
checking d77421663170a2d660fa63a50c664805d132e69d ......
	 orig commit -> 4a28bfe3267b68e22c663ac26185aa16c9b879ef ......
checking b2dab2dc776cea8e1f190523456b32b850506ce3 ......
	 orig commit -> 1aa7a5735a41418d8e01fa7c9565eb2657e2ea3f ......
checking e57a81c43ca5ea32bf28c4634e903e7a4a1cbbd3 ......
	 orig commit -> def9331a12977770cc6132d79f8e6565871e8e38 ......
checking 237a1870da36fcd10f67503928c485d964726d83 ......
checking 9f62897343da5fbbbd0db7441750ecc4c833a6ef ......
	 orig commit -> 505ce68c6da3432454c62e43c24a22ea5b1d754b ......
checking b4553a4ec2f64b818193ba85434b1f42c68d5aff ......
	 orig commit -> 6c045d07bb305c527140bdec4cf8ab50f7c980d8 ......
checking 0990b1ff53bec71e4fdce971b6c4c5e1b7b91d01 ......
	 orig commit -> e3b3121fa8da94cb20f9e0c64ab7981ae47fd085 ......
checking bdf186811576fdec0a42b554b884ed8ae2df54a2 ......
	 orig commit -> d72f4e29e6d84b7ec02ae93088aa459ac70e733b ......
checking 7ec391255421d5d311c66d6fbfb33cdfca789b9f ......
	 orig commit -> dd84441a797150dcc49298ec95c459a8891d8bb1 ......
		 dd84441a797150dcc49298ec95c459a8891d8bb1 has problem. Fixes commit -> 6f6060a5c9cc76fdbc22748264e6aa3779ec2427
checking 56c4a02fe0fc9fbdeee19eaef11c5b67c8bef371 ......
	 orig commit -> 36268223c1e9981d6cfc33aff8520b3bde4b8114 ......
checking 2997b0617b252f6e8630c1aa410697e2b0ed3b0d ......
	 orig commit -> 18bf3c3ea8ece8f03b6fc58508f2dfd23c7711c7 ......
		 18bf3c3ea8ece8f03b6fc58508f2dfd23c7711c7 has problem. Fixes commit -> dbfe2953f63c640463c630746cd5d9de8b2f63ae
checking 937dad078f557ddd6151e62f7f0028c136ffba4a ......
	 orig commit -> f39681ed0f48498b80455095376f11535feea332 ......
checking 58ac8c59dbb3a8e8b6414524c2d8f4f0a7bbeaa4 ......
	 orig commit -> 39a0526fb3f7d93433d146304278477eb463f8af ......
		 39a0526fb3f7d93433d146304278477eb463f8af has problem. Fixes commit -> ccd5b3235180eef3cfec337df1c8554ab151b5cc
commit f9866720724db8a163cf305fc907cdab0b38fa09
Author: Eric Biggers <ebiggers@google.com>
Date:   Thu Aug 24 10:50:29 2017 -0700

    x86/mm: Fix use-after-free of ldt_struct
    
    commit ccd5b3235180eef3cfec337df1c8554ab151b5cc upstream.
    
    The following commit:
    
      39a0526fb3f7 ("x86/mm: Factor out LDT init from context init")
    
    renamed init_new_context() to init_new_context_ldt() and added a new
    init_new_context() which calls init_new_context_ldt().  However, the
    error code of init_new_context_ldt() was ignored.  Consequently, if a
    memory allocation in alloc_ldt_struct() failed during a fork(), the
    ->context.ldt of the new task remained the same as that of the old task
    (due to the memcpy() in dup_mm()).  ldt_struct's are not intended to be
    shared, so a use-after-free occurred after one task exited.
    
    Fix the bug by making init_new_context() pass through the error code of
    init_new_context_ldt().
    
    This bug was found by syzkaller, which encountered the following splat:
    
        BUG: KASAN: use-after-free in free_ldt_struct.part.2+0x10a/0x150 arch/x86/kernel/ldt.c:116
        Read of size 4 at addr ffff88006d2cb7c8 by task kworker/u9:0/3710
    
        CPU: 1 PID: 3710 Comm: kworker/u9:0 Not tainted 4.13.0-rc4-next-20170811 #2
        Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011
        Call Trace:
         __dump_stack lib/dump_stack.c:16 [inline]
         dump_stack+0x194/0x257 lib/dump_stack.c:52
         print_address_description+0x73/0x250 mm/kasan/report.c:252
         kasan_report_error mm/kasan/report.c:351 [inline]
         kasan_report+0x24e/0x340 mm/kasan/report.c:409
         __asan_report_load4_noabort+0x14/0x20 mm/kasan/report.c:429
         free_ldt_struct.part.2+0x10a/0x150 arch/x86/kernel/ldt.c:116
         free_ldt_struct arch/x86/kernel/ldt.c:173 [inline]
         destroy_context_ldt+0x60/0x80 arch/x86/kernel/ldt.c:171
         destroy_context arch/x86/include/asm/mmu_context.h:157 [inline]
         __mmdrop+0xe9/0x530 kernel/fork.c:889
         mmdrop include/linux/sched/mm.h:42 [inline]
         exec_mmap fs/exec.c:1061 [inline]
         flush_old_exec+0x173c/0x1ff0 fs/exec.c:1291
         load_elf_binary+0x81f/0x4ba0 fs/binfmt_elf.c:855
         search_binary_handler+0x142/0x6b0 fs/exec.c:1652
         exec_binprm fs/exec.c:1694 [inline]
         do_execveat_common.isra.33+0x1746/0x22e0 fs/exec.c:1816
         do_execve+0x31/0x40 fs/exec.c:1860
         call_usermodehelper_exec_async+0x457/0x8f0 kernel/umh.c:100
         ret_from_fork+0x2a/0x40 arch/x86/entry/entry_64.S:431
    
        Allocated by task 3700:
         save_stack_trace+0x16/0x20 arch/x86/kernel/stacktrace.c:59
         save_stack+0x43/0xd0 mm/kasan/kasan.c:447
         set_track mm/kasan/kasan.c:459 [inline]
         kasan_kmalloc+0xad/0xe0 mm/kasan/kasan.c:551
         kmem_cache_alloc_trace+0x136/0x750 mm/slab.c:3627
         kmalloc include/linux/slab.h:493 [inline]
         alloc_ldt_struct+0x52/0x140 arch/x86/kernel/ldt.c:67
         write_ldt+0x7b7/0xab0 arch/x86/kernel/ldt.c:277
         sys_modify_ldt+0x1ef/0x240 arch/x86/kernel/ldt.c:307
         entry_SYSCALL_64_fastpath+0x1f/0xbe
    
        Freed by task 3700:
         save_stack_trace+0x16/0x20 arch/x86/kernel/stacktrace.c:59
         save_stack+0x43/0xd0 mm/kasan/kasan.c:447
         set_track mm/kasan/kasan.c:459 [inline]
         kasan_slab_free+0x71/0xc0 mm/kasan/kasan.c:524
         __cache_free mm/slab.c:3503 [inline]
         kfree+0xca/0x250 mm/slab.c:3820
         free_ldt_struct.part.2+0xdd/0x150 arch/x86/kernel/ldt.c:121
         free_ldt_struct arch/x86/kernel/ldt.c:173 [inline]
         destroy_context_ldt+0x60/0x80 arch/x86/kernel/ldt.c:171
         destroy_context arch/x86/include/asm/mmu_context.h:157 [inline]
         __mmdrop+0xe9/0x530 kernel/fork.c:889
         mmdrop include/linux/sched/mm.h:42 [inline]
         __mmput kernel/fork.c:916 [inline]
         mmput+0x541/0x6e0 kernel/fork.c:927
         copy_process.part.36+0x22e1/0x4af0 kernel/fork.c:1931
         copy_process kernel/fork.c:1546 [inline]
         _do_fork+0x1ef/0xfb0 kernel/fork.c:2025
         SYSC_clone kernel/fork.c:2135 [inline]
         SyS_clone+0x37/0x50 kernel/fork.c:2129
         do_syscall_64+0x26c/0x8c0 arch/x86/entry/common.c:287
         return_from_SYSCALL_64+0x0/0x7a
    
    Here is a C reproducer:
    
        #include <asm/ldt.h>
        #include <pthread.h>
        #include <signal.h>
        #include <stdlib.h>
        #include <sys/syscall.h>
        #include <sys/wait.h>
        #include <unistd.h>
    
        static void *fork_thread(void *_arg)
        {
            fork();
        }
    
        int main(void)
        {
            struct user_desc desc = { .entry_number = 8191 };
    
            syscall(__NR_modify_ldt, 1, &desc, sizeof(desc));
    
            for (;;) {
                if (fork() == 0) {
                    pthread_t t;
    
                    srand(getpid());
                    pthread_create(&t, NULL, fork_thread, NULL);
                    usleep(rand() % 10000);
                    syscall(__NR_exit_group, 0);
                }
                wait(NULL);
            }
        }
    
    Note: the reproducer takes advantage of the fact that alloc_ldt_struct()
    may use vmalloc() to allocate a large ->entries array, and after
    commit:
    
      5d17a73a2ebe ("vmalloc: back off when the current task is killed")
    
    it is possible for userspace to fail a task's vmalloc() by
    sending a fatal signal, e.g. via exit_group().  It would be more
    difficult to reproduce this bug on kernels without that commit.
    
    This bug only affected kernels with CONFIG_MODIFY_LDT_SYSCALL=y.
    
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Acked-by: Dave Hansen <dave.hansen@linux.intel.com>
    Cc: <stable@vger.kernel.org> [v4.6+]
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Christoph Hellwig <hch@lst.de>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Rik van Riel <riel@redhat.com>
    Cc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-mm@kvack.org
    Fixes: 39a0526fb3f7 ("x86/mm: Factor out LDT init from context init")
    Link: http://lkml.kernel.org/r/20170824175029.76040-1-ebiggers3@gmail.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 7c55236675b8426f861a6e63b75ec1e17057c8a0 ......
	 orig commit -> 71c208dd54ab971036d83ff6d9837bae4976e623 ......
checking 4b9593083546b76299b28f0abb76505b4988860f ......
	 orig commit -> ea00f301285ea2f07393678cd2b6057878320c9d ......
checking 1af5c9661555bff49d50d38b5723a11ad85fbc97 ......
	 orig commit -> be3233fbfcb8f5acb6e3bcd0895c3ef9e100d470 ......
checking d10b55dd5a1612a76e58bb80c7b0ec92672c0e5b ......
	 orig commit -> 21e433bdb95bdf3aa48226fd3d33af608437f293 ......
checking 307261be84cca663b9497a68c2fbc8bc1061f494 ......
	 orig commit -> d37fc6d360a404b208547ba112e7dabb6533c7fc ......
checking b7c492fb9e33857cf983c7807929f1410655765c ......
	 orig commit -> 1751342095f0d2b36fa8114d8e12c5688c455ac4 ......
checking 5c91dde1312e8d9cc2b7e6a60cdc22debc711c8e ......
	 orig commit -> 6b8cf5cc9965673951f1ab3f0e3cf23d06e3e2ee ......
checking 659cc61a987662a6674022d5980a5b5eb0a9b4fe ......
	 orig commit -> 778843f934e362ed4ed734520f60a44a78a074b4 ......
checking 1aae84c2807e6ee1358725aee9eabf1137d055e6 ......
checking 769b27207746415f530615a0f4faca12c432bbc4 ......
checking 9a016c16d87fef47ad24ce8a9f30e8fce030225e ......
checking 5ff6b14190322e92489254dc4d10c28f203ee5fc ......
checking c64410cf4d3abd6c9f5abdd38db0a855926304c5 ......
checking 4ef0c99359c55ce60ba3859eb615c36c6cbc392c ......
checking 4fbcf1a84d8ad1bf15937fa6f9623045da153b4e ......
checking b00f820b5143a2fc0a9c859a52be2ef2244834ba ......
checking 7169b43e7c68edd550efa812c295685947ffa8a0 ......
checking 8cee8b4cdd50c5f90f8c63b63bcfba6d1f3839b7 ......
checking f868639bf8896908ad45adf1e7c1f786bb3568cc ......
	 orig commit -> d0a8d9378d16eb3c69bd8e6d23779fbdbee3a8c7 ......
		 d0a8d9378d16eb3c69bd8e6d23779fbdbee3a8c7 has problem. Fixes commit -> 208cbb32558907f68b3b2a081ca2337ac3744794
commit ec5aa64fec7206537442a2f3cb67decabad252f4
Author: Nick Desaulniers <ndesaulniers@google.com>
Date:   Fri Aug 3 10:05:50 2018 -0700

    x86/irqflags: Provide a declaration for native_save_fl
    
    commit 208cbb32558907f68b3b2a081ca2337ac3744794 upstream.
    
    It was reported that the commit d0a8d9378d16 is causing users of gcc < 4.9
    to observe -Werror=missing-prototypes errors.
    
    Indeed, it seems that:
    extern inline unsigned long native_save_fl(void) { return 0; }
    
    compiled with -Werror=missing-prototypes produces this warning in gcc <
    4.9, but not gcc >= 4.9.
    
    Fixes: d0a8d9378d16 ("x86/paravirt: Make native_save_fl() extern inline").
    Reported-by: David Laight <david.laight@aculab.com>
    Reported-by: Jean Delvare <jdelvare@suse.de>
    Signed-off-by: Nick Desaulniers <ndesaulniers@google.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: hpa@zytor.com
    Cc: jgross@suse.com
    Cc: kstewart@linuxfoundation.org
    Cc: gregkh@linuxfoundation.org
    Cc: boris.ostrovsky@oracle.com
    Cc: astrachan@google.com
    Cc: mka@chromium.org
    Cc: arnd@arndb.de
    Cc: tstellar@redhat.com
    Cc: sedat.dilek@gmail.com
    Cc: David.Laight@aculab.com
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/20180803170550.164688-1-ndesaulniers@google.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking fce27138ceeb47c2644d1bdabc36dfc4cf025e83 ......
	 orig commit -> 229bc19fd7aca4f37964af06e3583c1c8f36b5d6 ......
checking 80a80f51cc3aeea3d7d9d2b859357f611de7a87d ......
	 orig commit -> e78bfb0751d4e312699106ba7efbed2bab1a53ca ......
checking d629be850ac6e296dfe156604d7bb5202f1613da ......
	 orig commit -> 8b7008620b8452728cadead460a36f64ed78c460 ......
		 8b7008620b8452728cadead460a36f64ed78c460 has problem. Fixes commit -> e78bfb0751d4e312699106ba7efbed2bab1a53ca
commit 80a80f51cc3aeea3d7d9d2b859357f611de7a87d
Author: Stefano Brivio <sbrivio@redhat.com>
Date:   Fri Jul 13 13:21:07 2018 +0200

    skbuff: Unconditionally copy pfmemalloc in __skb_clone()
    
    [ Upstream commit e78bfb0751d4e312699106ba7efbed2bab1a53ca ]
    
    Commit 8b7008620b84 ("net: Don't copy pfmemalloc flag in
    __copy_skb_header()") introduced a different handling for the
    pfmemalloc flag in copy and clone paths.
    
    In __skb_clone(), now, the flag is set only if it was set in the
    original skb, but not cleared if it wasn't. This is wrong and
    might lead to socket buffers being flagged with pfmemalloc even
    if the skb data wasn't allocated from pfmemalloc reserves. Copy
    the flag instead of ORing it.
    
    Reported-by: Sabrina Dubroca <sd@queasysnail.net>
    Fixes: 8b7008620b84 ("net: Don't copy pfmemalloc flag in __copy_skb_header()")
    Signed-off-by: Stefano Brivio <sbrivio@redhat.com>
    Tested-by: Sabrina Dubroca <sd@queasysnail.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 8a82aee2d2f349afbfaee3754af7cf40c16c16a8 ......
	 orig commit -> 3a498606bb04af603a46ebde8296040b2de350d1 ......
checking 67aaf36e0da9b5008d6732520bcb4046f0cf8962 ......
	 orig commit -> 9ba8376ce1e2cbf4ce44f7e4bee1d0648e10d594 ......
checking 92b0c8dd9ea76cf215b1f740d06f8de430326289 ......
	 orig commit -> df8ed346d4a806a6eef2db5924285e839604b3f9 ......
checking be64f9f7a253184b733072ccd69a90350e86c46d ......
	 orig commit -> e7372197e15856ec4ee66b668020a662994db103 ......
checking b67a684222441668cf326427d02c34a8dfedb6be ......
	 orig commit -> 107d01f5ba10f4162c38109496607eb197059064 ......
checking 2be7797acd1bb9ec30920b2aac29e474184ede4e ......
	 orig commit -> 169dc027fb02492ea37a0575db6a658cf922b854 ......
checking 5a95ecebc7083533c8ac384146de991c29145aee ......
	 orig commit -> 70ba5b6db96ff7324b8cfc87e0d0383cf59c9677 ......
checking 08a0dc770c40f9d28c28d21c4728a329e489a57b ......
	 orig commit -> 9f15bde671355c351cf20d9f879004b234353100 ......
checking cfebfe7a80e35b582fd8d7f6400f9a1d10003583 ......
	 orig commit -> 93312b6da4df31e4102ce5420e6217135a16c7ea ......
checking b3e0971a733e67d15aa114a4b42b4f4e67618b55 ......
	 orig commit -> 6e3761145a9ba3ce267c330b6bff51cf6a057b06 ......
checking 01b6ca65e10f2669965fbc62440cb9b09a25d086 ......
	 orig commit -> 39675f7a7c7e7702f7d5341f1e0d01db746543a0 ......
checking 0cb6eaf5e5be88ddfda51100adc7149d00a28bb2 ......
	 orig commit -> 35033ab988c396ad7bce3b6d24060c16a9066db8 ......
checking d0f4cd75aee1d5e55303de347f5a89431480ec7b ......
	 orig commit -> fbdb328c6bae0a7c78d75734a738b66b86dffc96 ......
checking 49e065f5049f2b8d69f29ddc641498f46108dd12 ......
	 orig commit -> b5020a8e6b54d2ece80b1e7dedb33c79a40ebd47 ......
