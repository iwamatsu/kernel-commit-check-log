Check from v4.4.31 to v4.4.32
Commit count: 36
checking 4dab3e4df9944782cb3c229bd37f5ea8b5f52bac ......
checking ae94da4c53b77058241fd3551f55cd40327be37d ......
	 orig commit -> 5e5ec1759dd663a1d5a2f10930224dd009e500e8 ......
checking 2be0548e64f19ebf97f5f7f8dddaa5f4c9d05a8d ......
	 orig commit -> ff0bd441bdfbfa09d05fdba9829a0401a46635c1 ......
checking ccc31f819918ee0c2681990b0366e920e374dfcd ......
	 orig commit -> c8213a638f65bf487c10593c216525952cca3690 ......
checking 227994b52c7355b6380885c86820fb3a2ac0e5c0 ......
	 orig commit -> c47b9e0944e483309d66c807d650ac8b8ceafb57 ......
checking 2e8cfc1fe9850281e0107610d4e1fc10276188f9 ......
	 orig commit -> 02d27234759dc4fe14a880ec1e1dee108cb0b503 ......
checking 72c13445dfb40e5d14d2d9fdc3c5ee61915a69fe ......
	 orig commit -> 91e4f1b6073dd680d86cdb7e42d7cccca9db39d8 ......
checking c57deabd2b17409fb6bc671f4cd1499e720be4b4 ......
	 orig commit -> d450527ad04ad180636679aeb3161ec58079f1ba ......
	 orig commit -> 91e4f1b6073dd680d86cdb7e42d7cccca9db39d8 ......
checking e28a472742bf4a33f93cb9f3910272ea2a38792b ......
	 orig commit -> aaaab56dba9af4fe75461e0ee13231c1a6ea174d ......
checking d21daf7f3ee8da964596c4b62da190756a239d1a ......
	 orig commit -> 104ba78c98808ae837d1f63aae58c183db5505df ......
checking bd891f40f04f8b96d9148ff8a5d538b60171409c ......
	 orig commit -> bf911e985d6bbaa328c20c3e05f4eb03de11fdd6 ......
checking 7c230d0e546a3c6fa72485e80b8e5fe8873822d7 ......
	 orig commit -> 9ee7837449b3d6f0fcf9132c6b5e5aaa58cc67d4 ......
checking d46c76765da696502837d823227d4c32c28d8c05 ......
	 orig commit -> 10df8e6152c6c400a563a673e9956320bfce1871 ......
checking 80d59090d4e311be18c421b191fdddb02e2cb4dc ......
	 orig commit -> a4b8e71b05c27bae6bad3bdecddbc6b68a3ad8cf ......
checking 1a680e543f84c35d17c8134808d51a343bd3d766 ......
	 orig commit -> 396a30cce15d084b2b1a395aa6d515c3d559c674 ......
	 orig commit -> a681574c99be23e4d20b769bf0e543239c364af5 ......
		 a681574c99be23e4d20b769bf0e543239c364af5 has problem. Fixes commit -> 396a30cce15d084b2b1a395aa6d515c3d559c674
commit 1a680e543f84c35d17c8134808d51a343bd3d766
Author: WANG Cong <xiyou.wangcong@gmail.com>
Date:   Thu Oct 20 14:19:46 2016 -0700

    ipv4: use the right lock for ping_group_range
    
    [ Upstream commit 396a30cce15d084b2b1a395aa6d515c3d559c674 ]
    
    This reverts commit a681574c99be23e4d20b769bf0e543239c364af5
    ("ipv4: disable BH in set_ping_group_range()") because we never
    read ping_group_range in BH context (unlike local_port_range).
    
    Then, since we already have a lock for ping_group_range, those
    using ip_local_ports.lock for ping_group_range are clearly typos.
    
    We might consider to share a same lock for both ping_group_range
    and local_port_range w.r.t. space saving, but that should be for
    net-next.
    
    Fixes: a681574c99be ("ipv4: disable BH in set_ping_group_range()")
    Fixes: ba6b918ab234 ("ping: move ping_group_range out of CONFIG_SYSCTL")
    Cc: Eric Dumazet <edumazet@google.com>
    Cc: Eric Salo <salo@google.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 827ada2d671bb4aa4be9fe43e872d941c5a29619 ......
	 orig commit -> a681574c99be23e4d20b769bf0e543239c364af5 ......
		 a681574c99be23e4d20b769bf0e543239c364af5 has problem. Fixes commit -> 396a30cce15d084b2b1a395aa6d515c3d559c674
commit 1a680e543f84c35d17c8134808d51a343bd3d766
Author: WANG Cong <xiyou.wangcong@gmail.com>
Date:   Thu Oct 20 14:19:46 2016 -0700

    ipv4: use the right lock for ping_group_range
    
    [ Upstream commit 396a30cce15d084b2b1a395aa6d515c3d559c674 ]
    
    This reverts commit a681574c99be23e4d20b769bf0e543239c364af5
    ("ipv4: disable BH in set_ping_group_range()") because we never
    read ping_group_range in BH context (unlike local_port_range).
    
    Then, since we already have a lock for ping_group_range, those
    using ip_local_ports.lock for ping_group_range are clearly typos.
    
    We might consider to share a same lock for both ping_group_range
    and local_port_range w.r.t. space saving, but that should be for
    net-next.
    
    Fixes: a681574c99be ("ipv4: disable BH in set_ping_group_range()")
    Fixes: ba6b918ab234 ("ping: move ping_group_range out of CONFIG_SYSCTL")
    Cc: Eric Dumazet <edumazet@google.com>
    Cc: Eric Salo <salo@google.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 3cb00b90e8b1bd59382f5e1304dd751f9674f027 ......
	 orig commit -> fcd91dd449867c6bfe56a81cabba76b829fd05cd ......
checking 02558fa0e061c74c37bdb786694025f70582aaca ......
	 orig commit -> 85dda4e5b0ee1f5b4e8cc93d39e475006bc61ccd ......
checking ebfbfc2e4df89c0fbeda64262a5a651e03f14274 ......
	 orig commit -> 7cb3f9214dfa443c1ccc2be637dcc6344cc203f0 ......
checking f467184e2323db21d014ff72c65e3967b42e122a ......
	 orig commit -> 9a0b1e8ba4061778897b544afc898de2163382f7 ......
checking e635b4766174381572b95f8fae153e7f1f36cf65 ......
	 orig commit -> a220445f9f4382c36a53d8ef3e08165fa27f7e2c ......
checking f9d4850af3c89934620f3f0363167da9cbb3f167 ......
	 orig commit -> 68d00f332e0ba7f60f212be74ede290c9f873bc5 ......
checking 705b5aca17c3a30ff93c53eb51368c8fcc9b49b8 ......
	 orig commit -> 8ce48623f0cf3d632e32448411feddccb693d351 ......
checking 6d123f1d396b50abd51e67eb9171e2ae8b3501ec ......
	 orig commit -> d35c99ff77ecb2eb239731b799386f3b3637a31e ......
checking d72cb5fb36bdc75cc3640b86409c68f1f1cbbe2a ......
	 orig commit -> 6664498280cf17a59c3e7cf1a931444c02633ed1 ......
		 6664498280cf17a59c3e7cf1a931444c02633ed1 has problem. Fixes commit -> 2bd624b4611ffee36422782d16e1c944d1351e98
commit fe41cfb48f2d82577ca5b56909ee251ae52cd172
Author: Anoob Soman <anoob.soman@citrix.com>
Date:   Wed Feb 15 20:25:39 2017 +0000

    packet: Do not call fanout_release from atomic contexts
    
    [ Upstream commit 2bd624b4611ffee36422782d16e1c944d1351e98 ]
    
    Commit 6664498280cf ("packet: call fanout_release, while UNREGISTERING a
    netdev"), unfortunately, introduced the following issues.
    
    1. calling mutex_lock(&fanout_mutex) (fanout_release()) from inside
    rcu_read-side critical section. rcu_read_lock disables preemption, most often,
    which prohibits calling sleeping functions.
    
    [  ] include/linux/rcupdate.h:560 Illegal context switch in RCU read-side critical section!
    [  ]
    [  ] rcu_scheduler_active = 1, debug_locks = 0
    [  ] 4 locks held by ovs-vswitchd/1969:
    [  ]  #0:  (cb_lock){++++++}, at: [<ffffffff8158a6c9>] genl_rcv+0x19/0x40
    [  ]  #1:  (ovs_mutex){+.+.+.}, at: [<ffffffffa04878ca>] ovs_vport_cmd_del+0x4a/0x100 [openvswitch]
    [  ]  #2:  (rtnl_mutex){+.+.+.}, at: [<ffffffff81564157>] rtnl_lock+0x17/0x20
    [  ]  #3:  (rcu_read_lock){......}, at: [<ffffffff81614165>] packet_notifier+0x5/0x3f0
    [  ]
    [  ] Call Trace:
    [  ]  [<ffffffff813770c1>] dump_stack+0x85/0xc4
    [  ]  [<ffffffff810c9077>] lockdep_rcu_suspicious+0x107/0x110
    [  ]  [<ffffffff810a2da7>] ___might_sleep+0x57/0x210
    [  ]  [<ffffffff810a2fd0>] __might_sleep+0x70/0x90
    [  ]  [<ffffffff8162e80c>] mutex_lock_nested+0x3c/0x3a0
    [  ]  [<ffffffff810de93f>] ? vprintk_default+0x1f/0x30
    [  ]  [<ffffffff81186e88>] ? printk+0x4d/0x4f
    [  ]  [<ffffffff816106dd>] fanout_release+0x1d/0xe0
    [  ]  [<ffffffff81614459>] packet_notifier+0x2f9/0x3f0
    
    2. calling mutex_lock(&fanout_mutex) inside spin_lock(&po->bind_lock).
    "sleeping function called from invalid context"
    
    [  ] BUG: sleeping function called from invalid context at kernel/locking/mutex.c:620
    [  ] in_atomic(): 1, irqs_disabled(): 0, pid: 1969, name: ovs-vswitchd
    [  ] INFO: lockdep is turned off.
    [  ] Call Trace:
    [  ]  [<ffffffff813770c1>] dump_stack+0x85/0xc4
    [  ]  [<ffffffff810a2f52>] ___might_sleep+0x202/0x210
    [  ]  [<ffffffff810a2fd0>] __might_sleep+0x70/0x90
    [  ]  [<ffffffff8162e80c>] mutex_lock_nested+0x3c/0x3a0
    [  ]  [<ffffffff816106dd>] fanout_release+0x1d/0xe0
    [  ]  [<ffffffff81614459>] packet_notifier+0x2f9/0x3f0
    
    3. calling dev_remove_pack(&fanout->prot_hook), from inside
    spin_lock(&po->bind_lock) or rcu_read-side critical-section. dev_remove_pack()
    -> synchronize_net(), which might sleep.
    
    [  ] BUG: scheduling while atomic: ovs-vswitchd/1969/0x00000002
    [  ] INFO: lockdep is turned off.
    [  ] Call Trace:
    [  ]  [<ffffffff813770c1>] dump_stack+0x85/0xc4
    [  ]  [<ffffffff81186274>] __schedule_bug+0x64/0x73
    [  ]  [<ffffffff8162b8cb>] __schedule+0x6b/0xd10
    [  ]  [<ffffffff8162c5db>] schedule+0x6b/0x80
    [  ]  [<ffffffff81630b1d>] schedule_timeout+0x38d/0x410
    [  ]  [<ffffffff810ea3fd>] synchronize_sched_expedited+0x53d/0x810
    [  ]  [<ffffffff810ea6de>] synchronize_rcu_expedited+0xe/0x10
    [  ]  [<ffffffff8154eab5>] synchronize_net+0x35/0x50
    [  ]  [<ffffffff8154eae3>] dev_remove_pack+0x13/0x20
    [  ]  [<ffffffff8161077e>] fanout_release+0xbe/0xe0
    [  ]  [<ffffffff81614459>] packet_notifier+0x2f9/0x3f0
    
    4. fanout_release() races with calls from different CPU.
    
    To fix the above problems, remove the call to fanout_release() under
    rcu_read_lock(). Instead, call __dev_remove_pack(&fanout->prot_hook) and
    netdev_run_todo will be happy that &dev->ptype_specific list is empty. In order
    to achieve this, I moved dev_{add,remove}_pack() out of fanout_{add,release} to
    __fanout_{link,unlink}. So, call to {,__}unregister_prot_hook() will make sure
    fanout->prot_hook is removed as well.
    
    Fixes: 6664498280cf ("packet: call fanout_release, while UNREGISTERING a netdev")
    Reported-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Anoob Soman <anoob.soman@citrix.com>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 63091b2c1deae0a7f1347a74097de8ccc9db3359 ......
	 orig commit -> 93409033ae653f1c9a949202fb537ab095b2092f ......
checking 9edbf4a0b60b62a1fb5f57248f6c9b9ffb30c328 ......
	 orig commit -> f39acc84aad10710e89835c60d3b6694c43a8dd9 ......
checking bb7ffb6b68a9be3ecdd3ce8ae333c4c0ce04cce7 ......
	 orig commit -> 63d75463c91a5b5be7c0aca11ceb45ea5a0ae81d ......
checking bc5d8ced3c9848bdcddcc575083bf50bbe04f03d ......
	 orig commit -> b82d44d78480faff7456e9e0999acb9d38666057 ......
checking 0ee4acb7b3bedfe264aabe4a7c47762e2cbdc97c ......
	 orig commit -> 1b0ff89852d79354e8a091c81a88df21f5aa9f0a ......
checking 6eb0061fa630ae97c733a4dcbe3e23333ebe8626 ......
	 orig commit -> 2cf750704bb6d7ed8c7d732e071dd1bc890ea5e8 ......
checking 4f312a802994e2bb7439262fdc43a0b8bd535697 ......
	 orig commit -> db32e4e49ce2b0e5fcc17803d011a401c0a637f6 ......
checking aadcd6a96010ce933c96d97a0c086a4da6110eec ......
	 orig commit -> 019b1c9fe32a2a32c1153e31375f87ec3e591273 ......
checking ac40148543c5f04093c95462861cf49cf9af5648 ......
	 orig commit -> 2fe664f1fcf7c4da6891f95708a7a56d3c024354 ......
checking d2e01b15657c394085fd810f4da6b5ef6574e14b ......
	 orig commit -> 20c64d5cd5a2bdcdc8982a06cb05e5e1bd851a3d ......
checking a35ce624a3ae06894db065727d33c17aff5cdaec ......
	 orig commit -> ffb4d6c8508657824bcef68a36b2a0f9d8c09d10 ......
