Check from v4.4.128 to v4.4.129
Commit count: 98
checking 8e2def054b2b088d18d7009aecf470aa62ab360e ......
checking 6f051f8986a89d0c482ea1dfc96bc226fb12389f ......
	 orig commit -> 2e898e4c0a3897ccd434adac5abb8330194f527b ......
checking 87d7ccbf09a7846818c30edf9bc8192719bfb05f ......
	 orig commit -> 54a307ba8d3cd00a3902337ffaae28f436eeb1a4 ......
checking a529f29a3ea9cb7e2c90053c02c8213f527374df ......
	 orig commit -> 4e800c0359d9a53e6bf0ab216954971b2515247f ......
checking d47a5ca386aaa6b8d17c7b8cdbdc7d2631c68278 ......
	 orig commit -> abc1be13fd113ddef5e2d807a466286b864caed3 ......
checking 820ca5772277c6690e18d48042a9569942d336bd ......
	 orig commit -> c20cd45eb01748f0fba77a504f956b000df4ea73 ......
checking ce98dd37cc5d5bcfde9ae899113e5f90d93f8acf ......
	 orig commit -> 1e6306652ba18723015d1b4967fe9de55f042499 ......
checking d10a274ada79aa5612126a77f10fa0c3af33bdb6 ......
	 orig commit -> 16a34adb9392b2fe4195267475ab5b472e55292c ......
checking 20e96d9038ca54a738561aa8b4c06fd84349e730 ......
	 orig commit -> 4a3877c4cedd95543f8726b0a98743ed8db0c0fb ......
checking 873b214be5693bdafcfe5ff205d6ace37e1e3ecd ......
	 orig commit -> a24cd490739586a7d2da3549a1844e1d7c4f4fc4 ......
checking 2154ecea6d72f9290d201fed637afb5178db5665 ......
	 orig commit -> c66b23c2840446a82c389e4cb1a12eb2a71fa2e4 ......
checking 263b8d4ebe5b0632a82a7cfe9e82e49af85b2a91 ......
	 orig commit -> b8858581febb050688e276b956796bc4a78299ed ......
checking 286427ed951d5673f171f007a29deb7b4abee694 ......
	 orig commit -> 13a83eac373c49c0a081cbcd137e79210fe78acd ......
checking d37aca471b6fa59cd7d52a9c4d1de12149d713cd ......
	 orig commit -> c96eebf07692e53bf4dd5987510d8b550e793598 ......
checking af878d5176be5df2c2d84d1e86a3722c8f638207 ......
	 orig commit -> daf70d89f80c6e1772233da9e020114b1254e7e0 ......
checking be204694cad3827d230b6dcd9f6fc83f3c7caeab ......
	 orig commit -> 8a8158c85e1e774a44fbe81106fa41138580dfd1 ......
		 8a8158c85e1e774a44fbe81106fa41138580dfd1 has problem. Fixes commit -> 2f7619ae90bf78cf576b5e72087aab0435266fdb
148b9aba99e0bbadf361747d21456e1589015f74
checking 6a5722cb3043570b6d9664634ca5fed9188fd027 ......
	 orig commit -> b3d7e55c3f886493235bfee08e1e5a4a27cbcce8 ......
checking 7c3a5626fd5c704c8deaeedcbf837579781dc6d2 ......
	 orig commit -> a955358d54695e4ad9f7d6489a7ac4d69a8fc711 ......
checking cebd9b67fe0bdbb55b45533a3d911b86bde88174 ......
	 orig commit -> af52f9982e410edac21ca4b49563053ffc9da1eb ......
checking fc338748e3e7740113c1c26e2248d919dd8cc05c ......
	 orig commit -> 8a56ef4f3ffba9ebf4967b61ef600b0a7ba10f11 ......
checking 68fc6f74b516447bbbddde1b08437787d0063c6d ......
	 orig commit -> 7ecb46e9ee9af18e304eb9e7d6804c59a408e846 ......
checking 9b06cce3ca4d60d442c39bfa7c058b71b1cee6c2 ......
	 orig commit -> c755e251357a0cee0679081f08c3f4ba797a8009 ......
checking b9b98c26705b8d5fba8f15faeb923b1c6f48d223 ......
	 orig commit -> 74dae4278546b897eb81784fdfcce872ddd8b2b8 ......
checking ba250be92484186b63ad52b7f9bcb66662e7ff2d ......
	 orig commit -> 85e290d92b4b794d0c758c53007eb4248d385386 ......
checking 4845fefe6d13a28702f92102dff11c1b773f00d0 ......
	 orig commit -> 18db4b4e6fc31eda838dd1c1296d67dbcb3dc957 ......
checking 7b0278ca9f280cab9a6fe2ca8c868db8df951427 ......
	 orig commit -> cf0d53ba4947aad6e471491d5b20a567cbe92e56 ......
checking 737e33da96b4bcd54bc7cc98d4d27cc694f67024 ......
	 orig commit -> 523184972b282cd9ca17a76f6ca4742394856818 ......
checking 1639df89e6b5841975bbf2f98200248df3210f85 ......
	 orig commit -> ddf9dc0eb5314d6dac8b19b1cc37c739c6896e7e ......
checking 0c8c443eb10937f98b47a4c82a75982593359ee0 ......
	 orig commit -> e15dc99dbb9cf99f6432e8e3c0b3a8f7a3403a86 ......
checking a2b3309a2c1c58560abd3eef1f2a0ff47713e3bd ......
	 orig commit -> f6d297df4dd47ef949540e4a201230d0c5308325 ......
checking 68ba825a3988d4c491953f3792f13da74e302963 ......
	 orig commit -> 40cab6e88cb0b6c56d3f30b7491a20e803f948f6 ......
		 40cab6e88cb0b6c56d3f30b7491a20e803f948f6 has problem. Fixes commit -> f6d297df4dd47ef949540e4a201230d0c5308325
commit a2b3309a2c1c58560abd3eef1f2a0ff47713e3bd
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Mar 27 14:32:23 2018 +0200

    ALSA: pcm: Fix mutex unbalance in OSS emulation ioctls
    
    commit f6d297df4dd47ef949540e4a201230d0c5308325 upstream.
    
    The previous fix 40cab6e88cb0 ("ALSA: pcm: Return -EBUSY for OSS
    ioctls changing busy streams") introduced some mutex unbalance; the
    check of runtime->oss.rw_ref was inserted in a wrong place after the
    mutex lock.
    
    This patch fixes the inconsistency by rewriting with the helper
    functions to lock/unlock parameters with the stream check.
    
    Fixes: 40cab6e88cb0 ("ALSA: pcm: Return -EBUSY for OSS ioctls changing busy streams")
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking f3e4c937c8b7c309abc6d8b98ddcc5bfabd0a653 ......
	 orig commit -> 02a5d6925cd34c3b774bdb8eefb057c40a30e870 ......
		 02a5d6925cd34c3b774bdb8eefb057c40a30e870 has problem. Fixes commit -> e15dc99dbb9cf99f6432e8e3c0b3a8f7a3403a86
5607dddbfca774fb38bffadcb077fe03aa4ac5c6
commit 9b47981bece8652172822e3b65d8f9ff2e1f61e6
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Mar 27 16:07:52 2018 +0300

    ALSA: pcm: potential uninitialized return values
    
    commit 5607dddbfca774fb38bffadcb077fe03aa4ac5c6 upstream.
    
    Smatch complains that "tmp" can be uninitialized if we do a zero size
    write.
    
    Fixes: 02a5d6925cd3 ("ALSA: pcm: Avoid potential races between OSS ioctls and read/write")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 0c8c443eb10937f98b47a4c82a75982593359ee0
Author: Takashi Iwai <tiwai@suse.de>
Date:   Sat Apr 7 11:48:58 2018 +0200

    ALSA: pcm: Fix endless loop for XRUN recovery in OSS emulation
    
    commit e15dc99dbb9cf99f6432e8e3c0b3a8f7a3403a86 upstream.
    
    The commit 02a5d6925cd3 ("ALSA: pcm: Avoid potential races between OSS
    ioctls and read/write") split the PCM preparation code to a locked
    version, and it added a sanity check of runtime->oss.prepare flag
    along with the change.  This leaded to an endless loop when the stream
    gets XRUN: namely, snd_pcm_oss_write3() and co call
    snd_pcm_oss_prepare() without setting runtime->oss.prepare flag and
    the loop continues until the PCM state reaches to another one.
    
    As the function is supposed to execute the preparation
    unconditionally, drop the invalid state check there.
    
    The bug was triggered by syzkaller.
    
    Fixes: 02a5d6925cd3 ("ALSA: pcm: Avoid potential races between OSS ioctls and read/write")
    Reported-by: syzbot+150189c103427d31a053@syzkaller.appspotmail.com
    Reported-by: syzbot+7e3f31a52646f939c052@syzkaller.appspotmail.com
    Reported-by: syzbot+4f2016cf5185da7759dc@syzkaller.appspotmail.com
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 9b47981bece8652172822e3b65d8f9ff2e1f61e6
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Mar 27 16:07:52 2018 +0300

    ALSA: pcm: potential uninitialized return values
    
    commit 5607dddbfca774fb38bffadcb077fe03aa4ac5c6 upstream.
    
    Smatch complains that "tmp" can be uninitialized if we do a zero size
    write.
    
    Fixes: 02a5d6925cd3 ("ALSA: pcm: Avoid potential races between OSS ioctls and read/write")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 60dd12fdf0e80e4399783f622392c1db84c5d8f6 ......
	 orig commit -> c64ed5dd9feba193c76eb460b451225ac2a0d87b ......
checking 4a12b4e2bb49518eba08bf269df8f8d0bb163e55 ......
	 orig commit -> 46325371b230cc66c743925c930a17e7d0b8211e ......
checking 4533f7e1785faab49c867ae19bf00840fe351b0c ......
	 orig commit -> 977f6f68331f94bb72ad84ee96b7b87ce737d89d ......
checking 8af69306a7b7286d98d0354e9128f3e3bc30f07e ......
	 orig commit -> cf1ba1d73a33944d8c1a75370a35434bf146b8a7 ......
checking 5fd7232783fcbf8945a5cabb4276467a6b87750c ......
	 orig commit -> 753872373b599384ac7df809aa61ea12d1c4d5d1 ......
checking b7b4411c8990623148aa97e5ca8c99abef11d28e ......
	 orig commit -> 6a4a4595804548e173f0763a0e7274a3521c59a9 ......
checking caf996ebc7962864978043add39deed63881e0cc ......
	 orig commit -> 9593f4f56cf5d1c443f66660a0c7f01de38f979d ......
checking 3f0491bb892eaa8a5364b38c651f02744b47ce63 ......
	 orig commit -> a04f0017c22453613d5f423326b190c61e3b4f98 ......
checking a7e67521c4f2074a8a2d21dd5bd3fb01d86c4d6f ......
	 orig commit -> bbe4b3af9d9e3172fb9aa1f8dcdfaedcb381fc64 ......
checking 4cc90ae05e9b0520edef9aa756edb400bef6838e ......
	 orig commit -> 4d1a535b8ec5e74b42dfd9dc809142653b2597f6 ......
checking 5c90515d520a6c23ed0605d7185f8cc2b47f799d ......
	 orig commit -> c5637476bbf9bb86c7f0413b8f4822a73d8d2d07 ......
checking 7a113a311b135b5e07410499074c3ab1d91999c6 ......
	 orig commit -> 3a148896b24adf8688dc0c59af54531931677a40 ......
checking 6931ced5d5ad430f2c7f6d2d7ca52c1058482a3c ......
	 orig commit -> e68088e78d82920632eba112b968e49d588d02a2 ......
checking bb256eeaec50d26413822ab8ef1fa51789fa0a2c ......
	 orig commit -> a820ccbe21e8ce8e86c39cd1d3bc8c7d1cbb949b ......
checking fe8fd32fb234272097104fe0a88fe126becfe5ff ......
	 orig commit -> 8435168d50e66fa5eae01852769d20a36f9e5e83 ......
checking 990251318b97ed7153d9adbf633035536c7d685b ......
	 orig commit -> 8e4b5eae5decd9dfe5a4ee369c22028f90ab4c44 ......
checking 51e3b81b386104e1e088dd3abfb3d0c2a93d7631 ......
	 orig commit -> 044e6e3d74a3d7103a0c8a9305dfd94d64000660 ......
checking 10c624084758db770986de190dc9b387dfdb49c0 ......
	 orig commit -> 85e0c4e89c1b864e763c4e3bb15d0b6d501ad5d9 ......
checking 010f0fb42c2a19b71405ead2009164e4dcf78a00 ......
	 orig commit -> 9f886f4d1d292442b2f22a0a33321eae821bde40 ......
checking 00cf298fae0bcee000bad030574b70307175219b ......
	 orig commit -> f2a659f7d8d5da803836583aa16df06bdf324252 ......
checking 9a8b65d4aaacde8344acb9073900eeccedc69827 ......
	 orig commit -> a01df75ce737951ad13a08d101306e88c3f57cb2 ......
checking 60f6c860c25892b4a1c8791cec0427af0d96bf86 ......
	 orig commit -> 6de0b13cc0b4ba10e98a9263d7a83b940720b77a ......
checking 8d7610e122885386c4004dd0b5aca3e8928a1e50 ......
	 orig commit -> 3064a03b94e60388f0955fcc29f3e8a978d28f75 ......
checking dace93d0f8d00412a1d13848a7958c9c7a634289 ......
	 orig commit -> 3b8070335f751aac9f1526ae2e012e6f5b8b0f21 ......
		 3b8070335f751aac9f1526ae2e012e6f5b8b0f21 has problem. Fixes commit -> c1d2a31397ec51f0370f6bd17b19b39152c263cb
commit 380efa6a71c5aba6dec2a1432a29644bb0b220a8
Author: Nicholas Piggin <npiggin@gmail.com>
Date:   Tue May 15 01:59:47 2018 +1000

    powerpc/powernv: Fix NVRAM sleep in invalid context when crashing
    
    commit c1d2a31397ec51f0370f6bd17b19b39152c263cb upstream.
    
    Similarly to opal_event_shutdown, opal_nvram_write can be called in
    the crash path with irqs disabled. Special case the delay to avoid
    sleeping in invalid context.
    
    Fixes: 3b8070335f75 ("powerpc/powernv: Fix OPAL NVRAM driver OPAL_BUSY loops")
    Cc: stable@vger.kernel.org # v3.2
    Signed-off-by: Nicholas Piggin <npiggin@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 16d770bd91fc1c9659639adb2bd4c614934fc9be ......
	 orig commit -> 34dd25de9fe3f60bfdb31b473bf04b28262d0896 ......
checking dcc29e3f43fa46acd746203ea1153af39a60ecb1 ......
	 orig commit -> 0bfdf598900fd62869659f360d3387ed80eb71cf ......
checking c8d4770e46042457ebea2b1786d878f3e6831423 ......
	 orig commit -> 741de617661794246f84a21a02fc5e327bffc9ad ......
checking dbae9a8dae744af765527099e685e22e6fbc46eb ......
	 orig commit -> ac75a041048b8c1f7418e27621ca5efda8571043 ......
		 ac75a041048b8c1f7418e27621ca5efda8571043 has problem. Fixes commit -> ef6eaf27274c0351f7059163918f3795da13199c
commit dc3f661542a18e2cf2a3f410aadb6593b095a9b8
Author: Jason Andryuk <jandryuk@gmail.com>
Date:   Fri Jun 22 12:25:49 2018 -0400

    HID: i2c-hid: Fix "incomplete report" noise
    
    commit ef6eaf27274c0351f7059163918f3795da13199c upstream.
    
    Commit ac75a041048b ("HID: i2c-hid: fix size check and type usage") started
    writing messages when the ret_size is <= 2 from i2c_master_recv.  However, my
    device i2c-DLL07D1 returns 2 for a short period of time (~0.5s) after I stop
    moving the pointing stick or touchpad.  It varies, but you get ~50 messages
    each time which spams the log hard.
    
    [  95.925055] i2c_hid i2c-DLL07D1:01: i2c_hid_get_input: incomplete report (83/2)
    
    This has also been observed with a i2c-ALP0017.
    
    [ 1781.266353] i2c_hid i2c-ALP0017:00: i2c_hid_get_input: incomplete report (30/2)
    
    Only print the message when ret_size is totally invalid and less than 2 to cut
    down on the log spam.
    
    Fixes: ac75a041048b ("HID: i2c-hid: fix size check and type usage")
    Reported-by: John Smith <john-s-84@gmx.net>
    Cc: stable@vger.kernel.org
    Signed-off-by: Jason Andryuk <jandryuk@gmail.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 0ab6b8c91ecfbe8d2c4fb5119d6f67b12e1be2cc ......
	 orig commit -> cabdf83dadfb3d83eec31e0f0638a92dbd716435 ......
checking b286fd4a7d0849dc9d48d099d7ba6250894a7536 ......
	 orig commit -> 64627388b50158fd24d6ad88132525b95a5ef573 ......
checking 63aa8d8968331fa53d05491f812879a8d7fe3c69 ......
	 orig commit -> 13d3047c81505cc0fb9bdae7810676e70523c8bf ......
checking bd69c85f1f133d1a54b87ad30aef4e98e60c17e6 ......
	 orig commit -> bbf038618a24d72e2efc19146ef421bb1e1eda1a ......
checking d8ad6cb0222cb8ef107af59e574614d5bd447a55 ......
	 orig commit -> f00e71091ab92eba52122332586c6ecaa9cd1a56 ......
checking 4c65e94eb476b8e7d806d7e36ca1f5f789e9804a ......
	 orig commit -> c2d2e6738a209f0f9dffa2dc8e7292fc45360d61 ......
checking 318a306c53d17fa333d888d29c45268c6a8b1783 ......
	 orig commit -> 9a06757dcc8509c162ac00488c8c82fc98e04227 ......
checking 31118e88019feb54b3457c57252d96a250d6d68b ......
	 orig commit -> e8fd0adf105e132fd84545997bbef3d5edc2c9c1 ......
checking e23007895028b0cb73dc28d5b4e7fa5976a0dfab ......
	 orig commit -> af6f8529098aeb0e56a68671b450cf74e7a64fcd ......
checking 5a310ab03d5a8fc4fb2d90133a383c2a3474da38 ......
	 orig commit -> a9f2a846f0503e7d729f552e3ccfe2279010fe94 ......
checking b7e06a79c2e3a7e16ad1ed4887cad9a103ca355d ......
	 orig commit -> 3f05317d9889ab75c7190dcd39491d2a97921984 ......
checking 0a2f9fe1b663c9c8e9fee7436bfab013270451da ......
	 orig commit -> 60bb83b81169820c691fbfa33a6a4aef32aa4b0b ......
checking bc6305c0fa911d1af1be896e7222431a07112d15 ......
	 orig commit -> 9ad553abe66f8be3f4755e9fa0a6ba137ce76341 ......
checking 78cc9472ae1995d50c1d1382bebbb906c8d02ac2 ......
	 orig commit -> b5094b7f135be34630e3ea8a98fa215715d0f29d ......
checking 782635ba966ee2adc898adb9af2bc240b1aded43 ......
	 orig commit -> 78a8dfbabbece22bee58ac4cb26cab10e7a19c5d ......
checking 75ee85667473444fe10765850e4edc2727f9da75 ......
	 orig commit -> 29b7a6fa1ec07e8480b0d9caf635a4498a438bf4 ......
		 29b7a6fa1ec07e8480b0d9caf635a4498a438bf4 has problem. Fixes commit -> 6e7d80161066c99d12580d1b985cb1408bb58cf1
commit 7cff31473f7e9ffa8f54a3ca59387f329d90e3a9
Author: Richard Weinberger <richard@nod.at>
Date:   Wed May 16 22:17:03 2018 +0200

    ubi: fastmap: Cancel work upon detach
    
    commit 6e7d80161066c99d12580d1b985cb1408bb58cf1 upstream.
    
    Ben Hutchings pointed out that 29b7a6fa1ec0 ("ubi: fastmap: Don't flush
    fastmap work on detach") does not really fix the problem, it just
    reduces the risk to hit the race window where fastmap work races against
    free()'ing ubi->volumes[].
    
    The correct approach is making sure that no more fastmap work is in
    progress before we free ubi data structures.
    So we cancel fastmap work right after the ubi background thread is
    stopped.
    By setting ubi->thread_enabled to zero we make sure that no further work
    tries to wake the thread.
    
    Fixes: 29b7a6fa1ec0 ("ubi: fastmap: Don't flush fastmap work on detach")
    Fixes: 74cdaf24004a ("UBI: Fastmap: Fix memory leaks while closing the WL sub-system")
    Cc: stable@vger.kernel.org
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Cc: Martin Townsend <mtownsend1973@gmail.com>
    
    Signed-off-by: Richard Weinberger <richard@nod.at>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking a4e98ec002e1c5d1691a2ef8a35c8b5006cdc87e ......
	 orig commit -> aac17948a7ce01fb60b9ee6cf902967a47b3ce26 ......
checking 12ed237ccc0518a867bb6ba8d624865dfb44620c ......
	 orig commit -> 28b0f8a6962a24ed21737578f3b1b07424635c9e ......
checking 34a6851c55f72b3121b2c3d2d26ce61cc5869182 ......
	 orig commit -> 65ea11ec6a82b1d44aba62b59e9eb20247e57c6e ......
checking c597f98755e0387067127033eef7a21a34ecf21c ......
	 orig commit -> f5967101e9de12addcda4510dfbac66d7c5779c3 ......
		 f5967101e9de12addcda4510dfbac66d7c5779c3 has problem. Fixes commit -> 65ea11ec6a82b1d44aba62b59e9eb20247e57c6e
commit 34a6851c55f72b3121b2c3d2d26ce61cc5869182
Author: Ville Syrjälä <ville.syrjala@linux.intel.com>
Date:   Mon Aug 8 20:35:29 2016 +0300

    x86/hweight: Don't clobber %rdi
    
    commit 65ea11ec6a82b1d44aba62b59e9eb20247e57c6e upstream.
    
    The caller expects %rdi to remain intact, push+pop it make that happen.
    
    Fixes the following kind of explosions on my core2duo machine when
    trying to reboot or shut down:
    
      general protection fault: 0000 [#1] PREEMPT SMP
      Modules linked in: i915 i2c_algo_bit drm_kms_helper cfbfillrect syscopyarea cfbimgblt sysfillrect sysimgblt fb_sys_fops cfbcopyarea drm netconsole configfs binfmt_misc iTCO_wdt psmouse pcspkr snd_hda_codec_idt e100 coretemp hwmon snd_hda_codec_generic i2c_i801 mii i2c_smbus lpc_ich mfd_core snd_hda_intel uhci_hcd snd_hda_codec snd_hwdep snd_hda_core ehci_pci 8250 ehci_hcd snd_pcm 8250_base usbcore evdev serial_core usb_common parport_pc parport snd_timer snd soundcore
      CPU: 0 PID: 3070 Comm: reboot Not tainted 4.8.0-rc1-perf-dirty #69
      Hardware name:                  /D946GZIS, BIOS TS94610J.86A.0087.2007.1107.1049 11/07/2007
      task: ffff88012a0b4080 task.stack: ffff880123850000
      RIP: 0010:[<ffffffff81003c92>]  [<ffffffff81003c92>] x86_perf_event_update+0x52/0xc0
      RSP: 0018:ffff880123853b60  EFLAGS: 00010087
      RAX: 0000000000000001 RBX: ffff88012fc0a3c0 RCX: 000000000000001e
      RDX: 0000000000000000 RSI: 0000000040000000 RDI: ffff88012b014800
      RBP: ffff880123853b88 R08: ffffffffffffffff R09: 0000000000000000
      R10: ffffea0004a012c0 R11: ffffea0004acedc0 R12: ffffffff80000001
      R13: ffff88012b0149c0 R14: ffff88012b014800 R15: 0000000000000018
      FS:  00007f8b155cd700(0000) GS:ffff88012fc00000(0000) knlGS:0000000000000000
      CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
      CR2: 00007f8b155f5000 CR3: 000000012a2d7000 CR4: 00000000000006f0
      Stack:
       ffff88012fc0a3c0 ffff88012b014800 0000000000000004 0000000000000001
       ffff88012fc1b750 ffff880123853bb0 ffffffff81003d59 ffff88012b014800
       ffff88012fc0a3c0 ffff88012b014800 ffff880123853bd8 ffffffff81003e13
      Call Trace:
       [<ffffffff81003d59>] x86_pmu_stop+0x59/0xd0
       [<ffffffff81003e13>] x86_pmu_del+0x43/0x140
       [<ffffffff8111705d>] event_sched_out.isra.105+0xbd/0x260
       [<ffffffff8111738d>] __perf_remove_from_context+0x2d/0xb0
       [<ffffffff8111745d>] __perf_event_exit_context+0x4d/0x70
       [<ffffffff810c8826>] generic_exec_single+0xb6/0x140
       [<ffffffff81117410>] ? __perf_remove_from_context+0xb0/0xb0
       [<ffffffff81117410>] ? __perf_remove_from_context+0xb0/0xb0
       [<ffffffff810c898f>] smp_call_function_single+0xdf/0x140
       [<ffffffff81113d27>] perf_event_exit_cpu_context+0x87/0xc0
       [<ffffffff81113d73>] perf_reboot+0x13/0x40
       [<ffffffff8107578a>] notifier_call_chain+0x4a/0x70
       [<ffffffff81075ad7>] __blocking_notifier_call_chain+0x47/0x60
       [<ffffffff81075b06>] blocking_notifier_call_chain+0x16/0x20
       [<ffffffff81076a1d>] kernel_restart_prepare+0x1d/0x40
       [<ffffffff81076ae2>] kernel_restart+0x12/0x60
       [<ffffffff81076d56>] SYSC_reboot+0xf6/0x1b0
       [<ffffffff811a823c>] ? mntput_no_expire+0x2c/0x1b0
       [<ffffffff811a83e4>] ? mntput+0x24/0x40
       [<ffffffff811894fc>] ? __fput+0x16c/0x1e0
       [<ffffffff811895ae>] ? ____fput+0xe/0x10
       [<ffffffff81072fc3>] ? task_work_run+0x83/0xa0
       [<ffffffff81001623>] ? exit_to_usermode_loop+0x53/0xc0
       [<ffffffff8100105a>] ? trace_hardirqs_on_thunk+0x1a/0x1c
       [<ffffffff81076e6e>] SyS_reboot+0xe/0x10
       [<ffffffff814c4ba5>] entry_SYSCALL_64_fastpath+0x18/0xa3
      Code: 7c 4c 8d af c0 01 00 00 49 89 fe eb 10 48 09 c2 4c 89 e0 49 0f b1 55 00 4c 39 e0 74 35 4d 8b a6 c0 01 00 00 41 8b 8e 60 01 00 00 <0f> 33 8b 35 6e 02 8c 00 48 c1 e2 20 85 f6 7e d2 48 89 d3 89 cf
      RIP  [<ffffffff81003c92>] x86_perf_event_update+0x52/0xc0
       RSP <ffff880123853b60>
      ---[ end trace 7ec95181faf211be ]---
      note: reboot[3070] exited with preempt_count 2
    
    Cc: Borislav Petkov <bp@suse.de>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Ingo Molnar <mingo@kernel.org>
    Fixes: f5967101e9de ("x86/hweight: Get rid of the special calling convention")
    Signed-off-by: Ville Syrjälä <ville.syrjala@linux.intel.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Matthias Kaehlcke <mka@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 3d069960454e2b8795fed56fba9efb5f3e7a8615 ......
	 orig commit -> 4bfc33807a9a02764bdd1e42e794b3b401240f27 ......
checking 460439418f1c720d87baa55ed4c965fc9275576d ......
	 orig commit -> 3f01ddb962dc506916c243f9524e8bef97119b77 ......
checking 085c9c4b9e7eb21d6bdfb08228ee16a3af6c2cc3 ......
	 orig commit -> 53765341ee821c0a0f1dec41adc89c9096ad694c ......
checking 09293a7b610f7a2a145c4dc7bf4315886457d0da ......
	 orig commit -> 0c4c5860e9983eb3da7a3d73ca987643c3ed034b ......
checking 2f2c030c1e96ac9055f36d8a841e751ac4fe40d7 ......
	 orig commit -> 7972326a26b5bf8dc2adac575c4e03ee7e9d193a ......
checking 5da4880c985b0b00021809f7fb7153ed10f4eaa0 ......
	 orig commit -> 30ce4d1903e1d8a7ccd110860a5eef3c638ed8be ......
checking 93da190b72043d607803b350d947769b7b27e1ec ......
	 orig commit -> 15deb080a6087b73089139569558965750e69d67 ......
checking 7dc2c154c1764e2d19a18380e51935cb5ccb5c66 ......
	 orig commit -> 0cf1e05157b9e5530dcc3ca9fec9bf617fc93375 ......
checking f614d9f7372ca02aab68fae7da21ee9c7826ec86 ......
	 orig commit -> dae55b6fef58530c13df074bcc182c096609339e ......
checking 123d30649e328dd9f8823fa63db9f7c5f5a581e8 ......
	 orig commit -> 1e047eaab3bb5564f25b41e9cd3a053009f4e789 ......
checking 9580b588c86174f292ea6648320cea9f4d9f4128 ......
	 orig commit -> b0761b57e0bf11ada4c45e68f4cba1370363d90d ......
	 orig commit -> 94df1040b1e6aacd8dec0ba3c61d7e77cd695f26 ......
checking f83eb6b57f5ae7f4d1bc668f198655e854a90432 ......
	 orig commit -> c02216acf4177c4411d33735c81cad687790fa59 ......
checking f20002ad77fbfca3efadb2649a446899ce505af3 ......
	 orig commit -> 91d29b288aed3406caf7c454bf2b898c96cfd177 ......
checking 292924ec3ade9670728f7f32d130eb5e3ed5e694 ......
	 orig commit -> 1c196a6c771c47a2faa63d38d913e03284f73a16 ......
checking 410ce740596adde29697fdd8dff8ef618bb1c3d4 ......
	 orig commit -> 63d8e38f6ae6c36dd5b5ba0e8c112e8861532ea2 ......
checking aedc7bff2ea537367d59d71c47d4eb6552762f06 ......
	 orig commit -> 117db4b27bf08dba412faf3924ba55fe970c57b8 ......
checking 8778f3e6e35b2a618dc96722d4e945fbba783180 ......
	 orig commit -> 615b2665fd20c327b631ff1e79426775de748094 ......
checking 96adc5c82bdf1e7d1c8e0830e7d3f9a3747ae8f3 ......
	 orig commit -> 85ea29f19eab56ec16ec6b92bc67305998706afa ......
