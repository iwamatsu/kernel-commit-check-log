Check from v4.4.174 to v4.4.175
Commit count: 144
checking 332deb1f5ce960682d35a2519f1bd50f8ba52820 ......
checking cb4f43bf87eb7332b3df1e78e50dee2dffea06f8 ......
	 orig commit -> da360299b6734135a5f66d7db458dcc7801c826a ......
checking d5800cff4fb8a4889103a6768629fd236ddf09a6 ......
	 orig commit -> a86caa9ba5d70696ceb35d1d39caa20d8b641387 ......
checking a4af2252e5e2dafa0eb732ecde40385ee2229d7a ......
	 orig commit -> cd4b1e34655d46950c065d9284b596cd8d7b28cd ......
checking 49cf68d70f47d951c9053d769d3976d9e1be1a25 ......
	 orig commit -> 39fba7835aacda65284a86e611774cbba71dac20 ......
checking 4307a871ce5778ff1f994ad24b3c3ec97efeaf16 ......
	 orig commit -> 6bc6895bdd6744e0136eaa4a11fbdb20a7db4e40 ......
checking f8e3d1b1014009c223793813cbc00a05706c908f ......
	 orig commit -> e9156cd26a495a18706e796f02a81fee41ec14f4 ......
checking 27a70770c37d6ae70c5e5989202af2a8e3c77bca ......
	 orig commit -> 4ae280b4ee3463fa57bbe6eede26b97daff8a0f1 ......
checking 5079b1d1aac92afd534e6a6f6a127817c0a96a52 ......
	 orig commit -> 10970e1b4be9c74fce8ab6e3c34a7d718f063f2c ......
checking 492647b22f997a4ad1b7db790a55c3c3b80fec4b ......
	 orig commit -> cf43a757fd49442bc38f76088b70c2299eed2c2f ......
checking 7212e37cbdf99f48e4a6c689a42f4bda1ae69001 ......
	 orig commit -> f331e766c4be33f4338574f3c9f7f77e98ab4571 ......
checking 137f4db172afeb1aef3157e992e0e663c7d53aaa ......
	 orig commit -> 0722069a5374b904ec1a67f91249f90e1cfae259 ......
checking 5fc9518605a99a63ca35d2b3ab61112b9ea45161 ......
	 orig commit -> bfc913682464f45bc4d6044084e370f9048de9d5 ......
checking 1d8b20304de194cc426aa015001340ff54598906 ......
	 orig commit -> 491af60ffb848b59e82f7c9145833222e0bf27a5 ......
checking fd08513bf56ecff0e16e53dfb18e873d522b732c ......
	 orig commit -> e8b22d0a329f0fb5c7ef95406872d268f01ee3b1 ......
checking 6d6d6255b7a8987259b75eb1aa07b62cd5e20a27 ......
	 orig commit -> 90cc55f067f6ca0e64e5e52883ece47d8af7b67b ......
checking 05268b5cca5fe1664687f630ee82fdf6b5fa6797 ......
	 orig commit -> 2bc16b9f3223d049b57202ee702fcb5b9b507019 ......
checking 422e1adf1714d18ea07a48d44084907596be1f47 ......
	 orig commit -> 4cd3016ce996494f78fdfd87ea35c8ca5d0b413e ......
checking 222b22e1f32d7f96d5a4fdb15f3be3eb82cf340c ......
	 orig commit -> 528871b456026e6127d95b1b2bd8e3a003dc1614 ......
checking b7febf3b2909e98024e90fc5144b5075bfaddf03 ......
	 orig commit -> 7ad222b3aed350adfc27ee7eec4587ffe55dfdce ......
checking d347a8948c92e5ae07aac0a5f9d7ced595eedfda ......
	 orig commit -> f420c54e4b12c1361c6ed313002ee7bd7ac58362 ......
	 orig commit -> 7db54c89f0b30a101584e09d3729144e6170059d ......
checking 29c84aa9f2a2c5215b910685549e798e7514ae6c ......
checking 1f39e518cf9190422119a53a6d6964e800e7e789 ......
	 orig commit -> 92a8109e4d3a34fb6b115c9098b51767dc933444 ......
checking 8347670127511f031d2e3503ae00a25d1956f19b ......
	 orig commit -> df209c43a0e8258e096fb722dfbdae4f0dd13fde ......
checking 32f04710885113bc1124380e0764372dceb0144a ......
	 orig commit -> b5f034845e70916fd33e172fad5ad530a29c10ab ......
checking 20ad50464b74dd2fc066f32cc4cbe2a3ac3673df ......
	 orig commit -> 7fca69d4e43fa1ae9cb4f652772c132dc5a659c6 ......
checking 28b5d0be0ab6427ee495fb4f10c0574f4132b360 ......
	 orig commit -> 6926e041a8920c8ec27e4e155efa760aa01551fd ......
		 6926e041a8920c8ec27e4e155efa760aa01551fd has problem. Fixes commit -> da360299b6734135a5f66d7db458dcc7801c826a
commit cb4f43bf87eb7332b3df1e78e50dee2dffea06f8
Author: Hauke Mehrtens <hauke@hauke-m.de>
Date:   Mon Feb 12 23:59:51 2018 +0100

    uapi/if_ether.h: move __UAPI_DEF_ETHHDR libc define
    
    commit da360299b6734135a5f66d7db458dcc7801c826a upstream.
    
    This fixes a compile problem of some user space applications by not
    including linux/libc-compat.h in uapi/if_ether.h.
    
    linux/libc-compat.h checks which "features" the header files, included
    from the libc, provide to make the Linux kernel uapi header files only
    provide no conflicting structures and enums. If a user application mixes
    kernel headers and libc headers it could happen that linux/libc-compat.h
    gets included too early where not all other libc headers are included
    yet. Then the linux/libc-compat.h would not prevent all the
    redefinitions and we run into compile problems.
    This patch removes the include of linux/libc-compat.h from
    uapi/if_ether.h to fix the recently introduced case, but not all as this
    is more or less impossible.
    
    It is no problem to do the check directly in the if_ether.h file and not
    in libc-compat.h as this does not need any fancy glibc header detection
    as glibc never provided struct ethhdr and should define
    __UAPI_DEF_ETHHDR by them self when they will provide this.
    
    The following test program did not compile correctly any more:
    
    #include <linux/if_ether.h>
    #include <netinet/in.h>
    #include <linux/in.h>
    
    int main(void)
    {
            return 0;
    }
    
    Fixes: 6926e041a892 ("uapi/if_ether.h: prevent redefinition of struct ethhdr")
    Reported-by: Guillaume Nault <g.nault@alphalink.fr>
    Cc: <stable@vger.kernel.org> # 4.15
    Signed-off-by: Hauke Mehrtens <hauke@hauke-m.de>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Sudip Mukherjee <sudipm.mukherjee@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 7cbbbf750ef6542aebc00993ded62cc9c3256a6c ......
	 orig commit -> cb5b020a8d38f77209d0472a0fea755299a8ec78 ......
checking b2942d59a3cd66a5202eedcd41e751c0d0bd6e5e ......
	 orig commit -> 9114daa825fc3f335f9bea3313ce667090187280 ......
checking 8fe161469f1847d14068aec829d77e428cb653d1 ......
	 orig commit -> 955d3411a17f590364238bd0d3329b61f20c1cd2 ......
checking ca6fd8df6f737e0a108e6b77486d6d6ea8a0897e ......
	 orig commit -> 35e6103861a3a970de6c84688c6e7a1f65b164ca ......
checking 2e9e4e1590d2f9e572b6a72991ba6ca54019374c ......
	 orig commit -> 4aac9228d16458cedcfd90c7fb37211cf3653ac3 ......
checking 1793dc65ee85f96ce2ddcdb586e98214ac0dc474 ......
	 orig commit -> 60da90b224ba77a934decbb8129dabc861edd526 ......
	 orig commit -> 6e785302dad32228819d8066e5376acd15d0e6ba ......
checking 2a41ed30abe710f39717e42e76a8466c15965eee ......
	 orig commit -> 2eee74b7e2a496dea49847c36fd09320505f45b7 ......
checking b661fff5f8a0f19824df91cc3905ba2c5b54dc87 ......
	 orig commit -> 13054abbaa4f1fd4e6f3b4b63439ec033b4c8035 ......
checking 697c6f72c4935a6361fb36d7d80fa6a8f958c271 ......
	 orig commit -> 728354c005c36eaf44b6e5552372b67e60d17f56 ......
checking 6bcca0bc47652a55ff1d2a71f50665661f24dfaa ......
	 orig commit -> 4cbfa1e6c09e98450aab3240e5119b0ab2c9795b ......
checking f1cd557ecbbfc1338c38e15f19f519854a0b4799 ......
	 orig commit -> a2fcd5c84f7a7825e028381b10182439067aa90d ......
checking 06288a8e37077da3502c4cd4a7716491c96a75e1 ......
	 orig commit -> 9d0f50b80222dc273e67e4e14410fcfa4130a90c ......
checking fd9d0553fba3d24fc3ba14012489de148a368e3b ......
	 orig commit -> db4090920ba2d61a5827a23e441447926a02ffee ......
checking dfb3536268fc22706ff33d127557f78033b5b1cd ......
	 orig commit -> 67fc5dc8a541e8f458d7f08bf88ff55933bf9f9d ......
checking 91aaa0dd778be889777e53a1576c31bf249e0a5f ......
	 orig commit -> dcf300a69ac307053dfb35c2e33972e754a98bce ......
checking d93fdf4464a0fedd4d797f27a3945092681f6e11 ......
	 orig commit -> 05dc6001af0630e200ad5ea08707187fe5537e6d ......
checking 2b46cd1ae6876a4fba4cce51161d904ba41a4f7c ......
	 orig commit -> d88c93f090f708c18195553b352b9f205e65418f ......
checking 99b23b0d5fd57634ba3c4659dea6a654c2f99753 ......
	 orig commit -> f8a70d8b889f180e6860cb1f85fed43d37844c5a ......
checking 60de9fffbe5d59325d9c2319bac1620588b20d17 ......
	 orig commit -> 7146db3317c67b517258cb5e1b08af387da0618b ......
checking 381fc50960aa551da7abb4a630fde2d0aee737b4 ......
	 orig commit -> 35634ffa1751b6efd8cf75010b509dcb0263e29b ......
		 35634ffa1751b6efd8cf75010b509dcb0263e29b has problem. Fixes commit -> cf43a757fd49442bc38f76088b70c2299eed2c2f
commit 492647b22f997a4ad1b7db790a55c3c3b80fec4b
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Mon Feb 11 23:27:42 2019 -0600

    signal: Restore the stop PTRACE_EVENT_EXIT
    
    commit cf43a757fd49442bc38f76088b70c2299eed2c2f upstream.
    
    In the middle of do_exit() there is there is a call
    "ptrace_event(PTRACE_EVENT_EXIT, code);" That call places the process
    in TACKED_TRACED aka "(TASK_WAKEKILL | __TASK_TRACED)" and waits for
    for the debugger to release the task or SIGKILL to be delivered.
    
    Skipping past dequeue_signal when we know a fatal signal has already
    been delivered resulted in SIGKILL remaining pending and
    TIF_SIGPENDING remaining set.  This in turn caused the
    scheduler to not sleep in PTACE_EVENT_EXIT as it figured
    a fatal signal was pending.  This also caused ptrace_freeze_traced
    in ptrace_check_attach to fail because it left a per thread
    SIGKILL pending which is what fatal_signal_pending tests for.
    
    This difference in signal state caused strace to report
    strace: Exit of unknown pid NNNNN ignored
    
    Therefore update the signal handling state like dequeue_signal
    would when removing a per thread SIGKILL, by removing SIGKILL
    from the per thread signal mask and clearing TIF_SIGPENDING.
    
    Acked-by: Oleg Nesterov <oleg@redhat.com>
    Reported-by: Oleg Nesterov <oleg@redhat.com>
    Reported-by: Ivan Delalande <colona@arista.com>
    Cc: stable@vger.kernel.org
    Fixes: 35634ffa1751 ("signal: Always notice exiting tasks")
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 6f17dfe5bbd52189249d8ef359c93e9300712cea ......
	 orig commit -> d5d27fd9826b59979b184ec288e4812abac0e988 ......
checking cb7c96ee91df92164ade7575f117b3962e5ab260 ......
	 orig commit -> 489338a717a0dfbbd5a3fabccf172b78f0ac9015 ......
		 489338a717a0dfbbd5a3fabccf172b78f0ac9015 has problem. Fixes commit -> 03d309711d687460d1345de8a0363f45b1c8cd11
commit 7a36263302979039305b2103ecc550394b0a944c
Author: Thomas Richter <tmricht@linux.ibm.com>
Date:   Tue Feb 19 16:36:39 2019 +0100

    perf test: Fix failure of 'evsel-tp-sched' test on s390
    
    [ Upstream commit 03d309711d687460d1345de8a0363f45b1c8cd11 ]
    
    Commit 489338a717a0 ("perf tests evsel-tp-sched: Fix bitwise operator")
    causes test case 14 "Parse sched tracepoints fields" to fail on s390.
    
    This test succeeds on x86.
    
    In fact this test now fails on all architectures with type char treated
    as type unsigned char.
    
    The root cause is the signed-ness of character arrays in the tracepoints
    sched_switch for structure members prev_comm and next_comm.
    
    On s390 the output of:
    
     [root@m35lp76 perf]# cat /sys/kernel/debug/tracing/events/sched/sched_switch/format
     name: sched_switch
     ID: 287
     format:
       field:unsigned short common_type; offset:0; size:2;  signed:0;
       ...
       field:char prev_comm[16]; offset:8; size:16; signed:0;
       ...
       field:char next_comm[16]; offset:40; size:16; signed:0;
    
    reveals the character arrays prev_comm and next_comm are per
    default unsigned char and have values in the range of 0..255.
    
    On x86 both fields are signed as this output shows:
     [root@f29]# cat /sys/kernel/debug/tracing/events/sched/sched_switch/format
     name: sched_switch
     ID: 287
     format:
       field:unsigned short common_type; offset:0; size:2;  signed:0;
       ...
       field:char prev_comm[16]; offset:8; size:16; signed:1;
       ...
       field:char next_comm[16]; offset:40; size:16; signed:1;
    
    and the character arrays prev_comm and next_comm are per default signed
    char and have values in the range of -1..127.  The implementation of
    type char is architecture specific.
    
    Since the character arrays in both tracepoints sched_switch and
    sched_wakeup should contain ascii characters, simply omit the check for
    signedness in the test case.
    
    Output before:
    
      [root@m35lp76 perf]# ./perf test -F 14
      14: Parse sched tracepoints fields                        :
      --- start ---
      sched:sched_switch: "prev_comm" signedness(0) is wrong, should be 1
      sched:sched_switch: "next_comm" signedness(0) is wrong, should be 1
      sched:sched_wakeup: "comm" signedness(0) is wrong, should be 1
      ---- end ----
      14: Parse sched tracepoints fields                        : FAILED!
      [root@m35lp76 perf]#
    
    Output after:
    
      [root@m35lp76 perf]# ./perf test -Fv 14
      14: Parse sched tracepoints fields                        :
      --- start ---
      ---- end ----
      Parse sched tracepoints fields: Ok
      [root@m35lp76 perf]#
    
    Fixes: 489338a717a0 ("perf tests evsel-tp-sched: Fix bitwise operator")
    
    Signed-off-by: Thomas Richter <tmricht@linux.ibm.com>
    Cc: Heiko Carstens <heiko.carstens@de.ibm.com>
    Cc: Hendrik Brueckner <brueckner@linux.vnet.ibm.com>
    Cc: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Link: http://lkml.kernel.org/r/20190219153639.31267-1-tmricht@linux.ibm.com
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
checking 06bbc4838a38854b8487aa19cdcb5816837fc059 ......
	 orig commit -> 9dff0aa95a324e262ffb03f425d00e4751f3294e ......
		 9dff0aa95a324e262ffb03f425d00e4751f3294e has problem. Fixes commit -> 528871b456026e6127d95b1b2bd8e3a003dc1614
commit 222b22e1f32d7f96d5a4fdb15f3be3eb82cf340c
Author: Ingo Molnar <mingo@kernel.org>
Date:   Wed Feb 13 07:57:02 2019 +0100

    perf/core: Fix impossible ring-buffer sizes warning
    
    commit 528871b456026e6127d95b1b2bd8e3a003dc1614 upstream.
    
    The following commit:
    
      9dff0aa95a32 ("perf/core: Don't WARN() for impossible ring-buffer sizes")
    
    results in perf recording failures with larger mmap areas:
    
      root@skl:/tmp# perf record -g -a
      failed to mmap with 12 (Cannot allocate memory)
    
    The root cause is that the following condition is buggy:
    
            if (order_base_2(size) >= MAX_ORDER)
                    goto fail;
    
    The problem is that @size is in bytes and MAX_ORDER is in pages,
    so the right test is:
    
            if (order_base_2(size) >= PAGE_SHIFT+MAX_ORDER)
                    goto fail;
    
    Fix it.
    
    Reported-by: "Jin, Yao" <yao.jin@linux.intel.com>
    Bisected-by: Borislav Petkov <bp@alien8.de>
    Analyzed-by: Peter Zijlstra <peterz@infradead.org>
    Cc: Julien Thierry <julien.thierry@arm.com>
    Cc: Mark Rutland <mark.rutland@arm.com>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Cc: <stable@vger.kernel.org>
    Fixes: 9dff0aa95a32 ("perf/core: Don't WARN() for impossible ring-buffer sizes")
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 122c0149ad74375d2e740048298aa0b82342004f ......
	 orig commit -> d28af26faa0b1daf3c692603d46bc4687c16f19e ......
checking 00025153e202c6040763cce695004dc977823822 ......
	 orig commit -> 9e63a7894fd302082cf3627fe90844421a6cbe7f ......
checking 9872ddae1949b46d5310e0e71ca26bb5c4e52a70 ......
	 orig commit -> ecec76885bcfe3294685dc363fd1273df0d5d65f ......
checking 1b5fd913a4eb07cb13e969bb8e3b1633a40e683f ......
	 orig commit -> 353c0956a618a07ba4bbe7ad00ff29fe70e8412a ......
checking b0f59c3d1fc63f58dada13e7ba2b7a0b54559d43 ......
	 orig commit -> 07c69f1148da7de3978686d3af9263325d9d60bd ......
checking ff8c1826eec15e441c6d19c0de327e2cd786fde5 ......
	 orig commit -> a53469a68eb886e84dd8b69a1458a623d3591793 ......
checking b191f1953846029cff59e07eb73502dccc87010d ......
	 orig commit -> 341198eda723c8c1cddbb006a89ad9e362502ea2 ......
checking c5cf17c81df2b82ea25e8e05e297272adcdc3f49 ......
	 orig commit -> 97e1532ef81acb31c30f9e75bf00306c33a77812 ......
checking bade8e5f2686ed458c4b71061a00a33ae1e5154c ......
	 orig commit -> a2ebba824106dabe79937a9f29a875f837e1b6d4 ......
checking a7dfde0f5bc0998487d8f6e33e1d503934852020 ......
	 orig commit -> 9509941e9c534920ccc4771ae70bd6cbbe79df1c ......
checking 71ce2e8957ff6eed31953f54a02fc3bd083f0d26 ......
	 orig commit -> 305a0ade180981686eec1f92aa6252a7c6ebb1cf ......
checking d7204d3860ee12f1d3da9680e9f25afa9ad65c1f ......
	 orig commit -> 4f2ab5e1d13d6aa77c55f4914659784efd776eb4 ......
checking b1746f9f05d35f1c55015899d40789b7bfc184bd ......
	 orig commit -> 17ab4f61b8cd6f9c38e9d0b935d86d73b5d0d2b5 ......
checking 8d8aafcdd74f5c0964056378ca3267b118103179 ......
	 orig commit -> 8dfb8d2cceb76b74ad5b58cc65c75994329b4d5e ......
checking 5296ebc355b230cbabdf05525001631a394285d3 ......
	 orig commit -> 294c149a209c6196c2de85f512b52ef50f519949 ......
checking b1a5e14594b37632183d42e7eaba821ed2e8e0a6 ......
	 orig commit -> 53bc8d2af08654659abfadfd3e98eb9922ff787c ......
checking 16570a4ab84d7017da388c59cc48494ad452b8a5 ......
	 orig commit -> 7596175e99b3d4bce28022193efd954c201a782a ......
checking ff0a4fa3e70f8c6106d53a895ef378636e2bc490 ......
	 orig commit -> 9b1f19d810e92d6cdc68455fbc22d9f961a58ce1 ......
checking a7ea4de3664593a4d79cb7e62e3c8736cabb5d3c ......
	 orig commit -> 08a77676f9c5fc69a681ccd2cd8140e65dcb26c7 ......
checking ae46de2430b7bfd5971de37589d565fdfc6463b3 ......
	 orig commit -> 29e270fc32192e7729057963ae7120663856c93e ......
checking 5ef0ebd78509388fbff3fb326744384d6f27e3ae ......
	 orig commit -> b1286ed7158e9b62787508066283ab0b8850b518 ......
checking 93af75d0aba032fd8407be632c8f2f8657829a10 ......
	 orig commit -> 03334ba8b425b2ad275c8f390cf83c7b081c3095 ......
checking 9a376109f0c3b78d56adeb2134d4f2cb2a765ce9 ......
	 orig commit -> 8099b047ecc431518b9bb6bdbba3549bbecdc343 ......
checking e1d575b52c32b40184c1d1ca6039e8c7d3ce2db7 ......
	 orig commit -> 76699a67f3041ff4c7af6d6ee9be2bfbf1ffb671 ......
checking 25768bb65482dd453ab7ebf8c103ec5313fd8aa5 ......
	 orig commit -> 304ae42739b108305f8d7b3eb3c1aec7c2b643a9 ......
checking 3f516da858df983c9c730541214c3ae426925749 ......
	 orig commit -> 6ae16dfb61bce538d48b7fe98160fada446056c5 ......
checking a711dcb283391b29f13f392304a582839fa8f8fb ......
	 orig commit -> 296dcc40f2f2e402facf7cd26cf3f2c8f4b17d47 ......
checking 4c549499c4c96c876289c73dca2e7ed995d80de8 ......
	 orig commit -> 093c48213ee37c3c3ff1cf5ac1aa2a9d8bc66017 ......
checking cab4f01c9cd250b207f869a301c71d075499a39d ......
	 orig commit -> 7418e6520f22a2e35815122fa5a53d5bbfa2c10f ......
checking 80f8149151d8ab9a4a4d70e0eb3b57a1be34153e ......
	 orig commit -> 70306d9dce75abde855cefaf32b3f71eed8602a3 ......
checking bc5abb80f1299581ae6d55fabd5da7bcbc72e3ea ......
	 orig commit -> 67a28de47faa83585dd644bd4c31e5a1d9346c50 ......
checking 1f8aea084cb3d962bdd1ceaadf0f6d54aa7862d5 ......
	 orig commit -> 26fd962bde0b15e54234fe762d86bc0349df1de4 ......
checking ccc9ed24493bc02b5174184ae5c73fee422cd0bd ......
	 orig commit -> 8892d8545f2d0342b9c550defbfb165db237044b ......
checking 7d1cfc10d42bbffa224ee7734f129834ad94abc8 ......
	 orig commit -> 59a63e479ce36a3f24444c3a36efe82b78e4a8e0 ......
checking b49344a2dc4bc1acb58b27fc2a3286661ad4fa88 ......
	 orig commit -> 5ac93f808338f4dd465402e91869702eb87db241 ......
checking 846aa256e6102004eaa4491350e3ab9c1784262b ......
	 orig commit -> 9d880c5945c748d8edcac30965f3349a602158c4 ......
checking cc980857718f2dd1edc385fade160b21f7770816 ......
	 orig commit -> 0464ed24380905d640030d368cd84a4e4d1e15e2 ......
checking 90beb6bbed6719bf5ee73dadebe6fd99cb57cc98 ......
	 orig commit -> 9aa3aa15f4c2f74f47afd6c5db4b420fadf3f315 ......
checking 259c502d0a0fee860097ed5fa0061223a302003b ......
	 orig commit -> c9c63915519b1def7043b184680f33c24cd49d7b ......
		 c9c63915519b1def7043b184680f33c24cd49d7b has problem. Fixes commit -> 07bd14ccc3049f9c0147a91a4227a571f981601a
commit 27763b01a4ff6a7cd87ed388f317ac489631468b
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Wed Dec 26 11:28:24 2018 +0000

    hwmon: (lm80) Fix missing unlock on error in set_fan_div()
    
    [ Upstream commit 07bd14ccc3049f9c0147a91a4227a571f981601a ]
    
    Add the missing unlock before return from function set_fan_div()
    in the error handling case.
    
    Fixes: c9c63915519b ("hwmon: (lm80) fix a missing check of the status of SMBus read")
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Signed-off-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
checking 8ba3a4eec0a5ec5428f431ec9fe35e3c6cd08ce1 ......
	 orig commit -> 594d1644cd59447f4fceb592448d5cd09eb09b5e ......
checking a8014f2741b434598c5323f7fb2984725fbc5ad5 ......
	 orig commit -> e87555e550cef4941579cd879759a7c0dee24e68 ......
checking 2e7c1f0dedb0838035fa7c7629b388ee2a5c10fd ......
	 orig commit -> 2122b40580dd9d0620398739c773d07a7b7939d0 ......
checking 03c5ed7dc9b9c051ff966f69e4645d623d4d187d ......
	 orig commit -> 1fb3a7a75e2efcc83ef21f2434069cddd6fae6f5 ......
checking 472f3f067cb96eac72991f5162594cf51e507bca ......
	 orig commit -> f75df8d4b4fabfad7e3cba2debfad12741c6fde7 ......
checking da079f87f933ddb8beee0b31bad57a3e5ba230b5 ......
	 orig commit -> fdac751355cd76e049f628afe6acb8ff4b1399f7 ......
checking 1fbbe0ccd56a59a5c07f73fe47bd60ca9a464409 ......
	 orig commit -> a52c5a16cf19d8a85831bb1b915a221dd4ffae3c ......
checking eb15351d9c125d6f4e34ffbc327f4f2d7d7de4d2 ......
	 orig commit -> 9848b6ddd8c92305252f94592c5e278574e7a6ac ......
checking 5c857f014b05c3565becd447d94d0d9e7e88f96a ......
	 orig commit -> b17b59602b6dcf8f97a7dc7bc489a48388d7063a ......
checking 3b5d41253b54509853bfde93b6e2f17427e07908 ......
	 orig commit -> d29e89e34952a9ad02c77109c71a80043544296e ......
checking 8b79471d23526de167534fb352fe6eac4ca70d40 ......
	 orig commit -> 4f68ef64cd7feb1220232bd8f501d8aad340a099 ......
		 4f68ef64cd7feb1220232bd8f501d8aad340a099 has problem. Fixes commit -> 51c8d24101c79ffce3e79137e2cee5dfeb956dd7
checking a66490925b7052fc2c6fca4babb738febfa5bb2e ......
	 orig commit -> 1629db9c75342325868243d6bca5853017d91cf8 ......
checking f74e04acc2d76ae90ae46adf524d7baf9c1a243c ......
	 orig commit -> fa89a4593b927b3f59c3b69379f31d3b22272e4e ......
checking b489ed3fbc3b894a1fe82d16d7570eeba2a9a799 ......
	 orig commit -> efc38dd7d5fa5c8cdd0c917c5d00947aa0539443 ......
checking 3df04b50ef3f92f10aca8eb70f6db7cb89146258 ......
	 orig commit -> 05a4ab823983d9136a460b7b5e0d49ee709a6f86 ......
checking fac39ee2e52b19f826a2c041a41f534fd35717e0 ......
	 orig commit -> 0d640732dbebed0f10f18526de21652931f0b2f2 ......
checking 9f01d0d19c73f73551e86628caedc12df523fd39 ......
	 orig commit -> 31e933645742ee6719d37573a27cce0761dcf92b ......
checking 98920f4a5d5b29307fc60d8774f8478efd902199 ......
	 orig commit -> e03e303edf1c63e6dd455ccd568c74e93ef3ba8c ......
checking fff375ea867e209ba4e999eab92f3d75dc404f41 ......
	 orig commit -> add6883619a9e3bf9658eaff1a547354131bbcd9 ......
checking b9037406e1516411dc79985436aa4629c7f5070b ......
	 orig commit -> 88af3209aa0881aa5ffd99664b6080a4be5f24e5 ......
checking ea59fcf67d78432cb87bbdc41936637112570120 ......
	 orig commit -> d288d95842f1503414b7eebce3773bac3390457e ......
checking 0d997e1635f7fccc4e7b572b814734b0f6ac9095 ......
	 orig commit -> 4f5c85fe3a60ace555d09898166af372547f97fc ......
checking c4d10ceb95344ccca376a515baf5078f94aa2977 ......
	 orig commit -> 9456823c842f346c74265fcd98d008d87a7eb6f5 ......
checking e21e67ef6ec8866d859353328b68df99a8030d82 ......
	 orig commit -> 0efcc2c0fd2001a83240a8c3d71f67770484917e ......
checking c90636fda3d6f1db1d33d2e3d41f35c43eff456e ......
	 orig commit -> 9f83cfdb1ace3ef268ecc6fda50058d2ec37d603 ......
checking 771727c059d92d0a3f78c1adce1865bd5001e5cc ......
	 orig commit -> a868e8530441286342f90c1fd9c5f24de3aa2880 ......
checking cab345f0e9b454422c3ec6578003926105414653 ......
	 orig commit -> 17f6c83fb5ebf7db4fcc94a5be4c22d5a7bfe428 ......
checking 54b53c5994528bacf6f3e517d75943c147e82b97 ......
	 orig commit -> 84fb6c7feb1494ebb7d1ec8b95cfb7ada0264465 ......
checking eb9c64e728f262a62969cb0fa2f8fe4798cfe97b ......
	 orig commit -> ce10a5b3954f2514af726beb78ed8d7350c5e41c ......
checking 235f1e5e124d6ad598dbb1be4ddcef4f952a352a ......
	 orig commit -> e86108940e541febf35813402ff29fa6f4a9ac0b ......
checking 7518fa7dc10aae3dcc80ef0176ffa9d1ae450f83 ......
	 orig commit -> 5b841bfab695e3b8ae793172a9ff7990f99cc3e2 ......
checking da327232f52b60ab960ffea3089bb46915b9e536 ......
	 orig commit -> aa35dc3c71950e3fec3e230c06c27c0fbd0067f8 ......
checking 028f17e00e1aae50465b058f4f985fd17e134887 ......
	 orig commit -> 6637401c35b2f327a35d27f44bda05e327f2f017 ......
checking 75086100ab60a68b22d9eaea71a45de66102dd1a ......
	 orig commit -> 1147e05ac9fc2ef86a3691e7ca5c2db7602d81dd ......
checking 2d6f9a86cd9a6081e0431f19757cc0879a701775 ......
	 orig commit -> 6e803e2e6e367db9a0d6ecae1bd24bb5752011bd ......
checking ef9cc1ec63de22707cefdc57da64522376d7dbc2 ......
	 orig commit -> 62a063b8e7d1db684db3f207261a466fa3194e72 ......
		 62a063b8e7d1db684db3f207261a466fa3194e72 has problem. Fixes commit -> dd838821f0a29781b185cd8fb8e48d5c177bd838
commit d18bcfe455106b23aa254d1da0c1a7f39b9b20fe
Author: Yihao Wu <wuyihao@linux.alibaba.com>
Date:   Wed Mar 6 21:03:50 2019 +0800

    nfsd: fix wrong check in write_v4_end_grace()
    
    commit dd838821f0a29781b185cd8fb8e48d5c177bd838 upstream.
    
    Commit 62a063b8e7d1 "nfsd4: fix crash on writing v4_end_grace before
    nfsd startup" is trying to fix a NULL dereference issue, but it
    mistakenly checks if the nfsd server is started. So fix it.
    
    Fixes: 62a063b8e7d1 "nfsd4: fix crash on writing v4_end_grace before nfsd startup"
    Cc: stable@vger.kernel.org
    Reviewed-by: Joseph Qi <joseph.qi@linux.alibaba.com>
    Signed-off-by: Yihao Wu <wuyihao@linux.alibaba.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 627e656239c63d8a81672d08de7885e89c12fa75 ......
	 orig commit -> a11f6ca9aef989b56cd31ff4ee2af4fb31a172ec ......
checking d67dec906b7a9069c5541fce2b50118178133a1a ......
	 orig commit -> f6176473a0c7472380eef72ebeb330cf9485bf0a ......
checking 262871e633994cd2fd5b68a2a8c3984081576511 ......
	 orig commit -> b61ac5b720146c619c7cdf17eff2551b934399e5 ......
checking f936083094d8c13444aa1d1af586f282ff542191 ......
	 orig commit -> 9eb40fa2cd2d1f6829e7b49bb22692f754b9cfe0 ......
checking 1e94c7b4db9abc95320f98bc23eea1878cd80e01 ......
	 orig commit -> 4787eff3fa88f62fede6ed7afa06477ae6bf984d ......
checking b02bfd8416d361a78a46a45ccb20e46d5f97204c ......
	 orig commit -> 5818c683a619c534c113e1f66d24f636defc29bc ......
checking c34330e1eccdd47268a9ed8c8e84632a2aa72001 ......
	 orig commit -> c10b26abeb53cabc1e6271a167d3f3d396ce0218 ......
checking eba6d94b54e74064ca7c57fe7242726f2fa8e9f1 ......
	 orig commit -> 336650c785b62c3bea7c8cf6061c933a90241f67 ......
checking 524b2be52946ce90b1716a2fd6b298182e325dc9 ......
	 orig commit -> b3a3eafeef769c6982e15f83631dcbf8d1794efb ......
checking caf6a81cd7037787d34db04a63d28a419d5d01e8 ......
	 orig commit -> 83d0bdc7390b890905634186baaa294475cd6a06 ......
checking 7c6340dfba35672db971c87bdc4fa178720abc12 ......
	 orig commit -> 397bd9211fe014b347ca8f95a8f4e1017bac1aeb ......
checking c9ddfda641c4e868b08c37ed51debee2f539ea0d ......
	 orig commit -> 5b3f5c408d8cc59b87e47f1ab9803dbd006e4a91 ......
checking 2f85daf84873df51f533894e50d9c0b80137dca0 ......
	 orig commit -> 53bb565fc5439f2c8c57a786feea5946804aa3e9 ......
checking dd307a8d156bf0d2a53bd389f48f90f86d604496 ......
	 orig commit -> 216f0efd19b9cc32207934fd1b87a45f2c4c593e ......
checking aeef84f38288f15d80905513c4eaf5b5cc66badd ......
	 orig commit -> 82c08c3e7f171aa7f579b231d0abbc1d62e91974 ......
checking 871243fc4903aa65df5ad3af38bec413cb8225c9 ......
	 orig commit -> b114d9009d386276bfc3352289fc235781ae3353 ......
checking f9d6798d26b93d91e8a34131f397dd14ec22de42 ......
	 orig commit -> 1539c7f23f256120f89f8b9ec53160790bce9ed2 ......
checking 6a7e6587a0c440d1c6d0747c795e1f059f13db8d ......
	 orig commit -> 0559ef7fde67bc6c83c6eb6329dbd6649528263e ......
checking 3f951709eb2412974077d50b8e14cbc675b246a4 ......
	 orig commit -> a37805098900a6e73a55b3a43b7d3bcd987bb3f4 ......
