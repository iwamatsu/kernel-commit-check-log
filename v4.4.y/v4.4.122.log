Check from v4.4.122 to v4.4.123
Commit count: 131
checking 3753696b0aee3f3f55e161ef41d2cb0ea7e6e225 ......
checking a6132276ab5dcc38b3299082efeb25b948263adb ......
	 orig commit -> 95a762e2c8c942780948091f8f2a4f32fce1ac6f ......
checking 5a876e8742b709ed4d3db068fe453515609e0402 ......
	 orig commit -> c8e4e5bdb62a5ac6f860ebcaaf7b467b62f453f1 ......
checking a52a0a6c908a83166f490e0983b7fbad92ea338c ......
	 orig commit -> 8874ae5f15f3feef3b4a415b9aed51edcf449aa1 ......
checking e1994e4d56b36d5d4cc9aacd252e3fd60d3c5595 ......
	 orig commit -> fd649f10c3d21ee9d7542c609f29978bdf73ab94 ......
checking 97c3e46ef53748278286fc09dcc30b138d6677c4 ......
	 orig commit -> 92e222df7b8f05c565009c7383321b593eca488b ......
checking 29b2031139a141facd75163b84f64c685cffd693 ......
	 orig commit -> 74402055a2d3ec998a1ded599e86185a27d9bbf4 ......
checking 036c4bdd66b72b45e43e0815294598c6b580c72a ......
	 orig commit -> f930c7043663188429cd9b254e9d761edfc101ce ......
checking db259b6768cf52ae1c0c92b7fc6e093a28969d71 ......
	 orig commit -> 14074aba4bcda3764c9a702b276308b89901d5b6 ......
checking 6d85835042a7f94b0ccc02d0103bd2000ebe25f6 ......
	 orig commit -> 68c59fcea1f2c6a54c62aa896cc623c1b5bc9b47 ......
checking abca46335f09a14ce98e31abef51083c39c09e03 ......
	 orig commit -> 4f2c7583e33eb08dc09dd2e25574b80175ba7d93 ......
checking 5ae91b40db1df6899365c170d49bcb0d7f0f5190 ......
	 orig commit -> d0264c01e7587001a8c4608a5d1818dba9a4c11a ......
checking c68e1f443fca1ecb00d3c206d29ca14f4f21184b ......
	 orig commit -> a6d7cff472eea87d96899a20fa718d2bab7109f3 ......
		 a6d7cff472eea87d96899a20fa718d2bab7109f3 has problem. Fixes commit -> baf10564fbb66ea222cae66fbff11c444590ffd9
commit 1ac501e05fcd8a016d440c2d040272ab67f365b4
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Sun May 20 16:46:23 2018 -0400

    aio: fix io_destroy(2) vs. lookup_ioctx() race
    
    commit baf10564fbb66ea222cae66fbff11c444590ffd9 upstream.
    
    kill_ioctx() used to have an explicit RCU delay between removing the
    reference from ->ioctx_table and percpu_ref_kill() dropping the refcount.
    At some point that delay had been removed, on the theory that
    percpu_ref_kill() itself contained an RCU delay.  Unfortunately, that was
    the wrong kind of RCU delay and it didn't care about rcu_read_lock() used
    by lookup_ioctx().  As the result, we could get ctx freed right under
    lookup_ioctx().  Tejun has fixed that in a6d7cff472e ("fs/aio: Add explicit
    RCU grace period when freeing kioctx"); however, that fix is not enough.
    
    Suppose io_destroy() from one thread races with e.g. io_setup() from another;
    CPU1 removes the reference from current->mm->ioctx_table[...] just as CPU2
    has picked it (under rcu_read_lock()).  Then CPU1 proceeds to drop the
    refcount, getting it to 0 and triggering a call of free_ioctx_users(),
    which proceeds to drop the secondary refcount and once that reaches zero
    calls free_ioctx_reqs().  That does
            INIT_RCU_WORK(&ctx->free_rwork, free_ioctx);
            queue_rcu_work(system_wq, &ctx->free_rwork);
    and schedules freeing the whole thing after RCU delay.
    
    In the meanwhile CPU2 has gotten around to percpu_ref_get(), bumping the
    refcount from 0 to 1 and returned the reference to io_setup().
    
    Tejun's fix (that queue_rcu_work() in there) guarantees that ctx won't get
    freed until after percpu_ref_get().  Sure, we'd increment the counter before
    ctx can be freed.  Now we are out of rcu_read_lock() and there's nothing to
    stop freeing of the whole thing.  Unfortunately, CPU2 assumes that since it
    has grabbed the reference, ctx is *NOT* going away until it gets around to
    dropping that reference.
    
    The fix is obvious - use percpu_ref_tryget_live() and treat failure as miss.
    It's not costlier than what we currently do in normal case, it's safe to
    call since freeing *is* delayed and it closes the race window - either
    lookup_ioctx() comes before percpu_ref_kill() (in which case ctx->users
    won't reach 0 until the caller of lookup_ioctx() drops it) or lookup_ioctx()
    fails, ctx->users is unaffected and caller of lookup_ioctx() doesn't see
    the object in question at all.
    
    Cc: stable@kernel.org
    Fixes: a6d7cff472e "fs/aio: Add explicit RCU grace period when freeing kioctx"
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 8dc6893e8fadbd63c1549f411c20c96c53e3381f ......
	 orig commit -> 3b821409632ab778d46e807516b457dfa72736ed ......
checking c8c71406b74f81114b391b28395f3f3a7affdd56 ......
	 orig commit -> 95dd77580ccd66a0da96e6d4696945b8cea39431 ......
checking 89a42b03fd37eea645e095c04c92380ae2048d71 ......
	 orig commit -> 7d617264eb22b18d979eac6e85877a141253034e ......
checking b64129350fa765d8e313180abfc8a514b8ff06bd ......
	 orig commit -> a2ff19f7b70118ced291a28d5313469914de451b ......
checking f0b0e342f9483d9ef47cdea192f81047dc7f72db ......
	 orig commit -> d0f833065221cbfcbadf19fd4102bcfa9330006a ......
checking 996ecf9374ac5f6f6c94410d8c223d504a56e1d0 ......
	 orig commit -> 40088dc4e1ead7df31728c73f5b51d71da18831d ......
checking 422d4f1c0711b7563fa9833af971b51114796ad1 ......
	 orig commit -> 01c0b4265cc16bc1f43f475c5944c55c10d5768f ......
checking d7230d5286cec2301912714581024e9f0e22083b ......
	 orig commit -> 18a955219bf7d9008ce480d4451b6b8bf4483a22 ......
checking aa23dba4d83777fe04f4636d5d3d558b9af49a94 ......
	 orig commit -> b5069782453459f6ec1fdeb495d9901a4545fcb5 ......
checking 3680c0455c824715d6f1268d7a7f0a86c7f51d95 ......
	 orig commit -> 78393fdde2a456cafa414b171c90f26a3df98b20 ......
checking f9c392b61286174a1efbac15c363533d5fa9d00f ......
	 orig commit -> a9e017d5619eb371460c8e516f4684def62bef3a ......
checking 00968998edd5445ddb09c2889c4957a32aa43d34 ......
	 orig commit -> 9390afebe1d3f5a0be18b1afdd0ce09d67cebf9e ......
checking 21b0ae799a3c3195cb48dd3dc0798399545d25f8 ......
	 orig commit -> 327d53d005ca47b10eae940616ed11c569f75a9b ......
checking 76bda31c54844169bc28adec9240e567566cf10b ......
	 orig commit -> b7e27bc1d42e8e0cc58b602b529c25cd0071b336 ......
checking be272b01f8a725d0d6ff4c937d1507d3141ec71c ......
	 orig commit -> 2adfa4210f8f35cdfb4e08318cc06b99752964c2 ......
checking 401a3b5c027bde94e8318c4995cac8c82596b93d ......
	 orig commit -> 92ff42645028fa6f9b8aa767718457b9264316b4 ......
checking 62882df7b20cd2bd0f4f7084ee77c2062057ee8d ......
	 orig commit -> 65a12b3aafed5fc59f4ce41b22b752b1729e6701 ......
checking 3b9e0d070a0338a46283063c0ec1e467f725cd36 ......
	 orig commit -> c7976f5272486e4ff406014c4b43e2fa3b70b052 ......
checking f80285895d53fe221bdc51e37a98a7ecb82821bc ......
	 orig commit -> e16ea4bb516bc21ea2202f2107718b29218bea59 ......
checking 7740d2fa98b5475a71de343455e8e94add86d22d ......
	 orig commit -> 8516673a996870ea0ceb337ee4f83c33c5ec3111 ......
checking 7a9a365664c7f05e33bbda8f90f1180dcc202b38 ......
	 orig commit -> 5108d768408abc80e4e8d99f5b406a73cb04056b ......
checking eaea613f64dc2edd9d6c1bc6addd3dc8f49fb140 ......
	 orig commit -> 72d24955b44a4039db54a1c252b5031969eeaac3 ......
checking 8978bc9e74dbf40e3eb35cded8cb21d589259fe3 ......
	 orig commit -> d5ac225c7d64c9c3ef821239edc035634e594ec9 ......
checking 79cefe83df6b8184f675d2784c73d3de3f9a1385 ......
	 orig commit -> 4b3aec2bbbce1c35f50e7475a9fd78d24b9ea4ea ......
checking 3727a8819f085a32d472cd436235488f5966e903 ......
	 orig commit -> b369a0471503130cfc74f9f62071db97f48948c3 ......
checking ee79fc9f4e9162f8f2c5e5ede9d943e203a47b22 ......
	 orig commit -> a44c9d36509c83cf64f33b93f6ab2e63822c01eb ......
checking abda3469c366826a404fd62bfac6f3080471ef6b ......
	 orig commit -> 2d9bbd02c54094ceffa555143b0d68cd06504d63 ......
checking 6638091f1b1623db8b2338ef5a5f26d9ec870444 ......
	 orig commit -> 77be4c878c72e411ad22af96b6f81dd45c26450a ......
checking 17190f748384b72bac19caf12e586a305dec15f0 ......
	 orig commit -> 8cec57f5277ef0e354e37a0bf909dc71bc1f865b ......
checking 73b81f16cfdaa91ffc5c647f08415a0dbf75e905 ......
	 orig commit -> d8e488e8242ecf129eebc440c92d800a99ca109d ......
checking 3f7dfb7fcf98a7e73dee018c4a68537ce7fec646 ......
	 orig commit -> a8b149d32b663c1a4105273295184b78f53d33cf ......
checking c715f9883dedc196c2f4402445b9ec3596f6394f ......
	 orig commit -> 424ea0d174e82365f85c6770225dba098b8f1d5f ......
checking ffa0a8252863189f0bc92d46c34588df3699f8f8 ......
	 orig commit -> 7be4b5dc7ffa9499ac6ef33a5ffa9ff43f9b7057 ......
checking 59df934af72fe74a64be6a0d8dba21375a5482bc ......
	 orig commit -> e153db03c6b7a035c797bcdf35262586f003ee93 ......
checking 26d13e92539a15b7c4ac393e090ce0946f884550 ......
	 orig commit -> df467899da0b71465760b4e35127bce837244eee ......
checking c9e82cb34c3c2ee895af01bc899c6ed0bc6eb04a ......
	 orig commit -> be8f8284cd897af2482d4e54fbc2bdfc15557259 ......
checking 6daa32b6cb51b6daced7d17d28ab1ca48f01d401 ......
	 orig commit -> 65c79230576873b312c3599479c1e42355c9f349 ......
		 65c79230576873b312c3599479c1e42355c9f349 has problem. Fixes commit -> e538409257d0217a9bc715686100a5328db75a15
commit e1ca902b903d5afb31e767d0fe4a12fc9d0a9f0c
Author: Ben Hutchings <ben.hutchings@codethink.co.uk>
Date:   Wed Apr 4 22:38:49 2018 +0200

    test_firmware: fix setting old custom fw path back on exit, second try
    
    commit e538409257d0217a9bc715686100a5328db75a15 upstream.
    
    Commit 65c79230576 tried to clear the custom firmware path on exit by
    writing a single space to the firmware_class.path parameter.  This
    doesn't work because nothing strips this space from the value stored
    and fw_get_filesystem_firmware() only ignores zero-length paths.
    
    Instead, write a null byte.
    
    Fixes: 0a8adf58475 ("test: add firmware_class loader test")
    Fixes: 65c79230576 ("test_firmware: fix setting old custom fw path back on exit")
    Signed-off-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Acked-by: Luis R. Rodriguez <mcgrof@kernel.org>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 49bca2f6c7501eba79f95d9064872c0f443cb7b8 ......
	 orig commit -> a0982dfa03efca6c239c52cabebcea4afb93ea6b ......
checking 35be5af4d2572bc71b6ca92d153bb0e18ae84641 ......
	 orig commit -> 2fe2582649aa2355f79acddb86bd4d6c5363eb63 ......
checking 1333bbd4fdcb89ec4a9125aa9261ddf6bdb6ffef ......
	 orig commit -> 1b377924841df1e13ab5b225be3a83f807a92b52 ......
checking c5b1c194e1fe3eb097ac391919b9a40a8e4c3ebc ......
	 orig commit -> 9abd04af951e5734c9d5cfee9b49790844b734cf ......
checking ea1bdd6d034ca469012905d8d20d897cc4466938 ......
	 orig commit -> 593f4b19a094c4426bd1e1e3cbab87a48bd13c71 ......
checking b59718a13495d420491fa86f915273066d89fcab ......
	 orig commit -> 1d1c36650752b7fb81cee515a9bba4131cac4b7c ......
checking a5fc0f0e82b8982e762348db5a76ba2337792020 ......
	 orig commit -> 0f6edfe2bbbb59d161580cb4870fcc46f5490f85 ......
checking 51dd2600ccca3fc6108ed9bceda24bce3dd06d5d ......
	 orig commit -> 250b76f43f57d578ebff5e7211eb2c73aa5cd6ca ......
checking 176bee4cfcecb523314b18f2ada3da3249e68787 ......
	 orig commit -> d0381c81c2f782fa2131178d11e0cfb23d50d631 ......
		 d0381c81c2f782fa2131178d11e0cfb23d50d631 has problem. Fixes commit -> c93f5cf571e7795f97d49ef51b766cf25e328545
commit dd26ec7f47749633439d0a623299a04de5e63bca
Author: Masami Hiramatsu <mhiramat@kernel.org>
Date:   Thu May 25 19:38:17 2017 +0900

    kprobes/x86: Fix to set RWX bits correctly before releasing trampoline
    
    commit c93f5cf571e7795f97d49ef51b766cf25e328545 upstream.
    
    Fix kprobes to set(recover) RWX bits correctly on trampoline
    buffer before releasing it. Releasing readonly page to
    module_memfree() crash the kernel.
    
    Without this fix, if kprobes user register a bunch of kprobes
    in function body (since kprobes on function entry usually
    use ftrace) and unregister it, kernel hits a BUG and crash.
    
    Link: http://lkml.kernel.org/r/149570868652.3518.14120169373590420503.stgit@devbox
    
    Signed-off-by: Masami Hiramatsu <mhiramat@kernel.org>
    Fixes: d0381c81c2f7 ("kprobes/x86: Set kprobes pages read-only")
    Signed-off-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 41e08a6d0ce0dba699f3eabedf357b74ef721b63 ......
	 orig commit -> bd0b90676c30fe640e7ead919b3e38846ac88ab7 ......
checking 4a8e8e0af9a520a685e0ab2d489327d5220d7ce2 ......
	 orig commit -> 97d27b0dd015e980ade63fda111fd1353276e28b ......
checking 9088ad9fb1c004bbac5fd083a1a43cd52f8c8415 ......
	 orig commit -> 28676d869bbb5257b5f14c0c95ad3af3a7019dd5 ......
		 28676d869bbb5257b5f14c0c95ad3af3a7019dd5 has problem. Fixes commit -> f930c7043663188429cd9b254e9d761edfc101ce
68c59fcea1f2c6a54c62aa896cc623c1b5bc9b47
commit 6d85835042a7f94b0ccc02d0103bd2000ebe25f6
Author: Johannes Thumshirn <jthumshirn@suse.de>
Date:   Fri Jul 7 10:56:38 2017 +0200

    scsi: sg: fix SG_DXFER_FROM_DEV transfers
    
    commit 68c59fcea1f2c6a54c62aa896cc623c1b5bc9b47 upstream.
    
    SG_DXFER_FROM_DEV transfers do not necessarily have a dxferp as we set
    it to NULL for the old sg_io read/write interface, but must have a
    length bigger than 0. This fixes a regression introduced by commit
    28676d869bbb ("scsi: sg: check for valid direction before starting the
    request")
    
    Signed-off-by: Johannes Thumshirn <jthumshirn@suse.de>
    Fixes: 28676d869bbb ("scsi: sg: check for valid direction before starting the request")
    Reported-by: Chris Clayton <chris2553@googlemail.com>
    Tested-by: Chris Clayton <chris2553@googlemail.com>
    Cc: Douglas Gilbert <dgilbert@interlog.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Tested-by: Chris Clayton <chris2553@googlemail.com>
    Acked-by: Douglas Gilbert <dgilbert@interlog.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Cc: Cristian Crinteanu <crinteanu.cristian@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 036c4bdd66b72b45e43e0815294598c6b580c72a
Author: Johannes Thumshirn <jthumshirn@suse.de>
Date:   Thu Jul 27 09:11:26 2017 +0200

    scsi: sg: only check for dxfer_len greater than 256M
    
    commit f930c7043663188429cd9b254e9d761edfc101ce upstream.
    
    Don't make any assumptions on the sg_io_hdr_t::dxfer_direction or the
    sg_io_hdr_t::dxferp in order to determine if it is a valid request. The
    only way we can check for bad requests is by checking if the length
    exceeds 256M.
    
    Signed-off-by: Johannes Thumshirn <jthumshirn@suse.de>
    Fixes: 28676d869bbb (scsi: sg: check for valid direction before starting the request)
    Reported-by: Jason L Tibbitts III <tibbs@math.uh.edu>
    Tested-by: Jason L Tibbitts III <tibbs@math.uh.edu>
    Suggested-by: Doug Gilbert <dgilbert@interlog.com>
    Cc: Doug Gilbert <dgilbert@interlog.com>
    Cc: <stable@vger.kernel.org>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6d85835042a7f94b0ccc02d0103bd2000ebe25f6
Author: Johannes Thumshirn <jthumshirn@suse.de>
Date:   Fri Jul 7 10:56:38 2017 +0200

    scsi: sg: fix SG_DXFER_FROM_DEV transfers
    
    commit 68c59fcea1f2c6a54c62aa896cc623c1b5bc9b47 upstream.
    
    SG_DXFER_FROM_DEV transfers do not necessarily have a dxferp as we set
    it to NULL for the old sg_io read/write interface, but must have a
    length bigger than 0. This fixes a regression introduced by commit
    28676d869bbb ("scsi: sg: check for valid direction before starting the
    request")
    
    Signed-off-by: Johannes Thumshirn <jthumshirn@suse.de>
    Fixes: 28676d869bbb ("scsi: sg: check for valid direction before starting the request")
    Reported-by: Chris Clayton <chris2553@googlemail.com>
    Tested-by: Chris Clayton <chris2553@googlemail.com>
    Cc: Douglas Gilbert <dgilbert@interlog.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Tested-by: Chris Clayton <chris2553@googlemail.com>
    Acked-by: Douglas Gilbert <dgilbert@interlog.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Cc: Cristian Crinteanu <crinteanu.cristian@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking e3ba97ff30a0b3abf42c01b86f61fa4de45d7f3e ......
	 orig commit -> 0973ad97c187e06aece61f685b9c3b2d93290a73 ......
checking 80a2c7be43de39740467dc4e73a1bc1b4dbd54d5 ......
	 orig commit -> 1e0d4f0200e4dbdfc38d818f329d8a0955f7c6f5 ......
checking f71cd02d128da6ab6057616611539e1fd9693301 ......
	 orig commit -> 7654137071fa706e5c91f4f27bc2a5cd7e435a9b ......
checking e7c4718ff04741e29d46d3e7a7ed5e03fadccc21 ......
	 orig commit -> 9f20dfb44d03745d0d3cef2ffb3abf8d8024fa61 ......
checking ed5fb5479972d0db84e3bdbb664ace6f3e8b0bca ......
	 orig commit -> dad3f793f20fbb5c0c342f0f5a0bdf69a4d76089 ......
checking 2b84883f74b2be66de7f424e1f7d9bdf3b1530b2 ......
	 orig commit -> 7471fb77ce4dc4cb81291189947fcdf621a97987 ......
checking 23e4e7b49c65500cf4a4e494ee62076b009d29e6 ......
	 orig commit -> 0c08aaf873174c95e674cf21ffcd041c589d2e5b ......
checking 23d76e6eb830e948785eaa412c027c7a602578f4 ......
	 orig commit -> 411dac79cc2ed80f7e348ccc23eb4d8b0ba9f6d5 ......
checking 9e28ef2aec18c5c680be0d29363cff363a4547e0 ......
	 orig commit -> 5bba7aa4958e271c3ffceb70d47d3206524cf489 ......
checking f877d51c772e08c357175d3765c0fb3a984a94a4 ......
	 orig commit -> a81507c79f4ae9a0f9fb1054b59b62a090620dd9 ......
checking 01438902bfef3166aa8ba85a9b2acc0212e9fa3f ......
	 orig commit -> 1ef0910cfd681f0bd0b81f8809935b2006e9cfb9 ......
checking 2197bf03143e9b57438a0bf05663af5c0cc697bc ......
	 orig commit -> eeedc5421dd3b51de73e6106405c5c77f920f281 ......
checking 3e339465a836bb8070d62a728f6a1d9d2543f984 ......
	 orig commit -> 1769152ac64b0b07583f696b621624df2ca4c840 ......
checking 6e6d38bf9450805947c288a3349c73197d5e48cb ......
	 orig commit -> a294043b2fbd8de69d161457ed0c7a4026bbfa5a ......
checking 055510997257621d29f81a5d97b85927392a9243 ......
	 orig commit -> 9a1c779e6b06855e41099caa6f15b3b584dfa88c ......
checking 2ebf08beedcefcf9d35fc0b22b8e9a3a2b38bc2c ......
	 orig commit -> 5016bdb796b3726eec043ca0ce3be981f712c756 ......
checking 5f540051a2b4271e5ac9fd77c172e9c50c925c27 ......
	 orig commit -> 622f6e3265707ebf02ba776ac6e68003bcc31213 ......
checking 942c3c95ff969813573e755fb017e1f2d12cf461 ......
	 orig commit -> 75106523f39751390b5789b36ee1d213b3af1945 ......
checking 349a8d9b7b759a2f3ef773513bb4b3459a7e7fa4 ......
	 orig commit -> 540fca35e38d15777b310f450f63f056e63039f5 ......
checking 365a1dcaefccba917f513a5625bc086cfa6c22d1 ......
	 orig commit -> 8820a4cf0cb4cd5c6540a9a18b2cedbdfd5a6891 ......
checking 0628003f0dce308b1fb45ab3ed119321c8a70d76 ......
	 orig commit -> 71b0576bdb862e964a82c73327cdd1a249c53e67 ......
checking 5f73ddaefa4b15949a7beeea4978b7b2a2e2569c ......
	 orig commit -> ebf06af55c7594ed1fc18469a5cddf911c40e687 ......
checking 561a5d23b0a27a3edb8875d74efacc10e1cfedac ......
	 orig commit -> d39004ab136ebb6949a7dda9d24376f3d6209295 ......
checking 597609c8602285b94d520506a4ee6f7cba582d51 ......
	 orig commit -> a7a9dcd882a67b68568868b988289fce5ffd8419 ......
checking a4898ddf7e18b090d2d31ca9c9d51522d3fad1c2 ......
	 orig commit -> 16fe68dcab5702a024d85229ff7e98979cb701a5 ......
checking e8f9b4ba7e0bc702973f3895ca0a3f6d1fb2a7b5 ......
	 orig commit -> d13d4e063d4a08eb1686e890e9183dde709871bf ......
checking b4e7c94c8d315fc902ae5c19eb386da53b7917ac ......
	 orig commit -> ca42fb9e52d155547e6cf18cf26bce3e1a6af4ea ......
checking 416aa216705520b8a959b7e65417bd0cd92a0b9c ......
	 orig commit -> d916d923724d59cde99ee588f15eec59dd863bbd ......
checking fb45f5f30a77b56e7f30594e2313b3f4368d6bf5 ......
	 orig commit -> d6acfeb17d030bb3907e77c048b0e7783ad8e5a9 ......
checking e5d46d1ede440dd6af24f3e8c373cf1fc666a330 ......
	 orig commit -> aa74f0687cfe998e59b20d6454f45e8aa4403c45 ......
checking 37f60dd06e434e939007e3ed1e8ddc5177f1c169 ......
	 orig commit -> 2ed2b8621be2708c0f6d61fe9841e9ad8b9753f0 ......
checking e4d8f491c95f65eba894c90d36e96de151d1d129 ......
	 orig commit -> 142c6594acbcc32391af9c15f8cd65c6c177698f ......
checking 87a597c7a76352d8bdb73fc9f86e314829445a72 ......
	 orig commit -> c13ff37e359bb3eacf4e1760dcea8d9760aa7459 ......
checking fc23c57dbf90e2c9d5e1e394def93b4d2f190dbd ......
	 orig commit -> 06cceedcca67a93ac7f7aa93bbd9980c7496d14e ......
checking 610c3618669fd609d4ed2c199d64b26f1e41549a ......
	 orig commit -> 591a3d7c09fa08baff48ad86c2347dbd28a52753 ......
checking c3b33bdd9b85d9faad9b99158e05d481b3f5cb88 ......
	 orig commit -> 6faecba0b3da7b617bf72bef422bf0d3bb6dfe7d ......
checking 3cd99a14aa3730e45aac7b4e9472181686796985 ......
	 orig commit -> 7f3ff14b7eb1ffad132117f08a1973b48e653d43 ......
checking 37633f021b7f88a003ef57b334c9ac31509e89f9 ......
	 orig commit -> c48367427a39ea0b85c7cf018fe4256627abfd9e ......
checking d074ae9505e4f9f811e4df37ec7136f2900ca1ae ......
	 orig commit -> 812613591cb652344186c4cd912304ed02138566 ......
checking ffe11f9f642fad25a4443c08b8d7a345f46404ce ......
	 orig commit -> 6b8530cc056efd4a11b034ca5b1e9f7e9563f553 ......
checking 25952d168d82cc6f5697d7a3bd8532da65c2048a ......
	 orig commit -> add641e7dee31b36aee83412c29e39dd1f5e0c9c ......
checking 359c65e5d1bf9f1a67473cd320d5a088aeabfc67 ......
	 orig commit -> cf5cd9d4480a87da78768718cac194a71079b5cb ......
checking 75e674419d547ecdaed2c60f3a267442928ec5f1 ......
	 orig commit -> 0107042768658fea9f5f5a9c00b1c90f5dab6a06 ......
checking 6c07f47bbadcd54e5b54e539719528bfb146b4c6 ......
	 orig commit -> 1b8955bc5ac575009835e371ae55e7f3af2197a9 ......
checking fb796cd622706be3b0481f7e0e5f8ed0e2b06d91 ......
	 orig commit -> 54449af0e0b2ea43a8166611c95b730c850c3184 ......
checking 1b7750bdb26daeecf60b81781659cbc5896973d2 ......
	 orig commit -> 66a0d59cdd12546ddf01d229de28b07ccf6d637f ......
checking c4e4d194739aa7489b320648fdb60d943f215448 ......
	 orig commit -> 6e4c8480bd2eb95309ad3c875e11d2cad98f9188 ......
checking 60872f9e197cfb13eb11ab31bdf6a149e228ee3c ......
	 orig commit -> bcf54d5385abaea9c8026aae6f4eeb348671a52d ......
checking 2d59be48a99480ef920f4df4a4de010590c0f634 ......
	 orig commit -> a3a5129e122709306cfa6409781716c2933df99b ......
checking 182b1a9332536d824380d3d49ff6ed97686d885e ......
	 orig commit -> c2a736b698008d296c5010ec39077eeb5796109f ......
checking d813b4903ff6d10f362dee6a33fa2ec052949f30 ......
	 orig commit -> 88997e4208aea117627898e5f6f9801cf3cd42d2 ......
checking aa4b0ac7c16942717370b704869a72c383b0508a ......
	 orig commit -> c3883fe06488a483658ba5d849b70e49bee15e7c ......
checking 7acee5659b2008481d500b3299545a74f0cb78e1 ......
	 orig commit -> 70946723eeb859466f026274b29c6196e39149c4 ......
checking f2393b51e235875e79b15bb0dc751e4afdca55e9 ......
	 orig commit -> ca07baab0b1e627ae1d4a55d190fb1c9d32a3445 ......
checking 1b3ec39d3b6d1d252e03a86fcdcc8f8a2970258e ......
	 orig commit -> 608b20506941969ea30d8c08dc9ae02bb87dbf7d ......
checking f51536fff7b7c2a054b9dee487fec4eb55fe2d2e ......
	 orig commit -> e026e700d940a1ea3d3bc84d92ac668b1f015462 ......
checking a7bb9f33452f06da2e114cf154fa729963399414 ......
	 orig commit -> 88b897a30c525c2eee6e7f16e1e8d0f18830845e ......
checking f18637f909ad2e12de3ada8329deb1e4b30880e8 ......
	 orig commit -> c271dd6c391b535226cf1a81aaad9f33cb5899d3 ......
checking 8d6455c5f59f1445ceafc68ac6e51ed9eb6dd1a6 ......
	 orig commit -> 96a39aed25e6559b160786117df124084feb9080 ......
		 96a39aed25e6559b160786117df124084feb9080 has problem. Fixes commit -> 09f79fd49d94cda5837e9bfd0cb222232b3b6d9f
checking ecabc4777cf0918eb5e0ad2e0842bb4b1faab59e ......
	 orig commit -> 4b0b3aa6a2756e6115fdf275c521e4552a7082f3 ......
checking 89aadbc66e41aee339979f5b86c8bd6354c6ceac ......
	 orig commit -> e2f586bd83177d22072b275edd4b8b872daba924 ......
checking 4fbe422076d36615ec6fe8648d1aecfa460bc67d ......
	 orig commit -> fda78d7a0ead144f4b2cdb582dcba47911f4952c ......
checking d676ed9c0467494c9bfeb977d0fb26005546c82b ......
	 orig commit -> c73f8c00330f59ce9b1ace9ff698aca83390d358 ......
checking e1a3bc45832dedcee6137f048bbc3e49b8a657fb ......
	 orig commit -> 861078381ba56b56808113736000d9e7ead349c8 ......
checking 9b7940be33211e6f26ca129b8aaf53ea6e0f176b ......
	 orig commit -> 3f3752705dbd50b66b66ad7b4d54fe33d2f746ed ......
checking e6e7ba9d76af6ae8b223e7e8a68c2daaa3ffb789 ......
	 orig commit -> 6cc0c259d034c6ab48f4e12f505213988e73d380 ......
checking c2e4c685b3c97bbf6210602cbe5791c468a31fdd ......
	 orig commit -> d351c2db5420bb17dcd2d9aac7ddb5f64c6d04b3 ......
checking 3389b386139d79b5eb8bb023e9ca603d6245a8fa ......
	 orig commit -> 934df23171e7c5b71d937104d4957891c39748ff ......
checking 633a5a5235d697b145171ca1e702d3a4f6778131 ......
	 orig commit -> 9b54d816e00425c3a517514e0d677bb3cec49258 ......
