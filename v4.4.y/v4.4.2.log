Check from v4.4.2 to v4.4.3
Commit count: 136
checking 2134d97aa3a7ce38bb51f933f2e20cafde371085 ......
checking e2f712dc927e3b9a981ecd86a64d944d0b140322 ......
	 orig commit -> 4355efbd80482a961cae849281a8ef866e53d55c ......
checking a24d9a2fee9857a162ab18c9ad72aa6571ff4715 ......
	 orig commit -> 2e7bac536106236104e9e339531ff0fcdb7b8147 ......
checking 82e730baa9f7ba55cebe9365efde3e9f008d4376 ......
	 orig commit -> 51cbb5242a41700a3f250ecfb48dcfb7e4375ea4 ......
checking 1c94da3e7480e3370945aad2b784343da9eb664f ......
	 orig commit -> 572c39172684c3711e4a03c9a7380067e2b0661c ......
checking 565f222968d300657ad40d2fad91e4ccf3148d89 ......
	 orig commit -> b62526ed11a1fe3861ab98d40b7fdab8981d788a ......
checking e5e99792b6474b38ef2dea33cbcd1dde5fd70330 ......
	 orig commit -> ddf1d398e517e660207e2c807f76a90df543a217 ......
checking f86701c4f3cd59bac9363846e62fd26ecb2437c2 ......
	 orig commit -> 85bec5460ad8e05e0a8d70fb0f6750eb719ad092 ......
checking 16f14a28f660d0a3bdb169ebd17e0181c03d4778 ......
	 orig commit -> 3e85286e75224fa3f08bdad20e78c8327742634e ......
	 orig commit -> 24ba16bb3d499c49974669cd8429c3e4138ab102 ......
checking 7530e6fdd9f207a6ebcf669490656def4f7cf73e ......
	 orig commit -> b79f4a1c68bb99152d0785ee4ea3ab4396cdacc6 ......
checking 888959f2fd5042609f1beefe663ced4dea4dc109 ......
	 orig commit -> 96f859d52bcb1c6ea6f3388d39862bf7143e2f30 ......
checking 8373f6590f6b371bff2c5f2c0581548eb0192014 ......
	 orig commit -> cf9a6784f7c1b5ee2b9159a1246e327c331c5697 ......
checking 7193e802960f884e0ae6c40711c4e3c70fa3b070 ......
	 orig commit -> ed06e069775ad9236087594a1c1667367e983fb5 ......
checking 367e439dbc238907963ddf2758200b55087cab04 ......
	 orig commit -> 84889d49335627bc770b32787c1ef9ebad1da232 ......
checking fa932190a5f332e1936ab0223c7c5d79b5596a9c ......
	 orig commit -> e4ad29fa0d224d05e08b2858e65f112fd8edd4fe ......
checking 85a7ed329aca5efd0eb70789db145a1e989c7a53 ......
	 orig commit -> 97daf8b97ad6f913a34c82515be64dc9ac08d63e ......
checking acaf84251f8d49d0e7ee41d654f987dbd441f991 ......
	 orig commit -> fb75a4282d0d9a3c7c44d940582c2d226cf3acfb ......
checking 30066dcdf98a1474d71b3ce8a05f81e14a61a3bd ......
	 orig commit -> 9273a8bbf58a15051e53a777389a502420ddc60e ......
checking 15db15e2f10ae12d021c9a2e9edd8a03b9238551 ......
	 orig commit -> 1ac0b6dec656f3f78d1c3dd216fad84cb4d0a01e ......
checking fe90acff279808bf69425a1118639273a656c981 ......
	 orig commit -> b1d353ad3d5835b16724653b33c05124e1b5acf1 ......
checking edfde263bd8a70a0b93b11996fd2a77526ff3b80 ......
	 orig commit -> 6a6ac72fd6ea32594b316513e1826c3f6db4cc93 ......
checking e31e4672559674b0950885465a42968a86865d42 ......
	 orig commit -> d7ce36924344ace0dbdc855b1206cacc46b36d45 ......
checking 55e0d9869f1d3a6bbd5d1e864c0e866fe1247f97 ......
	 orig commit -> 732042821cfa106b3c20b9780e4c60fee9d68900 ......
checking 077b6173a8c89d666a06203f42267ff8b6d02d73 ......
	 orig commit -> c6400ba7e13a41539342f1b6e1f9e78419cb0148 ......
		 c6400ba7e13a41539342f1b6e1f9e78419cb0148 has problem. Fixes commit -> b76ba4af4ddd6a06f7f65769e7be1bc56556cdf5
checking f4595e0081495b677a98c780e9ec1ab68ce89488 ......
	 orig commit -> 46437f9a554fbe3e110580ca08ab703b59f2f95a ......
		 46437f9a554fbe3e110580ca08ab703b59f2f95a has problem. Fixes commit -> 3cb9185c67304b2a7ea9be73e7d13df6fb2793a1
732042821cfa106b3c20b9780e4c60fee9d68900
commit 11eea056980680aa4a24870165da340f4b32d06d
Author: Andrey Ryabinin <aryabinin@virtuozzo.com>
Date:   Wed Jul 20 15:45:00 2016 -0700

    radix-tree: fix radix_tree_iter_retry() for tagged iterators.
    
    [ Upstream commit 3cb9185c67304b2a7ea9be73e7d13df6fb2793a1 ]
    
    radix_tree_iter_retry() resets slot to NULL, but it doesn't reset tags.
    Then NULL slot and non-zero iter.tags passed to radix_tree_next_slot()
    leading to crash:
    
      RIP: radix_tree_next_slot include/linux/radix-tree.h:473
        find_get_pages_tag+0x334/0x930 mm/filemap.c:1452
      ....
      Call Trace:
        pagevec_lookup_tag+0x3a/0x80 mm/swap.c:960
        mpage_prepare_extent_to_map+0x321/0xa90 fs/ext4/inode.c:2516
        ext4_writepages+0x10be/0x2b20 fs/ext4/inode.c:2736
        do_writepages+0x97/0x100 mm/page-writeback.c:2364
        __filemap_fdatawrite_range+0x248/0x2e0 mm/filemap.c:300
        filemap_write_and_wait_range+0x121/0x1b0 mm/filemap.c:490
        ext4_sync_file+0x34d/0xdb0 fs/ext4/fsync.c:115
        vfs_fsync_range+0x10a/0x250 fs/sync.c:195
        vfs_fsync fs/sync.c:209
        do_fsync+0x42/0x70 fs/sync.c:219
        SYSC_fdatasync fs/sync.c:232
        SyS_fdatasync+0x19/0x20 fs/sync.c:230
        entry_SYSCALL_64_fastpath+0x23/0xc1 arch/x86/entry/entry_64.S:207
    
    We must reset iterator's tags to bail out from radix_tree_next_slot()
    and go to the slow-path in radix_tree_next_chunk().
    
    Fixes: 46437f9a554f ("radix-tree: fix race in gang lookup")
    Link: http://lkml.kernel.org/r/1468495196-10604-1-git-send-email-aryabinin@virtuozzo.com
    Signed-off-by: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Acked-by: Konstantin Khlebnikov <koct9i@gmail.com>
    Cc: Matthew Wilcox <willy@linux.intel.com>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: Ross Zwisler <ross.zwisler@linux.intel.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 55e0d9869f1d3a6bbd5d1e864c0e866fe1247f97
Author: Konstantin Khlebnikov <koct9i@gmail.com>
Date:   Fri Feb 5 15:37:01 2016 -0800

    radix-tree: fix oops after radix_tree_iter_retry
    
    commit 732042821cfa106b3c20b9780e4c60fee9d68900 upstream.
    
    Helper radix_tree_iter_retry() resets next_index to the current index.
    In following radix_tree_next_slot current chunk size becomes zero.  This
    isn't checked and it tries to dereference null pointer in slot.
    
    Tagged iterator is fine because retry happens only at slot 0 where tag
    bitmask in iter->tags is filled with single bit.
    
    Fixes: 46437f9a554f ("radix-tree: fix race in gang lookup")
    Signed-off-by: Konstantin Khlebnikov <koct9i@gmail.com>
    Cc: Matthew Wilcox <willy@linux.intel.com>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: Ohad Ben-Cohen <ohad@wizery.com>
    Cc: Jeremiah Mahler <jmmahler@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 11eea056980680aa4a24870165da340f4b32d06d
Author: Andrey Ryabinin <aryabinin@virtuozzo.com>
Date:   Wed Jul 20 15:45:00 2016 -0700

    radix-tree: fix radix_tree_iter_retry() for tagged iterators.
    
    [ Upstream commit 3cb9185c67304b2a7ea9be73e7d13df6fb2793a1 ]
    
    radix_tree_iter_retry() resets slot to NULL, but it doesn't reset tags.
    Then NULL slot and non-zero iter.tags passed to radix_tree_next_slot()
    leading to crash:
    
      RIP: radix_tree_next_slot include/linux/radix-tree.h:473
        find_get_pages_tag+0x334/0x930 mm/filemap.c:1452
      ....
      Call Trace:
        pagevec_lookup_tag+0x3a/0x80 mm/swap.c:960
        mpage_prepare_extent_to_map+0x321/0xa90 fs/ext4/inode.c:2516
        ext4_writepages+0x10be/0x2b20 fs/ext4/inode.c:2736
        do_writepages+0x97/0x100 mm/page-writeback.c:2364
        __filemap_fdatawrite_range+0x248/0x2e0 mm/filemap.c:300
        filemap_write_and_wait_range+0x121/0x1b0 mm/filemap.c:490
        ext4_sync_file+0x34d/0xdb0 fs/ext4/fsync.c:115
        vfs_fsync_range+0x10a/0x250 fs/sync.c:195
        vfs_fsync fs/sync.c:209
        do_fsync+0x42/0x70 fs/sync.c:219
        SYSC_fdatasync fs/sync.c:232
        SyS_fdatasync+0x19/0x20 fs/sync.c:230
        entry_SYSCALL_64_fastpath+0x23/0xc1 arch/x86/entry/entry_64.S:207
    
    We must reset iterator's tags to bail out from radix_tree_next_slot()
    and go to the slow-path in radix_tree_next_chunk().
    
    Fixes: 46437f9a554f ("radix-tree: fix race in gang lookup")
    Link: http://lkml.kernel.org/r/1468495196-10604-1-git-send-email-aryabinin@virtuozzo.com
    Signed-off-by: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Acked-by: Konstantin Khlebnikov <koct9i@gmail.com>
    Cc: Matthew Wilcox <willy@linux.intel.com>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: Ross Zwisler <ross.zwisler@linux.intel.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 55e0d9869f1d3a6bbd5d1e864c0e866fe1247f97
Author: Konstantin Khlebnikov <koct9i@gmail.com>
Date:   Fri Feb 5 15:37:01 2016 -0800

    radix-tree: fix oops after radix_tree_iter_retry
    
    commit 732042821cfa106b3c20b9780e4c60fee9d68900 upstream.
    
    Helper radix_tree_iter_retry() resets next_index to the current index.
    In following radix_tree_next_slot current chunk size becomes zero.  This
    isn't checked and it tries to dereference null pointer in slot.
    
    Tagged iterator is fine because retry happens only at slot 0 where tag
    bitmask in iter->tags is filled with single bit.
    
    Fixes: 46437f9a554f ("radix-tree: fix race in gang lookup")
    Signed-off-by: Konstantin Khlebnikov <koct9i@gmail.com>
    Cc: Matthew Wilcox <willy@linux.intel.com>
    Cc: Hugh Dickins <hughd@google.com>
    Cc: Ohad Ben-Cohen <ohad@wizery.com>
    Cc: Jeremiah Mahler <jmmahler@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 262139f0244b3ade149b785dc820118c4265cdb1 ......
	 orig commit -> 114bf37e04d839b555b3dc460b5e6ce156f49cf0 ......
checking ececa3ebe27f61db28161bc8c6ef2e1612dbafbe ......
	 orig commit -> 6611d8d76132f86faa501de9451a89bf23fb2371 ......
checking 4b20545910cbc96cede009adb89e19f7d2aa8f52 ......
	 orig commit -> 5c2ff95e41c9290d16556cd02e35b25d81be8fe0 ......
checking db33368ca32dd307cdcc191361de34f3937f513a ......
	 orig commit -> 9aacdd354d197ad64685941b36d28ea20ab88757 ......
checking b105aa33af0d487fc349212edecac04ef35a2622 ......
	 orig commit -> 72214a24a7677d4c7501eecc9517ed681b5f2db2 ......
checking dad5038f3fe2ac41078eed8abba9b7f5ce2fa05c ......
	 orig commit -> ea535e418c01837d07b6c94e817540f50bfdadb0 ......
checking 275adaf191c617409452bc569ad8f423e74678c7 ......
	 orig commit -> 601f1db653217f205ffa5fb33514b4e1711e56d1 ......
checking 71e5a4a747b0eadbff4835cf41493187bcbbd886 ......
	 orig commit -> 5c82171167adb8e4ac77b91a42cd49fb211a81a0 ......
checking d15298509b86f06d63135770ac8433295a18375f ......
	 orig commit -> a6835090716a85f2297668ba593bd00e1051e662 ......
checking 2231e5748746cd57df389521397e1c7f91882077 ......
	 orig commit -> 46924008273ed03bd11dbb32136e3da4cfe056e1 ......
checking db3ac35cbd310b3ce2e668f82eb6d0c77cc10b15 ......
	 orig commit -> fda3bec12d0979aae3f02ee645913d66fbc8a26e ......
checking 7c6471cb94adcb2d7027d6981e87e87ccd05b06e ......
	 orig commit -> e57e58bd390a6843db58560bf7b8341665d2e058 ......
checking d63a009a9bd9f0503a0d817b6ae97f5b06de22e3 ......
	 orig commit -> 9b1a12d29109234d2b9718d04d4d404b7da4e794 ......
	 orig commit -> e25bfb56ea7f046b71414e02f80f620deb5c6362 ......
checking c65a7b684133887e9211cd901bb689c48a6c18d8 ......
	 orig commit -> da972fb13bc5a1baad450c11f9182e4cd0a091f6 ......
checking b864f4e50c56a5bd0ab1603b86164cab66337906 ......
	 orig commit -> d4f1b06d685d11ebdaccf11c0db1cb3c78736862 ......
checking 726ecfc321994ec6ab044c1e3e5886408de991ac ......
	 orig commit -> 564b026fbd0d28e9f70fb3831293d2922bb7855b ......
		 564b026fbd0d28e9f70fb3831293d2922bb7855b has problem. Fixes commit -> 72676bb53f33fd0ef3a1484fc1ecfd306dc6ff40
commit f6ff7398220d7fda0f4d02b9c9755406d8169bc2
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Tue Feb 2 16:57:18 2016 -0800

    lib/test-string_helpers.c: fix and improve string_get_size() tests
    
    commit 72676bb53f33fd0ef3a1484fc1ecfd306dc6ff40 upstream.
    
    Recently added commit 564b026fbd0d ("string_helpers: fix precision loss
    for some inputs") fixed precision issues for string_get_size() and broke
    tests.
    
    Fix and improve them: test both STRING_UNITS_2 and STRING_UNITS_10 at a
    time, better failure reporting, test small an huge values.
    
    Fixes: 564b026fbd0d28e9 ("string_helpers: fix precision loss for some inputs")
    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Cc: Andy Shevchenko <andriy.shevchenko@linux.intel.com>
    Cc: Rasmus Villemoes <linux@rasmusvillemoes.dk>
    Cc: James Bottomley <James.Bottomley@HansenPartnership.com>
    Cc: James Bottomley <JBottomley@Odin.com>
    Cc: "James E.J. Bottomley" <jejb@parisc-linux.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 5c73252f746d4973294b7ae7eead944f4a5210f8 ......
	 orig commit -> dd0d0d4de582a6a61c032332c91f4f4cb2bab569 ......
checking 1d70d30a5fa2139325e413aaf4ce44675d3133ce ......
	 orig commit -> 6544a1df11c48c8413071aac3316792e4678fbfb ......
checking d1f8217a9a6e9b84df4cf6a0d3c99c7bbe1430a7 ......
	 orig commit -> 48f7df329474b49d83d0dffec1b6186647f11976 ......
checking 413aab16bc7b9b58fb1a52010eb3af3d227d7007 ......
	 orig commit -> 12352d3cae2cebe18805a91fab34b534d7444231 ......
checking 918a2c388ed7828fa4b6ccb5cacd9e422f30938c ......
	 orig commit -> 7162a1e87b3e380133dadc7909081bb70d0a7041 ......
checking 6e8ea2f2258caf0d2a876b36c15a93788a7cde93 ......
	 orig commit -> e07ecd76d4db7bda1e9495395b2110a3fe28845a ......
checking bd55913cf20804d2c3d4d83e79d9867963af2ff1 ......
	 orig commit -> d96b339f453997f2f08c52da3f41423be48c978f ......
checking a6a3f3ddf6a663ab3d141f0e13f457b084a8c409 ......
	 orig commit -> 3caeaa562733c4836e61086ec07666635006a787 ......
checking b58731d6263a323e602191257628d93c2274cefa ......
	 orig commit -> b4d7f161feb3015d6306e1d35b565c888ff70c9d ......
checking 921fa9b77380b0c3df67c424c2a68db5214ab461 ......
	 orig commit -> 760a7364f27d974d100118d88190e574626e18a6 ......
checking b3e336de65ebdd5ed85ba1f03216091a28583e7e ......
	 orig commit -> b3aff6ccbb1d25e506b60ccd9c559013903f3464 ......
checking 593337c55ac30807f38ca924e716edfdc4e6a916 ......
	 orig commit -> 722ec35f7faefcc34d12616eca7976a848870f9d ......
checking a6e01f0c81d54678cdd50892462d12b672320e5e ......
	 orig commit -> 4da597d16602d14405b71a18d45e1c59f28f0fd2 ......
checking 82de5956e9f4102e7b29d6718abaf0d156cdbc2a ......
	 orig commit -> a5311d4d13df80bd71a9e47f9ecaf327f478fab1 ......
checking 31a50ee1ad3e0cc51a75fb052115fcf5a804ab35 ......
	 orig commit -> eeaf9646aca89d097861caa24d9818434e48810e ......
checking 98b3f17a7235cb49755c6bd17fc428381261105c ......
	 orig commit -> 0a0b13275558c32bbf6241464a7244b1ffd5afb3 ......
checking ec776d670e2d1f6034fac2f1a28ff972776bba52 ......
	 orig commit -> d9db59103305eb5ec2a86369f32063e9921b6ac5 ......
checking 6ec8b7c5bbdd539878fb23f6040a2c041c43247c ......
	 orig commit -> aae6b18f5c95b9dc78de66d1e27e8afeee2763b7 ......
checking 3b18631fbcea811634fadacb5a7358170d9e3414 ......
	 orig commit -> e873cc022ce5e2c04bbc53b5874494b657e29d3f ......
checking 080fc28fe4759d0d8a64b8980e4e6220a590221e ......
	 orig commit -> 929e883f2bfdf68d4bd3aec43912e956417005c7 ......
checking 5542d00c46536d09c594c2f604f3d684c62c3f29 ......
	 orig commit -> f505dba762ae826bb68978a85ee5c8ced7dea8d7 ......
checking a482d944816941a8ad987975585ee064dc023325 ......
	 orig commit -> c08659d431b40ad5beb97d7dde49ad9796cb812c ......
checking 41a94b382396f3b33d6426ca8d0ddab237ad8b8a ......
	 orig commit -> af756bbccff85504ce05c63a50f80b9d7823c500 ......
checking 671a5bc6f54d080b9453dc70a638c41ea23838d8 ......
	 orig commit -> 0ea24daae053a9ba65d2f3eb20523002c1a8af38 ......
checking 323f7cd28b7fd6b1c0cd9f003aa8482c10ff9d7d ......
	 orig commit -> 418d5516568b3fdbc4e7b53677dd78aed8514565 ......
checking 53d991bbbc513ac4ac67ad7c422b13841920353f ......
	 orig commit -> 5070fb14a0154f075c8b418e5bc58a620ae85a45 ......
checking 9fe0b68c4949517720546aa3717d05b491e4ee09 ......
	 orig commit -> e972c37459c813190461dabfeaac228e00aae259 ......
checking a68f555363f5e43d0da4a6d025e23db74e2b4f1f ......
	 orig commit -> 57adec866c0440976c96a4b8f5b59fb411b1cacb ......
checking 242813b9a1b6d44845fbc73fe0f6db13f2401828 ......
	 orig commit -> 079ae0c121fd23287f4ad2be9e9f8a13f63cae73 ......
checking 602acfedc981eb887289f11f1a7565e6f48c710d ......
	 orig commit -> 6ecad912a0073c768db1491c27ca55ad2d0ee68f ......
checking b5311270caba5392a83ed918e11a16e71b3b1e44 ......
	 orig commit -> 1bc74f1ccd457832dc515fc1febe6655985fdcd2 ......
checking 5ecdf58c1945c40b6dcaf9764c119ecc607e8a06 ......
	 orig commit -> 05ba75f848647135f063199dc0e9f40fee769724 ......
checking 64f10cf83a6cb819d8192e679a9916519d3edf4a ......
	 orig commit -> 7e56f627768da4e6480986b5145dc3422bc448a5 ......
checking 782126b225221e5a2b30b1824b2326abba53eab9 ......
	 orig commit -> 13331a551ab4df87f7a027d2cab392da96aba1de ......
checking d0452554b9a114d40f7f86248c2935d0ba7ddd22 ......
	 orig commit -> bb00c898ad1ce40c4bb422a8207ae562e9aea7ae ......
checking eec1445767ccbb320255ad8bfc2e64c929ee21cc ......
	 orig commit -> ad402b265ecf6fa22d04043b41444cdfcdf4f52d ......
checking aef22a3d69452aa516f6738774f7b19372034fdc ......
	 orig commit -> b0918d9f476a8434b055e362b83fa4fd1d462c3f ......
checking 66b8812e87f3fcf9d52b107a8d3102cd3f77ae1e ......
	 orig commit -> 082fa37d1351a41afc491d44a1d095cb8d919aa2 ......
checking d65eb5b3dfb1159ea69c6ce170f83a0a90548ac6 ......
	 orig commit -> 361cad3c89070aeb37560860ea8bfc092d545adc ......
checking c8841e15d6ded83aac4da7caf70a20d3c58bf6fe ......
	 orig commit -> 86fb449b07b8215443a30782dca5755d5b8b0577 ......
checking 1873e6f486061eb93dc82a85fa8030857833d485 ......
	 orig commit -> ade14a7df796d4e86bd9d181193c883a57b13db0 ......
checking dadfe92207503548d60a2d4c6c467702ead17148 ......
	 orig commit -> 4b550af519854421dfec9f7732cdddeb057134b2 ......
checking 7e30995b26ccc952e30bbc2563fc5728c50c9e12 ......
	 orig commit -> 01b9b0b28626db4a47d7f48744d70abca9914ef1 ......
checking 5d80673404e691093d66fc5b02c8bc2ac1692d77 ......
	 orig commit -> 820962dc700598ffe8cd21b967e30e7520c34748 ......
checking 88413fceab844abec9e8007aaeec35c4bfc3f3fc ......
	 orig commit -> ec7147a99e33a9e4abad6fc6e1b40d15df045d53 ......
checking 224f259d9393ca342dd565321db48ec4a79a695f ......
	 orig commit -> d81dac3c1c5295c61b15293074ac2bd3254e1875 ......
checking e16eb4bb193c3b0faf1ca78cf05a6623de5cb633 ......
	 orig commit -> 431386e783a3a6c8b7707bee32d18c353b8688b2 ......
checking 909e9c55196df318c7f3096826c8dc307cc2fd4b ......
	 orig commit -> fa34e6dd44d7c02c8a8468ce4a52a7506f907bef ......
checking 377d1f59388fb7711b977458be7cb432f8dbbf9b ......
	 orig commit -> 97a249e98a72d6b79fb7350a8dd56b147e9d5bdb ......
checking 1c1d4f2d76293cdcef7f77f7b92863c4bf3479d9 ......
	 orig commit -> 01cc5235604d61018712c11a14d74230f6a38bf4 ......
checking dfa6e741d472a464ee85dc2e0a44176a1496f832 ......
	 orig commit -> 005ce0713006a76d2b0c924ce0e2629e5d8510c3 ......
checking f865d8c326dd50649d3ee3129b93e6abb6929fae ......
	 orig commit -> c08ae18560aaed50fed306a2e11f36ce70130f65 ......
checking e9b0f0e411d00b900a72891435c8997fb8eeb32b ......
	 orig commit -> 9d0be85d4e2cfa2519ae16efe7ff4a7150c43c0b ......
checking dc275a6eb9d0ebe7711d8ced07509dc5168163b3 ......
	 orig commit -> d590faf9e8f8509a0a0aa79c38e87fcc6b913248 ......
checking a258a959fcf31230ae660f5b0a537b8d7fc0b675 ......
	 orig commit -> 90a88d6ef88edcfc4f644dddc7eef4ea41bccf8b ......
checking 900ae746c1e954c5dd2b926d9e30863c9852396c ......
	 orig commit -> 82c43310508eb19eb41fe7862e89afeb74030b84 ......
checking 32c55052aa3364bd4a0d0c2b5f53ed9b95ae8d05 ......
	 orig commit -> d2d06d4fe0f2cc2df9b17fefec96e6e1a1271d91 ......
checking 4c654fc9357b70803c1878ec729ef61a8be0af52 ......
	 orig commit -> 461c7fa126794157484dca48e88effa4963e3af3 ......
checking d763177d00d72af0efc0f13745b8c26c832845bf ......
	 orig commit -> 13b4389143413a1f18127c07f72c74cad5b563e8 ......
checking dcec7af70910c48cba1e7b42383b9696356afc33 ......
	 orig commit -> 26a99c19f810b2593410899a5b304b21b47428a6 ......
checking 954bb20f70ed1ab93406c6e01e1cd54d866c977e ......
	 orig commit -> 9055082fb100cc66e20c048251d05159f5f2cfba ......
checking 5b27adfac012bd383de3e950e2c8c431da9ebfd5 ......
	 orig commit -> 00cd29b799e3449f0c68b1cc77cd4a5f95b42d17 ......
checking 152fb02241b60ffb8d406b87c68d1908478a205f ......
	 orig commit -> f37755490fe9bf76f6ba1d8c6591745d3574a6a6 ......
		 f37755490fe9bf76f6ba1d8c6591745d3574a6a6 has problem. Fixes commit -> dc17147de328a74bbdee67c1bf37d2f1992de756
commit f3c83858c6aee893f8a3555aab3b72ae72f0f39f
Author: Steven Rostedt (Red Hat) <rostedt@goodmis.org>
Date:   Wed Mar 9 11:58:41 2016 -0500

    tracing: Fix check for cpu online when event is disabled
    
    commit dc17147de328a74bbdee67c1bf37d2f1992de756 upstream.
    
    Commit f37755490fe9b ("tracepoints: Do not trace when cpu is offline") added
    a check to make sure that tracepoints only get called when the cpu is
    online, as it uses rcu_read_lock_sched() for protection.
    
    Commit 3a630178fd5f3 ("tracing: generate RCU warnings even when tracepoints
    are disabled") added lockdep checks (including rcu checks) for events that
    are not enabled to catch possible RCU issues that would only be triggered if
    a trace event was enabled. Commit f37755490fe9b only stopped the warnings
    when the trace event was enabled but did not prevent warnings if the trace
    event was called when disabled.
    
    To fix this, the cpu online check is moved to where the condition is added
    to the trace event. This will place the cpu online check in all places that
    it may be used now and in the future.
    
    Fixes: f37755490fe9b ("tracepoints: Do not trace when cpu is offline")
    Fixes: 3a630178fd5f3 ("tracing: generate RCU warnings even when tracepoints are disabled")
    Reported-by: Sudeep Holla <sudeep.holla@arm.com>
    Tested-by: Sudeep Holla <sudeep.holla@arm.com>
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 2fa82bbbc73a7d8716e3f7aba6b2b5c84147a2fc ......
	 orig commit -> b33c8ff4431a343561e2319f17c14286f2aa52e2 ......
checking 6fa74f50e357b0d87fad34a4b7ccbc2beb42b859 ......
	 orig commit -> ec183d22cc284a7a1e17f0341219d8ec8ca070cc ......
checking 6e50ddaf0991285f6b6abb4d575f0cc0e8ed7834 ......
	 orig commit -> 32abc2ede536aae52978d6c0a8944eb1df14f460 ......
checking 969624b7c1c8c9784651eb97431e6f2bbb7a024c ......
	 orig commit -> caaee6234d05a58c5b4d05e7bf766131b810a657 ......
checking ba6d92801ba4e4c0262b70ea00922a71092999bb ......
	 orig commit -> 1636d1d77ef4e01e57f706a4cae3371463896136 ......
checking e8eced78e0252040c4e6bb633b40afb11a176416 ......
	 orig commit -> 0c0fe3b0fa45082cd752553fdb3a4b42503a118e ......
checking be1232bcea113204523b7d530cc5d6d534916276 ......
	 orig commit -> 313140023026ae542ad76e7e268c56a1eaa2c28e ......
checking df567e6dcd22097d2f31b6a8bf481959f1352b6a ......
	 orig commit -> e0bd70c67bf996b360f706b6c643000f2e384681 ......
checking b58081d430b4eaf6bf7d407cc5d4bfa39488b6c1 ......
	 orig commit -> bc4ef7592f657ae81b017207a1098817126ad4cb ......
checking dfd2961ab6eda6c39aa9d7ddc5e6fb754b16a750 ......
	 orig commit -> 80ad623edd2d0ccb47d85357ee31c97e6c684e82 ......
		 80ad623edd2d0ccb47d85357ee31c97e6c684e82 has problem. Fixes commit -> 838fe1887765f4cc679febea60d87d2a06bd300e
checking 4e6943903a8eb700bf13a7be572249b34d438574 ......
	 orig commit -> 8cdc7c5b00d945a3c823fc4277af304abb9cb43d ......
checking c57e49b50bc5ab5089bc1295bab9106925033c40 ......
	 orig commit -> f5cdedd73fa71b74dcc42f2a11a5735d89ce7c4f ......
checking bbfe21c87bd0f529d19f077051a52d779c785c6c ......
	 orig commit -> bcff24887d00bce102e0857d7b0a8c44a40f53d1 ......
		 bcff24887d00bce102e0857d7b0a8c44a40f53d1 has problem. Fixes commit -> 6ffe77bad545f4a7c8edd2a4ee797ccfcd894ab4
87f9a031af48defee9f34c6aaf06d6f1988c244d
commit fa5613b1f39ec020671705453eeceaaf57459e49
Author: Eryu Guan <guaneryu@gmail.com>
Date:   Sun Feb 21 18:38:44 2016 -0500

    ext4: iterate over buffer heads correctly in move_extent_per_page()
    
    commit 6ffe77bad545f4a7c8edd2a4ee797ccfcd894ab4 upstream.
    
    In commit bcff24887d00 ("ext4: don't read blocks from disk after extents
    being swapped") bh is not updated correctly in the for loop and wrong
    data has been written to disk. generic/324 catches this on sub-page
    block size ext4.
    
    Fixes: bcff24887d00 ("ext4: don't read blocks from disk after extentsbeing swapped")
    Signed-off-by: Eryu Guan <guaneryu@gmail.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 600d41f4ecb53edb540fa00a34a78ea6e5c9f9f7 ......
	 orig commit -> 46901760b46064964b41015d00c140c83aa05bcf ......
checking 33f48f8ab0b94fdd1249f561b15c872c36e560c8 ......
	 orig commit -> 05145bd799e498ce4e3b5145894174ee881f02b0 ......
checking 5859b9077763ea1c3f4db47522bdcf300aedb080 ......
	 orig commit -> 308bbc9ab838d0ace0298268c7970ba9513e2c65 ......
checking 76e88140aa9111605768e7725ec1c5b709d51865 ......
	 orig commit -> 6c55d9b98335f7f6bd5f061866ff1633401f3a44 ......
checking 124efa9fd5679ed68fd69e5b899e55b0452c68a4 ......
	 orig commit -> 7dde55787b43a8f2b4021916db38d90c03a2ec64 ......
checking 1bdf16025dfc5ed335f3d7d8bbe78461583105fc ......
	 orig commit -> 1f55c718c290616889c04946864a13ef30f64929 ......
checking 3ceeb564198cf81863c16d76572306e57e833963 ......
	 orig commit -> 2831c89f42dcde440cfdccb9fee9f42d54bbc1ef ......
checking a45f23edb00e017289c5263fef25ad920009edb0 ......
	 orig commit -> f4f9edcf9b5289ed96113e79fa65a7bf27ecb096 ......
checking 3375ee8b9964979f6f1f745053e21ded1afdb1b6 ......
	 orig commit -> 58a66dba1beac2121d931cda4682ae4d40816af5 ......
checking a90e66cb949a59298d74638e5db4e888711b4fa0 ......
	 orig commit -> b241d31ef2f6a289d33dcaa004714b26e06f476f ......
checking a40efb855068a20cf769425a799642aa95c57635 ......
	 orig commit -> 13d5e5d4725c64ec06040d636832e78453f477b7 ......
checking 6bb345ac7b30680018be6d7e6b4738fab7283b4f ......
	 orig commit -> d99a36f4728fcbcc501b78447f625bdcce15b842 ......
checking ef0ca96169a23551c8f8961c9a081a1c071703a4 ......
	 orig commit -> 67ec1072b053c15564e6090ab30127895dc77a89 ......
		 67ec1072b053c15564e6090ab30127895dc77a89 has problem. Fixes commit -> b888a5f713e4d17faaaff24316585a4eb07f35b7
commit 2ec5d37754a2f9d1f9a420528ce7367c69bca8ae
Author: Chanho Min <chanho.min@lge.com>
Date:   Mon Nov 26 14:36:37 2018 +0900

    ALSA: pcm: Fix starvation on down_write_nonblock()
    
    commit b888a5f713e4d17faaaff24316585a4eb07f35b7 upstream.
    
    Commit 67ec1072b053 ("ALSA: pcm: Fix rwsem deadlock for non-atomic PCM
    stream") fixes deadlock for non-atomic PCM stream. But, This patch
    causes antother stuck.
    If writer is RT thread and reader is a normal thread, the reader
    thread will be difficult to get scheduled. It may not give chance to
    release readlocks and writer gets stuck for a long time if they are
    pinned to single cpu.
    
    The deadlock described in the previous commit is because the linux
    rwsem queues like a FIFO. So, we might need non-FIFO writelock, not
    non-block one.
    
    My suggestion is that the writer gives reader a chance to be scheduled
    by using the minimum msleep() instaed of spinning without blocking by
    writer. Also, The *_nonblock may be changed to *_nonfifo appropriately
    to this concept.
    In terms of performance, when trylock is failed, this minimum periodic
    msleep will have the same performance as the tick-based
    schedule()/wake_up_q().
    
    [ Although this has a fairly high performance penalty, the relevant
      code path became already rare due to the previous commit ("ALSA:
      pcm: Call snd_pcm_unlink() conditionally at closing").  That is, now
      this unconditional msleep appears only when using linked streams,
      and this must be a rare case.  So we accept this as a quick
      workaround until finding a more suitable one -- tiwai ]
    
    Fixes: 67ec1072b053 ("ALSA: pcm: Fix rwsem deadlock for non-atomic PCM stream")
    Suggested-by: Wonmin Jung <wonmin.jung@lge.com>
    Signed-off-by: Chanho Min <chanho.min@lge.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 434e26d6f6a000b8585c0eb64764a55daff65d20 ......
	 orig commit -> 0b8c82190c12e530eb6003720dac103bf63e146e ......
		 0b8c82190c12e530eb6003720dac103bf63e146e has problem. Fixes commit -> ab949d519601880fd46e8bc1445d6a453bf2dc09
commit 097994b3d14b3fb320e30b8359ac254e86d9c6d9
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Jan 2 11:37:04 2017 +0100

    ALSA: hda - Fix deadlock of controller device lock at unbinding
    
    commit ab949d519601880fd46e8bc1445d6a453bf2dc09 upstream.
    
    Imre Deak reported a deadlock of HD-audio driver at unbinding while
    it's still in probing.  Since we probe the codecs asynchronously in a
    work, the codec driver probe may still be kicked off while the
    controller itself is being unbound.  And, azx_remove() tries to
    process all pending tasks via cancel_work_sync() for fixing the other
    races (see commit [0b8c82190c12: ALSA: hda - Cancel probe work instead
    of flush at remove]), now we may meet a bizarre deadlock:
    
    Unbind snd_hda_intel via sysfs:
      device_release_driver() ->
        device_lock(snd_hda_intel) ->
          azx_remove() ->
            cancel_work_sync(azx_probe_work)
    
    azx_probe_work():
      codec driver probe() ->
         __driver_attach() ->
           device_lock(snd_hda_intel)
    
    This deadlock is caused by the fact that both device_release_driver()
    and driver_probe_device() take both the device and its parent locks at
    the same time.  The codec device sets the controller device as its
    parent, and this lock is taken before the probe() callback is called,
    while the controller remove() callback gets called also with the same
    lock.
    
    In this patch, as an ugly workaround, we unlock the controller device
    temporarily during cancel_work_sync() call.  The race against another
    bind call should be still suppressed by the parent's device lock.
    
    Reported-by: Imre Deak <imre.deak@intel.com>
    Fixes: 0b8c82190c12 ("ALSA: hda - Cancel probe work instead of flush at remove")
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 6deb0ec93da69d60f28c54b48d24c35e92b2155f ......
	 orig commit -> f4eafd8bcd5229e998aa252627703b8462c3b90f ......
		 f4eafd8bcd5229e998aa252627703b8462c3b90f has problem. Fixes commit -> 18a955219bf7d9008ce480d4451b6b8bf4483a22
commit d7230d5286cec2301912714581024e9f0e22083b
Author: Toshi Kani <toshi.kani@hpe.com>
Date:   Tue Mar 13 11:03:46 2018 -0600

    x86/mm: Fix vmalloc_fault to use pXd_large
    
    commit 18a955219bf7d9008ce480d4451b6b8bf4483a22 upstream.
    
    Gratian Crisan reported that vmalloc_fault() crashes when CONFIG_HUGETLBFS
    is not set since the function inadvertently uses pXn_huge(), which always
    return 0 in this case.  ioremap() does not depend on CONFIG_HUGETLBFS.
    
    Fix vmalloc_fault() to call pXd_large() instead.
    
    Fixes: f4eafd8bcd52 ("x86/mm: Fix vmalloc_fault() to handle large pages properly")
    Reported-by: Gratian Crisan <gratian.crisan@ni.com>
    Signed-off-by: Toshi Kani <toshi.kani@hpe.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: stable@vger.kernel.org
    Cc: linux-mm@kvack.org
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Andy Lutomirski <luto@kernel.org>
    Link: https://lkml.kernel.org/r/20180313170347.3829-2-toshi.kani@hpe.com
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking e0c89043e71ae8af6a8cd4a9dac99f46b7ff1d83 ......
	 orig commit -> a82eee7424525e34e98d821dd059ce14560a1e35 ......
checking 1e2e0ad1cc1643fdfea0610805c253f53ec1aaa1 ......
	 orig commit -> ee9737c924706aaa72c2ead93e3ad5644681dc1c ......
checking 4f298c10c35dbaa3c328bc5360b9c46cc52d9f93 ......
	 orig commit -> 742563777e8da62197d6cb4b99f4027f59454735 ......
checking 75a101ba31faf1047da55e26338d800fba9a86bc ......
	 orig commit -> 3625c2c234ef66acf21a72d47a5ffa94f6c5ebf2 ......
