checking 0eb41477d1a0f09c2a8c401ffab91b3c1b310672 ......
checking eca912fc889ea6aa7d3611a6ee66b38477fa0971 ......
	 orig commit -> 039daac5526932ec731e4499613018d263af8b3e ......
checking 53206655c0465bc2a13f54613236ad26ef8f3f5b ......
	 orig commit -> c28218d4abbf4f2035495334d8bfcba64bda4787 ......
checking 1f402e285068508494c29ce7ecf3ae31d5df18fd ......
	 orig commit -> 7fef436295bf6c05effe682c8797dfcb0deb112a ......
checking 7b451174de44b4f850a6a243b147f8a627853a29 ......
	 orig commit -> 98518c4d8728656db349f875fcbbc7c126d4c973 ......
checking dd89afb409c87734da8c0633b5923bf5d8f9574c ......
	 orig commit -> e7aa61f47b23afbec41031bc47ca8d6cb6516abc ......
checking 10fabcba4a960ee9db65c3e28984cf513e79c96e ......
	 orig commit -> 3bc8ea8603ae4c1e09aca8de229ad38b8091fcb3 ......
checking 842044f3c458e82fa628590b6f170de114a1036e ......
	 orig commit -> 19fad20d15a6494f47f85d869f00b11343ee5c78 ......
checking 073b29783386e5f4928feec70638f1305dfa9ceb ......
	 orig commit -> b561af36b1841088552464cdc3f6371d92f17710 ......
checking 94f37bce61cfd733230caa086c98c93501f6cdb5 ......
	 orig commit -> 925b0c841e066b488cc3a60272472b2c56300704 ......
checking 803f2119f7b0ad2b606d2c2c4ce620eac9e2fb2d ......
	 orig commit -> 20ff83f10f113c88d0bb74589389b05250994c16 ......
checking afcaa8b3314a11cf655189982c507c9641067905 ......
	 orig commit -> b3f3107fbd928fed6e4fecbe3da2ed5f43216439 ......
	 orig commit -> 310ca162d779efee8a2dc3731439680f3e9c1e86 ......
checking 92993e4ef630e4bfca15d096705090974c7736fe ......
	 orig commit -> f7bd9e36ee4a4ce38e1cddd7effe6c0d9943285b ......
checking 5f1858a2a75e2b6c82473ac0bd80d09ba6ae7b7e ......
	 orig commit -> 8c63bf9ab4be8b83bd8c34aacfd2f1d2c8901c8a ......
checking 1d85a8086cf70bd63766d8395a2250feb57b28e5 ......
	 orig commit -> 6f07e5f06c8712acc423485f657799fc8e11e56c ......
checking 3894c71bb70a0b7ec4a814908f0c1230112f567a ......
	 orig commit -> 7caa56f006e9d712b44f27b32520c66420d5cbc6 ......
checking b36055e51a59f7c596007aed19b82e753cc01cb3 ......
	 orig commit -> 7c2bd9a39845bfb6d72ddb55ce737650271f6f96 ......
checking 22b461d7258a04e1a36ca5de57ee68cdcc13cba8 ......
	 orig commit -> 89189557b47b35683a27c80ee78aef18248eefb4 ......
checking d945852b8f95b0c2614b0b9bc4f2de3512149e10 ......
	 orig commit -> 91d3f8a629849968dc91d6ce54f2d46abf4feb7f ......
checking aa70fd5a52e5885213e1b5a38acffadeae0e9bb3 ......
	 orig commit -> baf76f0c58aec435a3a864075b8f6d8ee5d1f17e ......
checking ad898b7208b11475a7a9617628199cbde4c12f8c ......
	 orig commit -> 2ac695d1d602ce00b12170242f58c3d3a8e36d04 ......
checking 35e1afe81be3548bebd907c818d96407e752489a ......
	 orig commit -> 27da80719ef132cf8c80eb406d5aeb37dddf78cc ......
checking efde7b4da1410e81b62a04e5546307f5bc13b337 ......
	 orig commit -> 92edf8df0ff2ae86cc632eeca0e651fd8431d40d ......
checking 2f39ac7d8db251af65a50eb3f73ba6610927c9f8 ......
	 orig commit -> dfa88658fb0583abb92e062c7a9cd5a5b94f2a46 ......
checking c9d2f06ae3d56dccf58787abe669986d731da08a ......
	 orig commit -> 10c5e83afd4a3f01712d97d3bb1ae34d5b74a185 ......
		 10c5e83afd4a3f01712d97d3bb1ae34d5b74a185 has problem. Fixes commit -> 27da80719ef132cf8c80eb406d5aeb37dddf78cc
commit 35e1afe81be3548bebd907c818d96407e752489a
Author: Christophe Leroy <christophe.leroy@c-s.fr>
Date:   Mon Apr 22 00:20:37 2019 +1000

    powerpc/fsl: Fix the flush of branch predictor.
    
    commit 27da80719ef132cf8c80eb406d5aeb37dddf78cc upstream.
    
    The commit identified below adds MC_BTB_FLUSH macro only when
    CONFIG_PPC_FSL_BOOK3E is defined. This results in the following error
    on some configs (seen several times with kisskb randconfig_defconfig)
    
    arch/powerpc/kernel/exceptions-64e.S:576: Error: Unrecognized opcode: `mc_btb_flush'
    make[3]: *** [scripts/Makefile.build:367: arch/powerpc/kernel/exceptions-64e.o] Error 1
    make[2]: *** [scripts/Makefile.build:492: arch/powerpc/kernel] Error 2
    make[1]: *** [Makefile:1043: arch/powerpc] Error 2
    make: *** [Makefile:152: sub-make] Error 2
    
    This patch adds a blank definition of MC_BTB_FLUSH for other cases.
    
    Fixes: 10c5e83afd4a ("powerpc/fsl: Flush the branch predictor at each kernel entry (64bit)")
    Cc: Diana Craciun <diana.craciun@nxp.com>
    Signed-off-by: Christophe Leroy <christophe.leroy@c-s.fr>
    Reviewed-by: Daniel Axtens <dja@axtens.net>
    Reviewed-by: Diana Craciun <diana.craciun@nxp.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking c3ff81f0b1de45f41f3024268c811b68661b66f3 ......
	 orig commit -> f633a8ad636efb5d4bba1a047d4a0f1ef719aa06 ......
checking efdeda2dd23668eca95e35f23f4b6e81cee8ccae ......
	 orig commit -> 7d8bad99ba5a22892f0cad6881289fdc3875a930 ......
checking b0cd036d4a391a0a8defe76fe91168b23f7c4fbc ......
	 orig commit -> 1cbf8990d79ff69da8ad09e8a3df014e1494462b ......
checking 9fbbcb69f666f352d4a8767f480c83562ffaac76 ......
	 orig commit -> 76a5eaa38b15dda92cd6964248c39b5a6f3a4e9d ......
checking 7495bbb73f2eabfd0d55cd392c5a81a19c699084 ......
	 orig commit -> 51c3c62b58b357e8d35e4cc32f7b4ec907426fe3 ......
		 51c3c62b58b357e8d35e4cc32f7b4ec907426fe3 has problem. Fixes commit -> b45ba4a51cde29b2939365ef0c07ad34c8321789
checking 50212165f9d3e1568e2cb62307d2b414c98499b3 ......
	 orig commit -> 99d54754d3d5f896a8f616b0b6520662bc99d66b ......
checking 7f4baa7fddc810e5518440c5791063ceec0cae76 ......
	 orig commit -> ba72dc171954b782a79d25e0f4b3ed91090c3b1e ......
checking 0b9ac483ef7798626f18b120bf0e95ca6d94dfa7 ......
	 orig commit -> ee13cb249fabdff8b90aaff61add347749280087 ......
		 ee13cb249fabdff8b90aaff61add347749280087 has problem. Fixes commit -> 92edf8df0ff2ae86cc632eeca0e651fd8431d40d
7d8bad99ba5a22892f0cad6881289fdc3875a930
commit efdeda2dd23668eca95e35f23f4b6e81cee8ccae
Author: Diana Craciun <diana.craciun@nxp.com>
Date:   Mon Apr 22 00:20:32 2019 +1000

    powerpc/fsl: Fix spectre_v2 mitigations reporting
    
    commit 7d8bad99ba5a22892f0cad6881289fdc3875a930 upstream.
    
    Currently for CONFIG_PPC_FSL_BOOK3E the spectre_v2 file is incorrect:
    
      $ cat /sys/devices/system/cpu/vulnerabilities/spectre_v2
      "Mitigation: Software count cache flush"
    
    Which is wrong. Fix it to report vulnerable for now.
    
    Fixes: ee13cb249fab ("powerpc/64s: Add support for software count cache flush")
    Cc: stable@vger.kernel.org # v4.19+
    Signed-off-by: Diana Craciun <diana.craciun@nxp.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit efde7b4da1410e81b62a04e5546307f5bc13b337
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Mon Apr 22 00:20:36 2019 +1000

    powerpc/security: Fix spectre_v2 reporting
    
    commit 92edf8df0ff2ae86cc632eeca0e651fd8431d40d upstream.
    
    When I updated the spectre_v2 reporting to handle software count cache
    flush I got the logic wrong when there's no software count cache
    enabled at all.
    
    The result is that on systems with the software count cache flush
    disabled we print:
    
      Mitigation: Indirect branch cache disabled, Software count cache flush
    
    Which correctly indicates that the count cache is disabled, but
    incorrectly says the software count cache flush is enabled.
    
    The root of the problem is that we are trying to handle all
    combinations of options. But we know now that we only expect to see
    the software count cache flush enabled if the other options are false.
    
    So split the two cases, which simplifies the logic and fixes the bug.
    We were also missing a space before "(hardware accelerated)".
    
    The result is we see one of:
    
      Mitigation: Indirect branch serialisation (kernel only)
      Mitigation: Indirect branch cache disabled
      Mitigation: Software count cache flush
      Mitigation: Software count cache flush (hardware accelerated)
    
    Fixes: ee13cb249fab ("powerpc/64s: Add support for software count cache flush")
    Cc: stable@vger.kernel.org # v4.19+
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Reviewed-by: Michael Neuling <mikey@neuling.org>
    Reviewed-by: Diana Craciun <diana.craciun@nxp.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit efdeda2dd23668eca95e35f23f4b6e81cee8ccae
Author: Diana Craciun <diana.craciun@nxp.com>
Date:   Mon Apr 22 00:20:32 2019 +1000

    powerpc/fsl: Fix spectre_v2 mitigations reporting
    
    commit 7d8bad99ba5a22892f0cad6881289fdc3875a930 upstream.
    
    Currently for CONFIG_PPC_FSL_BOOK3E the spectre_v2 file is incorrect:
    
      $ cat /sys/devices/system/cpu/vulnerabilities/spectre_v2
      "Mitigation: Software count cache flush"
    
    Which is wrong. Fix it to report vulnerable for now.
    
    Fixes: ee13cb249fab ("powerpc/64s: Add support for software count cache flush")
    Cc: stable@vger.kernel.org # v4.19+
    Signed-off-by: Diana Craciun <diana.craciun@nxp.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking e79f136be30610526398c11a9e9e5244bfaf568e ......
	 orig commit -> dc8c6cce9a26a51fc19961accb978217a3ba8c75 ......
checking 4254f0df201eb513ab2c3d5c95990c2249b9cb6a ......
	 orig commit -> 06d0bbc6d0f56dacac3a79900e9a9a0d5972d818 ......
checking 702f76d352b23d58b17a3f6bcfe3527f075a8b39 ......
	 orig commit -> ebcd1bfc33c7a90df941df68a6e5d4018c022fba ......
checking 63595bf35b7f31700bdd0439af8ca45431800ec7 ......
	 orig commit -> 406d2b6ae3420f5bb2b3db6986dc6f0b6dbb637b ......
checking 87e794657c57f0b52a33c3493d4046953482f789 ......
	 orig commit -> af375eefbfb27cbb5b831984e66d724a40d26b5c ......
checking 865caab5843aaf7050ece13a6ba3aad33529f4ae ......
	 orig commit -> 179ab1cbf883575c3a585bcfc0f2160f1d22a149 ......
checking 2ae603ccc6ab62bc11acc5eb797a45ad62d16d16 ......
	 orig commit -> 6453b532f2c8856a80381e6b9a1f5ea2f12294df ......
checking eb882e0321f6563338ef1f695c57c38aad80fb8e ......
	 orig commit -> cf175dc315f90185128fb061dc05b6fbb211aa2f ......
checking 0782faeeb483f7effd12d276dd98425e510b9c07 ......
	 orig commit -> 6d44acae1937b81cf8115ada8958e04f601f3f2e ......
checking 0d46dab1ff0b555837154bb5c50a187d17f48a48 ......
	 orig commit -> a377514519b9a20fa1ea9adddbb4129573129cef ......
checking d3eef3e4a6a9df067457c58169124e46b8595195 ......
	 orig commit -> ddf35cf3764b5a182b178105f57515b42e2634f8 ......
checking 82a158a237adf744b59ed877e5b8ac8d474a4e28 ......
	 orig commit -> 51973a815c6b46d7b23b68d6af371ad1c9d503ca ......
checking c1fe912aae2e8ac7da643c9a536534cf99d42668 ......
	 orig commit -> cb3d6759a93c6d0aea1c10deb6d00e111c29c19c ......
checking 2d4e2499c1c202d16de8758d9b708bda77c9ab80 ......
	 orig commit -> 815069ca57c142eb71d27439bc27f41a433a67b3 ......
checking d18b2b1b8fd5d88d9b3d8b74a1aa90113779d7dc ......
	 orig commit -> 2eea7f067f495e33b8b116b35b5988ab2b8aec55 ......
checking 3bdfdbc417bf3de4335b6697c80c0a21a79067d5 ......
	 orig commit -> a6b3964ad71a61bb7c61d80a60bea7d42187b2eb ......
checking 541a1d2cb461752c7cbaa7b64a3f10288b407726 ......
	 orig commit -> a048a07d7f4535baa4cbad6bc024f175317ab938 ......
checking 2beff0951b14b02729e96a9bd42dc4951b05718a ......
	 orig commit -> 501a78cbc17c329fabf8e9750a1e9ab810c88a0e ......
checking 37d943f3b1fb464e83326c8c0165df2f87010857 ......
	 orig commit -> 6232774f1599028a15418179d17f7df47ede770a ......
checking 5d7333773ba5e1ac1509e12065b86ed33b3fe01f ......
	 orig commit -> e7347a86830f38dc3e40c8f7e28c04412b12a2e7 ......
checking 7cbdfc88e659e7252859c713da65603ec8cec4c1 ......
	 orig commit -> 0f9bdfe3c77091e8704d2e510eb7c2c2c6cde524 ......
checking 3daab96b1b4f74178b7c8781241fb219f45a3a79 ......
	 orig commit -> d6fbe1c55c55c6937cbea3531af7da84ab7473c3 ......
		 d6fbe1c55c55c6937cbea3531af7da84ab7473c3 has problem. Fixes commit -> 6d44acae1937b81cf8115ada8958e04f601f3f2e
commit 0782faeeb483f7effd12d276dd98425e510b9c07
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Mon Apr 22 00:20:17 2019 +1000

    powerpc64s: Show ori31 availability in spectre_v1 sysfs file not v2
    
    commit 6d44acae1937b81cf8115ada8958e04f601f3f2e upstream.
    
    When I added the spectre_v2 information in sysfs, I included the
    availability of the ori31 speculation barrier.
    
    Although the ori31 barrier can be used to mitigate v2, it's primarily
    intended as a spectre v1 mitigation. Spectre v2 is mitigated by
    hardware changes.
    
    So rework the sysfs files to show the ori31 information in the
    spectre_v1 file, rather than v2.
    
    Currently we display eg:
    
      $ grep . spectre_v*
      spectre_v1:Mitigation: __user pointer sanitization
      spectre_v2:Mitigation: Indirect branch cache disabled, ori31 speculation barrier enabled
    
    After:
    
      $ grep . spectre_v*
      spectre_v1:Mitigation: __user pointer sanitization, ori31 speculation barrier enabled
      spectre_v2:Mitigation: Indirect branch cache disabled
    
    Fixes: d6fbe1c55c55 ("powerpc/64s: Wire up cpu_show_spectre_v2()")
    Cc: stable@vger.kernel.org # v4.17+
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking e37099489bb100cadcdd15c85756e635f110110b ......
	 orig commit -> 56986016cb8cd9050e601831fe89f332b4e3c46e ......
checking 1f1067dc768dd69c50474dc3381d1585c3647e97 ......
	 orig commit -> 2e4a16161fcd324b1f9bf6cb6856529f7eaf0689 ......
checking cc43250430ad2cf5eb30f6b7465923a04221336d ......
	 orig commit -> 37c0bdd00d3ae83369ab60a6712c28e11e6458d5 ......
checking 4913f62051518a6119924f78ab6aecade0f9e577 ......
	 orig commit -> ff348355e9c72493947be337bb4fae4fc1a41eba ......
checking ab10c5eebf3ceac6c386b5eaf2e93549a3054031 ......
	 orig commit -> 8ad33041563a10b34988800c682ada14b2612533 ......
checking 8b549c80ee44095e38806c1ba9cb55ddb9dfe36e ......
	 orig commit -> 77addf6e95c8689e478d607176b399a6242a777e ......
checking 24c30c042feb15bd01b8070e8f4831321db0d7b1 ......
	 orig commit -> f636c14790ead6cc22cf62279b1f8d7e11a67116 ......
		 f636c14790ead6cc22cf62279b1f8d7e11a67116 has problem. Fixes commit -> 6232774f1599028a15418179d17f7df47ede770a
0f9bdfe3c77091e8704d2e510eb7c2c2c6cde524
commit 7cbdfc88e659e7252859c713da65603ec8cec4c1
Author: Mauricio Faria de Oliveira <mauricfo@linux.vnet.ibm.com>
Date:   Mon Apr 22 00:20:05 2019 +1000

    powerpc/pseries: Fix clearing of security feature flags
    
    commit 0f9bdfe3c77091e8704d2e510eb7c2c2c6cde524 upstream.
    
    The H_CPU_BEHAV_* flags should be checked for in the 'behaviour' field
    of 'struct h_cpu_char_result' -- 'character' is for H_CPU_CHAR_*
    flags.
    
    Found by playing around with QEMU's implementation of the hypercall:
    
      H_CPU_CHAR=0xf000000000000000
      H_CPU_BEHAV=0x0000000000000000
    
      This clears H_CPU_BEHAV_FAVOUR_SECURITY and H_CPU_BEHAV_L1D_FLUSH_PR
      so pseries_setup_rfi_flush() disables 'rfi_flush'; and it also
      clears H_CPU_CHAR_L1D_THREAD_PRIV flag. So there is no RFI flush
      mitigation at all for cpu_show_meltdown() to report; but currently
      it does:
    
      Original kernel:
    
        # cat /sys/devices/system/cpu/vulnerabilities/meltdown
        Mitigation: RFI Flush
    
      Patched kernel:
    
        # cat /sys/devices/system/cpu/vulnerabilities/meltdown
        Not affected
    
      H_CPU_CHAR=0x0000000000000000
      H_CPU_BEHAV=0xf000000000000000
    
      This sets H_CPU_BEHAV_BNDS_CHK_SPEC_BAR so cpu_show_spectre_v1() should
      report vulnerable; but currently it doesn't:
    
      Original kernel:
    
        # cat /sys/devices/system/cpu/vulnerabilities/spectre_v1
        Not affected
    
      Patched kernel:
    
        # cat /sys/devices/system/cpu/vulnerabilities/spectre_v1
        Vulnerable
    
    Brown-paper-bag-by: Michael Ellerman <mpe@ellerman.id.au>
    Fixes: f636c14790ea ("powerpc/pseries: Set or clear security feature flags")
    Signed-off-by: Mauricio Faria de Oliveira <mauricfo@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 37d943f3b1fb464e83326c8c0165df2f87010857
Author: Mauricio Faria de Oliveira <mauricfo@linux.vnet.ibm.com>
Date:   Mon Apr 22 00:20:07 2019 +1000

    powerpc/pseries: Restore default security feature flags on setup
    
    commit 6232774f1599028a15418179d17f7df47ede770a upstream.
    
    After migration the security feature flags might have changed (e.g.,
    destination system with unpatched firmware), but some flags are not
    set/clear again in init_cpu_char_feature_flags() because it assumes
    the security flags to be the defaults.
    
    Additionally, if the H_GET_CPU_CHARACTERISTICS hypercall fails then
    init_cpu_char_feature_flags() does not run again, which potentially
    might leave the system in an insecure or sub-optimal configuration.
    
    So, just restore the security feature flags to the defaults assumed
    by init_cpu_char_feature_flags() so it can set/clear them correctly,
    and to ensure safe settings are in place in case the hypercall fail.
    
    Fixes: f636c14790ea ("powerpc/pseries: Set or clear security feature flags")
    Depends-on: 19887d6a28e2 ("powerpc: Move default security feature flags")
    Signed-off-by: Mauricio Faria de Oliveira <mauricfo@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7cbdfc88e659e7252859c713da65603ec8cec4c1
Author: Mauricio Faria de Oliveira <mauricfo@linux.vnet.ibm.com>
Date:   Mon Apr 22 00:20:05 2019 +1000

    powerpc/pseries: Fix clearing of security feature flags
    
    commit 0f9bdfe3c77091e8704d2e510eb7c2c2c6cde524 upstream.
    
    The H_CPU_BEHAV_* flags should be checked for in the 'behaviour' field
    of 'struct h_cpu_char_result' -- 'character' is for H_CPU_CHAR_*
    flags.
    
    Found by playing around with QEMU's implementation of the hypercall:
    
      H_CPU_CHAR=0xf000000000000000
      H_CPU_BEHAV=0x0000000000000000
    
      This clears H_CPU_BEHAV_FAVOUR_SECURITY and H_CPU_BEHAV_L1D_FLUSH_PR
      so pseries_setup_rfi_flush() disables 'rfi_flush'; and it also
      clears H_CPU_CHAR_L1D_THREAD_PRIV flag. So there is no RFI flush
      mitigation at all for cpu_show_meltdown() to report; but currently
      it does:
    
      Original kernel:
    
        # cat /sys/devices/system/cpu/vulnerabilities/meltdown
        Mitigation: RFI Flush
    
      Patched kernel:
    
        # cat /sys/devices/system/cpu/vulnerabilities/meltdown
        Not affected
    
      H_CPU_CHAR=0x0000000000000000
      H_CPU_BEHAV=0xf000000000000000
    
      This sets H_CPU_BEHAV_BNDS_CHK_SPEC_BAR so cpu_show_spectre_v1() should
      report vulnerable; but currently it doesn't:
    
      Original kernel:
    
        # cat /sys/devices/system/cpu/vulnerabilities/spectre_v1
        Not affected
    
      Patched kernel:
    
        # cat /sys/devices/system/cpu/vulnerabilities/spectre_v1
        Vulnerable
    
    Brown-paper-bag-by: Michael Ellerman <mpe@ellerman.id.au>
    Fixes: f636c14790ea ("powerpc/pseries: Set or clear security feature flags")
    Signed-off-by: Mauricio Faria de Oliveira <mauricfo@linux.vnet.ibm.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 1c9f4d5f909bbbd673f3098c4d3d5960583c2e60 ......
	 orig commit -> 9a868f634349e62922c226834aa23e3d1329ae7f ......
checking c052294653f32b4a93b38dcbb462ea3734cf4354 ......
	 orig commit -> 921bc6cf807ceb2ab8005319cf39f33494d6b100 ......
checking 1305aa782daa4557d00a9146ea61b2983876f709 ......
	 orig commit -> c4bc36628d7f8b664657d8bd6ad1c44c177880b7 ......
checking 7b17ace64b213f80040edfcf1771048ff858dd96 ......
	 orig commit -> 0063d61ccfc011f379a31acaeba6de7c926fed2c ......
checking f831ac36e7516b8129a0c5cd12a743e4173d6b4b ......
	 orig commit -> 84749a58b6e382f109abf1e734bc4dd43c2c25bb ......
checking 4bb2d71a8124b1f785b394b311fd4d9b382868ce ......
	 orig commit -> abf110f3e1cea40f5ea15e85f5d67c39c14568a7 ......
		 abf110f3e1cea40f5ea15e85f5d67c39c14568a7 has problem. Fixes commit -> 501a78cbc17c329fabf8e9750a1e9ab810c88a0e
commit 2beff0951b14b02729e96a9bd42dc4951b05718a
Author: Michael Ellerman <mpe@ellerman.id.au>
Date:   Mon Apr 22 00:20:08 2019 +1000

    powerpc/64s: Fix section mismatch warnings from setup_rfi_flush()
    
    commit 501a78cbc17c329fabf8e9750a1e9ab810c88a0e upstream.
    
    The recent LPM changes to setup_rfi_flush() are causing some section
    mismatch warnings because we removed the __init annotation on
    setup_rfi_flush():
    
      The function setup_rfi_flush() references
      the function __init ppc64_bolted_size().
      the function __init memblock_alloc_base().
    
    The references are actually in init_fallback_flush(), but that is
    inlined into setup_rfi_flush().
    
    These references are safe because:
     - only pseries calls setup_rfi_flush() at runtime
     - pseries always passes L1D_FLUSH_FALLBACK at boot
     - so the fallback flush area will always be allocated
     - so the check in init_fallback_flush() will always return early:
       /* Only allocate the fallback flush area once (at boot time). */
       if (l1d_flush_fallback_area)
            return;
    
     - and therefore we won't actually call the freed init routines.
    
    We should rework the code to make it safer by default rather than
    relying on the above, but for now as a quick-fix just add a __ref
    annotation to squash the warning.
    
    Fixes: abf110f3e1ce ("powerpc/rfi-flush: Make it possible to call setup_rfi_flush() again")
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 7a50dea4206f9b57e48d3f928c60f83b5b6dff1c ......
	 orig commit -> 1e2a9fc7496955faacbbed49461d611b704a7505 ......
checking f6c8c304c4a6f627807d951b2ec3a2c47f292476 ......
	 orig commit -> eb0a2d2620ae431c543963c8c7f08f597366fc60 ......
checking b0dc230c880159fbebcfa9fcf4863970bb79f601 ......
	 orig commit -> 582605a429e20ae68fd0b041b2e840af296edd08 ......
checking 397f6795796da6d17b89f834fa4a2beeca0aaf95 ......
	 orig commit -> bdcb1aefc5b3f7d0f1dc8b02673602bca2ff7a4b ......
checking 175795f245e6b9072f12111695e4c48ce4019632 ......
	 orig commit -> 274920a3ecd5f43af0cc380bc0a9ee73a52b9f8a ......
checking 67b3adfdcdc5a731247a5654686463de6cf9922a ......
	 orig commit -> d7a6c0ce8d26412903c7981503bad9e1cc7c45d2 ......
checking 98ac0d40c4248b8ac978aa74ae5123bd98d54015 ......
	 orig commit -> 7529b2574a7aaf902f1f8159fbc2a7caa74be559 ......
checking 8d532d19385ab2d8f73b963bc69c5b2d1a722d96 ......
	 orig commit -> d58431eacb226222430940134d97bfd72f292fcd ......
checking 89f8f0b4b2d9d4c8b459b259212ed5aee3d99f42 ......
	 orig commit -> e6abc8caa6deb14be2a206253f7e1c5e37e9515b ......
checking e9f225942f0ff84f447c1884bd0d25fad75831ec ......
	 orig commit -> 37659182bff1eeaaeadcfc8f853c6d2b6dbc3f47 ......
checking ff942d7e96da3d5c3565e39a7c66d1e0dddacefe ......
	 orig commit -> 76a495d666e5043ffc315695f8241f5e94a98849 ......
checking 32281bd53483add6fe8f3e7335ebe6204b2a8b3e ......
	 orig commit -> a860fa7b96e1a1c974556327aa1aee852d434c21 ......
checking a17cb5ec5f9acaa19b0fd62ff2eadc9b3aafb37c ......
	 orig commit -> d6097c9e4454adf1f8f2c9547c2fa6060d55d952 ......
checking 1a4bf6cb40ec03940c8951a3c93bd738ba50b448 ......
	 orig commit -> 79b4a9cf0e2ea8203ce777c8d5cfa86c71eae86e ......
checking cde33c6caadca7c67b25750f6d69e5416440c917 ......
	 orig commit -> 652727bbe1b17993636346716ae5867627793647 ......
checking 8ee75b86bd4732e51f430c8e1d9f4098eadaf149 ......
	 orig commit -> 78e546c824fa8f96d323b7edd6f5cad5b74af057 ......
checking a5b8220f54c6b518e1a1bb1b155526d75be2a2cc ......
	 orig commit -> 0294e6f4a0006856e1f36b8cd8fa088d9e499e98 ......
