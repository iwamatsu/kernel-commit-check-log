Check from v4.4.72 to v4.4.73
Commit count: 47
checking 1bd30958ec55d80ca72d2ca4e7e5c3d9fbf3173e ......
checking 39e84dcd7876bdc81f555bae2be6209274700782 ......
	 orig commit -> b5c3206190f1fddd100b3060eb15f0d775ffeab8 ......
checking d80aa84235ff7b2b13cd204e23a5823770512690 ......
	 orig commit -> c0e7bb38c07cbd8269549ee0a0566021a3c729de ......
checking afb415f72daa0d9d8169a20f3ea3efbf05f630ca ......
	 orig commit -> e5c86679d5e864947a52fb31e45a425dea3e7fa9 ......
checking 8b1aa267981223474cb5699b1c96eb7fa8eb08a8 ......
	 orig commit -> 4c887aa65d38633885010277f3482400681be719 ......
checking 77d2b8dc959745f37605706c64c55bd80cfae660 ......
	 orig commit -> 3ba4bceef23206349d4130ddf140819b365de7c8 ......
checking 202776694c2ae6b76e4e1d7b7f01d604f8d16089 ......
	 orig commit -> f598f82e204ec0b17797caaf1b0311c52d43fb9a ......
checking 50ef0e2e9abe8dcaf9cbb54babec9134f4f0ca5f ......
	 orig commit -> 6f29a130613191d3c6335169febe002cba00edf5 ......
		 6f29a130613191d3c6335169febe002cba00edf5 has problem. Fixes commit -> 912964eacb111551db73429719eb5fadcab0ff8a
commit db1323b77c2b35e5633867fc5e8a79c65f130119
Author: Xin Long <lucien.xin@gmail.com>
Date:   Tue Feb 7 20:56:08 2017 +0800

    sctp: check af before verify address in sctp_addr_id2transport
    
    
    [ Upstream commit 912964eacb111551db73429719eb5fadcab0ff8a ]
    
    Commit 6f29a1306131 ("sctp: sctp_addr_id2transport should verify the
    addr before looking up assoc") invoked sctp_verify_addr to verify the
    addr.
    
    But it didn't check af variable beforehand, once users pass an address
    with family = 0 through sockopt, sctp_get_af_specific will return NULL
    and NULL pointer dereference will be caused by af->sockaddr_len.
    
    This patch is to fix it by returning NULL if af variable is NULL.
    
    Fixes: 6f29a1306131 ("sctp: sctp_addr_id2transport should verify the addr before looking up assoc")
    Signed-off-by: Xin Long <lucien.xin@gmail.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 70752628521df94b45ed24287fdf216f9b587681 ......
	 orig commit -> de9bf29dd6e4a8a874cb92f8901aed50a9d0b1d3 ......
checking 5270bf63719c2c5e3a3d715ac78d394baea899d9 ......
	 orig commit -> 2c561b2b728ca4013e76d6439bde2c137503745e ......
checking a4877e5564a5306a38657fc25db721a6e558ce98 ......
	 orig commit -> 248b213ad908b88db15941202ef7cb7eb137c1a0 ......
checking 10bfb4c76c941fface83bd4695f19ce84510dbe0 ......
	 orig commit -> 406dab8450ec76eca88a1af2fc15d18a2b36ca49 ......
checking 82ce18b09bf1f788b1581da69f66c88f9d150aad ......
	 orig commit -> a47b70ea86bdeb3091341f5ae3ef580f1a1ad822 ......
		 a47b70ea86bdeb3091341f5ae3ef580f1a1ad822 has problem. Fixes commit -> 79514ef670e9e575a1fe36922268c439d0f0ca8a
commit 53ae0c2ffef75c947c30c4aab88aed44b3c1b6de
Author: Eugeniu Rosca <erosca@de.adit-jv.com>
Date:   Tue Jun 6 00:08:10 2017 +0200

    ravb: Fix use-after-free on `ifconfig eth0 down`
    
    
    [ Upstream commit 79514ef670e9e575a1fe36922268c439d0f0ca8a ]
    
    Commit a47b70ea86bd ("ravb: unmap descriptors when freeing rings") has
    introduced the issue seen in [1] reproduced on H3ULCB board.
    
    Fix this by relocating the RX skb ringbuffer free operation, so that
    swiotlb page unmapping can be done first. Freeing of aligned TX buffers
    is not relevant to the issue seen in [1]. Still, reposition TX free
    calls as well, to have all kfree() operations performed consistently
    _after_ dma_unmap_*()/dma_free_*().
    
    [1] Console screenshot with the problem reproduced:
    
    salvator-x login: root
    root@salvator-x:~# ifconfig eth0 up
    Micrel KSZ9031 Gigabit PHY e6800000.ethernet-ffffffff:00: \
           attached PHY driver [Micrel KSZ9031 Gigabit PHY]   \
           (mii_bus:phy_addr=e6800000.ethernet-ffffffff:00, irq=235)
    IPv6: ADDRCONF(NETDEV_UP): eth0: link is not ready
    root@salvator-x:~#
    root@salvator-x:~# ifconfig eth0 down
    
    ==================================================================
    BUG: KASAN: use-after-free in swiotlb_tbl_unmap_single+0xc4/0x35c
    Write of size 1538 at addr ffff8006d884f780 by task ifconfig/1649
    
    CPU: 0 PID: 1649 Comm: ifconfig Not tainted 4.12.0-rc4-00004-g112eb07287d1 #32
    Hardware name: Renesas H3ULCB board based on r8a7795 (DT)
    Call trace:
    [<ffff20000808f11c>] dump_backtrace+0x0/0x3a4
    [<ffff20000808f4d4>] show_stack+0x14/0x1c
    [<ffff20000865970c>] dump_stack+0xf8/0x150
    [<ffff20000831f8b0>] print_address_description+0x7c/0x330
    [<ffff200008320010>] kasan_report+0x2e0/0x2f4
    [<ffff20000831eac0>] check_memory_region+0x20/0x14c
    [<ffff20000831f054>] memcpy+0x48/0x68
    [<ffff20000869ed50>] swiotlb_tbl_unmap_single+0xc4/0x35c
    [<ffff20000869fcf4>] unmap_single+0x90/0xa4
    [<ffff20000869fd14>] swiotlb_unmap_page+0xc/0x14
    [<ffff2000080a2974>] __swiotlb_unmap_page+0xcc/0xe4
    [<ffff2000088acdb8>] ravb_ring_free+0x514/0x870
    [<ffff2000088b25dc>] ravb_close+0x288/0x36c
    [<ffff200008aaf8c4>] __dev_close_many+0x14c/0x174
    [<ffff200008aaf9b4>] __dev_close+0xc8/0x144
    [<ffff200008ac2100>] __dev_change_flags+0xd8/0x194
    [<ffff200008ac221c>] dev_change_flags+0x60/0xb0
    [<ffff200008ba2dec>] devinet_ioctl+0x484/0x9d4
    [<ffff200008ba7b78>] inet_ioctl+0x190/0x194
    [<ffff200008a78c44>] sock_do_ioctl+0x78/0xa8
    [<ffff200008a7a128>] sock_ioctl+0x110/0x3c4
    [<ffff200008365a70>] vfs_ioctl+0x90/0xa0
    [<ffff200008365dbc>] do_vfs_ioctl+0x148/0xc38
    [<ffff2000083668f0>] SyS_ioctl+0x44/0x74
    [<ffff200008083770>] el0_svc_naked+0x24/0x28
    
    The buggy address belongs to the page:
    page:ffff7e001b6213c0 count:0 mapcount:0 mapping:          (null) index:0x0
    flags: 0x4000000000000000()
    raw: 4000000000000000 0000000000000000 0000000000000000 00000000ffffffff
    raw: 0000000000000000 ffff7e001b6213e0 0000000000000000 0000000000000000
    page dumped because: kasan: bad access detected
    
    Memory state around the buggy address:
     ffff8006d884f680: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff
     ffff8006d884f700: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff
    >ffff8006d884f780: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff
                       ^
     ffff8006d884f800: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff
     ffff8006d884f880: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff
    ==================================================================
    Disabling lock debugging due to kernel taint
    root@salvator-x:~#
    
    Fixes: a47b70ea86bd ("ravb: unmap descriptors when freeing rings")
    Signed-off-by: Eugeniu Rosca <erosca@de.adit-jv.com>
    Acked-by: Sergei Shtylyov <sergei.shtylyov@cogentembedded.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 3987a40362b7a20c0eed3967130b51f7f921ace2 ......
	 orig commit -> 6c971c09f38704513c426ba6515f22fb3d6c87d5 ......
checking ff20cc9a608609b107b5092f9a2852f2dfe3f50d ......
	 orig commit -> cae9ff036eea577856d5b12860b4c79c5e71db4a ......
		 cae9ff036eea577856d5b12860b4c79c5e71db4a has problem. Fixes commit -> 9a2eba337cacefc95b97c2726e3efdd435b3460e
checking 711f4797a339e27906e6f69b16a09543374551e8 ......
	 orig commit -> 83b5d1e3d3013dbf90645a5d07179d018c8243fa ......
checking 9343894a8b3d310ea580948835cc9e7ece537155 ......
	 orig commit -> d1156b489fa734d1af763d6a07b1637c01bb0aed ......
checking 3926d04ddec241a503ad121e48b943ac773255ff ......
	 orig commit -> e82d02580af45663fad6d3596e4344c606e81e10 ......
checking 6e3ea31dfb01574ac69461fa4dded97eb9238c93 ......
	 orig commit -> 4af0e5bb95ee3ba5ea4bd7dbb94e1648a5279cc9 ......
checking 2b9f84ef46d85484eb63d370f674115d0843334e ......
	 orig commit -> d585df1c5ccf995fcee910705ad7a9cdd11d4152 ......
		 d585df1c5ccf995fcee910705ad7a9cdd11d4152 has problem. Fixes commit -> 4cbe4dac82e423ecc9a0ba46af24a860853259f4
commit acc7d1bd901cde5acc6891ebc6be6cfc614fb868
Author: Jack Morgenstein <jackm@dev.mellanox.co.il>
Date:   Mon Mar 13 19:29:08 2017 +0200

    net/mlx4_core: Avoid delays during VF driver device shutdown
    
    
    [ Upstream commit 4cbe4dac82e423ecc9a0ba46af24a860853259f4 ]
    
    Some Hypervisors detach VFs from VMs by instantly causing an FLR event
    to be generated for a VF.
    
    In the mlx4 case, this will cause that VF's comm channel to be disabled
    before the VM has an opportunity to invoke the VF device's "shutdown"
    method.
    
    For such Hypervisors, there is a race condition between the VF's
    shutdown method and its internal-error detection/reset thread.
    
    The internal-error detection/reset thread (which runs every 5 seconds) also
    detects a disabled comm channel. If the internal-error detection/reset
    flow wins the race, we still get delays (while that flow tries repeatedly
    to detect comm-channel recovery).
    
    The cited commit fixed the command timeout problem when the
    internal-error detection/reset flow loses the race.
    
    This commit avoids the unneeded delays when the internal-error
    detection/reset flow wins.
    
    Fixes: d585df1c5ccf ("net/mlx4_core: Avoid command timeouts during VF driver device shutdown")
    Signed-off-by: Jack Morgenstein <jackm@dev.mellanox.co.il>
    Reported-by: Simon Xiao <sixiao@microsoft.com>
    Signed-off-by: Tariq Toukan <tariqt@mellanox.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 6f0a81edb918608f26e7d1efb490674341586a10 ......
	 orig commit -> 96692b097ba76d0c637ae8af47b29c73da33c9d0 ......
checking 9c7a11e6f994124432023b5a989ac08bcf40f516 ......
	 orig commit -> c966b6279f610a24ac1d42dcbe30e10fa61220b2 ......
checking 1507ea6df42e75a1b846a0bda522cda4fd28a89c ......
	 orig commit -> 90427ef5d2a4b9a24079889bf16afdcdaebc4240 ......
		 90427ef5d2a4b9a24079889bf16afdcdaebc4240 has problem. Fixes commit -> 0e9a709560dbcfbace8bf4019dc5298619235891
checking 95a4659ee8d00b68846071f9fdf312b0b788d541 ......
	 orig commit -> 62deb8187d116581c88c69a2dd9b5c16588545d4 ......
checking 38481d7d43dd633528841c7427d5c28d2b48bed5 ......
	 orig commit -> 6bdded59c8933940ac7e5b416448276ac89d1144 ......
checking b421d230dfa17ab13fd4d9a9ac3e7f899bb3b913 ......
	 orig commit -> e26bfebdfc0d212d366de9990a096665d5c0209a ......
checking e6b15f0fc7a6f1fed9c0a1bca108e8772f7e6ad9 ......
	 orig commit -> 3808d34838184fd29088d6b3a364ba2f1c018fb6 ......
checking 980660760aa7cee168435449236fa7133f240f3e ......
	 orig commit -> 29905b52fad0854351f57bab867647e4982285bf ......
checking 55d0f89a1a0cc6a38a078d69f6a1b1c294aa039e ......
	 orig commit -> 4f40c6e5627ea73b4e7c615c59631f38cc880885 ......
checking 1948d0afe43ec3792766b58d750e3ded88735929 ......
	 orig commit -> 35f860f9ba6aac56cc38e8b18916d833a83f1157 ......
		 35f860f9ba6aac56cc38e8b18916d833a83f1157 has problem. Fixes commit -> 7292ae3d5a18fb922be496e6bb687647193569b4
commit 736b342cc9b4e804fe3ee94af1483b7203cce6cc
Author: Gleb Fotengauer-Malinovskiy <glebfm@altlinux.org>
Date:   Mon Mar 20 20:15:53 2017 +0300

    jump label: fix passing kbuild_cflags when checking for asm goto support
    
    commit 7292ae3d5a18fb922be496e6bb687647193569b4 upstream.
    
    The latest change of asm goto support check added passing of KBUILD_CFLAGS
    to compiler.  When these flags reference gcc plugins that are not built yet,
    the check fails.
    
    When one runs "make bzImage" followed by "make modules", the kernel is always
    built with HAVE_JUMP_LABEL disabled, while the modules are built depending on
    CONFIG_JUMP_LABEL.  If HAVE_JUMP_LABEL macro happens to be different, modules
    are built with undefined references, e.g.:
    
    ERROR: "static_key_slow_inc" [net/netfilter/xt_TEE.ko] undefined!
    ERROR: "static_key_slow_dec" [net/netfilter/xt_TEE.ko] undefined!
    ERROR: "static_key_slow_dec" [net/netfilter/nft_meta.ko] undefined!
    ERROR: "static_key_slow_inc" [net/netfilter/nft_meta.ko] undefined!
    ERROR: "nf_hooks_needed" [net/netfilter/ipvs/ip_vs.ko] undefined!
    ERROR: "nf_hooks_needed" [net/ipv6/ipv6.ko] undefined!
    ERROR: "static_key_count" [net/ipv6/ipv6.ko] undefined!
    ERROR: "static_key_slow_inc" [net/ipv6/ipv6.ko] undefined!
    
    This change moves the check before all these references are added
    to KBUILD_CFLAGS.  This is correct because subsequent KBUILD_CFLAGS
    modifications are not relevant to this check.
    
    Reported-by: Anton V. Boyarshinov <boyarsh@altlinux.org>
    Fixes: 35f860f9ba6a ("jump label: pass kbuild_cflags when checking for asm goto support")
    Signed-off-by: Gleb Fotengauer-Malinovskiy <glebfm@altlinux.org>
    Signed-off-by: Dmitry V. Levin <ldv@altlinux.org>
    Acked-by: Steven Rostedt (VMware) <rostedt@goodmis.org>
    Acked-by: David Lin <dtwlin@google.com>
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 266e02bc69a2323901238272c880934438fb47ae ......
	 orig commit -> a9306a63631493afc75893a4ac405d4e1cbae6aa ......
checking 8d228758f90f234d1c5c6696960a5bd6a392c751 ......
	 orig commit -> a088d1d73a4bcfd7bc482f8d08375b9b665dc3e5 ......
checking ee0cd47799dd63c38e3ae842be6693b53b315735 ......
	 orig commit -> f43128c75202f29ee71aa83e6c320a911137c189 ......
checking 68cac074124615e24cd3ff6ca94ed7ef2e1cc0a2 ......
	 orig commit -> 5a70348e1187c5bf1cbd0ec51843f36befed1c2d ......
checking d95ffdd395660eb83da6b14eb07ab1311b10df25 ......
	 orig commit -> 764895d3039e903dac3a70f219949efe43d036a0 ......
checking 716cca0a67ec131295dbca477b0cc35e0bc5f81c ......
	 orig commit -> b85ea006b6bebb692628f11882af41c3e12e1e09 ......
checking aacf9de1e23910a04611f90f26ad66dc7a179343 ......
	 orig commit -> 7ba1b689038726d34e3244c1ac9e2e18c2ea4787 ......
checking b9e9045d5e6bd439d6b34833ef6007a6c56427d0 ......
	 orig commit -> 4872e57c812dd312bf8193b5933fa60585cda42f ......
checking 23287661af3e2fd5a6a5a7bbe2b8f066203456e0 ......
	 orig commit -> ec5e3b0a1d41fbda0cc33a45bc9e54e91d9d12c7 ......
		 ec5e3b0a1d41fbda0cc33a45bc9e54e91d9d12c7 has problem. Fixes commit -> 00ea1ceebe0d9f2dc1cc2b7bd575a00100c27869
commit d68a4e380ff55d2c9fe630ec7cb984bb57eeb6b3
Author: Willem de Bruijn <willemb@google.com>
Date:   Sat Feb 18 19:00:45 2017 -0500

    ipv6: release dst on error in ip6_dst_lookup_tail
    
    commit 00ea1ceebe0d9f2dc1cc2b7bd575a00100c27869 upstream.
    
    If ip6_dst_lookup_tail has acquired a dst and fails the IPv4-mapped
    check, release the dst before returning an error.
    
    Fixes: ec5e3b0a1d41 ("ipv6: Inhibit IPv4-mapped src address on the wire.")
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Cc: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 8faccb2b944215e1ecb86989f22113db267397c5 ......
	 orig commit -> 052d2369d1b479cdbbe020fdd6d057d3c342db74 ......
checking 10a7629772676694cb4da272df2b391f1963fc7d ......
	 orig commit -> cd224553641848dd17800fe559e4ff5d208553e8 ......
checking 7f71f22a116f6fa834577ca4e57b1c81f730e1e5 ......
	 orig commit -> acf138f1b00bdd1b7cd9894562ed0c2a1670888e ......
checking 2ba464a4b7488d3de658cb60f74010f8b4053e4c ......
	 orig commit -> b8c600120fc87d53642476f48c8055b38d6e14c7 ......
checking 691fe5610d580285af0d02bd5f62662bc50ed707 ......
	 orig commit -> baabd567f87be05330faa5140f72a91960e7405a ......
checking 3fc4d70453ee4af1ac539e841e30d973a71edffb ......
	 orig commit -> 46350b71a09ccf3573649e03db55d4b61d5da231 ......
checking b28c21baf28a854011d0d896f861995843e7a72e ......
	 orig commit -> 223220356d5ebc05ead9a8d697abb0c0a906fc81 ......
checking 0fb2a1fe6155547d8a8234ad5f19e5fd53621c82 ......
	 orig commit -> c34a69059d7876e0793eb410deedfb08ccb22b02 ......
