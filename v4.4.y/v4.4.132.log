Check from v4.4.132 to v4.4.133
Commit count: 92
checking 7620164e85e48ea381a52864d729a7731be8d7f2 ......
checking eef045e7f67e01be5747af23ba77a06d7f5bcdbe ......
	 orig commit -> a466ef76b815b86748d9870ef2a430af7b39c710 ......
checking 338762ca45d072bce8e9c38ba07a194516a58dba ......
	 orig commit -> 66072c29328717072fd84aaff3e070e3f008ba77 ......
checking 87c807f1eff39a5b0fc440fac931fcaeba257395 ......
	 orig commit -> a7cfebcb7594a24609268f91299ab85ba064bf82 ......
		 a7cfebcb7594a24609268f91299ab85ba064bf82 has problem. Fixes commit -> 814596495dd2b9d4aab92d8f89cf19060d25d2ea
commit 281e26c870811ad2397dec001966161691d2d52c
Author: Eric Biggers <ebiggers@google.com>
Date:   Mon May 14 20:09:24 2018 -0700

    cfg80211: further limit wiphy names to 64 bytes
    
    commit 814596495dd2b9d4aab92d8f89cf19060d25d2ea upstream.
    
    wiphy names were recently limited to 128 bytes by commit a7cfebcb7594
    ("cfg80211: limit wiphy names to 128 bytes").  As it turns out though,
    this isn't sufficient because dev_vprintk_emit() needs the syslog header
    string "SUBSYSTEM=ieee80211\0DEVICE=+ieee80211:$devname" to fit into 128
    bytes.  This triggered the "device/subsystem name too long" WARN when
    the device name was >= 90 bytes.  As before, this was reproduced by
    syzbot by sending an HWSIM_CMD_NEW_RADIO command to the MAC80211_HWSIM
    generic netlink family.
    
    Fix it by further limiting wiphy names to 64 bytes.
    
    Reported-by: syzbot+e64565577af34b3768dc@syzkaller.appspotmail.com
    Fixes: a7cfebcb7594 ("cfg80211: limit wiphy names to 128 bytes")
    Signed-off-by: Eric Biggers <ebiggers@google.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking c610b0cbb263787564290447452ab84719092f6f ......
	 orig commit -> b26a719bdba9aa926ceaadecc66e07623d2b8a53 ......
checking 09f7ebaa436c9bdad4a21c24fed5057604e709c1 ......
	 orig commit -> 3d88d56c5873f6eebe23e05c3da701960146b801 ......
checking 92cffdc98efb1dea5d6f6911616f05dc6338d75f ......
	 orig commit -> 757d12e5849be549076901b0d33c60d5f360269c ......
checking 367971340270db5b3856172ed2072209ea9575dc ......
	 orig commit -> fa89adba1941e4f3b213399b81732a5c12fd9131 ......
checking 93314640426ddb6af618d0802e622f6fa771792c ......
	 orig commit -> a45b599ad808c3c982fdcdc12b0b8611c2f92824 ......
checking 6efcc74e1b0c16aebf5d8107543ce63475af35c1 ......
	 orig commit -> 318aaf34f1179b39fa9c30fa0f3288b645beee39 ......
checking 8c6d306fad557b6f3a8b80c9cc54611fefc3b3c3 ......
	 orig commit -> de5cb6eb514ebe241e3edeb290cb41deb380b81d ......
		 de5cb6eb514ebe241e3edeb290cb41deb380b81d has problem. Fixes commit -> 26f843848bae973817b3587780ce6b7b0200d3e4
commit 2502064731b133b87540758678b4485c0dbdc925
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Mon Aug 6 14:26:39 2018 +0200

    s390: fix br_r1_trampoline for machines without exrl
    
    commit 26f843848bae973817b3587780ce6b7b0200d3e4 upstream.
    
    For machines without the exrl instruction the BFP jit generates
    code that uses an "br %r1" instruction located in the lowcore page.
    Unfortunately there is a cut & paste error that puts an additional
    "larl %r1,.+14" instruction in the code that clobbers the branch
    target address in %r1. Remove the larl instruction.
    
    Cc: <stable@vger.kernel.org> # v4.17+
    Fixes: de5cb6eb51 ("s390: use expoline thunks in the BPF JIT")
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking f436cb969ab314b25edcabfc4b4f1442c1b83eb7 ......
	 orig commit -> 6deaa3bbca804b2a3627fd685f75de64da7be535 ......
checking c617e74f5b3e027f622eb109d94ab909cd69cdfa ......
	 orig commit -> 4253b0e0627ee3461e64c2495c616f1c8f6b127b ......
checking 90305465afd422e50afdaa1d614dc335418cd19e ......
	 orig commit -> c50c84c3ac4d5db683904bdb3257798b6ef980ae ......
checking 5ce9dc0f76519ac7ef2d861172ae280fc9d6c3e2 ......
	 orig commit -> 97489e0663fa700d6e7febddc43b58df98d7bcda ......
		 97489e0663fa700d6e7febddc43b58df98d7bcda has problem. Fixes commit -> 5eda25b10297684c1f46a14199ec00210f3c346e
commit 280880cebc339fea7e92fcb7c16914c593d176c9
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Mon Aug 6 13:49:47 2018 +0200

    s390/lib: use expoline for all bcr instructions
    
    commit 5eda25b10297684c1f46a14199ec00210f3c346e upstream.
    
    The memove, memset, memcpy, __memset16, __memset32 and __memset64
    function have an additional indirect return branch in form of a
    "bzr" instruction. These need to use expolines as well.
    
    Cc: <stable@vger.kernel.org> # v4.17+
    Fixes: 97489e0663 ("s390/lib: use expoline for indirect branches")
    Reviewed-by: Heiko Carstens <heiko.carstens@de.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 73bf2b1c5b3219f3497c1023e7add82eb1d1bd4b ......
	 orig commit -> 6dd85fbb87d1d6b87a3b1f02ca28d7b2abd2e7ba ......
		 6dd85fbb87d1d6b87a3b1f02ca28d7b2abd2e7ba has problem. Fixes commit -> 891f6a726cacbb87e5b06076693ffab53bd378d7
commit 8e0817deeb968cfd0e176ed204754b712af7ecd2
Author: Christian Borntraeger <borntraeger@de.ibm.com>
Date:   Thu Jun 21 14:49:38 2018 +0200

    s390: Correct register corruption in critical section cleanup
    
    commit 891f6a726cacbb87e5b06076693ffab53bd378d7 upstream.
    
    In the critical section cleanup we must not mess with r1.  For march=z9
    or older, larl + ex (instead of exrl) are used with r1 as a temporary
    register. This can clobber r1 in several interrupt handlers. Fix this by
    using r11 as a temp register.  r11 is being saved by all callers of
    cleanup_critical.
    
    Fixes: 6dd85fbb87 ("s390: move expoline assembler macros to a header")
    Cc: stable@vger.kernel.org #v4.16
    Reported-by: Oliver Kurz <okurz@suse.com>
    Reported-by: Petr Tesařík <ptesarik@suse.com>
    Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>
    Reviewed-by: Hendrik Brueckner <brueckner@linux.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 2685d33c6ff9f7ca700e7f0c9ad218cd515dcc5a ......
	 orig commit -> fba9eb7946251d6e420df3bdf7bc45195be7be9a ......
checking 3cd868dc9b68709d7274120f7ef1c6063948910d ......
	 orig commit -> 5aa1437d2d9a068c0334bd7c9dafa8ec4f97f13b ......
checking 5bbe138a250e795b32f29fc91af88c69851a12d3 ......
	 orig commit -> 7f582b248d0a86bae5788c548d7bb5bca6f7691a ......
checking 8e299f7ae900e3dd8053ec81b405abdfa6ba18e2 ......
	 orig commit -> 9709020c86f6bf8439ca3effc58cfca49a5de192 ......
checking d9fb8cc230b2a4757e9fe4f81468f81212d4deaa ......
	 orig commit -> b84bbaf7a6c8cca24f8acf25a2c8e46913a947ba ......
		 b84bbaf7a6c8cca24f8acf25a2c8e46913a947ba has problem. Fixes commit -> 993675a3100b16a4c80dfd70cbcde8ea7127b31d
9aad13b087ab0a588cd68259de618f100053360e
commit 01a8ef2f327a6fe5075ee5027c9fa02df42c1c4e
Author: Willem de Bruijn <willemb@google.com>
Date:   Wed Jul 11 12:00:45 2018 -0400

    packet: reset network header if packet shorter than ll reserved space
    
    [ Upstream commit 993675a3100b16a4c80dfd70cbcde8ea7127b31d ]
    
    If variable length link layer headers result in a packet shorter
    than dev->hard_header_len, reset the network header offset. Else
    skb->mac_len may exceed skb->len after skb_mac_reset_len.
    
    packet_sendmsg_spkt already has similar logic.
    
    Fixes: b84bbaf7a6c8 ("packet: in packet_snd start writing at link layer allocation")
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 7666b7098d5a6fb28202540e062bc98a9c713b9e
Author: Willem de Bruijn <willemb@google.com>
Date:   Thu May 24 18:10:30 2018 -0400

    packet: fix reserve calculation
    
    [ Upstream commit 9aad13b087ab0a588cd68259de618f100053360e ]
    
    Commit b84bbaf7a6c8 ("packet: in packet_snd start writing at link
    layer allocation") ensures that packet_snd always starts writing
    the link layer header in reserved headroom allocated for this
    purpose.
    
    This is needed because packets may be shorter than hard_header_len,
    in which case the space up to hard_header_len may be zeroed. But
    that necessary padding is not accounted for in skb->len.
    
    The fix, however, is buggy. It calls skb_push, which grows skb->len
    when moving skb->data back. But in this case packet length should not
    change.
    
    Instead, call skb_reserve, which moves both skb->data and skb->tail
    back, without changing length.
    
    Fixes: b84bbaf7a6c8 ("packet: in packet_snd start writing at link layer allocation")
    Reported-by: Tariq Toukan <tariqt@mellanox.com>
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Acked-by: Soheil Hassas Yeganeh <soheil@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 01a8ef2f327a6fe5075ee5027c9fa02df42c1c4e
Author: Willem de Bruijn <willemb@google.com>
Date:   Wed Jul 11 12:00:45 2018 -0400

    packet: reset network header if packet shorter than ll reserved space
    
    [ Upstream commit 993675a3100b16a4c80dfd70cbcde8ea7127b31d ]
    
    If variable length link layer headers result in a packet shorter
    than dev->hard_header_len, reset the network header offset. Else
    skb->mac_len may exceed skb->len after skb_mac_reset_len.
    
    packet_sendmsg_spkt already has similar logic.
    
    Fixes: b84bbaf7a6c8 ("packet: in packet_snd start writing at link layer allocation")
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 671cf50f4c2f55652495d98fa4306aa8641b2860 ......
	 orig commit -> 113f99c3358564a0647d444c2ae34e8b1abfd5b9 ......
checking e2da30c54e49d7c989484865b838aeccad708d00 ......
	 orig commit -> 02a3307aa9c20b4f6626255b028f07f6cfa16feb ......
checking 68dea4bd04f34e53771f6e143322cadc2f4beb48 ......
	 orig commit -> 02ee654d3a04563c67bfe658a05384548b9bb105 ......
checking 72d1df8a8921d801904cc71428351c2960b7155b ......
	 orig commit -> 9a8fca62aacc1599fea8e813d01e1955513e4fad ......
checking 104cff91618e6073e428a8a549f69f70d6454f08 ......
	 orig commit -> 0d73c3f8e7f6ee2aab1bb350f60c180f5ae21a2c ......
checking 51425b7554a92040e8dc9fe42b2694a6df2125c0 ......
	 orig commit -> 70948c05fdde0aac32f9667856a88725c192fa40 ......
checking 0ec84ae5aba19bf79653371f0bd45c12631b49b6 ......
	 orig commit -> 69af7e23a6870df2ea6fa79ca16493d59b3eebeb ......
checking 2c4c0ab87d4d72ba07f8a01b51bd15b9b6a46516 ......
	 orig commit -> 5596fe34495cf0f645f417eb928ef224df3e3cb4 ......
checking e4f821810c2856c856c28884cd6fcb1b528412bb ......
	 orig commit -> eb0146daefdde65665b7f076fbff7b49dade95b9 ......
checking 5f1d5f781555718ceebded2d9a7659d3766d86b8 ......
	 orig commit -> 0b3225ab9407f557a8e20f23f37aa7236c10a9b1 ......
checking fa376a12da18f847d9f76695a6f3d891fc6224de ......
	 orig commit -> 9f18fff63cfd6f559daa1eaae60640372c65f84b ......
checking b26157de3368201ca3cc08007ee4dfe7daae2b92 ......
	 orig commit -> 2e68adcd2fb21b7188ba449f0fab3bee2910e500 ......
checking 55b21399d8d94ec124cc5ceed2e11f9be53d9e13 ......
	 orig commit -> 4bbaf2584b86b0772413edeac22ff448f36351b1 ......
checking 9c32e0d3655efc6f5b556614a6713870da477d05 ......
	 orig commit -> e521813468f786271a87e78e8644243bead48fad ......
checking ec8d6e953ad179be174b59513d8392ef48f566d5 ......
	 orig commit -> ab1e8d8960b68f54af42b6484b5950bd13a4054b ......
checking 380efa6a71c5aba6dec2a1432a29644bb0b220a8 ......
	 orig commit -> c1d2a31397ec51f0370f6bd17b19b39152c263cb ......
checking b8c71ce9e00d7aa60b847a5822fd18a716a52332 ......
	 orig commit -> 1b3044e39a89cb1d4d5313da477e8dfea2b5232d ......
checking a58c00657ec02755fe322eebd11dbf6a24da1d91 ......
	 orig commit -> a3b609ef9f8b1dbfe97034ccad6cd3fe71fbe7ab ......
checking 111cb9f5df8a649cd0e57bbacf8d5254a2a8c712 ......
	 orig commit -> 45dd9b0666a162f8e4be76096716670cf1741f0e ......
checking f5a80c5d9ca98045bae32ef29a9ab031066047ba ......
	 orig commit -> 7791e4aa59ad724e0b4c8b4dea547a5735108972 ......
checking eae31bc183db0281c51e09a2830d70ca20e22562 ......
	 orig commit -> c7be96af89d4b53211862d8599b2430e8900ed92 ......
checking 5dd02a8952118538308b3bf5170d5db52d3ed477 ......
	 orig commit -> ebded02788b5d7c7600f8cff26ae07896d568649 ......
checking 9c9a6bbaf85bef862609f98809853ab1a1c69c98 ......
	 orig commit -> 32b635298ff4e991d8d8f64dc23782b02eec29c3 ......
checking 106253c4c9bca7880000d44aa2248b1ca2071c92 ......
	 orig commit -> 84ad5802a33a4964a49b8f7d24d80a214a096b19 ......
checking a4134dfc6b4c38b3b6b35d867f9f09ddb2a2b2ec ......
	 orig commit -> 316bda0e6cc5f36f94b4af8bded16d642c90ad75 ......
checking 90c2e2e1a88ab8b8ca7387b49539722268ecd96e ......
	 orig commit -> 349524bc0da698ec77f2057cf4a4948eb6349265 ......
checking 605902e923584c2884ef869ef2cd4e4172be275e ......
	 orig commit -> 75274b33e779ae40a750bcb4bd0b07c4dfef4746 ......
checking 662de929795e61ce845285145ccc0a8c8330f75b ......
	 orig commit -> e4d54f71d29997344b4c4c8d47708240f9f23a5c ......
checking fb0e6fa225a455f3070921455455202d03ace691 ......
	 orig commit -> 7261aafc095763b119136a562540dea7b1ccf657 ......
checking bffb5017b10003d0513dd8806ccd87facbf82de6 ......
	 orig commit -> 786842b62f81f20d14894925e8c225328ee8144b ......
checking 503ef637f94de26dc88241634f213f42194367d6 ......
	 orig commit -> efc4a13724b852ddaa3358402a8dec024ffbcb17 ......
checking 59e3b28998558e3fdaf96ab37141c4d24d520f69 ......
	 orig commit -> 3f12888dfae2a48741c4caa9214885b3aaf350f9 ......
checking 1b406c0d49383d8474dd343ca463137ee8a89584 ......
	 orig commit -> c8beccc19b92f5172994c0732db689c08f4f98e5 ......
checking 2444bdbebcf9fc71b9177965c8117523f91b5170 ......
	 orig commit -> 21493316a3c4598f308d5a9fa31cc74639c4caff ......
checking 294c6cc3364ab82b8717db938d123fbf968b8c0f ......
	 orig commit -> c171654caa875919be3c533d3518da8be5be966e ......
checking 02995a5882371a9fca3033fd356598a805d46040 ......
	 orig commit -> 22076557b07c12086eeb16b8ce2b0b735f7a27e7 ......
		 22076557b07c12086eeb16b8ce2b0b735f7a27e7 has problem. Fixes commit -> c171654caa875919be3c533d3518da8be5be966e
commit 294c6cc3364ab82b8717db938d123fbf968b8c0f
Author: Shuah Khan (Samsung OSG) <shuah@kernel.org>
Date:   Tue May 15 17:57:23 2018 -0600

    usbip: usbip_host: fix bad unlock balance during stub_probe()
    
    commit c171654caa875919be3c533d3518da8be5be966e upstream.
    
    stub_probe() calls put_busid_priv() in an error path when device isn't
    found in the busid_table. Fix it by making put_busid_priv() safe to be
    called with null struct bus_id_priv pointer.
    
    This problem happens when "usbip bind" is run without loading usbip_host
    driver and then running modprobe. The first failed bind attempt unbinds
    the device from the original driver and when usbip_host is modprobed,
    stub_probe() runs and doesn't find the device in its busid table and calls
    put_busid_priv(0 with null bus_id_priv pointer.
    
    usbip-host 3-10.2: 3-10.2 is not in match_busid table...  skip!
    
    [  367.359679] =====================================
    [  367.359681] WARNING: bad unlock balance detected!
    [  367.359683] 4.17.0-rc4+ #5 Not tainted
    [  367.359685] -------------------------------------
    [  367.359688] modprobe/2768 is trying to release lock (
    [  367.359689]
    ==================================================================
    [  367.359696] BUG: KASAN: null-ptr-deref in print_unlock_imbalance_bug+0x99/0x110
    [  367.359699] Read of size 8 at addr 0000000000000058 by task modprobe/2768
    
    [  367.359705] CPU: 4 PID: 2768 Comm: modprobe Not tainted 4.17.0-rc4+ #5
    
    Fixes: 22076557b07c ("usbip: usbip_host: fix NULL-ptr deref and use-after-free errors") in usb-linus
    Signed-off-by: Shuah Khan (Samsung OSG) <shuah@kernel.org>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 22d4a89efe86b8710d3f0436a1d68979207719b8 ......
	 orig commit -> 7510df3f29d44685bab7b1918b61a8ccd57126a9 ......
checking fce529ec9971384bf0fe57b39ffc65226bc3a1a5 ......
	 orig commit -> 1e180f167d4e413afccbbb4a421b48b2de832549 ......
checking 39cfc006fb1378f92faf91b94844d33e4d819f91 ......
	 orig commit -> 28b68acc4a88dcf91fd1dcf2577371dc9bf574cc ......
checking ea00b22b02f228cb58ee6c6707c86ec270e37fba ......
	 orig commit -> dd83c161fbcc5d8be637ab159c0de015cbff5ba4 ......
checking cde6d68b1a4f67b8b1c7f71c710fd8590ef725a3 ......
	 orig commit -> d70ef22892ed6c066e51e118b225923c9b74af34 ......
checking 7d56aed52b52450181c7ba58cb680739cb7e5737 ......
	 orig commit -> 086e774a57fba4695f14383c0818994c0b31da7c ......
checking e28debec24f5c40ac5752bd2fc3b2e686e9010d0 ......
	 orig commit -> de3b58bc359a861d5132300f53f95e83f71954b3 ......
checking 59d96688ed7c62f71b881ece31efe89a0c3fe664 ......
	 orig commit -> 9de3a3bfed892608dc30a6bc3fd8bdbeae5b51a5 ......
	 orig commit -> 79935915300c5eb88a0e94fa9148a7505c14a02a ......
	 orig commit -> 570c70a60f53ca737ead4e5966c446bf0d39fac9 ......
checking 415a85ce93fdc114b0ca37577882569481d11c4e ......
	 orig commit -> 3a2b19d1ee5633f76ae8a88da7bc039a5d1732aa ......
checking ee551b8e00b0368cb1188dbf0238a3a8989e9845 ......
	 orig commit -> 75bf50f4aaa1c78d769d854ab3d975884909e4fb ......
checking 177a981885cf9588ca5cbcaf2ce65ab0d4b4abb3 ......
	 orig commit -> 30d6e0a4190d37740e9447e4e4815f06992dd8c3 ......
		 30d6e0a4190d37740e9447e4e4815f06992dd8c3 has problem. Fixes commit -> d70ef22892ed6c066e51e118b225923c9b74af34
e78c38f6bdd900b2ad9ac9df8eff58b745dc5b3c
commit cde6d68b1a4f67b8b1c7f71c710fd8590ef725a3
Author: Jiri Slaby <jslaby@suse.cz>
Date:   Thu Nov 30 15:35:44 2017 +0100

    futex: futex_wake_op, fix sign_extend32 sign bits
    
    commit d70ef22892ed6c066e51e118b225923c9b74af34 upstream.
    
    sign_extend32 counts the sign bit parameter from 0, not from 1.  So we
    have to use "11" for 12th bit, not "12".
    
    This mistake means we have not allowed negative op and cmp args since
    commit 30d6e0a4190d ("futex: Remove duplicated code and fix undefined
    behaviour") till now.
    
    Fixes: 30d6e0a4190d ("futex: Remove duplicated code and fix undefined behaviour")
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Cc: Ingo Molnar <mingo@redhat.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Darren Hart <dvhart@infradead.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 2fc127737e300bba00d4ed878dac4c78be42522b ......
	 orig commit -> 48fb6f4db940e92cfb16cd878cddd59ea6120d06 ......
checking 348f043ab6c6ab15f9e49b7905ba932dd260cf93 ......
	 orig commit -> ece1397cbc89c51914fae1aec729539cfd8bd62b ......
checking 45eecfb9c5f5bc2f7c254c8bcc4219fa4b31008c ......
	 orig commit -> 30b5ba5cf333cc650e474eaf2cc1ae91bc7cf89f ......
checking 9bb698bedebf437ae3de8bae8e1aa8bca02664da ......
	 orig commit -> 76a658c20efd541a62838d9ff68ce94170d7a549 ......
checking bea8a671cee74232bbeef3980354cb9b305f6a9f ......
	 orig commit -> f65e0d299807d8a11812845c972493c3f9a18e10 ......
		 f65e0d299807d8a11812845c972493c3f9a18e10 has problem. Fixes commit -> 3ae180972564846e6d794e3615e1ab0a1e6c4ef9
commit c04a69fb83974aa25f1065fc0c7b63e046dc46f2
Author: Ben Hutchings <ben.hutchings@codethink.co.uk>
Date:   Thu May 17 22:34:39 2018 +0100

    ALSA: timer: Fix pause event notification
    
    commit 3ae180972564846e6d794e3615e1ab0a1e6c4ef9 upstream.
    
    Commit f65e0d299807 ("ALSA: timer: Call notifier in the same spinlock")
    combined the start/continue and stop/pause functions, and in doing so
    changed the event code for the pause case to SNDRV_TIMER_EVENT_CONTINUE.
    Change it back to SNDRV_TIMER_EVENT_PAUSE.
    
    Fixes: f65e0d299807 ("ALSA: timer: Call notifier in the same spinlock")
    Signed-off-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Cc: stable@vger.kernel.org
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 957adaae7d228f5be44ed0e4ea926dc8e3d45caf ......
	 orig commit -> 59d8d4434f429b4fa8a346fd889058bda427a837 ......
checking e0a532d3d4562da65cac8bf74bac3f4190d73a57 ......
	 orig commit -> ce402f044e4e432c296f90eaabb8dbe8f3624391 ......
checking fc36a2a38f1e87ad0c1d753bbb00bd03ceb75bf1 ......
	 orig commit -> 16ae6aa1705299789f71fdea59bfb119c1fbd9c0 ......
checking 8ff936814817daeefceeb1ce26e80b46439a137d ......
	 orig commit -> 4fa8667ca3989ce14cf66301fa251544fbddbdd0 ......
checking afad8f840026e7011d58f75a0c2c30772b27ed96 ......
	 orig commit -> d89a2adb8bfe6f8949ff389acdb9fa298b6e8e12 ......
checking 00002fa69ffdfc0038e7277bf9de1662098f85cc ......
	 orig commit -> 46e16d4b956867013e0bbd7f2bad206f4aa55752 ......
checking 9982c6090d7e23782542f919ebbfdb2f72c1c1d1 ......
	 orig commit -> d625329b06e46bd20baf9ee40847d11982569204 ......
checking cd59b55080f5fa48a9cf7049dd3dcccb492a50d7 ......
	 orig commit -> 3148dedfe79e422f448a10250d3e2cdf8b7ee617 ......
checking 10bffef7fb2614f17319198146feee1769270f1e ......
	 orig commit -> 5697db4a696c41601a1d15c1922150b4dbf5726c ......
checking 02ce46ba5c009d926c7a07fb9f79d39d7aa89fbc ......
	 orig commit -> 72f17baf2352ded6a1d3f4bb2d15da8c678cd2cb ......
checking b19f6e41a3db6f5e547545537430bc7305f82a73 ......
	 orig commit -> 988bf7243e03ef69238381594e0334a79cef74a6 ......
checking 541d81ab682aed633052e7312e104d99cdeb1554 ......
	 orig commit -> 7df40c2673a1307c3260aab6f9d4b9bf97ca8fd7 ......
checking 7e2d8aef33e46adf2b588a588980a505ab5f8c76 ......
	 orig commit -> 6ad4e91c6d796b38a7f0e724db1de28eeb122bad ......
checking c9264b0a7e133df20e6c9d27d5cc08b2a01f2575 ......
	 orig commit -> 14224923c3600bae2ac4dcae3bf0c3d4dc2812be ......
checking 418e529ef418ecf31019de0034d63b226dd92937 ......
	 orig commit -> 2c5d5b13c6eb79f5677e206b8aad59b3a2097f60 ......
checking 87bd2aca94cc3a3d0a48fa75a7532ff19f1549cc ......
	 orig commit -> 1b97013bfb11d66f041de691de6f0fec748ce016 ......
checking 7233fad00faa51a04a074a6ed7e507f408c034ec ......
	 orig commit -> a8d7aa17bbc970971ccdf71988ea19230ab368b1 ......
checking 2a188d15b21814af58d6a038023d0d8cbd9d6065 ......
	 orig commit -> e8238fc2bd7b4c3c7554fa2df067e796610212fc ......
checking a221a0c1db1e343ba64a41e21a39aea73d35ab7f ......
	 orig commit -> af3e0fcf78879f718c5f73df0814951bd7057d34 ......
