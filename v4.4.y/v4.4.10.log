Check from v4.4.10 to v4.4.11
Commit count: 73
checking 544ec5b08d007f184ab97abdbed87e613c8c0b83 ......
checking 6ff8315a4df67bfad96cffc406f91ceb6df70cde ......
	 orig commit -> 31b0b385f69d8d5491a4bca288e25e63f1d945d0 ......
checking 62b68367b74b2456ee68deafab047067a6acae67 ......
	 orig commit -> 1a738347df2ee4977459a8776fe2c62196bdcb1b ......
checking bafa4fbc2b4ac51045fe7fb3de94bcd5560a56c7 ......
	 orig commit -> d6a862fe8c48229ba342648bcd535b2404724603 ......
checking bf12e894e6b4ae0181af83ce5f6bb5e05c744660 ......
	 orig commit -> 2700818ac9f935d8590715eecd7e8cadbca552b6 ......
checking 472f52f5639238f569696082e0effbfb2171ad1a ......
	 orig commit -> e3c00d87845ab375f90fa6e10a5e72a3a5778cd3 ......
checking 9df2dc6cf4adb711545f48001b34f35fd3bb79ef ......
	 orig commit -> 93f0750dcdaed083d6209b01e952e98ca730db66 ......
checking 1abbf8044aa09aaa2c0810942a853bbf404f4198 ......
	 orig commit -> 6ae645d5fa385f3787bf1723639cd907fe5865e7 ......
checking 007796c01f0b293c68585397211af2b390bf126d ......
	 orig commit -> 99d825822eade8d827a1817357cbf3f889a552d6 ......
checking 35eb30c213ab718d1c66d44bcfda524184356250 ......
	 orig commit -> 106b816cb46ebd87408b4ed99a2e16203114daa6 ......
checking 4c127a3e21daa77e437828728d40084aa428415c ......
	 orig commit -> 2bcbc81421c511ef117cadcf0bee9c4340e68db0 ......
checking 4549fc712830400a3af34292ffdaa025f7e0c36e ......
	 orig commit -> 10c64cea04d3c75c306b3f990586ffb343b63287 ......
checking b657027854182f708d74424998fe95624f7c69c4 ......
	 orig commit -> a2262e5a12e05389ab4c7fc5cf60016b041dd8dc ......
checking fc2d8c98f754993f0c66d373672418a503e6e299 ......
	 orig commit -> 3b672623079bb3e5685b8549e514f2dfaa564406 ......
checking cf73d8ad76e4555a45ee399887b7c0361354d10f ......
	 orig commit -> f7c17d26f43d5cc1b7a6b896cd2fa24a079739b9 ......
checking b66cb8c5137da3dda2f32b2bcc69d3937f6d4899 ......
	 orig commit -> aab0a4c83ceb344d2327194bf354820e50607af6 ......
checking 8e5bb3c5417fd98c8966807dc07cc1b687da97c4 ......
	 orig commit -> 9409e22acdfc9153f88d9b1ed2bd2a5b34d2d3ca ......
checking b0dac61d2454b392dbdb4ad565f9dc3dc76fce96 ......
	 orig commit -> 54d5ca871e72f2bb172ec9323497f01cd5091ec7 ......
checking e54c41be42cd77cf11817bc50f91933cda3903d9 ......
	 orig commit -> 9f448cd3cbcec8995935e60b27802ae56aac8cc0 ......
checking 4e7e3f54cae7a6ea567c09d18c35bcc468b564c3 ......
	 orig commit -> dec8e8f6e6504aa3496c0f7cc10c756bb0e10f44 ......
checking 1fba064f789e053be80f1ee38c70abde71f584e2 ......
	 orig commit -> 5305a7b7e860bb40ab226bc7d58019416073948a ......
checking 1441dcbdcbe529fd7f0db6fd95b4bc9d867e04bb ......
	 orig commit -> 1ff7760ff66b98ef244bf0e5e2bd5310651205ad ......
checking 444189274bd802692e3e9334e23c1d9348ea87f6 ......
	 orig commit -> ea1b60fb085839a9544cb3a0069992991beabb7f ......
checking ca100af95931ebf2610b47ff2c311fe2c5e43495 ......
	 orig commit -> 66ec246eb9982e7eb8e15e1fc55f543230310dd0 ......
checking 90204cbb4890422facac52ed197b169eb1f26c9f ......
	 orig commit -> addacd801e1638f41d659cb53b9b73fc14322cb1 ......
checking 28ff35e454b4e2688eb0456b0981d6003a19d122 ......
	 orig commit -> 2da2dc9ead232f25601404335cca13c0f722d41b ......
checking 28c56446f563af16707e7945ce88f143f8fd6285 ......
	 orig commit -> 3231e2053eaeee70bdfb216a78a30f11e88e2243 ......
checking 7e8b58b0fa1c7f2da95307ab3fdf5704ca3f11db ......
	 orig commit -> 84add303ef950b8d85f54bc2248c2bc73467c329 ......
checking 2a5db188f3151be7d10c01c29deb6867b8bb2925 ......
	 orig commit -> 2d2c038a9999f423e820d89db2b5d7774b67ba49 ......
checking 7c712000ba78d26f46d16fcc8ac3a9d827ddb242 ......
	 orig commit -> df27b26f04ed388ff4cc2b5d8cfdb5d97678816f ......
checking 3cbc5f6ed2722a65b75de22fe2206471f093b6c3 ......
	 orig commit -> 13f4bb78cf6a312bbdec367ba3da044b09bf0e29 ......
checking 6f1519425705094323912e55d8d6e174775b9caf ......
	 orig commit -> 9e209fcfb804da262e38e5cd2e680c47a41f0f95 ......
checking ce1bc448bac01edfccdc26d8318cfd39aa09e6e0 ......
	 orig commit -> 723cacbd9dc79582e562c123a0bacf8bfc69e72a ......
checking 1d77f0a51cb6517d72146c6cb81a997b060b68b2 ......
	 orig commit -> 44f43e99fe70833058482d183e99fdfd11220996 ......
checking dc3e6de00b00bb7b716d2653650fdd112e981578 ......
	 orig commit -> c25a1e0671fbca7b2c0d0757d533bd2650d6dc0c ......
checking 3cbabd4e83f63d5271c8ff74c059f7cbe85c4c1d ......
	 orig commit -> 5ee0fbd50fdf1c1329de8bee35ea9d7c6a81a2e0 ......
checking 1c76c5d5ffbbaed1cb1829c1eb9b97648b4979fd ......
	 orig commit -> 626abd59e51d4d8c6367e03aae252a8aa759ac78 ......
checking 2cddc95adf3b1be879e6540187bb5aae24dd2689 ......
	 orig commit -> 10a81980fc47e64ffac26a073139813d3f697b64 ......
checking a7ddb047796d072a3f19c55aac1d9bfe8cb4b15c ......
	 orig commit -> 161de2caf68c549c266e571ffba8e2163886fb10 ......
checking 83857201758ead21e19e36d9ab5b2f87be03dfe2 ......
	 orig commit -> 79e48650320e6fba48369fccf13fd045315b19b8 ......
checking 1575c095e444c927f0ebcdeb179c460c8c3b7f1f ......
	 orig commit -> 4a91cb61bb995e5571098188092e296192309c77 ......
		 4a91cb61bb995e5571098188092e296192309c77 has problem. Fixes commit -> efc45154828ae4e49c6b46f59882bfef32697d44
f0a3fdca794d1e68ae284ef4caefe681f7c18e89
commit f5f16bf66d7e07e5a04f07226caefeaf3136c83a
Author: Nicolas Dichtel <nicolas.dichtel@6wind.com>
Date:   Thu May 19 17:26:29 2016 +0200

    uapi glibc compat: fix compilation when !__USE_MISC in glibc
    
    [ Upstream commit f0a3fdca794d1e68ae284ef4caefe681f7c18e89 ]
    
    These structures are defined only if __USE_MISC is set in glibc net/if.h
    headers, ie when _BSD_SOURCE or _SVID_SOURCE are defined.
    
    CC: Jan Engelhardt <jengelh@inai.de>
    CC: Josh Boyer <jwboyer@fedoraproject.org>
    CC: Stephen Hemminger <shemming@brocade.com>
    CC: Waldemar Brodkorb <mail@waldemar-brodkorb.de>
    CC: Gabriel Laskar <gabriel@lse.epita.fr>
    CC: Mikko Rapeli <mikko.rapeli@iki.fi>
    Fixes: 4a91cb61bb99 ("uapi glibc compat: fix compile errors when glibc net/if.h included before linux/if.h")
    Signed-off-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 5895701216ef9e4f89734433dcf64c85fc3d64a8 ......
	 orig commit -> 856ce5d083e14571d051301fe3c65b32b8cbe321 ......
checking 97c2160da468f71ba998f2c6c82ed33cdfbc7245 ......
	 orig commit -> 31ca0458a61a502adb7ed192bf9716c6d05791a5 ......
checking 67779d20fb540b719ca0781200b79831d3498fa4 ......
	 orig commit -> dedc58e067d8c379a15a8a183c5db318201295bb ......
checking bcf3e33e962d83837a03ccc489d834e0e9d95d58 ......
	 orig commit -> 82d69203df634b4dfa765c94f60ce9482bcc44d6 ......
checking e0c0313681aaa0c4514c6794635aba82691d2154 ......
	 orig commit -> 5f8e44741f9f216e33736ea4ec65ca9ac03036e6 ......
checking 52f307b18b1f070f0442fc98515575616b21fa20 ......
	 orig commit -> b8670c09f37bdf2847cc44f36511a53afc6161fd ......
checking f27e1ed8d971a6649c0da8e8a8517fea56ad71f9 ......
	 orig commit -> 1c021bb717a70aaeaa4b25c91f43c2aeddd922de ......
checking 71a783bce6dd0a39937322de683cf4bda2f3a1be ......
	 orig commit -> 6071bd1aa13ed9e41824bafad845b7b7f4df5cfd ......
		 6071bd1aa13ed9e41824bafad845b7b7f4df5cfd has problem. Fixes commit -> 35d889d10b649fda66121891ec05eca88150059d
checking 5ecc98e1b8de36e2ac351d174a5f5d92b5085d15 ......
	 orig commit -> bdf17661f63a79c3cb4209b970b1cc39e34f7543 ......
checking 67b014f957cfb29f02a71834facf9f3d7ef4b3fd ......
	 orig commit -> 431e3a8e36a05a37126f34b41aa3a5a6456af04e ......
checking ca375cf34a7186f5b8817082d2b594dcd8cedc8b ......
	 orig commit -> 2ccccf5fb43ff62b2b96cc58d95fc0b3596516e4 ......
		 2ccccf5fb43ff62b2b96cc58d95fc0b3596516e4 has problem. Fixes commit -> c8e1812960eeae42e2183154927028511c4bc566
325d5dc3f7e7c2840b65e4a2988c082c2c0025c5
3d4357fba82b3cf19ebf0a04d1c9cb086af15d02
2ed5c3f09627f72a2e0e407a86b2ac05494190f9
21de12ee5568fd1aec47890c72967abf791ac80a
6c0d54f1897d229748d4f41ef919078db6db2123
80e509db54c81247b32fcb75bb1730fc789b893d
a27758ffaf96f89002129eedb2cc172d254099f8
8d5958f424b62060a8696b12c17dad198d5d386f
d7f4f332f082c4d4ba53582f902ed6b44fd6f45e
6a73b571b63075ef408c83f07c2565b5652f93cc
6529d75ad9228f4d8a8f6c5c5244ceb945ac9bc2
357cc9b4a8a7a0cd0e662537b76e6fa4670b6798
commit ab0b3b9dbf559a5633d460e748144697bd2d3aa3
Author: WANG Cong <xiyou.wangcong@gmail.com>
Date:   Wed Jun 1 16:15:18 2016 -0700

    sch_red: update backlog as well
    
    [ Upstream commit d7f4f332f082c4d4ba53582f902ed6b44fd6f45e ]
    
    Fixes: 2ccccf5fb43f ("net_sched: update hierarchical backlog too")
    Cc: Jamal Hadi Salim <jhs@mojatatu.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7e1fe0062c24b1cdfb58fb494d03741a6b0a4ac8
Author: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
Date:   Tue Aug 15 16:37:04 2017 +0300

    net_sched/sfq: update hierarchical backlog when drop packet
    
    
    [ Upstream commit 325d5dc3f7e7c2840b65e4a2988c082c2c0025c5 ]
    
    When sfq_enqueue() drops head packet or packet from another queue it
    have to update backlog at upper qdiscs too.
    
    Fixes: 2ccccf5fb43f ("net_sched: update hierarchical backlog too")
    Signed-off-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6fb6914d5b459aefefafb19c57b3903ee4ad8b61
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Jun 20 15:00:43 2016 -0700

    netem: fix a use after free
    
    [ Upstream commit 21de12ee5568fd1aec47890c72967abf791ac80a ]
    
    If the packet was dropped by lower qdisc, then we must not
    access it later.
    
    Save qdisc_pkt_len(skb) in a temp variable.
    
    Fixes: 2ccccf5fb43f ("net_sched: update hierarchical backlog too")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: WANG Cong <xiyou.wangcong@gmail.com>
    Cc: Jamal Hadi Salim <jhs@mojatatu.com>
    Cc: Stephen Hemminger <stephen@networkplumber.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 95e727af08b60284e2617296f07c794a1566f99e
Author: Eric Dumazet <edumazet@google.com>
Date:   Sun Jun 12 20:01:25 2016 -0700

    net_sched: fix pfifo_head_drop behavior vs backlog
    
    [ Upstream commit 6c0d54f1897d229748d4f41ef919078db6db2123 ]
    
    When the qdisc is full, we drop a packet at the head of the queue,
    queue the current skb and return NET_XMIT_CN
    
    Now we track backlog on upper qdiscs, we need to call
    qdisc_tree_reduce_backlog(), even if the qlen did not change.
    
    Fixes: 2ccccf5fb43f ("net_sched: update hierarchical backlog too")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: WANG Cong <xiyou.wangcong@gmail.com>
    Cc: Jamal Hadi Salim <jhs@mojatatu.com>
    Acked-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit ab0b3b9dbf559a5633d460e748144697bd2d3aa3
Author: WANG Cong <xiyou.wangcong@gmail.com>
Date:   Wed Jun 1 16:15:18 2016 -0700

    sch_red: update backlog as well
    
    [ Upstream commit d7f4f332f082c4d4ba53582f902ed6b44fd6f45e ]
    
    Fixes: 2ccccf5fb43f ("net_sched: update hierarchical backlog too")
    Cc: Jamal Hadi Salim <jhs@mojatatu.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 7e1fe0062c24b1cdfb58fb494d03741a6b0a4ac8
Author: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
Date:   Tue Aug 15 16:37:04 2017 +0300

    net_sched/sfq: update hierarchical backlog when drop packet
    
    
    [ Upstream commit 325d5dc3f7e7c2840b65e4a2988c082c2c0025c5 ]
    
    When sfq_enqueue() drops head packet or packet from another queue it
    have to update backlog at upper qdiscs too.
    
    Fixes: 2ccccf5fb43f ("net_sched: update hierarchical backlog too")
    Signed-off-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 6fb6914d5b459aefefafb19c57b3903ee4ad8b61
Author: Eric Dumazet <edumazet@google.com>
Date:   Mon Jun 20 15:00:43 2016 -0700

    netem: fix a use after free
    
    [ Upstream commit 21de12ee5568fd1aec47890c72967abf791ac80a ]
    
    If the packet was dropped by lower qdisc, then we must not
    access it later.
    
    Save qdisc_pkt_len(skb) in a temp variable.
    
    Fixes: 2ccccf5fb43f ("net_sched: update hierarchical backlog too")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: WANG Cong <xiyou.wangcong@gmail.com>
    Cc: Jamal Hadi Salim <jhs@mojatatu.com>
    Cc: Stephen Hemminger <stephen@networkplumber.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 95e727af08b60284e2617296f07c794a1566f99e
Author: Eric Dumazet <edumazet@google.com>
Date:   Sun Jun 12 20:01:25 2016 -0700

    net_sched: fix pfifo_head_drop behavior vs backlog
    
    [ Upstream commit 6c0d54f1897d229748d4f41ef919078db6db2123 ]
    
    When the qdisc is full, we drop a packet at the head of the queue,
    queue the current skb and return NET_XMIT_CN
    
    Now we track backlog on upper qdiscs, we need to call
    qdisc_tree_reduce_backlog(), even if the qlen did not change.
    
    Fixes: 2ccccf5fb43f ("net_sched: update hierarchical backlog too")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: WANG Cong <xiyou.wangcong@gmail.com>
    Cc: Jamal Hadi Salim <jhs@mojatatu.com>
    Acked-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 1188e1403a772d9698c06bcc53c44783536ff09e ......
	 orig commit -> 86a7996cc8a078793670d82ed97d5a99bb4e8496 ......
		 86a7996cc8a078793670d82ed97d5a99bb4e8496 has problem. Fixes commit -> 68a66d149a8c78ec6720f268597302883e48e9fa
commit 58079f56b30227c37709e9db7e9b51204e81f4ea
Author: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
Date:   Sat Aug 19 15:37:07 2017 +0300

    net_sched: fix order of queue length updates in qdisc_replace()
    
    
    [ Upstream commit 68a66d149a8c78ec6720f268597302883e48e9fa ]
    
    This important to call qdisc_tree_reduce_backlog() after changing queue
    length. Parent qdisc should deactivate class in ->qlen_notify() called from
    qdisc_tree_reduce_backlog() but this happens only if qdisc->q.qlen in zero.
    
    Missed class deactivations leads to crashes/warnings at picking packets
    from empty qdisc and corrupting state at reactivating this class in future.
    
    Signed-off-by: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
    Fixes: 86a7996cc8a0 ("net_sched: introduce qdisc_replace() helper")
    Acked-by: Cong Wang <xiyou.wangcong@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking c985780791efec375865c0fbd21794d631c68fce ......
	 orig commit -> b7f8fe251e4609e2a437bd2c2dea01e61db6849c ......
checking 390d4b3e0d0f1f57ec5d8a0cf3e0d93444563e9c ......
	 orig commit -> 2c94b53738549d81dc7464a32117d1f5112c64d3 ......
		 2c94b53738549d81dc7464a32117d1f5112c64d3 has problem. Fixes commit -> daddef76c3deaaa7922f9d7b18edbf0a061215c3
commit 36292ca2f2918d4b34d05053bfec5c8c97aaed09
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Wed Jun 15 11:14:53 2016 +0200

    net: Don't forget pr_fmt on net_dbg_ratelimited for CONFIG_DYNAMIC_DEBUG
    
    [ Upstream commit daddef76c3deaaa7922f9d7b18edbf0a061215c3 ]
    
    The implementation of net_dbg_ratelimited in the CONFIG_DYNAMIC_DEBUG
    case was added with 2c94b5373 ("net: Implement net_dbg_ratelimited() for
    CONFIG_DYNAMIC_DEBUG case"). The implementation strategy was to take the
    usual definition of the dynamic_pr_debug macro, but alter it by adding a
    call to "net_ratelimit()" in the if statement. This is, in fact, the
    correct approach.
    
    However, while doing this, the author of the commit forgot to surround
    fmt by pr_fmt, resulting in unprefixed log messages appearing in the
    console. So, this commit adds back the pr_fmt(fmt) invocation, making
    net_dbg_ratelimited properly consistent across DEBUG, no DEBUG, and
    DYNAMIC_DEBUG cases, and bringing parity with the behavior of
    dynamic_pr_debug as well.
    
    Fixes: 2c94b5373 ("net: Implement net_dbg_ratelimited() for CONFIG_DYNAMIC_DEBUG case")
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Cc: Tim Bingham <tbingham@akamai.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 85256f78bff1c4a24ad8edac63726e8ca5ccedc1 ......
	 orig commit -> 569cc39d39385a74b23145496bca2df5ac8b2fb8 ......
checking bb10156f572f06f3b6cadd378e5a0ab3ed8da991 ......
	 orig commit -> 6aff67c85c9e5a4bc99e5211c1bac547936626ca ......
checking 3899251bdb9c2b31fc73d4cc132f52d3710101de ......
	 orig commit -> 92117d8443bc5afacc8d5ba82e541946310f106e ......
checking 608d2c3c7a046c222cae2e857cf648a9f89e772b ......
	 orig commit -> 8358b02bf67d3a5d8a825070e1aa73f25fb2e4c7 ......
checking 828255b591768b4e5a762df21a0133065ddcb44b ......
	 orig commit -> fc96256c906362e845d848d0f6a6354450059e81 ......
checking 0633185047d91174ee2cbc8f1bd59e75e3c45ccd ......
	 orig commit -> 391a20333b8393ef2e13014e6e59d192c5594471 ......
checking da465bd9391efca3649ab34c3575a2b27ac384e3 ......
	 orig commit -> d8edd2469ace550db707798180d1c84d81f93bca ......
checking 3032b09874a4709f8529d620dd270e14a56eb61d ......
	 orig commit -> 046339eaab26804f52f6604877f5674f70815b26 ......
checking 2a33f756ae1986a67d145f050bf4350e5ee17746 ......
	 orig commit -> b4f70527f052b0c00be4d7cac562baa75b212df5 ......
checking b5c9a73c501e8aed86dd578309813c7818ca248c ......
	 orig commit -> f43bfaeddc79effbf3d0fcb53ca477cca66f3db8 ......
checking a66ce519a3e9aca63739da0d716555588df5cc48 ......
	 orig commit -> 9241e2df4fbc648a92ea0752918e05c26255649e ......
checking 79fdabe8706bd240c083a848f64081a4bc46d7af ......
	 orig commit -> 6b83d28a55a891a9d70fc61ccb1c138e47dcbe74 ......
checking 1d794379798b33797d9afe4a477bfd89ce399184 ......
	 orig commit -> c5b5343cfbc9f46af65033fa4f407d7b7d98371d ......
checking 8427d5547d0b63beb70d3858127942f828400ad2 ......
	 orig commit -> d82bccc69041a51f7b7b9b4a36db0772f4cdba21 ......
checking 5c136901ef17cd42d56b5c02135a0c67fb58424f ......
	 orig commit -> 3dcd493fbebfd631913df6e2773cc295d3bf7d22 ......
checking a416c9483c719cc9160b4b9af09085dfe461383f ......
	 orig commit -> 309cf37fe2a781279b7675d4bb7173198e532867 ......
checking d0bfda58b414487f06ac0911674a9808f71d3ab1 ......
	 orig commit -> d6d5e999e5df67f8ec20b6be45e2229455ee3699 ......
		 d6d5e999e5df67f8ec20b6be45e2229455ee3699 has problem. Fixes commit -> 94720e3aee6884d8c8beb678001629da60ec6366
checking c21fec188ab43661e5bf08d9d377ecafc7a8abf9 ......
	 orig commit -> a36a0d4008488fa545c74445d69eaf56377d5d4e ......
