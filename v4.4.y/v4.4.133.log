Check from v4.4.133 to v4.4.134
Commit count: 267
checking 712a231848027a1728d90784cc1f7aec6c017abd ......
checking b4ab3567f276ef0603ddd205d4eaa39b417808be ......
	 orig commit -> 23a4d7fd34856da8218c4cfc23dba7a6ec0a423a ......
checking e612f1ce0509ea7a53c3915ea6f7855ee5a0efe0 ......
	 orig commit -> 1e0ce03bf142454f38a5fc050bf4fd698d2d36d8 ......
checking 803f7f38c5a63550c0f1471e8db599f4383e5ab0 ......
	 orig commit -> fed03fe7e55b7dc16077f672bd9d7bbe92b3a691 ......
checking 61f97705e549ea6e4eb7a0abd190d9966f8603fa ......
	 orig commit -> 647d04f8e07afc7c3b7a42b3ee01a8b28db29631 ......
		 647d04f8e07afc7c3b7a42b3ee01a8b28db29631 has problem. Fixes commit -> 860b454c2c0cbda6892954f5cdbbb48931b3c8db
checking ee2960ca472b560038d301a15632cdd6621311ac ......
	 orig commit -> 30966861a7a2051457be8c49466887d78cc47e97 ......
checking 25f7f5362ec11e1482e5c1365a56ca02cf985b38 ......
	 orig commit -> 04673e38f56b30cd39b1fa0f386137d818b17781 ......
checking 1a948ef202727272286a7af1ced72585906fe6a7 ......
	 orig commit -> 161df4f09987ae2e9f0f97f0b38eee298b4a39ff ......
checking 44369ae74644af3f65f07100e9675078c565ffc9 ......
	 orig commit -> 2289e9598dde9705400559ca2606fb8c145c34f0 ......
checking 9f67e91e85f88d7a50206c460de6bf5c4f15e870 ......
	 orig commit -> 213d7f94775322ba44e0bbb55ec6946e9de88cea ......
checking 4ab64843325a6fa39f700d06f98da8da798648a4 ......
	 orig commit -> ddd0010392d9cbcb95b53d11b7cafc67b373ab56 ......
checking e1396c536b6a5539a67559e5a05c19e29b815cdf ......
	 orig commit -> e3ebaa465136ecfedf9c6f4671df02bf625f8125 ......
checking 56973cff1a5e5dc4f9a96851ca25c6449a9c43c5 ......
	 orig commit -> ab6e9a99345131cd8e54268d1d0dc04a33f7ed11 ......
checking e240bb0ab28d4697affa02334a8e40c043c32d2d ......
	 orig commit -> bee3204ec3c49f6f53add9c3962c9012a5c036fa ......
checking f409bdeae30fe52d9fc9859fdf06721b1b06d2e0 ......
	 orig commit -> 57de50af162b67612da99207b061ade3239e57db ......
checking 6ae448229b52071f595172af565c275ccbea85d3 ......
	 orig commit -> db6775ca6e0353d2618ca7d5e210fc36ad43bbd4 ......
checking 699c079ae22ba91286a0c21cf40c24af2d4c409a ......
	 orig commit -> 23138ead270045f1b3e912e667967b6094244999 ......
checking 76b8865f976d70292b65a6ee0062f545e246307c ......
	 orig commit -> 7c73cf4cc2ac16465f5102437dc0a12d66671bd6 ......
checking 3367b08ebc8e2aa4e170ef7ba4f094875f96e042 ......
	 orig commit -> a8321e7887410a2b2e80ab89d1ef7b30562658ea ......
checking fb3371f30e1ae493565b7620bf7499020249370e ......
	 orig commit -> 2ac051eeabaa411ef89ae7cd5bb8e60cb41ad780 ......
checking ef4867ac69c6c7f3ce8d1a5ac17c25cf0be832d6 ......
	 orig commit -> ab0447845cffc0fd752df2ccd6b4e34006000ce4 ......
checking bff5d67e594594d2455ca6cbaebbeb606c414c6c ......
	 orig commit -> cdb68fbd4e7962be742c4f29475220c5bf28d8a5 ......
checking 72d903272fd9440623d4646bc302618c3098e5b9 ......
	 orig commit -> 179db533c08431f509a3823077549773d519358b ......
checking a56d9386c0fe6d4193a6e23ee009d96cde0efde9 ......
	 orig commit -> 67300abdbe9f1717532aaf4e037222762716d0f6 ......
checking 25754be3cafc67331d00eb0c5d5739ef830418e8 ......
	 orig commit -> 116e5258e4115aca0c64ac0bf40ded3b353ed626 ......
checking b23aad6880fad64c8d781b5723e0107f944f0960 ......
	 orig commit -> 832e4e1f76b8a84991e9db56fdcef1ebce839b8b ......
checking f28308185eb38a2f973722a832c6ad134ba22cf2 ......
	 orig commit -> f9f5786987e81d166c60833edcb7d1836aa16944 ......
checking f213d3f91f85732886367380ddebf0ef5977e5c3 ......
	 orig commit -> ffab87fdecc655cc676f8be8dd1a2c5e22bd6d47 ......
checking 25c1996897f196f3176869b83720e908a41a4473 ......
	 orig commit -> 5673444821406dda5fc25e4b52aca419f8065a19 ......
checking 8b8a30d06d000177a432e2c4d481bbbfabec9059 ......
	 orig commit -> dd345a31bfdec350d2593e6de5964e55c7f19c76 ......
checking 8b8e85595ced71c8862a789d2d96c67e5517fdbd ......
	 orig commit -> 49ee23b71877831ac087d6083f6f397dc19c9664 ......
checking 6ba58eaf6d9b8b752db5b54f72527d8d08801b7c ......
	 orig commit -> e7d75e18d0fc3f7193b65282b651f980c778d935 ......
checking cf4c7b3ab661a2d3a6aa237211edea81ebcdc8ab ......
	 orig commit -> 347876ad47b9923ce26e686173bbf46581802ffa ......
checking cc1cf4acb8ade6dc16f870751b07f356bfd5a017 ......
	 orig commit -> e1a7418529e33bc4efc346324557251a16a3e79b ......
checking dbe213d8bc80f5713d85832a432debde08fa037b ......
	 orig commit -> 326ed382256475aa4b8b7eae8a2f60689fd25e78 ......
checking 6af8cf3ca5cbc44587e8b4c4e56d16778ffa0096 ......
	 orig commit -> e8588e268509292550634d9a35f2723a207683b2 ......
		 e8588e268509292550634d9a35f2723a207683b2 has problem. Fixes commit -> 56f772279a762984f6e9ebbf24a7c829faba5712
checking 48337eb7a974cec8c14d6794c7db0801f72bad28 ......
	 orig commit -> 4bf59902b50012b1dddeeaa23b217d9c4956cdda ......
checking b2895b916282b09d42ec789dfd234091c788a5ad ......
	 orig commit -> c7c7e8d7803406daa21e96d00c357de8b77b6764 ......
checking 1f8b926275550719fb9f9541df1b039d8caa9e33 ......
	 orig commit -> a3ca831249ca8c4c226e4ceafee04e280152e59d ......
checking c9e62716c68c06dac0cded9443e8e1799eb04ce8 ......
	 orig commit -> a398e043637a4819a0e96467bfecaabf3224dd62 ......
checking e059f9f96f05bad677531a5bbb6c24e393119e55 ......
	 orig commit -> 5ceade1d97fc6687e050c44c257382c192f56276 ......
checking dfd5ad1f8101e1032d70c2e6a2f3c6b2fe3150e4 ......
	 orig commit -> 779c79d4b833ec646b0aed878da38edb45bbe156 ......
checking 6eff7dc944faa9abd810fa9fcd5955e4b7fc7a28 ......
	 orig commit -> 2e2c177ca84aff092c3c96714b0f6a12900f3946 ......
checking cd425208a5c80fdedd640137afeb5c452e1ec9a9 ......
	 orig commit -> 0a5169add90e43ab45ab1ba34223b8583fcaf675 ......
checking 5eed18d5177147db6a1ca01e5c35c5a35f401d8f ......
	 orig commit -> 628df9dc5ad886b0a9b33c75a7b09710eb859ca1 ......
checking 825c1ae065a4cb167946f98da626e8ab7014afd3 ......
	 orig commit -> 5d6ae4f0da8a64a185074dabb1b2f8c148efa741 ......
checking 345c799ac5a780384e5844c2e72f91415342a6c8 ......
	 orig commit -> ac87e560f7c0f91b62012e9a159c0681a373b922 ......
checking ad29babb08c795fc91c3c92e64f45a76f0253447 ......
	 orig commit -> 174d1232ebc84fcde8f5889d1171c9c7e74a10a7 ......
checking 5e699836c3bfd3250e662785889e92096b939199 ......
	 orig commit -> 2bbea6e117357d17842114c65e9a9cf2d13ae8a3 ......
checking 0bd0d4ff703f1143fc57bd1aa677f83413ca152a ......
	 orig commit -> ecb29abd4cb0670c616fb563a078f25d777ce530 ......
checking 770d3eadefb2f0edac7f31d190141629d07df34b ......
	 orig commit -> a46f8cd696624ef757be0311eb28f119c36778e8 ......
checking 9a1dcfb8ff30b3afe121d11606ed332cd1536c16 ......
	 orig commit -> 9e5b127d6f33468143d90c8a45ca12410e4c3fa7 ......
checking f8eb1df0cce2c480d5a324eff8b5b6e5d1f0d394 ......
	 orig commit -> bde8b3887add8368ecf0ca71117baf2fd56a6fc9 ......
checking fd03df45491b7c639cd06fe807b53d298040fe2b ......
	 orig commit -> f5246862f82f1e16bbf84cda4cddf287672b30fe ......
checking aa8141daf044cb2fa4fc87538fd883e61c1790bb ......
	 orig commit -> 4058ebf33cb0be88ca516f968eda24ab7b6b93e4 ......
checking 3fb5102f9a312b60bc6569bf5451de14683d1912 ......
	 orig commit -> 946ef68ad4e45aa048a5fb41ce8823ed29da866a ......
		 946ef68ad4e45aa048a5fb41ce8823ed29da866a has problem. Fixes commit -> e610257e462f6104792d22fbb0927724df3bc401
4d644abf25698362bd33d17c9ddc8f7122c30f17
commit c420866afc161203d17f1fcd965a27a61ef70dd4
Author: Jerry Zhang <zhangjerry@google.com>
Date:   Mon Jul 2 12:48:08 2018 -0700

    usb: gadget: f_fs: Only return delayed status when len is 0
    
    commit 4d644abf25698362bd33d17c9ddc8f7122c30f17 upstream.
    
    Commit 1b9ba000 ("Allow function drivers to pause control
    transfers") states that USB_GADGET_DELAYED_STATUS is only
    supported if data phase is 0 bytes.
    
    It seems that when the length is not 0 bytes, there is no
    need to explicitly delay the data stage since the transfer
    is not completed until the user responds. However, when the
    length is 0, there is no data stage and the transfer is
    finished once setup() returns, hence there is a need to
    explicitly delay completion.
    
    This manifests as the following bugs:
    
    Prior to 946ef68ad4e4 ('Let setup() return
    USB_GADGET_DELAYED_STATUS'), when setup is 0 bytes, ffs
    would require user to queue a 0 byte request in order to
    clear setup state. However, that 0 byte request was actually
    not needed and would hang and cause errors in other setup
    requests.
    
    After the above commit, 0 byte setups work since the gadget
    now accepts empty queues to ep0 to clear the delay, but all
    other setups hang.
    
    Fixes: 946ef68ad4e4 ("Let setup() return USB_GADGET_DELAYED_STATUS")
    Signed-off-by: Jerry Zhang <zhangjerry@google.com>
    Cc: stable <stable@vger.kernel.org>
    Acked-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit c420866afc161203d17f1fcd965a27a61ef70dd4
Author: Jerry Zhang <zhangjerry@google.com>
Date:   Mon Jul 2 12:48:08 2018 -0700

    usb: gadget: f_fs: Only return delayed status when len is 0
    
    commit 4d644abf25698362bd33d17c9ddc8f7122c30f17 upstream.
    
    Commit 1b9ba000 ("Allow function drivers to pause control
    transfers") states that USB_GADGET_DELAYED_STATUS is only
    supported if data phase is 0 bytes.
    
    It seems that when the length is not 0 bytes, there is no
    need to explicitly delay the data stage since the transfer
    is not completed until the user responds. However, when the
    length is 0, there is no data stage and the transfer is
    finished once setup() returns, hence there is a need to
    explicitly delay completion.
    
    This manifests as the following bugs:
    
    Prior to 946ef68ad4e4 ('Let setup() return
    USB_GADGET_DELAYED_STATUS'), when setup is 0 bytes, ffs
    would require user to queue a 0 byte request in order to
    clear setup state. However, that 0 byte request was actually
    not needed and would hang and cause errors in other setup
    requests.
    
    After the above commit, 0 byte setups work since the gadget
    now accepts empty queues to ep0 to clear the delay, but all
    other setups hang.
    
    Fixes: 946ef68ad4e4 ("Let setup() return USB_GADGET_DELAYED_STATUS")
    Signed-off-by: Jerry Zhang <zhangjerry@google.com>
    Cc: stable <stable@vger.kernel.org>
    Acked-by: Felipe Balbi <felipe.balbi@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 18f31bd07993b3ddde2916b764d7bee0b7f873fd ......
	 orig commit -> 12814a3f8f9b247531d7863170cc82b3fe4218fd ......
checking b066c9b199c62101a0fec3a43923bf0637f6eb7f ......
	 orig commit -> f002612b9d86613bc6fde0a444e0095225f6053e ......
checking 17369d7e57daa537de5d79cef821b805160eb989 ......
	 orig commit -> 5775b843a619b3c93f946e2b55a208d9f0f48b59 ......
checking 6ab31bbf1bf0276cbcb6e4cfc69a6de3ab7491be ......
	 orig commit -> 05454c1bde91fb013c0431801001da82947e6b5a ......
checking 36f640856b7590b235425f1e6e97ce8345a4f846 ......
	 orig commit -> a400efe455f7b61ac9a801ac8d0d01f8c8d82dd5 ......
		 a400efe455f7b61ac9a801ac8d0d01f8c8d82dd5 has problem. Fixes commit -> 44a182b9d17765514fa2b1cc911e4e65134eef93
commit c72a42d38b1f516b3533400a2d7ac90388b35e6c
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Thu May 3 17:30:07 2018 +0300

    xhci: Fix use-after-free in xhci_free_virt_device
    
    commit 44a182b9d17765514fa2b1cc911e4e65134eef93 upstream.
    
    KASAN found a use-after-free in xhci_free_virt_device+0x33b/0x38e
    where xhci_free_virt_device() sets slot id to 0 if udev exists:
    if (dev->udev && dev->udev->slot_id)
            dev->udev->slot_id = 0;
    
    dev->udev will be true even if udev is freed because dev->udev is
    not set to NULL.
    
    set dev->udev pointer to NULL in xhci_free_dev()
    
    The original patch went to stable so this fix needs to be applied
    there as well.
    
    Fixes: a400efe455f7 ("xhci: zero usb device slot_id member when disabling and freeing a xhci slot")
    Cc: <stable@vger.kernel.org>
    Reported-by: Guenter Roeck <linux@roeck-us.net>
    Reviewed-by: Guenter Roeck <linux@roeck-us.net>
    Tested-by: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Matthias Kaehlcke <mka@chromium.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 462558aefcbcc098dcb296b8d11d053e4553fdb2 ......
	 orig commit -> 0bcc3fb95b97ac2ca223a5a870287b37f56265ac ......
checking 82eac614c60e27d1014cc0c91b9bcc6b4cdc49db ......
	 orig commit -> 31184d8c6ea49ea0676d100cdd7e1f102ad025b5 ......
checking dfcb739c20d88461fbd0dc007670f63ad82db881 ......
	 orig commit -> 97f3c0a4b0579b646b6b10ae5a3d59f0441cc12c ......
checking 0170c50523cd75f67f3616f068a5dcd7e8c93f68 ......
	 orig commit -> b4c0de312613ca676db5bd7e696a44b56795612a ......
checking 7fb3ba30296b5d7b3758fe223614ea559bdc77e8 ......
	 orig commit -> fadd94e05c02afec7b70b0b14915624f1782f578 ......
		 fadd94e05c02afec7b70b0b14915624f1782f578 has problem. Fixes commit -> 3943b040f11ed0cc6d4585fd286a623ca8634547
commit 95861df6188b3960e1d80292c905e3d040fd619c
Author: Shan Hai <shan.hai@oracle.com>
Date:   Thu Aug 23 02:02:56 2018 +0800

    bcache: release dc->writeback_lock properly in bch_writeback_thread()
    
    commit 3943b040f11ed0cc6d4585fd286a623ca8634547 upstream.
    
    The writeback thread would exit with a lock held when the cache device
    is detached via sysfs interface, fix it by releasing the held lock
    before exiting the while-loop.
    
    Fixes: fadd94e05c02 (bcache: quit dc->writeback_thread when BCACHE_DEV_DETACHING is set)
    Signed-off-by: Shan Hai <shan.hai@oracle.com>
    Signed-off-by: Coly Li <colyli@suse.de>
    Tested-by: Shenghui Wang <shhuiw@foxmail.com>
    Cc: stable@vger.kernel.org #4.17+
    Signed-off-by: Jens Axboe <axboe@kernel.dk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking ae90d151194400169bfe7bcdc82599f8d68acce9 ......
	 orig commit -> 55496d3fe2acd1a365c43cbd613a20ecd4d74395 ......
checking 9c43286998a2d5e26da0414e92958819790db4de ......
	 orig commit -> 1f9c63e8de3d7b377c9d74e4a17524cfb60e6384 ......
checking 1177eca04218d40af78edeae87f54a9a8f76bec0 ......
	 orig commit -> 55b55abc17f238c61921360e61dde90dd9a326d1 ......
checking b5cc81ad4b6e54dbc414ca40c60c99e9c9043beb ......
	 orig commit -> 0cab8d26d6e5e053b2bed3356992aaa71dc93628 ......
checking 02152ad1cae97e50b8a1d7605f1cf04bf8e0fe85 ......
	 orig commit -> 6d97d5aba08b26108f95dc9fb7bbe4d9436c769c ......
checking da782aed4989d9fbf485aa4a34e860a8ad931e50 ......
	 orig commit -> bda7fab54828bbef2164bb23c0f6b1a7d05cc718 ......
checking 5cace4b68c5fd232b871a96f1b2e2bc32a9c09a5 ......
	 orig commit -> ab60368ab6a452466885ef4edf0cefd089465132 ......
checking edf3bf9ee26ae9655a2b43a251e96e84bc0b0676 ......
	 orig commit -> fac37c628fd5d68fd7298d9b57ae8601ee1b4723 ......
checking d1dbe5dbfd7a8b82a3c67bbaf0632d6618c840b2 ......
	 orig commit -> 8b2d93dd22615cb7f3046a5a2083a6f8bb8052ed ......
checking 3a97320ce97ca67941267de8bad1191f30ccbc4d ......
	 orig commit -> 957f6ba8adc7be401a74ccff427e4cfd88d3bfcb ......
checking e1448fac677eb3100b5cbdac546457c9c0e3c0e8 ......
	 orig commit -> 88893cf787d3062c631cc20b875068eb11756e03 ......
checking 0bc0aa273696085092e25d23a130301fff364deb ......
	 orig commit -> 6c59f64b7ecf2bccbe73931d7d573d66ed13b537 ......
checking 55f43f3b10a4596666ea3f136bcb2c965cd6bf17 ......
	 orig commit -> e1ebd0e5b9d0a10ba65e63a3514b6da8c6a5a819 ......
checking 83fb2a49cc19436838c4b7ad0b939f52ffddc11d ......
	 orig commit -> bb19af816025d495376bd76bf6fbcf4244f9a06d ......
checking 0cf2a2141a9971617a3609cad0aeedb694b50fe6 ......
	 orig commit -> b3a5ac42ab18b7d1a8f2f072ca0ee76a3b754a43 ......
		 b3a5ac42ab18b7d1a8f2f072ca0ee76a3b754a43 has problem. Fixes commit -> 7ce9a992ffde8ce93d5ae5767362a5c7389ae895
commit 453e01cc6d80b189b8dae4564dc8680093bbb2ec
Author: Maciej W. Rozycki <macro@linux-mips.org>
Date:   Mon Nov 5 03:48:25 2018 +0000

    rtc: hctosys: Add missing range error reporting
    
    commit 7ce9a992ffde8ce93d5ae5767362a5c7389ae895 upstream.
    
    Fix an issue with the 32-bit range error path in `rtc_hctosys' where no
    error code is set and consequently the successful preceding call result
    from `rtc_read_time' is propagated to `rtc_hctosys_ret'.  This in turn
    makes any subsequent call to `hctosys_show' incorrectly report in sysfs
    that the system time has been set from this RTC while it has not.
    
    Set the error to ERANGE then if we can't express the result due to an
    overflow.
    
    Signed-off-by: Maciej W. Rozycki <macro@linux-mips.org>
    Fixes: b3a5ac42ab18 ("rtc: hctosys: Ensure system time doesn't overflow time_t")
    Cc: stable@vger.kernel.org # 4.17+
    Signed-off-by: Alexandre Belloni <alexandre.belloni@bootlin.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 634ac348e9a4b64a7295d7532ac706304799bc81 ......
	 orig commit -> 415eb2a1aaa4881cf85bd86c683356fdd8094a23 ......
checking c33badb9754782a8c6ba4e98bfeef4851587d88a ......
	 orig commit -> b845f66f78bf42a4ce98e5cfe0e94fab41dd0742 ......
checking b1a557b92ddd6ffa81fcf5f47c1beda55f8d96bc ......
	 orig commit -> f61e64310b75733d782e930d1fb404b84699eed6 ......
checking f8240a4feb48cfca7e48557f8a4f34bc07d2be09 ......
	 orig commit -> 0834d627fbea00c1444075eb3e448e1974da452d ......
checking 30ae62408145d5207e0b419403d30b97b2721f64 ......
	 orig commit -> 8b29d29abc484d638213dd79a18a95ae7e5bb402 ......
checking a1b03156db8a686f8bacae91de635b9df81b436d ......
	 orig commit -> c37a3c94775855567b90f91775b9691e10bd2806 ......
checking 93c13652e022a2072f921de5a1b14d903a2ffa43 ......
	 orig commit -> 8a5a916d9a35e13576d79cc16e24611821b13e34 ......
checking b037a568e39afd9dd69b3c6bca03799fdb6d181f ......
	 orig commit -> 8434ec46c6e3232cebc25a910363b29f5c617820 ......
checking a77b0cfe808f122eeeef4b8f09309249c85cb57c ......
	 orig commit -> 3c0efdf03b2d127f0e40e30db4e7aa0429b1b79a ......
checking b18cda27875f86823f1054807edafc481de3f270 ......
	 orig commit -> a41e0796396eeceff673af4a38feaee149c6ff86 ......
checking 7dd8604365e7ef38b3373774f96e9ea36d8128f7 ......
	 orig commit -> 60d6e6f0b9e422dd01aeda39257ee0428e5e2a3f ......
checking d9bc96c4dcb4b59fac3193a64402c259a962b1f1 ......
	 orig commit -> 1485991c024603b2fb4ae77beb7a0d741128a48e ......
checking 659db5217bb976bd1e1aa06b800d2d2a1c014c6b ......
	 orig commit -> d13864b68e41c11e4231de90cf358658f6ecea45 ......
checking 61b4c050ad5dcb1c8dfa58e1f183f512e43055ea ......
	 orig commit -> 2c98425720233ae3e135add0c7e869b32913502f ......
checking ffd0502d82bb8efde3b38891e1c6d274ef76204d ......
	 orig commit -> add5ff7a216ee545a214013f26d1ef2f44a9c9f8 ......
checking 094c145f4cb0c278e755f56faca21a77800eb2fd ......
	 orig commit -> d29a20645d5e929aa7e8616f28e5d8e1c49263ec ......
checking 6b6933fdb14c030dd082dde9ff3b1f0db87fc62f ......
	 orig commit -> bb34f24c7d2c98d0c81838a7700e6068325b17a0 ......
checking e1ccd597ffc24ded7b6d25ce6b829b928909f02b ......
	 orig commit -> 1e1c50a929bc9e49bc3f9935b92450d9e69f8158 ......
checking b487d1cd2c6ed214323fa5507da43a42fdc06461 ......
	 orig commit -> 80c0b4210a963e31529e15bf90519708ec947596 ......
checking 0c3968cc74349e58f12ac6b634fa353344ff8aa3 ......
	 orig commit -> b98def7ca6e152ee55e36863dddf6f41f12d1dc6 ......
checking 532618b474349243db2ce6b99433a1d094ad3bec ......
	 orig commit -> e92bb4dd9673945179b1fc738c9817dd91bfb629 ......
checking 35de741a55ed9c1472ac8ef465b4e1ee6deca4e8 ......
	 orig commit -> 77da2ba0648a4fd52e5ff97b8b2b8dd312aec4b0 ......
checking 1d4902ad2b21ca42136db467d35d23f0bdae5015 ......
	 orig commit -> 76327a35caabd1a932e83d6a42b967aa08584e5d ......
checking 48b7c436bf53df9a3c2ab679ef49f5f7d283802f ......
	 orig commit -> 1c6b41fb92936fa5facea464d5d7cbf855966d04 ......
checking 11f3429796fcbe59c4a6d55d5808e3f527b5d78f ......
	 orig commit -> 8913315e9459b146e5888ab5138e10daa061b885 ......
checking 72422ef80146ca6de69f493e7c3e58a77934a4cf ......
	 orig commit -> 8c81dd46ef3c416b3b95e3020fb90dbd44e6140b ......
checking 651a896485da8f63a7f1d574d816e8753dd52217 ......
	 orig commit -> 2d097c50212e137e7b53ffe3b37561153eeba87d ......
checking 69ccb50c17098d74c04d0e5bc54b29808b4e05f1 ......
	 orig commit -> a06ad633a37c64a0cd4c229fc605cee8725d376e ......
checking ea8a1f4a9a99c97ea0ad484fde101e719a1d8b18 ......
	 orig commit -> a0b0d1c345d0317efe594df268feb5ccc99f651e ......
checking dd0b7b0ceef5d172fd3806e9fadb7c5562fd68d2 ......
	 orig commit -> e3e288121408c3abeed5af60b87b95c847143845 ......
checking 8971f3183b7e55591244e0c2d3e56a18c0d03f52 ......
	 orig commit -> 96a598996f6ac518ac79839ecbb17c91af91f4f7 ......
checking 32eaa88eeef1557448027d66bf4f9d3f20795aaa ......
	 orig commit -> e81b5e01c14add8395dfba7130f8829206bb507d ......
checking 2d437f6601d4775cae86542408c2a177b1f6b4ee ......
	 orig commit -> ae4745730cf8e693d354ccd4dbaf59ea440c09a9 ......
checking c5930a0d721af340ce84a346e1df4b34335e4ee1 ......
	 orig commit -> 914b6dfff790544d9b77dfd1723adb3745ec9700 ......
checking b627f28d032f824d90c687a6fbfd3ec976aa628c ......
	 orig commit -> b85ab56c3f81c5a24b5a5213374f549df06430da ......
checking bd98621537bbec41376a86d0bdbfb1c2b353ff7a ......
	 orig commit -> d4c4bc11353f3bea6754f7d21e3612c9f32d1d64 ......
checking dd8dd06ea981fc5036b8d2077b551edd254f591e ......
	 orig commit -> f3d801baf118c9d452ee7c278df16880c892e669 ......
checking 03d437f965adfc66e571e90913de144d671ee8f0 ......
	 orig commit -> 743989254ea9f132517806d8893ca9b6cf9dc86b ......
checking 1feaee827d2fd66cc54ed0af25905a906ce87184 ......
	 orig commit -> 73b9160d0dfe44dfdaffd6465dc1224c38a4a73c ......
checking cb47be3742d5cae4339d229d7a1fedbed9bf01e8 ......
	 orig commit -> a752c0a4524889cdc0765925258fd1fd72344100 ......
checking 4b947f4e76368106a0287f2cfdc419e64178abb2 ......
	 orig commit -> f8fb3419ead44f9a3136995acd24e35da4525177 ......
checking 8e651d5d862fd1d260234f5f48a7e6dd41ee5332 ......
	 orig commit -> dfa453bc90eca0febff33c8d292a656e53702158 ......
checking e886c57c3184f4f114caa87612fa6db537c14bb5 ......
	 orig commit -> 5fbdbed797b6d12d043a5121fdbc8d8b49d10e80 ......
checking 0556b263e9813c2855f70c041cb948d78288b418 ......
	 orig commit -> 871bef2000968c312a4000b2f56d370dcedbc93c ......
checking 52ba0893d6929599628bd68bc2f243e620b1b22d ......
	 orig commit -> 8970a63e965b43288c4f5f40efbc2bbf80de7f16 ......
checking 2ccbc5048b0ad94c62c1077d2a8f75ceed8c6058 ......
	 orig commit -> 5f3e3b85cc0a5eae1c46d72e47d3de7bf208d9e2 ......
checking 14fd6ba8248b82c4bf3efa960bbf15a85b09cce0 ......
	 orig commit -> c917e0f259908e75bd2a65877e25f9d90c22c848 ......
checking 33cebc976c3b77bdf8f3fb4478cf776131ebfe4f ......
	 orig commit -> 03080e5ec72740c1a62e6730f2a5f3f114f11b19 ......
checking 3497aa92351680f84d12984eafa875239a9f0932 ......
	 orig commit -> dd1df24737727e119c263acf1be2a92763938297 ......
checking e89d4eec3eda03ea6b2a31bbe17159edf584da9b ......
	 orig commit -> 6f27d2c2a8c236d296201c19abb8533ec20d212b ......
checking f5e863e590c9f9f8f6dd7b1272b8dbec304d9491 ......
	 orig commit -> 4bbb3e0e8239f9079bf1fe20b3c0cb598714ae61 ......
		 4bbb3e0e8239f9079bf1fe20b3c0cb598714ae61 has problem. Fixes commit -> ae4745730cf8e693d354ccd4dbaf59ea440c09a9
commit 2d437f6601d4775cae86542408c2a177b1f6b4ee
Author: Toshiaki Makita <makita.toshiaki@lab.ntt.co.jp>
Date:   Thu Mar 29 19:05:29 2018 +0900

    net: Fix untag for vlan packets without ethernet header
    
    [ Upstream commit ae4745730cf8e693d354ccd4dbaf59ea440c09a9 ]
    
    In some situation vlan packets do not have ethernet headers. One example
    is packets from tun devices. Users can specify vlan protocol in tun_pi
    field instead of IP protocol, and skb_vlan_untag() attempts to untag such
    packets.
    
    skb_vlan_untag() (more precisely, skb_reorder_vlan_header() called by it)
    however did not expect packets without ethernet headers, so in such a case
    size argument for memmove() underflowed and triggered crash.
    
    ====
    BUG: unable to handle kernel paging request at ffff8801cccb8000
    IP: __memmove+0x24/0x1a0 arch/x86/lib/memmove_64.S:43
    PGD 9cee067 P4D 9cee067 PUD 1d9401063 PMD 1cccb7063 PTE 2810100028101
    Oops: 000b [#1] SMP KASAN
    Dumping ftrace buffer:
       (ftrace buffer empty)
    Modules linked in:
    CPU: 1 PID: 17663 Comm: syz-executor2 Not tainted 4.16.0-rc7+ #368
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 01/01/2011
    RIP: 0010:__memmove+0x24/0x1a0 arch/x86/lib/memmove_64.S:43
    RSP: 0018:ffff8801cc046e28 EFLAGS: 00010287
    RAX: ffff8801ccc244c4 RBX: fffffffffffffffe RCX: fffffffffff6c4c2
    RDX: fffffffffffffffe RSI: ffff8801cccb7ffc RDI: ffff8801cccb8000
    RBP: ffff8801cc046e48 R08: ffff8801ccc244be R09: ffffed0039984899
    R10: 0000000000000001 R11: ffffed0039984898 R12: ffff8801ccc244c4
    R13: ffff8801ccc244c0 R14: ffff8801d96b7c06 R15: ffff8801d96b7b40
    FS:  00007febd562d700(0000) GS:ffff8801db300000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: ffff8801cccb8000 CR3: 00000001ccb2f006 CR4: 00000000001606e0
    DR0: 0000000020000000 DR1: 0000000020000000 DR2: 0000000000000000
    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000600
    Call Trace:
     memmove include/linux/string.h:360 [inline]
     skb_reorder_vlan_header net/core/skbuff.c:5031 [inline]
     skb_vlan_untag+0x470/0xc40 net/core/skbuff.c:5061
     __netif_receive_skb_core+0x119c/0x3460 net/core/dev.c:4460
     __netif_receive_skb+0x2c/0x1b0 net/core/dev.c:4627
     netif_receive_skb_internal+0x10b/0x670 net/core/dev.c:4701
     netif_receive_skb+0xae/0x390 net/core/dev.c:4725
     tun_rx_batched.isra.50+0x5ee/0x870 drivers/net/tun.c:1555
     tun_get_user+0x299e/0x3c20 drivers/net/tun.c:1962
     tun_chr_write_iter+0xb9/0x160 drivers/net/tun.c:1990
     call_write_iter include/linux/fs.h:1782 [inline]
     new_sync_write fs/read_write.c:469 [inline]
     __vfs_write+0x684/0x970 fs/read_write.c:482
     vfs_write+0x189/0x510 fs/read_write.c:544
     SYSC_write fs/read_write.c:589 [inline]
     SyS_write+0xef/0x220 fs/read_write.c:581
     do_syscall_64+0x281/0x940 arch/x86/entry/common.c:287
     entry_SYSCALL_64_after_hwframe+0x42/0xb7
    RIP: 0033:0x454879
    RSP: 002b:00007febd562cc68 EFLAGS: 00000246 ORIG_RAX: 0000000000000001
    RAX: ffffffffffffffda RBX: 00007febd562d6d4 RCX: 0000000000454879
    RDX: 0000000000000157 RSI: 0000000020000180 RDI: 0000000000000014
    RBP: 000000000072bea0 R08: 0000000000000000 R09: 0000000000000000
    R10: 0000000000000000 R11: 0000000000000246 R12: 00000000ffffffff
    R13: 00000000000006b0 R14: 00000000006fc120 R15: 0000000000000000
    Code: 90 90 90 90 90 90 90 48 89 f8 48 83 fa 20 0f 82 03 01 00 00 48 39 fe 7d 0f 49 89 f0 49 01 d0 49 39 f8 0f 8f 9f 00 00 00 48 89 d1 <f3> a4 c3 48 81 fa a8 02 00 00 72 05 40 38 fe 74 3b 48 83 ea 20
    RIP: __memmove+0x24/0x1a0 arch/x86/lib/memmove_64.S:43 RSP: ffff8801cc046e28
    CR2: ffff8801cccb8000
    ====
    
    We don't need to copy headers for packets which do not have preceding
    headers of vlan headers, so skip memmove() in that case.
    
    Fixes: 4bbb3e0e8239 ("net: Fix vlan untag for bridge and vlan_dev with reorder_hdr off")
    Reported-by: Eric Dumazet <eric.dumazet@gmail.com>
    Signed-off-by: Toshiaki Makita <makita.toshiaki@lab.ntt.co.jp>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 7ccd1ddb0cbca8dfebeb040cda27ef726ff72862 ......
	 orig commit -> cf55612a945039476abfd73e39064b2e721c3272 ......
checking 119bbaa6795a4f4aed46994cc7d9ab01989c87e3 ......
	 orig commit -> d52e5a7e7ca49457dd31fc8b42fb7c0d58a31221 ......
		 d52e5a7e7ca49457dd31fc8b42fb7c0d58a31221 has problem. Fixes commit -> 28d35bcdd3925e7293408cdb8aa5f2aac5f0d6e3
checking b29cfb8ae0a309b99251bb1286012ac5d77ce2e5 ......
	 orig commit -> 537f4146c53c95aac977852b371bafb9c6755ee1 ......
checking b646b8e5da14b7bf4a1bfa73d25e33f6381d258b ......
	 orig commit -> 3c4fe80b32c685bdc02b280814d0cfe80d441c72 ......
checking 331f79cf85745677656bf7ed0f1fbdcfd00d8268 ......
	 orig commit -> 932909d9b28d27e807ff8eecb68c7748f6701628 ......
checking b3418aa7248f7e3056f4482aacfc15955b324b97 ......
	 orig commit -> d6c931ea32dc08ac2665bb5f009f9c40ad1bbdb3 ......
checking 8c9c7530390dc4774f429c44c0f2fe4da1f4159a ......
	 orig commit -> 351b2bccede1cb673ec7957b35ea997ea24c8884 ......
checking bfffc2c3f56b462cdf5eeea639d898a69b323001 ......
	 orig commit -> 250c6c49e3b68756b14983c076183568636e2bde ......
checking 1a11d73661a18a7265fa96fb2ed941375ca1fa10 ......
	 orig commit -> 20bd1d026aacc5399464f8328f305985c493cde3 ......
checking 5a5d9c70336819f3b8fc67959de4406c4290e1be ......
	 orig commit -> 864449eea7c600596e305ffdc4a6a846414b222c ......
checking 8f2f418efc1942e6aab00d46c60f99c311fe2618 ......
	 orig commit -> df6b074dbe248d8c43a82131e8fd429e401841a5 ......
checking a02f009c550df948b8f6b4d4e96ba23b4de6d815 ......
	 orig commit -> aea3fca005fb45f80869f2e8d56fd4e64c1d1fdb ......
checking 905e863aa5bbb7ca36e29c1467d63914094abaf3 ......
	 orig commit -> 4e7dc08e57c95673d2edaba8983c3de4dd1f65f5 ......
checking 63efa8423d9c73461aabc532ef98f07a575e5b1c ......
	 orig commit -> 7bd3e7b743956afbec30fb525bc3c5e22e3d475c ......
checking 9eee777d312c75e626d684549027c230d4fb92df ......
	 orig commit -> debd574f4195e205ba505b25e19b2b797f4bcd94 ......
checking de9ddf814097c338ad212997d1fec39420eb7708 ......
	 orig commit -> cd4a6f3ab4d80cb919d15897eb3cbc85c2009d4b ......
checking 8ee1d4d281c8ab2dee7855a45ef2b9380be13e82 ......
	 orig commit -> d4dfc0f4d39475ccbbac947880b5464a74c30b99 ......
checking db8d72aeb00e6516d3025eb1bea7a6fbd044eb55 ......
	 orig commit -> 910f8befdf5bccf25287d9f1743e3e546bcb7ce0 ......
checking 9cb1df353c263065ce8560dd01809d6b3492d6ce ......
	 orig commit -> ecc832758a654e375924ebf06a4ac971acb5ce60 ......
checking 36e7b814c9eb6481f99ff63776cd66e481624e8d ......
	 orig commit -> 590399ddf9561f2ed0839311c8ae1be21597ba68 ......
checking fac4749afebe9496f483a6ef64993c456e520eeb ......
	 orig commit -> 2b3957c34b6d7f03544b12ebbf875eee430745db ......
checking 3d0dca33a2346608db5c3466f2f654e1e2e9e76e ......
	 orig commit -> 60eb34ec5526e264c2bbaea4f7512d714d791caf ......
checking c0c5b3fbf9673e85c55f66e093df70a12d2f7ecd ......
	 orig commit -> d716d9b702bb759dd6fb50804f10a174bd156d71 ......
checking 5f779884b601bb19ca2f20710cb3a5c8af7bb770 ......
	 orig commit -> 9a191b114906457c4b2494c474f58ae4142d4e67 ......
checking bb02cbc242e1df5a42246bc38ac1d1088e8dc2b5 ......
	 orig commit -> 4c27bf3c5b7434ccb9ab962301da661c26b467a4 ......
checking 3d95c576aa6e9146360874f954c262a57802e074 ......
	 orig commit -> f287eb9013ccf199cbfa4eabd80c36fedfc15a73 ......
checking 091b085d035df829660403e979b7c34c2f73229a ......
	 orig commit -> f25a2dfc20e3a3ed8fe6618c331799dd7bd01190 ......
checking 173fb5930696428b0d78637d1ff721bc7dea4a59 ......
	 orig commit -> fc6a5d0601c5ac1d02f283a46f60b87b2033e5ca ......
checking 5075324c34991b89adffbd048bd00c1b25caa067 ......
	 orig commit -> 3bf2a09da956b43ecfaa630a2ef9a477f991a46a ......
checking 3daba70fc81c6852f9b98164df9096a5eed7b36d ......
	 orig commit -> abd6360591d3f8259f41c34e31ac4826dfe621b8 ......
checking 8d16ec1c91ab008f0d7113cfd25467e677aeda4a ......
	 orig commit -> 3de59bb9d551428cbdc76a9ea57883f82e350b4d ......
checking 3aa7280c97ddc275d9acb15cf76b3b30cb7cd5dc ......
	 orig commit -> a145f64c6107d3aa5a7cec9f8977d04ac2a896c9 ......
checking 24cdc06fcf9dc32243a7e2693e3df3336ec5a7ef ......
	 orig commit -> 4596749339e06dc7a424fc08a15eded850ed78b7 ......
checking 9ee41dc649658bea9f6387c4e677025ec6ff5bdf ......
	 orig commit -> 472e8c55cf6622d1c112dc2bc777f68bbd4189db ......
		 472e8c55cf6622d1c112dc2bc777f68bbd4189db has problem. Fixes commit -> fbfcd0199170984bd3c2812e49ed0fe7b226959a
checking 7dfe371665524e1bea566dc6e2a4aacf675f3174 ......
	 orig commit -> 657308f73e674e86b60509a430a46e569bf02846 ......
		 657308f73e674e86b60509a430a46e569bf02846 has problem. Fixes commit -> 9b9322db5c5a1917a66c71fe47c3848a9a31227e
commit a1b993e1cf9f61b6493fee3f06598b90f9545501
Author: Stefan Wahren <stefan.wahren@i2se.com>
Date:   Wed Mar 14 20:02:59 2018 +0100

    brcmfmac: Fix check for ISO3166 code
    
    commit 9b9322db5c5a1917a66c71fe47c3848a9a31227e upstream.
    
    The commit "regulatory: add NUL to request alpha2" increases the length of
    alpha2 to 3. This causes a regression on brcmfmac, because
    brcmf_cfg80211_reg_notifier() expect valid ISO3166 codes in the complete
    array. So fix this accordingly.
    
    Fixes: 657308f73e67 ("regulatory: add NUL to request alpha2")
    Signed-off-by: Stefan Wahren <stefan.wahren@i2se.com>
    Acked-by: Franky Lin <franky.lin@broadcom.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    [bwh: Backported to 4.4: adjust filename]
    Signed-off-by: Ben Hutchings <ben.hutchings@codethink.co.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 65f2b43fab1f4f04fa235cbae14c70f379c590ac ......
	 orig commit -> 88e80c62671ceecdbb77c902731ec95a4bfa62f9 ......
checking 235968be2fac637ed6e9d3c92f31b3737cf038bf ......
	 orig commit -> ba6887836178d43b3665b9da075c2c5dfe1d207c ......
checking db60c8045c4d9dbfb901f40a5015eb37579f9e92 ......
	 orig commit -> 410d5e13e7638bc146321671e223d56495fbf3c7 ......
checking 40b64c59f35505ea9cb250537a95f8915355e87e ......
	 orig commit -> 770b55c995d171f026a9efb85e71e3b1ea47b93d ......
checking 6bb02ca8aca34675bb3e5b255165fd7cf8c1e1f1 ......
	 orig commit -> 083b20907185b076f21c265b30fe5b5f24c03d8c ......
checking e284495e2f42eeb1e5777264105cf236cdf893ed ......
	 orig commit -> 88913bd8ea2a75d7e460a4bed5f75e1c32660d7e ......
checking e163691fa8e8403d1637690c7ef43c0a423deb25 ......
	 orig commit -> 53b8d89ddbdbb0e4625a46d2cdbb6f106c52f801 ......
checking 7505779c615c6c80b54faf8d21327de5627a4aa2 ......
	 orig commit -> cb13b424e986aed68d74cbaec3449ea23c50e167 ......
checking 16fa37d641d769433b7859a058bd6e551633e293 ......
	 orig commit -> 17539f2f4f0b7fa906b508765c8ada07a1e45f52 ......
checking 0e97c7d0c829faf614fbece329c383f675a03006 ......
	 orig commit -> 1293b6191010672c0c9dacae8f71c6f3e4d70cbe ......
checking 247e3b4dd0ccf6e703dfd9eb86af953849ed2999 ......
	 orig commit -> 01a69cab01c184d3786af09e9339311123d63d22 ......
checking 3e1e6e1c2d55b83aa3017dded40880838765fe2e ......
	 orig commit -> 651b9920d7a694ffb1f885aef2bbb068a25d9d66 ......
checking 50e54d56744cda70a1c3bc980c56e461ecde3a6d ......
	 orig commit -> fe9c842695e26d8116b61b80bfb905356f07834b ......
checking 591515bb2ad390dad3b1b090f5d2e687006a5c02 ......
	 orig commit -> 8cbbf1745dcde7ba7e423dc70619d223de90fd43 ......
checking f2ad75cdc8be062f20a28046eb8146580cb7f13f ......
	 orig commit -> d3be6d2a08bd26580562d9714d3d97ea9ba22c73 ......
checking 818fc05eec82ac640391c28b27039066cc0a075c ......
	 orig commit -> db35340c536f1af0108ec9a0b2126a05d358d14a ......
checking 5e4bf6c99f649c43c8a790176ecbf3114ee2e137 ......
	 orig commit -> 1bc5ad3a6acdcf56f83272f2de1cd2389ea9e9e2 ......
checking edee149b58bd148971eefb7ffa9d65e425aa2c80 ......
	 orig commit -> 00c20cdc79259c6c5bf978b21af96c2d3edb646d ......
checking b6ef5483f2e425fc91ef5bbfe2403b3432bf4bec ......
	 orig commit -> cabe92a55e3a12005a4ac4d3954c9a174b0efe2a ......
checking f05e7cd09ef68729f70265836e287a980d3e28f4 ......
	 orig commit -> 9a606f8d55cfc932ec02172aaed4124fdc150047 ......
checking ef2ca85e8f7b31b5203f05d89444a31fddd3fb90 ......
	 orig commit -> 755d739534f998d92e348fba8ffb0478416576e7 ......
checking 7576d958f4d1674190d562158c8ce53530c47ebf ......
	 orig commit -> 20c63f4089cceab803438c383631963e34c4d8e5 ......
checking 36e393b0592cc8657b7363cd5fa2862985f10a63 ......
	 orig commit -> 8813a59ed892305b5ac1b5b901740b1ad4b5fefa ......
checking e0a6f895ada26587108ee7837e50de1749612ed4 ......
	 orig commit -> 827cc2fa024dd6517d62de7a44c7b42f32af371b ......
checking 278eea9bef4f8865facdbc2b800ec809c8cf5f79 ......
	 orig commit -> c02189e12ce3bf3808cb880569d3b10249f50bd9 ......
checking 215331289b3bf313c4ada720b1ddf2bcb65ab1b6 ......
	 orig commit -> a7043e9529f3c367cc4d82997e00be034cbe57ca ......
checking a652d8a0d6092c533466dab69e2be3a30b51eee3 ......
	 orig commit -> e6f791d95313c85f3dd4a26141e28e50ae9aa0ae ......
checking daa67456210c7a502831f152a3dda4d59497b026 ......
	 orig commit -> ecf7ff49945f5741fa1da112f994939f942031d3 ......
checking a825fd17b996f1a61c53115de056a1b055a8c118 ......
	 orig commit -> 84af7e8b895088d89f246d6b0f82717fafdebf61 ......
checking 4696737506bfa60d53bedfe3987354fe293fe44e ......
	 orig commit -> b6dd4d83dc2f78cebc9a7e6e7e4bc2be4d29b94d ......
checking abd9138a1b0a987498296f93be174aab0d41b051 ......
	 orig commit -> 11dc13224c975efcec96647a4768a6f1bb7a19a8 ......
checking 46895b5b3921b6b359fa521b67d579262553c322 ......
	 orig commit -> e3d91b0ca523d53158f435a3e13df7f0cb360ea2 ......
checking b2fce717a374c3801c5560dfb4df60ac3fb4e34b ......
	 orig commit -> 7f4fc93d4713394ee8f1cd44c238e046e11b4f15 ......
checking 0b803fa8db94a81e95e2dc6b5ddc25af6e162b9e ......
	 orig commit -> 73ac105be390c1de42a2f21643c9778a5e002930 ......
checking cab95b251b76047e2422f16589413d706a2d74ec ......
	 orig commit -> 682811b3ce1a5a4e20d700939a9042f01dbc66c4 ......
checking acd8bb42c820b482a57c30b29d0f24cc5e1eab48 ......
	 orig commit -> 99361bbf26337186f02561109c17a4c4b1a7536a ......
checking 94803688280deb84a573d42d59fc1068c696b455 ......
	 orig commit -> ade7db991b47ab3016a414468164f4966bd08202 ......
checking bccf7f7c304daeba0ff7a8944cc94d89ceffe915 ......
	 orig commit -> ac7f1061c2c11bb8936b1b6a94cdb48de732f7a4 ......
checking 07b1d60d79e7772dddbfd69a2fa8b4f471feb582 ......
	 orig commit -> 202fb4ef81e3ec765c23bd1e6746a5c25b797d0e ......
checking c9eb334707d765eec7b4f6e23b294725b03df6d2 ......
	 orig commit -> 2c0aa08631b86a4678dbc93b9caa5248014b4458 ......
checking 95f6218d920525f79f9b9be2fbddddc1cedbb5c0 ......
	 orig commit -> 3ac7292a25db1c607a50752055a18aba32ac2176 ......
checking 6be4fe832954db3b359b72107a6c60e34d939b26 ......
	 orig commit -> f599c64fdf7d9c108e8717fb04bc41c680120da4 ......
		 f599c64fdf7d9c108e8717fb04bc41c680120da4 has problem. Fixes commit -> 2d408c0d4574b01b9ed45e02516888bf925e11a9
45c8184c1bed1ca8a7f02918552063a00b909bf5
cb257783c2927b73614b20f915a91ff78aa6f3e8
commit 2e0c018c0c60ab5053cccfa2f3f5f6641d703754
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Fri Jul 20 18:33:59 2018 +0200

    xen-netfront: fix queue name setting
    
    [ Upstream commit 2d408c0d4574b01b9ed45e02516888bf925e11a9 ]
    
    Commit f599c64fdf7d ("xen-netfront: Fix race between device setup and
    open") changed the initialization order: xennet_create_queues() now
    happens before we do register_netdev() so using netdev->name in
    xennet_init_queue() is incorrect, we end up with the following in
    /proc/interrupts:
    
     60:        139          0   xen-dyn    -event     eth%d-q0-tx
     61:        265          0   xen-dyn    -event     eth%d-q0-rx
     62:        234          0   xen-dyn    -event     eth%d-q1-tx
     63:          1          0   xen-dyn    -event     eth%d-q1-rx
    
    and this looks ugly. Actually, using early netdev name (even when it's
    already set) is also not ideal: nowadays we tend to rename eth devices
    and queue name may end up not corresponding to the netdev name.
    
    Use nodename from xenbus device for queue naming: this can't change in VM's
    lifetime. Now /proc/interrupts looks like
    
     62:        202          0   xen-dyn    -event     device/vif/0-q0-tx
     63:        317          0   xen-dyn    -event     device/vif/0-q0-rx
     64:        262          0   xen-dyn    -event     device/vif/0-q1-tx
     65:         17          0   xen-dyn    -event     device/vif/0-q1-rx
    
    Fixes: f599c64fdf7d ("xen-netfront: Fix race between device setup and open")
    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Reviewed-by: Ross Lagerwall <ross.lagerwall@citrix.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 12c3ba18e3f11cb573589d14c2d82646b1981d29
Author: Xiao Liang <xiliang@redhat.com>
Date:   Tue Aug 14 23:21:28 2018 +0800

    xen-netfront: fix warn message as irq device name has '/'
    
    [ Upstream commit 21f2706b20100bb3db378461ab9b8e2035309b5b ]
    
    There is a call trace generated after commit 2d408c0d4574b01b9ed45e02516888bf925e11a9(
    xen-netfront: fix queue name setting). There is no 'device/vif/xx-q0-tx' file found
    under /proc/irq/xx/.
    
    This patch only picks up device type and id as its name.
    
    With the patch, now /proc/interrupts looks like below and the warning message gone:
     70:         21          0          0          0   xen-dyn    -event     vif0-q0-tx
     71:         15          0          0          0   xen-dyn    -event     vif0-q0-rx
     72:         14          0          0          0   xen-dyn    -event     vif0-q1-tx
     73:         33          0          0          0   xen-dyn    -event     vif0-q1-rx
     74:         12          0          0          0   xen-dyn    -event     vif0-q2-tx
     75:         24          0          0          0   xen-dyn    -event     vif0-q2-rx
     76:         19          0          0          0   xen-dyn    -event     vif0-q3-tx
     77:         21          0          0          0   xen-dyn    -event     vif0-q3-rx
    
    Below is call trace information without this patch:
    
    name 'device/vif/0-q0-tx'
    WARNING: CPU: 2 PID: 37 at fs/proc/generic.c:174 __xlate_proc_name+0x85/0xa0
    RIP: 0010:__xlate_proc_name+0x85/0xa0
    RSP: 0018:ffffb85c40473c18 EFLAGS: 00010286
    RAX: 0000000000000000 RBX: 0000000000000006 RCX: 0000000000000006
    RDX: 0000000000000007 RSI: 0000000000000096 RDI: ffff984c7f516930
    RBP: ffffb85c40473cb8 R08: 000000000000002c R09: 0000000000000229
    R10: 0000000000000000 R11: 0000000000000001 R12: ffffb85c40473c98
    R13: ffffb85c40473cb8 R14: ffffb85c40473c50 R15: 0000000000000000
    FS:  0000000000000000(0000) GS:ffff984c7f500000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00007f69b6899038 CR3: 000000001c20a006 CR4: 00000000001606e0
    Call Trace:
    __proc_create+0x45/0x230
    ? snprintf+0x49/0x60
    proc_mkdir_data+0x35/0x90
    register_handler_proc+0xef/0x110
    ? proc_register+0xfc/0x110
    ? proc_create_data+0x70/0xb0
    __setup_irq+0x39b/0x660
    ? request_threaded_irq+0xad/0x160
    request_threaded_irq+0xf5/0x160
    ? xennet_tx_buf_gc+0x1d0/0x1d0 [xen_netfront]
    bind_evtchn_to_irqhandler+0x3d/0x70
    ? xenbus_alloc_evtchn+0x41/0xa0
    netback_changed+0xa46/0xcda [xen_netfront]
    ? find_watch+0x40/0x40
    xenwatch_thread+0xc5/0x160
    ? finish_wait+0x80/0x80
    kthread+0x112/0x130
    ? kthread_create_worker_on_cpu+0x70/0x70
    ret_from_fork+0x35/0x40
    Code: 81 5c 00 48 85 c0 75 cc 5b 49 89 2e 31 c0 5d 4d 89 3c 24 41 5c 41 5d 41 5e 41 5f c3 4c 89 ee 48 c7 c7 40 4f 0e b4 e8 65 ea d8 ff <0f> 0b b8 fe ff ff ff 5b 5d 41 5c 41 5d 41 5e 41 5f c3 66 0f 1f
    ---[ end trace 650e5561b0caab3a ]---
    
    Signed-off-by: Xiao Liang <xiliang@redhat.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    
    Signed-off-by: David S. Miller <davem@davemloft.net>
    
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 2e0c018c0c60ab5053cccfa2f3f5f6641d703754
Author: Vitaly Kuznetsov <vkuznets@redhat.com>
Date:   Fri Jul 20 18:33:59 2018 +0200

    xen-netfront: fix queue name setting
    
    [ Upstream commit 2d408c0d4574b01b9ed45e02516888bf925e11a9 ]
    
    Commit f599c64fdf7d ("xen-netfront: Fix race between device setup and
    open") changed the initialization order: xennet_create_queues() now
    happens before we do register_netdev() so using netdev->name in
    xennet_init_queue() is incorrect, we end up with the following in
    /proc/interrupts:
    
     60:        139          0   xen-dyn    -event     eth%d-q0-tx
     61:        265          0   xen-dyn    -event     eth%d-q0-rx
     62:        234          0   xen-dyn    -event     eth%d-q1-tx
     63:          1          0   xen-dyn    -event     eth%d-q1-rx
    
    and this looks ugly. Actually, using early netdev name (even when it's
    already set) is also not ideal: nowadays we tend to rename eth devices
    and queue name may end up not corresponding to the netdev name.
    
    Use nodename from xenbus device for queue naming: this can't change in VM's
    lifetime. Now /proc/interrupts looks like
    
     62:        202          0   xen-dyn    -event     device/vif/0-q0-tx
     63:        317          0   xen-dyn    -event     device/vif/0-q0-rx
     64:        262          0   xen-dyn    -event     device/vif/0-q1-tx
     65:         17          0   xen-dyn    -event     device/vif/0-q1-rx
    
    Fixes: f599c64fdf7d ("xen-netfront: Fix race between device setup and open")
    Signed-off-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Reviewed-by: Ross Lagerwall <ross.lagerwall@citrix.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 492917f30ce6ea9d75fa217d58fa36b61d32ba69 ......
	 orig commit -> 0cde5b44a30f1daaef1c34e08191239dc63271c4 ......
checking e7260c8fb01681591d19826edc8fe4b36b2ef0bf ......
	 orig commit -> 09584b406742413ac4c8d7e030374d4daa045b69 ......
		 09584b406742413ac4c8d7e030374d4daa045b69 has problem. Fixes commit -> 52fda36d63bfc8c8e8ae5eda8eb5ac6f52cd67ed
checking 0194705a7be9daa82095f0580190566c5af187c3 ......
	 orig commit -> ba1edb9a5125a617d612f98eead14b9b84e75c3a ......
checking 50fb55b36df46e2e7c74a11977dc9e087aa7b3c2 ......
	 orig commit -> a7770ae194569e96a93c48aceb304edded9cc648 ......
checking 589d97baeb1b9624f91ed8ea3933e2a36f157243 ......
	 orig commit -> 328008a72d38b5bde6491e463405c34a81a65d3e ......
checking cabf4efd07e4b3d76cf416296dfc6e5ac72e3c90 ......
	 orig commit -> 1029361084d18cc270f64dfd39529fafa10cfe01 ......
checking 7a9e41c7feef675395c36d0565c522440252d2d0 ......
	 orig commit -> 69d763fc6d3aee787a3e8c8c35092b4f4960fa5d ......
		 69d763fc6d3aee787a3e8c8c35092b4f4960fa5d has problem. Fixes commit -> 145e1a71e090575c74969e3daa8136d1e5b99fc8
commit d71f830d8cf792e51197a2291cf897372c49395a
Author: Hugh Dickins <hughd@google.com>
Date:   Fri Jun 1 16:50:50 2018 -0700

    mm: fix the NULL mapping case in __isolate_lru_page()
    
    commit 145e1a71e090575c74969e3daa8136d1e5b99fc8 upstream.
    
    George Boole would have noticed a slight error in 4.16 commit
    69d763fc6d3a ("mm: pin address_space before dereferencing it while
    isolating an LRU page").  Fix it, to match both the comment above it,
    and the original behaviour.
    
    Although anonymous pages are not marked PageDirty at first, we have an
    old habit of calling SetPageDirty when a page is removed from swap
    cache: so there's a category of ex-swap pages that are easily
    migratable, but were inadvertently excluded from compaction's async
    migration in 4.16.
    
    Link: http://lkml.kernel.org/r/alpine.LSU.2.11.1805302014001.12558@eggly.anvils
    Fixes: 69d763fc6d3a ("mm: pin address_space before dereferencing it while isolating an LRU page")
    Signed-off-by: Hugh Dickins <hughd@google.com>
    Acked-by: Minchan Kim <minchan@kernel.org>
    Acked-by: Mel Gorman <mgorman@techsingularity.net>
    Reported-by:  Ivan Kalvachev <ikalvachev@gmail.com>
    Cc: "Huang, Ying" <ying.huang@intel.com>
    Cc: Jan Kara <jack@suse.cz>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 8645c430a5aab9a4440bff17d1e6623644f4ca83 ......
	 orig commit -> c58f0bb77ed8bf93dfdde762b01cb67eebbdfc29 ......
checking f8d71050089830bb574994966910d61ead3c17b7 ......
	 orig commit -> 0486a38bcc4749808edbc848f1bcf232042770fc ......
checking e6e3a4804ed4731277a7f8437109f3f4a24b915d ......
	 orig commit -> 56521e7a02b7b84a5e72691a1fb15570e6055545 ......
checking d278dc22cc79b2caadd07045d0cfd59d9c7f2411 ......
	 orig commit -> d984187e3a1ad7d12447a7ab2c43ce3717a2b5b3 ......
checking b35bb8a41795caa05e09c3aacf7d78f1f20bac04 ......
	 orig commit -> 16c8d569f5704a84164f30ff01b29879f3438065 ......
checking d55cd5742835f03e5c155d865499c64c8312c1e2 ......
	 orig commit -> 025bcbde3634b2c9b316f227fed13ad6ad6817fb ......
checking ddda6e247f6f5f8b19cecfaf9f0b3f5b3d953cd7 ......
	 orig commit -> cbd27448faff4843ac4b66cc71445a10623ff48d ......
checking 3ad85b3b3ea9dd0fbdf94682577391dfe1a28276 ......
	 orig commit -> b081808a66345ba725b77ecd8d759bee874cd937 ......
checking b4e84e5aed7680dedd44727bcf8ed7fdbd409b86 ......
	 orig commit -> ea05ba7c559c8e5a5946c3a94a2a266e9a6680a6 ......
checking bf5b1813f5783068c6f76b60ec7e8ce83aae41bf ......
	 orig commit -> a346137e9142b039fd13af2e59696e3d40c487ef ......
checking b222aa1cbd87e17821d96fbbd7fae5ed8321ad70 ......
	 orig commit -> 5bdd0c6f89fba430e18d636493398389dadc3b17 ......
checking ba6ff62a27ea9fd9218e6c0686d09d8f20256c8f ......
	 orig commit -> 7ad81482cad67cbe1ec808490d1ddfc420c42008 ......
checking c92e6b9bf836e9898d6575983ef612088c82b8e6 ......
	 orig commit -> 96d5eaa9bb74d299508d811d865c2c41b38b0301 ......
checking 95b286daf7ba784191023ad110122703eb2ebabc ......
	 orig commit -> 762221f095e3932669093466aaf4b85ed9ad2ac1 ......
checking 72af2c8c7c19d53fc34a1d82864d1fb9e1a74e84 ......
	 orig commit -> 9ea2c7c9da13c9073e371c046cbbc45481ecb459 ......
checking 51f12a06dddcc998c1078e2b1a02d92c487c055b ......
	 orig commit -> 343e4fc1c60971b0734de26dbbd475d433950982 ......
checking a89f66de597765188e46025cfee0709f0188ac22 ......
	 orig commit -> e749d328b0b450aa78d562fa26a0cd8872325dd9 ......
checking 3fc6adc305e12ed8fd4baf9146892b34ca50530e ......
	 orig commit -> 0ddcff49b672239dda94d70d0fcf50317a9f4b51 ......
checking 5bfe39f17ddbbb6bc22091d5588d9706608b49a4 ......
	 orig commit -> 5b1374b3b3c2fc4f63a398adfa446fb8eff791a4 ......
checking 921fcd9436681e618c43060307d4ae324547065f ......
	 orig commit -> ae7440ef0c8013d68c00dad6900e7cce5311bb1c ......
checking 608b42a3488f2bb9a44d44fc5773322f6d04da21 ......
	 orig commit -> 0724a7c32a54e3e50d28e19e30c59014f61d4e2c ......
checking 278480bd2416c7501385e151d1d36b4e79bd868e ......
	 orig commit -> f541c09ebfc61697b586b38c9ebaf4b70defb278 ......
checking 929d451024ee7a483fceb90b6a45696d02f2fed7 ......
	 orig commit -> cbebc6ef4fc830f4040d4140bf53484812d5d5d9 ......
checking 644bd813f744d66d95221a91025363daf60e0be3 ......
	 orig commit -> 9b28a1102efc75d81298198166ead87d643a29ce ......
checking 397a7bb1a4aebef54792750b887f0da592ea0155 ......
	 orig commit -> d777f8de99b05d399c0e4e51cdce016f26bd971b ......
checking 8a462632f99a14459ba6da102cbef502516239c0 ......
	 orig commit -> 249d98e567e25dd03e015e2d31e1b7b9648f34df ......
checking 1a08c11109e1accf66ba8aef5606492665792cd4 ......
	 orig commit -> 38d70b7ca1769f26c0b79f3c08ff2cc949712b59 ......
checking 1c6f97db4942f094ab6a3f427228e63076efb480 ......
	 orig commit -> aa008206634363ef800fbd5f0262016c9ff81dea ......
checking 1c0467b9771fba4db5ea348b1788e7a553c93931 ......
	 orig commit -> 91633eed73a3ac37aaece5c8c1f93a18bae616a9 ......
checking ff49a3725357c2c70c046b4bec1c18e7960669fe ......
	 orig commit -> 51776043afa415435c7e4636204fbe4f7edc4501 ......
checking 7c11bd3dc8bfd545ec5fe84848e74d356a0ed845 ......
	 orig commit -> 123af9043e93cb6f235207d260d50f832cdb5439 ......
checking 4281754e6bea7ee49e08c231096c2668deaa5ac8 ......
	 orig commit -> c469652bb5e8fb715db7d152f46d33b3740c9b87 ......
		 c469652bb5e8fb715db7d152f46d33b3740c9b87 has problem. Fixes commit -> 6a30abaa40b62aed46ef12ea4c16c48565bdb376
checking 608848f0a62d45809bf82f7b5a8eb400e620901d ......
	 orig commit -> dce2630c7da73b0634686bca557cc8945cc450c8 ......
checking fc66e3f87a36d2b84a8d86ea9e5dd4d2b96fe830 ......
	 orig commit -> 188775181bc05f29372b305ef96485840e351fde ......
checking 03bb7588942a38623f108b3302c2d1aebb525696 ......
	 orig commit -> 1e2e547a93a00ebc21582c06ca3c6cfea2a309ee ......
checking 1a54258e10b23c6877d699ef6cf3f2b02b17b87f ......
	 orig commit -> 5a93790d4e2df73e30c965ec6e49be82fc3ccfce ......
checking cb1c92e55420dad73ce717ef4029dd6e984dcbd0 ......
	 orig commit -> 4ea77014af0d6205b05503d1c7aac6eace11d473 ......
checking 34dedd5d7bb9f5e798a0d4ab882a64e8b8a9720f ......
	 orig commit -> 23d6aef74da86a33fa6bb75f79565e0a16ee97c2 ......
checking e6b2c060e0dfa8fc841feae5c9383fa96e5dc4ac ......
	 orig commit -> 3f1959721558a976aaf9c2024d5bc884e6411bf7 ......
checking a4e37ca958f179c24e814f3febfadcc2b3be105d ......
	 orig commit -> 8f89c007b6dec16a1793cb88de88fcc02117bbbc ......
checking bd4792b31a8ebdfbb3a5af03a903ee8da1e78656 ......
	 orig commit -> a73ab244f0dad8fffb3291b905f73e2d3eaa7c00 ......
checking 9de924517db0014e4377a665893624c2478ad6e3 ......
	 orig commit -> 4855c92dbb7b3b85c23e88ab7ca04f99b9677b41 ......
checking 03d08c08041b949af7d4c9daefc17f5060cd3e3b ......
	 orig commit -> 136d769e0b3475d71350aa3648a116a6ee7a8f6c ......
checking 3b56232f54073dc83dffd441d23ee1bae4007f1a ......
	 orig commit -> 322579dcc865b94b47345ad1b6002ad167f85405 ......
checking 089440aa804c0e96b9b8442264dbea5179304125 ......
	 orig commit -> 5f651b870485ee60f5abbbd85195a6852978894a ......
checking c04a69fb83974aa25f1065fc0c7b63e046dc46f2 ......
	 orig commit -> 3ae180972564846e6d794e3615e1ab0a1e6c4ef9 ......
checking 1ac501e05fcd8a016d440c2d040272ab67f365b4 ......
	 orig commit -> baf10564fbb66ea222cae66fbff11c444590ffd9 ......
checking 4d21e6e82c43ca41a7b4ee12cea93e7a671865aa ......
	 orig commit -> 30da870ce4a4e007c901858a96e9e394a1daa74a ......
checking bf8ac80fce8cf0affb0b004a470cdd92be9ae51e ......
	 orig commit -> ba3696e94d9d590d9a7e55f68e81c25dba515191 ......
checking f363b0cafb77370352d7943beccc8826cb3c8b2e ......
	 orig commit -> 9a3a92ccfe3620743d4ae57c987dc8e9c5f88996 ......
checking 422494a9e07463388a1c7f3dd4f910c032a060a3 ......
	 orig commit -> 71e909c0cdad28a1df1fa14442929e68615dee45 ......
