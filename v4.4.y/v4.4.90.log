Check from v4.4.90 to v4.4.91
Commit count: 50
checking c030c36a88cdc54a5d657c0a2ee630ba495d5538 ......
checking 2536c20e82852dc0eb0eb5d4f09593de72445be3 ......
	 orig commit -> 69d3973af1acd4c0989ec8218c05f12d303cd7cf ......
checking 2b2bfb537be44253eb9d2dc9a0f959fdc3102427 ......
	 orig commit -> 13f99ebdd602ebdafb909e15ec6ffb1e34690167 ......
checking d32ee7026081bc43313dc8f7aac8bbf93206e6a5 ......
	 orig commit -> 0527873b29b077fc8e656acd63e1866b429fef55 ......
checking 7cad91f22d5edbf92489d3ae4f022e6a20c1ec86 ......
	 orig commit -> f6aafac184a3e46e919769dd4faa8bf0dc436534 ......
checking 13af23e0181223aa674567fd01102e1cc9a3a56c ......
	 orig commit -> 1d2d8de44a6c20af262b4c3d3b93ef7ec3c5488e ......
checking f6c8c71cc9011061b6223b2ae43d87fa5a34be52 ......
	 orig commit -> d85fc67dd11e9a32966140677d4d6429ca540b25 ......
checking 0185496a115dbdee8b2428541949217039222d84 ......
	 orig commit -> 08b005f1333154ae5b404ca28766e0ffb9f1c150 ......
checking 088b9a41b605079f253b99f4bba868eda89bc9fa ......
	 orig commit -> 3b0277f198ac928f323c42e180680d2f79aa980d ......
checking cb07496eab4335c4fd0d90c1cb78f1e85e937ebb ......
	 orig commit -> 6d399783e9d4e9bd44931501948059d24ad96ff8 ......
checking 13099ee9c7d54b0a25f6c8397675aed99e9cfa45 ......
	 orig commit -> 3b12f73a5c2977153f28a224392fd4729b50d1dc ......
checking 9bcd5ceef96e71d57795c593e4dacf767f935c79 ......
	 orig commit -> ed46e66cc1b3d684042f92dfa2ab15ee917b4cac ......
checking cadfa3a688d2f1f618677ddc66cb4f5cdbae6a81 ......
	 orig commit -> 74e3f6e63da6c8e8246fba1689e040bc926b4a1a ......
checking 4203f2a73882455c0e0c01d7a58a6e24a8cd43ac ......
	 orig commit -> ae5c682113f9f94cc5e76f92cf041ee624c173ee ......
checking fa029020bddd92f62b3acb4ec39b8bbc66746950 ......
	 orig commit -> d7f3e33df4fbdc9855fb151f4a328ec46447e3ba ......
checking 8bd7216d338694126aec35d936b02b300289b6ae ......
	 orig commit -> db8466c581cca1a08b505f1319c3ecd246f16fa8 ......
		 db8466c581cca1a08b505f1319c3ecd246f16fa8 has problem. Fixes commit -> 5fdc66e046206306bf61ff2d626bfa52ca087f7b
commit 9f5bbe694df14d56860ffd8c1e121e2cda1aa076
Author: Matt Redfearn <matt.redfearn@imgtec.com>
Date:   Mon Jul 10 09:43:31 2017 +0100

    MIPS: Fix minimum alignment requirement of IRQ stack
    
    commit 5fdc66e046206306bf61ff2d626bfa52ca087f7b upstream.
    
    Commit db8466c581cc ("MIPS: IRQ Stack: Unwind IRQ stack onto task
    stack") erroneously set the initial stack pointer of the IRQ stack to a
    value with a 4 byte alignment. The MIPS32 ABI requires that the minimum
    stack alignment is 8 byte, and the MIPS64 ABIs(n32/n64) require 16 byte
    minimum alignment. Fix IRQ_STACK_START such that it leaves space for the
    dummy stack frame (containing interrupted task kernel stack pointer)
    while also meeting minimum alignment requirements.
    
    Fixes: db8466c581cc ("MIPS: IRQ Stack: Unwind IRQ stack onto task stack")
    Reported-by: Darius Ivanauskas <dasilt@yahoo.com>
    Signed-off-by: Matt Redfearn <matt.redfearn@imgtec.com>
    Cc: Chris Metcalf <cmetcalf@mellanox.com>
    Cc: Petr Mladek <pmladek@suse.com>
    Cc: Aaron Tomlin <atomlin@redhat.com>
    Cc: Jason A. Donenfeld <jason@zx2c4.com>
    Cc: linux-mips@linux-mips.org
    Cc: linux-kernel@vger.kernel.org
    Patchwork: https://patchwork.linux-mips.org/patch/16760/
    Signed-off-by: Ralf Baechle <ralf@linux-mips.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking f7f46b3ba20def4321bfbe3a88cd1ae23eb40b07 ......
	 orig commit -> 3b7dabf029478bb80507a6c4500ca94132a2bc0b ......
checking e29066778bc28eff5f63616800c6b60f12c87267 ......
	 orig commit -> 5b8d5429daa05bebef6ffd3297df3b502cc6f184 ......
		 5b8d5429daa05bebef6ffd3297df3b502cc6f184 has problem. Fixes commit -> 84aeb437ab98a2bce3d4b2111c79723aedfceb33
commit dd1e454c4d7400d2246ac7587c181c3c3f170a5c
Author: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
Date:   Mon Dec 18 17:35:09 2017 +0200

    net: bridge: fix early call to br_stp_change_bridge_id and plug newlink leaks
    
    
    [ Upstream commit 84aeb437ab98a2bce3d4b2111c79723aedfceb33 ]
    
    The early call to br_stp_change_bridge_id in bridge's newlink can cause
    a memory leak if an error occurs during the newlink because the fdb
    entries are not cleaned up if a different lladdr was specified, also
    another minor issue is that it generates fdb notifications with
    ifindex = 0. Another unrelated memory leak is the bridge sysfs entries
    which get added on NETDEV_REGISTER event, but are not cleaned up in the
    newlink error path. To remove this special case the call to
    br_stp_change_bridge_id is done after netdev register and we cleanup the
    bridge on changelink error via br_dev_delete to plug all leaks.
    
    This patch makes netlink bridge destruction on newlink error the same as
    dellink and ioctl del which is necessary since at that point we have a
    fully initialized bridge device.
    
    To reproduce the issue:
    $ ip l add br0 address 00:11:22:33:44:55 type bridge group_fwd_mask 1
    RTNETLINK answers: Invalid argument
    
    $ rmmod bridge
    [ 1822.142525] =============================================================================
    [ 1822.143640] BUG bridge_fdb_cache (Tainted: G           O    ): Objects remaining in bridge_fdb_cache on __kmem_cache_shutdown()
    [ 1822.144821] -----------------------------------------------------------------------------
    
    [ 1822.145990] Disabling lock debugging due to kernel taint
    [ 1822.146732] INFO: Slab 0x0000000092a844b2 objects=32 used=2 fp=0x00000000fef011b0 flags=0x1ffff8000000100
    [ 1822.147700] CPU: 2 PID: 13584 Comm: rmmod Tainted: G    B      O     4.15.0-rc2+ #87
    [ 1822.148578] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.7.5-20140531_083030-gandalf 04/01/2014
    [ 1822.150008] Call Trace:
    [ 1822.150510]  dump_stack+0x78/0xa9
    [ 1822.151156]  slab_err+0xb1/0xd3
    [ 1822.151834]  ? __kmalloc+0x1bb/0x1ce
    [ 1822.152546]  __kmem_cache_shutdown+0x151/0x28b
    [ 1822.153395]  shutdown_cache+0x13/0x144
    [ 1822.154126]  kmem_cache_destroy+0x1c0/0x1fb
    [ 1822.154669]  SyS_delete_module+0x194/0x244
    [ 1822.155199]  ? trace_hardirqs_on_thunk+0x1a/0x1c
    [ 1822.155773]  entry_SYSCALL_64_fastpath+0x23/0x9a
    [ 1822.156343] RIP: 0033:0x7f929bd38b17
    [ 1822.156859] RSP: 002b:00007ffd160e9a98 EFLAGS: 00000202 ORIG_RAX: 00000000000000b0
    [ 1822.157728] RAX: ffffffffffffffda RBX: 00005578316ba090 RCX: 00007f929bd38b17
    [ 1822.158422] RDX: 00007f929bd9ec60 RSI: 0000000000000800 RDI: 00005578316ba0f0
    [ 1822.159114] RBP: 0000000000000003 R08: 00007f929bff5f20 R09: 00007ffd160e8a11
    [ 1822.159808] R10: 00007ffd160e9860 R11: 0000000000000202 R12: 00007ffd160e8a80
    [ 1822.160513] R13: 0000000000000000 R14: 0000000000000000 R15: 00005578316ba090
    [ 1822.161278] INFO: Object 0x000000007645de29 @offset=0
    [ 1822.161666] INFO: Object 0x00000000d5df2ab5 @offset=128
    
    Fixes: 30313a3d5794 ("bridge: Handle IFLA_ADDRESS correctly when creating bridge device")
    Fixes: 5b8d5429daa0 ("bridge: netlink: register netdevice before executing changelink")
    Signed-off-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 1b760fdad9f0626e7be2c1082c94dca21f72470b ......
	 orig commit -> 5ef1ecf060f28ecef313b5723f1fd39bf5a35f56 ......
checking e1e99dc319ccb5403f1264fe411fa3b637c6d783 ......
	 orig commit -> 6f2aee0c0de65013333bbc26fe50c9c7b09a37f7 ......
checking 4212115da67bcaacb134def45c25f21666bbace9 ......
	 orig commit -> 72ec0bc64b9a5d8e0efcb717abfc757746b101b7 ......
checking fa63895f47c9253a0305a5d0862e98ab6f11e718 ......
	 orig commit -> fd2c83b35752f0a8236b976978ad4658df14a59f ......
checking b9ff317b5cd4a8f7ca13934af679e129c3f1d2ce ......
	 orig commit -> 9899886d5e8ec5b343b1efe44f185a0e68dc6454 ......
checking 4e6cdc0a7decd1cc5396b7d28c3ff8d47e3ae78b ......
	 orig commit -> 98ea51cb0c8ce009d9da1fd7b48f0ff1d7a9bbb0 ......
checking c5710390cc7605f66cef6ce34e0635fc464bfd9b ......
	 orig commit -> 639467c8f26d834c934215e8b59129ce442475fe ......
	 orig commit -> 66feeec9322132689d42723df2537d60f96f8e44 ......
		 66feeec9322132689d42723df2537d60f96f8e44 has problem. Fixes commit -> 639467c8f26d834c934215e8b59129ce442475fe
commit c5710390cc7605f66cef6ce34e0635fc464bfd9b
Author: Linus Walleij <linus.walleij@linaro.org>
Date:   Fri Jan 20 14:07:52 2017 +0100

    ASoC: dapm: fix some pointer error handling
    
    
    [ Upstream commit 639467c8f26d834c934215e8b59129ce442475fe ]
    
    commit 66feeec9322132689d42723df2537d60f96f8e44
    "RFC: ASoC: dapm: handle probe deferrals"
    forgot a to update some two sites where the call
    was used. The static codechecks quickly found them.
    
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Fixes: 66feeec93221 ("RFC: ASoC: dapm: handle probe deferrals")
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 7b8c9e6e0fca80c0da2ab94b5b1f96841f0c9be4 ......
	 orig commit -> c3b674a04b8ab62a1d35e86714d466af0a0ecc18 ......
checking 093fe104c5bbd99b4934bd80216b6e6d7371c4fc ......
	 orig commit -> 62bc306e2083436675e33b5bdeb6a77907d35971 ......
checking af3749456042cc38c80902e849421451b27215f6 ......
	 orig commit -> 37e1df8c95e2c8a57c77eafc097648f6e40a60ff ......
checking 8e8c3d4bb62950c37f086be7d3d775b4879c30df ......
	 orig commit -> c5082b70adfe8e1ea1cf4a8eff92c9f260e364d2 ......
checking abbccd85575319472e468b009fc0816cdab7a795 ......
	 orig commit -> cd8db057e93ddaacbec025b567490555d2bca280 ......
checking 0d1b459a0baf87c8cd5ec8d8e1acb7d15fb60b9f ......
	 orig commit -> 0d130367abf582e7cbf60075c2a7ab53817b1d14 ......
checking 8b2522eb44aed2b81d0958000a18f2ba8fb59ac3 ......
	 orig commit -> 8bf793883da213864efc50c274d2b38ec0ca58b2 ......
checking bf184ddd2180724aa0a2293415d051dc856e22ee ......
	 orig commit -> c586071d1dc8227a7182179b8e50ee92cc43f6d2 ......
checking f1d53c6d484336229f81ef10fb2ce069abe7c678 ......
	 orig commit -> 89a3987ab7a923c047c6dec008e60ad6f41fac22 ......
checking 9326a1374b13c2b50346c2868aabfedbd71f678d ......
	 orig commit -> 1c3098cdb05207e740715857df7b0998e372f527 ......
checking 01b3db29ba1edd79b9c3e7cd294739b70257d278 ......
	 orig commit -> 1a5c2d1de7d35f5eb9793266237903348989502b ......
checking f97c79e83f7e01ff4e310f0fc4cb41a992ccc5ed ......
	 orig commit -> 8a792e9afbce84a0fdaf213fe42bb97382487094 ......
checking 89642710fdb3f41e8c0e44901f695d2c48b8ffb7 ......
	 orig commit -> ff1293f67734da68e23fecb6ecdae7112b8c43f9 ......
checking a1f7b8ff496db893c6dfb6a1fdc2b23208e6de94 ......
	 orig commit -> fa2849e9649b5180ffc4cb3c3b005261c403093a ......
checking 297b8b01ec278ceadf55cc7f243797700a250a1c ......
	 orig commit -> 87cdfa9d60f4f40e6d71b04b10b36d9df3c89282 ......
checking d89f41c20f32cd276e716569b60a5eac0ac64ad9 ......
	 orig commit -> 6dcf45e514974a1ff10755015b5e06746a033e5f ......
checking effdf2b134d575f1da5c02a5c821610b153f5cab ......
	 orig commit -> 5757aca10146061befd168dab37fb0db1ccd8f73 ......
checking 5603b10236da437378f6529dba3654b9c280eb15 ......
	 orig commit -> 69b97cf6dbce7403845a28bbc75d57f5be7b12ac ......
checking 1c3ef07eb8ebf0bedb56aeda2186a7435cc2143a ......
	 orig commit -> 08d90c81b714482dceb5323d14f6617bcf55ee61 ......
checking 1e35a2adc0782ea6ea0571d7e2220a27697adfa5 ......
	 orig commit -> 3f00f4d8f083bc61005d0a1ef592b149f5c88bbd ......
checking b00cfc01e70f78bfbc4df8e579e20d53688b209d ......
	 orig commit -> 654450baf2afba86cf328e1849ccac61ec4630af ......
checking 6a501bddeba3406517e0ba3529d9a665709df4a1 ......
	 orig commit -> 941f8d55f6d613a460a5e080d25a38509f45eb75 ......
checking d4f97441cb888cf53b88f38ac0dc6bbe3a044910 ......
	 orig commit -> 14d37564fa3dc4e5d4c6828afcd26ac14e6796c5 ......
checking 11bf4a8e1d5a300b38ca4bbe1156716b0174f2da ......
	 orig commit -> 2e644be30fcc08c736f66b60f4898d274d4873ab ......
checking 771dacea92cd1b6107615aede467bdf62ef8907c ......
	 orig commit -> af913418261d6d3e7a29f06cf35f04610ead667c ......
