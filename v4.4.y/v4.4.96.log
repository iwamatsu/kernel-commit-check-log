Check from v4.4.96 to v4.4.97
Commit count: 40
checking c54d0707aa09a824413ebb4195c98bfb9b9e1fc0 ......
checking 2ed81e62b2ab5b4942bbeb533469d88663e84a9f ......
	 orig commit -> 07222e535831b916221dd2a48a3047ec7e45dc72 ......
checking 883706dcda17fdecce9c308d1743a90f9780f383 ......
	 orig commit -> 4e93b6481c87ea5afde944a32b4908357ec58992 ......
checking 298455f466cbdf41cff7be9ec8c1dd6a3c5ed6b0 ......
	 orig commit -> 6792eb0cf9310ec240b7e7c9bfa86dff4c758c68 ......
checking 4b7a35866b0ca4205ec5bacd2a5531caf19a463f ......
	 orig commit -> 2202134e48a3b50320aeb9e3dd1186833e9d7e66 ......
checking 45a012ace954efc08670fd6cd5698facbcdb119c ......
	 orig commit -> 7c47d2ca0feca767479329da23523ed798acb854 ......
checking 0e97077574c6e991274b37972d1c0241332610fb ......
	 orig commit -> 4742575cde1f3cee0ea6b41af42781672315b04b ......
checking 2d097e5f5c039618a49a37f7ee457bc4e5f48d1d ......
	 orig commit -> 4c43c27ddc461d8473cedd70f2549614641dfbc7 ......
checking efa8f1b7a65a9e603821b9f7952bd7f74127dcd3 ......
	 orig commit -> 22aadb91c0a0055935109c175f5446abfb130702 ......
checking 2d1d45396585549eaa6d01d9889a31c46237a96e ......
	 orig commit -> 77759771fb95420d23876cb104ab65c022613325 ......
checking 28a8fc6416ab191ce5ee34e709067dde9ec0e563 ......
	 orig commit -> a93151a72061e944a4915458b1b1d6d505c03bbf ......
checking d1f96c30ce2d33b3e138363417d4a2ba67b619b8 ......
	 orig commit -> 4ec57fb4edaec523f0f78a0449a3b063749ac58b ......
checking fff544c8cf6848c0ac1293d0f2e2b64629a64604 ......
	 orig commit -> 4fed1b125eb6252bde478665fc05d4819f774fa8 ......
checking 762d0762b9bb055962526c5fdd71a28d371c3df3 ......
	 orig commit -> 6c5da8031a3abfad259190d35f83d89568b72ee2 ......
checking 0806eaf13850334e477ea0589812b2c316e0b388 ......
	 orig commit -> 75fc5ae5cc53fff71041ecadeb3354a2b4c9fe42 ......
checking 3b7d9a95ccd38436295ab6598c526dac83504556 ......
	 orig commit -> 28ed5504ab4b211a4e589e648e5ebd1e0caa7a6a ......
checking dec5fcf11b454ebdac7bdf40775bc589dffe2980 ......
	 orig commit -> 71ccea095ea1d4efd004dab971be6d599e06fc3f ......
		 71ccea095ea1d4efd004dab971be6d599e06fc3f has problem. Fixes commit -> 2501c1bb054290679baad0ff7f4f07c714251f4c
commit 39c626c1f9e3c96b96d4d0dd089dcd653b2874bb
Author: Chris Brandt <chris.brandt@renesas.com>
Date:   Mon Mar 6 15:20:51 2017 -0500

    i2c: riic: fix restart condition
    
    
    [ Upstream commit 2501c1bb054290679baad0ff7f4f07c714251f4c ]
    
    While modifying the driver to use the STOP interrupt, the completion of the
    intermediate transfers need to wake the driver back up in order to initiate
    the next transfer (restart condition). Otherwise you get never ending
    interrupts and only the first transfer sent.
    
    Fixes: 71ccea095ea1 ("i2c: riic: correctly finish transfers")
    Reported-by: Simon Horman <horms@verge.net.au>
    Signed-off-by: Chris Brandt <chris.brandt@renesas.com>
    Tested-by: Simon Horman <horms+renesas@verge.net.au>
    Signed-off-by: Wolfram Sang <wsa@the-dreams.de>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 358008062202cb21054cb8130c1e5f184a3784c2 ......
	 orig commit -> 5469d7c3087ecaf760f54b447f11af6061b7c897 ......
checking 5624ea1610407db30f1adaf896f6d9c3cb66f072 ......
	 orig commit -> d9b22cf9f5466a057f2a4f1e642b469fa9d73117 ......
checking a76eb0e8655ef8cf58917549f667e8c9a9be1fc6 ......
	 orig commit -> 221c46d28957bd6e2158abc2179ce4a8c9ce07d3 ......
checking f9776d7ee5f50da18bebf5f81e4d8b1f9a13a592 ......
	 orig commit -> 1af468ebe45591651ec3bafc2e9ddc6fdef70ae0 ......
checking 8800aba5029239cdf209381e19b8d3a93fe4e765 ......
	 orig commit -> 7e9c40c63933a643908d686bd89dfc2315e8c70a ......
checking ed414aeb5291ae1e1733bb24d8801b0167a454f0 ......
	 orig commit -> 40d727a2defa176b78159d445bcf7afcc2ed9021 ......
checking a3e021504fcf75123eb05f10ce794d63e5a0c405 ......
	 orig commit -> e1c6ec26b853e9062f0b3daaf695c546d0702953 ......
checking ba28f16cfa2a410ba8aff60c2918417b91e05871 ......
	 orig commit -> 09bb6e93956ae5175b96905b723ec879c3ca0765 ......
checking b83c2880b34884c42bdd0ac28932d3e70743cc9b ......
	 orig commit -> a0cb2b5c390151837b08e5f7bca4a6ecddbcd39c ......
checking a48fce6623805e047ef15760dc0335a5c5b694a3 ......
	 orig commit -> 6575257c60e1a26a5319ccf2b5ce5b6449001017 ......
		 6575257c60e1a26a5319ccf2b5ce5b6449001017 has problem. Fixes commit -> a0cb2b5c390151837b08e5f7bca4a6ecddbcd39c
commit b83c2880b34884c42bdd0ac28932d3e70743cc9b
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Oct 27 20:35:31 2017 -0700

    Fix tracing sample code warning.
    
    commit a0cb2b5c390151837b08e5f7bca4a6ecddbcd39c upstream.
    
    Commit 6575257c60e1 ("tracing/samples: Fix creation and deletion of
    simple_thread_fn creation") introduced a new warning due to using a
    boolean as a counter.
    
    Just make it "int".
    
    Fixes: 6575257c60e1 ("tracing/samples: Fix creation and deletion of simple_thread_fn creation")
    Cc: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking ded34f972348b0f252256bee161839c1aa5d8ae4 ......
	 orig commit -> 65e93108891e571f177c202add9288eda9ac4100 ......
checking 031b02bc16aeeb34c8038026cbbca1e6430c9d75 ......
	 orig commit -> 4a630fadbb29d9efaedb525f1a8f7449ad107641 ......
		 4a630fadbb29d9efaedb525f1a8f7449ad107641 has problem. Fixes commit -> 65e93108891e571f177c202add9288eda9ac4100
commit ded34f972348b0f252256bee161839c1aa5d8ae4
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Fri Jun 30 10:59:15 2017 +0300

    drm/msm: fix an integer overflow test
    
    commit 65e93108891e571f177c202add9288eda9ac4100 upstream.
    
    We recently added an integer overflow check but it needs an additional
    tweak to work properly on 32 bit systems.
    
    The problem is that we're doing the right hand side of the assignment as
    type unsigned long so the max it will have an integer overflow instead
    of being larger than SIZE_MAX.  That means the "sz > SIZE_MAX" condition
    is never true even on 32 bit systems.  We need to first cast it to u64
    and then do the math.
    
    Fixes: 4a630fadbb29 ("drm/msm: Fix potential buffer overflow issue")
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Acked-by: Jordan Crouse <jcrouse@codeaurora.org>
    Signed-off-by: Rob Clark <robdclark@gmail.com>
    Cc: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 6e6eba5ba14579f1fede964d189a7153444fb3b6 ......
	 orig commit -> b581c01fff646b5075d65359c8667de9c667da9e ......
checking fa312b481b2b4e1eeb35aa9c436df1d39f1c8333 ......
	 orig commit -> 105ddc93f06ebe3e553f58563d11ed63dbcd59f0 ......
checking cc7d9933400f9b7f16e4d36cb6974395c3116695 ......
	 orig commit -> 1cce91dfc8f7990ca3aea896bfb148f240b12860 ......
checking 4e351b8dd8b773669c3f0c5e50e4e61031f9e43e ......
	 orig commit -> cda80a82ac3e89309706c027ada6ab232be1d640 ......
checking 581ac5f431c9b01a820ee10581b042328d870230 ......
	 orig commit -> 7a7003b1da010d2b0d1dc8bf21c10f5c73b389f1 ......
checking 97d64b7f2fdf945c40c5dc2004defec5f260cb6d ......
	 orig commit -> 1e6f4fc06f6411adf98bbbe7fcd79442cd2b2a75 ......
checking 618b930317fbea5561f9e5b07b26468d595ec110 ......
	 orig commit -> 2eb9eabf1e868fda15808954fb29b0f105ed65f1 ......
checking 97c5668c972476bde719276ab3e836085367f8b8 ......
	 orig commit -> 3239b6f29bdfb4b0a2ba59df995fc9e6f4df7f1f ......
checking d304c9169b3879e7ea8a1eb48001c8f40f7e74ad ......
	 orig commit -> f74bc7c6679200a4a83156bb89cbf6c229fe8ec0 ......
checking 8142e9516d5dcb549b681491ca9af54407f4894c ......
	 orig commit -> 1f20f9ff57ca23b9f5502fca85ce3977e8496cb1 ......
		 1f20f9ff57ca23b9f5502fca85ce3977e8496cb1 has problem. Fixes commit -> 3510c7aa069aa83a2de6dab2b41401a198317bdc
commit 1e54b5f72115e7354a8f20205c5baca3e2cbd56c
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Nov 6 20:16:50 2017 +0100

    ALSA: seq: Avoid invalid lockdep class warning
    
    commit 3510c7aa069aa83a2de6dab2b41401a198317bdc upstream.
    
    The recent fix for adding rwsem nesting annotation was using the given
    "hop" argument as the lock subclass key.  Although the idea itself
    works, it may trigger a kernel warning like:
      BUG: looking up invalid subclass: 8
      ....
    since the lockdep has a smaller number of subclasses (8) than we
    currently allow for the hops there (10).
    
    The current definition is merely a sanity check for avoiding the too
    deep delivery paths, and the 8 hops are already enough.  So, as a
    quick fix, just follow the max hops as same as the max lockdep
    subclasses.
    
    Fixes: 1f20f9ff57ca ("ALSA: seq: Fix nested rwsem annotation for lockdep splat")
    Reported-by: syzbot <syzkaller@googlegroups.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 70358782743fbc2b2fa26b4e7370b359350cfba3 ......
	 orig commit -> 79fb0518fec8c8b4ea7f1729f54f293724b3dbb0 ......
