Check from v4.4.6 to v4.4.7
Commit count: 210
checking b40108b826ed9e1c558f73b9dbabb8d80ded268b ......
checking 4b3d06d989b9535bb04f9339a862d06e3311522a ......
	 orig commit -> e17dc65328057c00db7e1bfea249c8771a78b30b ......
checking a54af124cd73a1429ad5a9d16ab878c71e367bf8 ......
	 orig commit -> e72daf3f4d764c47fb71c9bdc7f9c54a503825b1 ......
checking 886629ebb2acaeafc3102140c1c8b4ad52792484 ......
	 orig commit -> c3d266c8a9838cc141b69548bc3b1b18808ae8c4 ......
checking d2b56a0758ead5987db9465e120643ede759f3ad ......
	 orig commit -> 8077eca079a212f26419c57226f28696b7100683 ......
		 8077eca079a212f26419c57226f28696b7100683 has problem. Fixes commit -> fd583ad1563bec5f00140e1f2444adbcd331caad
checking 2a8225ef46968444fb1c4c632ec28e4cc2be633f ......
	 orig commit -> e9532e69b8d1d1284e8ecf8d2586de34aec61244 ......
checking 9835db39bb8151cf4471a792a878318c8d07bf4d ......
	 orig commit -> ba08311647892cc7912de74525fd78416caf544a ......
checking 4cd4ebbdf533ed316ce377b66ae508cc6d1d0162 ......
	 orig commit -> 276142730c39c9839465a36a90e5674a8c34e839 ......
checking 79d05ce04bfbe9885936ed985c2dd53d8500f617 ......
	 orig commit -> d70e28f57e14a481977436695b0c9ba165472431 ......
checking ded1db97aca15db72850c78ad222625386af4ea4 ......
	 orig commit -> 5e64c29e98bfbba1b527b0a164f9493f3db9e8cb ......
checking 5dc7e939b6b8ca3d18d5814504954014578703e2 ......
	 orig commit -> d9dddbf556674bf125ecd925b24e43a5cf2a568a ......
checking eae2b56828230fe326167d67a0ec6e777e69afee ......
	 orig commit -> be12b299a83fc807bbaccd2bcb8ec50cbb0cb55c ......
checking e4b0e673428391a5ce5827d594d9809ad57fba9e ......
	 orig commit -> ac7cf246dfdbec3d8fed296c7bf30e16f5099dac ......
		 ac7cf246dfdbec3d8fed296c7bf30e16f5099dac has problem. Fixes commit -> e6f0c6e6170fec175fe676495f29029aecdf486c
commit f1ce664e687d3d0f83b9e0a4014b96353a641c93
Author: Joseph Qi <joseph.qi@huawei.com>
Date:   Mon Sep 19 14:43:55 2016 -0700

    ocfs2/dlm: fix race between convert and migration
    
    commit e6f0c6e6170fec175fe676495f29029aecdf486c upstream.
    
    Commit ac7cf246dfdb ("ocfs2/dlm: fix race between convert and recovery")
    checks if lockres master has changed to identify whether new master has
    finished recovery or not.  This will introduce a race that right after
    old master does umount ( means master will change), a new convert
    request comes.
    
    In this case, it will reset lockres state to DLM_RECOVERING and then
    retry convert, and then fail with lockres->l_action being set to
    OCFS2_AST_INVALID, which will cause inconsistent lock level between
    ocfs2 and dlm, and then finally BUG.
    
    Since dlm recovery will clear lock->convert_pending in
    dlm_move_lockres_to_recovery_list, we can use it to correctly identify
    the race case between convert and recovery.  So fix it.
    
    Fixes: ac7cf246dfdb ("ocfs2/dlm: fix race between convert and recovery")
    Link: http://lkml.kernel.org/r/57CE1569.8010704@huawei.com
    Signed-off-by: Joseph Qi <joseph.qi@huawei.com>
    Signed-off-by: Jun Piao <piaojun@huawei.com>
    Cc: Mark Fasheh <mfasheh@suse.de>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking a1d0a23831ccde9dbd5279a5d45790a96f18ad32 ......
	 orig commit -> 950336ba3e4a1ffd2ca60d29f6ef386dd2c7351d ......
checking af18c4ca4b1728e2149844656bbf1aa8d7382682 ......
	 orig commit -> a0ad220c96692eda76b2e3fd7279f3dcd1d8a8ff ......
checking ed12031e713305ef7836d5672ae2ab4e1446ce08 ......
	 orig commit -> 82be788c96ed5978d3cb4a00079e26b981a3df3f ......
checking 842ec116c7070c8bfc785b609acb19fb29a59cb0 ......
	 orig commit -> aaf2559332ba272671bb870464a99b909b29a3a1 ......
checking d78ddcfbe7ab8c5f4ff0b8f20b2bbda710fc0e91 ......
	 orig commit -> 614a4e3773148a31f58dc174bbf578ceb63510c2 ......
checking b05e5a587ddc11255de76657e6b4b0e960783cc3 ......
	 orig commit -> fbda4b38fa3995aa0777fe9cbbdcb223c6292083 ......
checking fe81b4d996fbf36cf4e84869b6c5f4394f5e5af9 ......
	 orig commit -> b02acd4e62602a6ab307da84388a16bf60106c48 ......
checking d287698c43d7915e422d298985891eb609b511b8 ......
	 orig commit -> ae3fc8ea08e405682f1fa959f94b6e4126afbc1b ......
checking 56fb92d684cc51baf3a421a3ac19af441a52f413 ......
	 orig commit -> 2f6fc056e899bd0144a08da5cacaecbe8997cd74 ......
checking 9ef1ecc409b1e1113bf5e4b6bdd47137e5f9cebb ......
	 orig commit -> 4aed9c46afb80164401143aa0fdcfe3798baa9d5 ......
checking 48f447bcebd889aab7193659841de7962bf52a56 ......
	 orig commit -> 6d1fba0c2cc7efe42fd761ecbba833ed0ea7b07e ......
checking 60f0f01da74b14a0b27becf30a70155a8db23445 ......
	 orig commit -> f81bf458208ef6d12b2fc08091204e3859dcdba4 ......
checking b0d31bbebb1f293ef196c4c84e682b58b0e9cf7b ......
	 orig commit -> aea92980601f7ddfcb3c54caa53a43726314fe46 ......
checking a91eb042e1bacdc61a2ca5cb184aa99c24ed5cdb ......
	 orig commit -> b89a7c25462b164db280abc3b05d4d9d888d40e9 ......
checking 9b3e8070857db21b9d3973387cd9aae5944d71ad ......
	 orig commit -> 5e47f1985d7107331c3f64fb3ec83d66fd73577e ......
checking b3822a1078c87a6f74270741bc4cc660e4f11bae ......
	 orig commit -> 773b3966dd3cdaeb68e7f2edfe5656abac1dc411 ......
checking 5f9403e710e03098b06c321aee6b31621efca5b1 ......
	 orig commit -> e8b63288b37dbb8457b510c9d96f6006da4653f6 ......
checking afb1f06758abb5cfa01a54298b57e0cce3bf3273 ......
	 orig commit -> fd0c0740fac17a014704ef89d8c8b1768711ca59 ......
checking c7e33d74fbd86e518c6f98b9c6f35badc1d3719d ......
	 orig commit -> 0f28d98463498c61c61a38aacbf9f69e92e85e9d ......
checking 20c736ddb2819e071dcefa087b5d33e19b462e4e ......
	 orig commit -> c6d5fe2ca8286f35a79f7345c9378c39d48a1527 ......
checking 451e4ff10d95a1390c49afcce5d5c339f97b0048 ......
	 orig commit -> 535ebd428aeb07c3327947281306f2943f2c9faa ......
checking 86beab2febf17b3384f9a1cd333ae7c06a31d0a0 ......
	 orig commit -> 995136247915c5cee633d55ba23f6eebf67aa567 ......
checking e113935b8fca965d685084c347864ffb18e32f62 ......
	 orig commit -> 7f05538af71c7d30b5fc821cbe9f318edc645961 ......
		 7f05538af71c7d30b5fc821cbe9f318edc645961 has problem. Fixes commit -> 02265cd60335a2c1417abae4192611e1fc05a6e5
commit 68b13e229be9368faa34ac226d647bdd7a577e31
Author: Haibo Chen <haibo.chen@nxp.com>
Date:   Mon Oct 17 10:18:37 2016 +0200

    mmc: sdhci: cast unsigned int to unsigned long long to avoid unexpeted error
    
    commit 02265cd60335a2c1417abae4192611e1fc05a6e5 upstream.
    
    Potentially overflowing expression 1000000 * data->timeout_clks with
    type unsigned int is evaluated using 32-bit arithmetic, and then used
    in a context that expects an expression of type unsigned long long.
    
    To avoid overflow, cast 1000000U to type unsigned long long.
    Special thanks to Coverity.
    
    Fixes: 7f05538af71c ("mmc: sdhci: fix data timeout (part 2)")
    Signed-off-by: Haibo Chen <haibo.chen@nxp.com>
    Acked-by: Adrian Hunter <adrian.hunter@intel.com>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking cd3c71fbb75025f89f64bdd87123d7c247b69a96 ......
	 orig commit -> fafcfda9e78cae8796d1799f14e6457790797555 ......
checking 0a060276f0f429bb0402e7fa6581d472934300fb ......
	 orig commit -> bcdc9f260bdce09913db1464be9817170d51044a ......
checking d69bc6d28c9662bde7230d88e405c8694d05d94c ......
	 orig commit -> 83c742c344c08c2bbe338d45c6ec63110e9d5e3d ......
checking 65b55d179b275cec668b2fffa23f884b55575726 ......
	 orig commit -> 4db9675d927a71faa66e5ab128d2390d6329750b ......
checking 507fafe0e83fcc011bcb23af37179b7d412624b3 ......
	 orig commit -> 968ce1b1f45a7d76b5471b19bd035dbecc72f32d ......
checking f24fe0da244641bc4a19cff1cb7c7cb3dd50b88a ......
	 orig commit -> c8b08ca558c0067bc9e15ce3f1e70af260410bb2 ......
checking a42c9e4f1b3751743dd58773d45d2eb3ee4ca5ac ......
	 orig commit -> 42f9d3c6888bceef6dc7ba72c77acf47347dcf05 ......
checking 0a10eaa1a91a738523ce2f9e55cd9f6f655e31f1 ......
	 orig commit -> 1b669e713f277a4d4b3cec84e13d16544ac8286d ......
checking 2bfb8435386c44f89753b0417303110ff596dba9 ......
	 orig commit -> f75d48644c56a31731d17fa693c8175328957e1d ......
checking 3dba3f672dfd0d5d961a294dac5bee18759cda6a ......
	 orig commit -> 3debb0a9ddb16526de8b456491b7db60114f7b5e ......
		 3debb0a9ddb16526de8b456491b7db60114f7b5e has problem. Fixes commit -> 70c8217acd4383e069fe1898bbad36ea4fcdbdcc
commit bc64a83932dc9f5cebcbac38cd8a2dd5aa57db51
Author: Steven Rostedt (Red Hat) <rostedt@goodmis.org>
Date:   Fri Jun 17 16:10:42 2016 -0400

    tracing: Handle NULL formats in hold_module_trace_bprintk_format()
    
    commit 70c8217acd4383e069fe1898bbad36ea4fcdbdcc upstream.
    
    If a task uses a non constant string for the format parameter in
    trace_printk(), then the trace_printk_fmt variable is set to NULL. This
    variable is then saved in the __trace_printk_fmt section.
    
    The function hold_module_trace_bprintk_format() checks to see if duplicate
    formats are used by modules, and reuses them if so (saves them to the list
    if it is new). But this function calls lookup_format() that does a strcmp()
    to the value (which is now NULL) and can cause a kernel oops.
    
    This wasn't an issue till 3debb0a9ddb ("tracing: Fix trace_printk() to print
    when not using bprintk()") which added "__used" to the trace_printk_fmt
    variable, and before that, the kernel simply optimized it out (no NULL value
    was saved).
    
    The fix is simply to handle the NULL pointer in lookup_format() and have the
    caller ignore the value if it was NULL.
    
    Link: http://lkml.kernel.org/r/1464769870-18344-1-git-send-email-zhengjun.xing@intel.com
    
    Reported-by: xingzhen <zhengjun.xing@intel.com>
    Acked-by: Namhyung Kim <namhyung@kernel.org>
    Fixes: 3debb0a9ddb ("tracing: Fix trace_printk() to print when not using bprintk()")
    Signed-off-by: Steven Rostedt <rostedt@goodmis.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking aab3ba82f8445abe99f33e743e7316d0d55fee7b ......
	 orig commit -> a29054d9478d0435ab01b7544da4f674ab13f533 ......
checking aa60f652eeebb8345ed8c543d1a8d6b71f902de3 ......
	 orig commit -> cb86e05390debcc084cfdb0a71ed4c5dbbec517d ......
checking bcda0fd9a8e18ea72f32542d9a1c4b010f89c5d2 ......
	 orig commit -> 08bc327629cbd63bb2f66677e4b33b643695097c ......
		 08bc327629cbd63bb2f66677e4b33b643695097c has problem. Fixes commit -> 3e31a490e01a6e67cbe9f6e1df2f3ff0fbf48972
commit cd6a157b38b8b9303a35262ed729745a3c242193
Author: Feras Daoud <ferasda@mellanox.com>
Date:   Sun Mar 19 11:18:55 2017 +0200

    IB/ipoib: Fix deadlock between ipoib_stop and mcast join flow
    
    
    [ Upstream commit 3e31a490e01a6e67cbe9f6e1df2f3ff0fbf48972 ]
    
    Before calling ipoib_stop, rtnl_lock should be taken, then
    the flow clears the IPOIB_FLAG_ADMIN_UP and IPOIB_FLAG_OPER_UP
    flags, and waits for mcast completion if IPOIB_MCAST_FLAG_BUSY
    is set.
    
    On the other hand, the flow of multicast join task initializes
    a mcast completion, sets the IPOIB_MCAST_FLAG_BUSY and calls
    ipoib_mcast_join. If IPOIB_FLAG_OPER_UP flag is not set, this
    call returns EINVAL without setting the mcast completion and
    leads to a deadlock.
    
        ipoib_stop                          |
            |                               |
        clear_bit(IPOIB_FLAG_ADMIN_UP)      |
            |                               |
        Context Switch                      |
            |                       ipoib_mcast_join_task
            |                               |
            |                       spin_lock_irq(lock)
            |                               |
            |                       init_completion(mcast)
            |                               |
            |                       set_bit(IPOIB_MCAST_FLAG_BUSY)
            |                               |
            |                       Context Switch
            |                               |
        clear_bit(IPOIB_FLAG_OPER_UP)       |
            |                               |
        spin_lock_irqsave(lock)             |
            |                               |
        Context Switch                      |
            |                       ipoib_mcast_join
            |                       return (-EINVAL)
            |                               |
            |                       spin_unlock_irq(lock)
            |                               |
            |                       Context Switch
            |                               |
        ipoib_mcast_dev_flush               |
        wait_for_completion(mcast)          |
    
    ipoib_stop will wait for mcast completion for ever, and will
    not release the rtnl_lock. As a result panic occurs with the
    following trace:
    
        [13441.639268] Call Trace:
        [13441.640150]  [<ffffffff8168b579>] schedule+0x29/0x70
        [13441.641038]  [<ffffffff81688fc9>] schedule_timeout+0x239/0x2d0
        [13441.641914]  [<ffffffff810bc017>] ? complete+0x47/0x50
        [13441.642765]  [<ffffffff810a690d>] ? flush_workqueue_prep_pwqs+0x16d/0x200
        [13441.643580]  [<ffffffff8168b956>] wait_for_completion+0x116/0x170
        [13441.644434]  [<ffffffff810c4ec0>] ? wake_up_state+0x20/0x20
        [13441.645293]  [<ffffffffa05af170>] ipoib_mcast_dev_flush+0x150/0x190 [ib_ipoib]
        [13441.646159]  [<ffffffffa05ac967>] ipoib_ib_dev_down+0x37/0x60 [ib_ipoib]
        [13441.647013]  [<ffffffffa05a4805>] ipoib_stop+0x75/0x150 [ib_ipoib]
    
    Fixes: 08bc327629cb ("IB/ipoib: fix for rare multicast join race condition")
    Signed-off-by: Feras Daoud <ferasda@mellanox.com>
    Signed-off-by: Leon Romanovsky <leon@kernel.org>
    Signed-off-by: Doug Ledford <dledford@redhat.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 044ebd1d5a691b1638ae622994d02f74f6e43591 ......
	 orig commit -> 16a8a49be1b878ef6dd5d1663d456e254e54ae3d ......
checking 5b5abb9b85e97630e07b2b6d33f4739a2eb4e872 ......
	 orig commit -> bedf2a65c1aa8fb29ba8527fd00c0f68ec1f55f1 ......
checking a4ecd0324b3cdea3abc4b0f5d7e2829530400317 ......
	 orig commit -> 459ee1c3fd097ab56ababd8ff4bb7ef6a792de33 ......
checking 791b5b0d2d01542a87af4b5f8fb2504ce2d5b352 ......
	 orig commit -> e64c952efb8e0c15ae82cec8e455ab4910690ef1 ......
checking 0ae6554c2bbfa89218cf3a6e8d8d10581334f551 ......
	 orig commit -> 905e36ae172c83a30894a3adefab7d4f850fcf54 ......
checking 6677a2ab036f28134b60ad4ed6fd2e72db579b8a ......
	 orig commit -> 21b81716c6bff24cda52dc75588455f879ddbfe9 ......
checking a918d2bcea6aab6e671bfb0901cbecc3cf68fca1 ......
	 orig commit -> d63c7dd5bcb9441af0526d370c43a65ca2c980d9 ......
		 d63c7dd5bcb9441af0526d370c43a65ca2c980d9 has problem. Fixes commit -> 21b81716c6bff24cda52dc75588455f879ddbfe9
commit 6677a2ab036f28134b60ad4ed6fd2e72db579b8a
Author: Gabriel Krisman Bertazi <krisman@linux.vnet.ibm.com>
Date:   Thu Feb 25 13:54:20 2016 -0300

    ipr: Fix regression when loading firmware
    
    commit 21b81716c6bff24cda52dc75588455f879ddbfe9 upstream.
    
    Commit d63c7dd5bcb9 ("ipr: Fix out-of-bounds null overwrite") removed
    the end of line handling when storing the update_fw sysfs attribute.
    This changed the userpace API because it started refusing writes
    terminated by a line feed, which broke the update tools we already have.
    
    This patch re-adds that handling, so both a write terminated by a line
    feed or not can make it through with the update.
    
    Fixes: d63c7dd5bcb9 ("ipr: Fix out-of-bounds null overwrite")
    Signed-off-by: Gabriel Krisman Bertazi <krisman@linux.vnet.ibm.com>
    Cc: Insu Yun <wuninsu@gmail.com>
    Acked-by: Brian King <brking@linux.vnet.ibm.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Cc: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 91b95d59aa38ca5a1b9835c108ae1aed533e5e76 ......
	 orig commit -> 36915976eca58f2eefa040ba8f9939672564df61 ......
checking 74b23f79f16802d01315db8b028518ef0abd7bc8 ......
	 orig commit -> 378c6520e7d29280f400ef2ceaf155c86f05a71a ......
checking 37bd8c883ea5f3b90ae1788a1f76c93cb0dbeba5 ......
	 orig commit -> 744742d692e37ad5c20630e57d526c8f2e2fe3c9 ......
		 744742d692e37ad5c20630e57d526c8f2e2fe3c9 has problem. Fixes commit -> ebacb81273599555a7a19f7754a1451206a5fc4f
checking 32b9807433507058fce25092a0d11abac494d00d ......
	 orig commit -> 7cabc61e01a0a8b663bd2b4c982aa53048218734 ......
checking 2775a60447ae12350711b443be1083117b6f13b8 ......
	 orig commit -> fafcde3ac1a418688a734365203a12483b83907a ......
checking d5e30f2b934bf9964e1bf5fb1c1bd4d1bc865b5d ......
	 orig commit -> 550da24f8d62fe81f3c13e3ec27602d6e44d43dc ......
checking b82ed7dc00f3472d4a7bca472e05ed9744881bc8 ......
	 orig commit -> 23ddba80ebe836476bb2fa1f5ef305dd1c63dc0b ......
checking ad072f606586a70eab8fd168465a6df4c695a9e9 ......
	 orig commit -> 6ab2a4b806ae21b6c3e47c5ff1285ec06d505325 ......
checking 8568767fe1d63fbbdeacf2f69da6f84ad277d4f7 ......
	 orig commit -> 27a353c026a879a1001e5eac4bda75b16262c44a ......
checking fad8b6fc040bf1d9807ee0e3358275d06b14cf96 ......
	 orig commit -> e7597e69dec59b65c5525db1626b9d34afdfa678 ......
checking 2b9eb2b2234c44c509384549a023c3f3bde5c59a ......
	 orig commit -> ccfc7bf1f09d6190ef86693ddc761d5fe3fa47cb ......
checking b34291f71d0fb3d09728fd43d6da350ff6a179d6 ......
	 orig commit -> 2e83b79b2d6c78bf1b4aa227938a214dcbddc83f ......
checking 6b3ae95f03d9ff3877549e601c88f7650e3ada29 ......
	 orig commit -> ab73ef46398e2c0159f3a71de834586422d2a44a ......
checking f3c5b82c36e98876ab507d3bc062100eecaba158 ......
	 orig commit -> 2a41b6dc28dc71c1a3f1622612a26edc58f7561e ......
checking f640dae8943ecbcc9ee6710aec89bba594512336 ......
	 orig commit -> f778cc65717687a3d3f26dd21bef62cd059f1b8b ......
checking 1f841628aca5d4133ad2aba0e2f279c8ab65b9d8 ......
	 orig commit -> 7de7ac785ae18a2cdc78d7560f48e3213d9ea0ab ......
checking cd8af682db6a51a5130f48b07d211c808f321997 ......
	 orig commit -> a67cc9aa2dfc6e66addf240bbd79e16e01565e81 ......
checking f2e1e0a0afd3549c87c97ec2b3363b7325c6e3d5 ......
	 orig commit -> 362014c8d9d51d504c167c44ac280169457732be ......
checking ab14444f6f3dd3cd0a47ad4bcc35fed256d1e9a7 ......
	 orig commit -> d6785d9152147596f60234157da2b02540c3e60f ......
checking 994f9db39113a268394fcba06537cabfbb40cb2b ......
	 orig commit -> 5f8d498d4364f544fee17125787a47553db02afa ......
checking da191fac4bfa7ba6372e10365591a2759a3298ea ......
	 orig commit -> e53b50c0cbe392c946807abf7d07615a3c588642 ......
checking 9b4a50fae597168ed1eb10e0ca60e73ac649963f ......
	 orig commit -> 928b6519afeb2a5e2dc61154380b545ed66c476a ......
checking 36591ef19ab6e82cfb3580880ba1fefd843aa8ed ......
	 orig commit -> 2b021cbf3cb6208f0d40fd2f1869f237934340ed ......
checking f0de3cec40ee0f365751e11a477e47dd5568c34e ......
	 orig commit -> 6a0e78072c2ae7b20b14e0249d8108441ea928d2 ......
checking 7435429a8a7f3a83f760a1f72958ee53db408e27 ......
	 orig commit -> 28c971d82fb58ef7cba22e5308be6d2d2590473d ......
checking 6a4cdbf56201f983f8177e3845fcb47d25d4fcb0 ......
	 orig commit -> 10e7ac22cdd4d211cef99afcb9371b70cb175be6 ......
checking 5f4a82d5e3492c26fb0263ca7f007180612e8b54 ......
	 orig commit -> a1ee1932aa6bea0bb074f5e3ced112664e4637ed ......
checking ee52f62c636c0c151ea92ffbf5ef940be51b0d22 ......
	 orig commit -> b0f84ac352762ed02d7ea9f284942a8cab7f9077 ......
checking 0ccab5b139971a2a3f48df24d1ee8be2dbf84042 ......
	 orig commit -> b6e6edcfa40561e9c8abe5eecf1c96f8e5fd9c6f ......
checking 8b42fc47e1b64cb661fed8d96f874effbdf1d7f1 ......
	 orig commit -> 588083bb37a3cea8533c392370a554417c8f29cb ......
checking ca75edc44088cc40792161fd2ca650c5cfe8ee9f ......
	 orig commit -> f8b11260a445169989d01df75d35af0f56178f95 ......
checking b58e781068d9a5fd6b0ee77f595c3dbaa0d2b7aa ......
	 orig commit -> 07cc6ef8edc47f8b4fc1e276d31127a0a5863d4d ......
checking 32bb1185093c67c2280e440685ebc6b23fd47743 ......
	 orig commit -> 9b299728ed777428b3908ac72ace5f8f84b97789 ......
checking 84512e476ce92fbdb60d4687e3ea230dbf0655c8 ......
	 orig commit -> 51093254bf879bc9ce96590400a87897c7498463 ......
checking 1a8f4a490871df59d1f3cfe28fae4458d2cbef7f ......
	 orig commit -> 5e4298be45e83ecdffaabb370eea9396889b07f1 ......
checking 93272beafa9d9a5933590c90d2fa525e86e67032 ......
	 orig commit -> c0a2ad9b50dd80eeccd73d9ff962234590d5ec93 ......
checking d2a70d6055c5da54d3f45805a19c37a693acd07f ......
	 orig commit -> 50fe6dd10069e7c062e27f29606f6e91ea979399 ......
checking 1dac534145d0f84b3fcadf5b69d8de3ad147f471 ......
	 orig commit -> 1f7c6658962fa1260c1658d681bd6bb0c746b99a ......
checking db894649e34abceade484c35e5acd346e74e916d ......
	 orig commit -> 6ef2f68fa38bf415830f67903d87180d933e0f47 ......
checking ee2a37ab39b013589647ced2e6526c7358cb2111 ......
	 orig commit -> 4f8e4f3537cafc4de128e6bfdf83baa78bc60eb1 ......
checking 5fae159b7d25987747919ccb73a8813da81abd97 ......
	 orig commit -> 4061db03dd71d195b9973ee466f6ed32f6a3fc16 ......
checking ae8168541087b26f946f31555e977c146aba637a ......
	 orig commit -> 0ab1ace856205d10cbc1924b2d931c01ffd216a6 ......
checking bbb4bee779b3301a3ab7924f85f38b96bdf1fd4a ......
	 orig commit -> 56dc66ff1c6d71f9a38c4a7c000b72b921fe4c89 ......
checking 2c46344a83ea7265d391e978711c07fc6380d8d7 ......
	 orig commit -> 008e56d200225321371748d95908e6222436f06d ......
checking d45d26e491c01c98934a7d941343df8477cad38f ......
	 orig commit -> abb0ccd185c9e31847709b86192e6c815d1f57ad ......
checking f75d029f84a7c85a0d0875506c823ba50b10b3a1 ......
	 orig commit -> aae4a033868c496adae86fc6f9c3e0c405bbf360 ......
checking e2e6e22464ac6fb53e60d74ddf02fb829959ab9c ......
	 orig commit -> 51c6570eb922146470c2fe660c34585414679bd6 ......
checking e241a8dab98aff4d79d36e8cc71c4487c909bdd5 ......
	 orig commit -> 59cf70e236c96594d9f1e065755d8fce9df5356b ......
checking 3d58a02e4fdad9cb7ce0799363eaa54c012fcd33 ......
	 orig commit -> 5b7e0a8ac85e2dfd83830dc9e0b3554d153a37e3 ......
checking 828e9f2e8aa20881e1fc46152590d09520161ef8 ......
	 orig commit -> e35b94738a2f7caa12017f69ef385cb6b8028965 ......
checking 1b899eb4833d3394f37272d38b4b1a26eac30feb ......
	 orig commit -> cfc05bd31384c4898bf2437a4de5557f3cf9803a ......
checking ef87aef51d0de4220bf9c4de34de89f2716b3398 ......
	 orig commit -> d8a18d2d8f5de55666c6011ed175939d22c8e3d8 ......
checking 8c1fa99764bd76be5707447b40aa0806acfc61bf ......
	 orig commit -> 7df5ab8774aa383c6d2bff00688d004585d96dfd ......
checking 6aed423a0e54306003228d3b68196c542af6cd59 ......
	 orig commit -> 74dc385cb450089b28c28be2c8a0baca296b95f9 ......
checking 3c26bcd82af503a92ae4e10223707f2b51ec3cd9 ......
	 orig commit -> 5c915c68763889f0183a1cc61c84bb228b60124a ......
checking 454b8cbea62141cdaee224a118678c890c7aa186 ......
	 orig commit -> b339a72e04a62f0b1882c43492fc712f1176b3e6 ......
checking 4fe401d63051c524e45d2a1c57bf1e34ecc19a7b ......
	 orig commit -> 3e71da19f9dc22e39a755d6ae9678661abb66adc ......
checking fc0768092cebd0b70a08f5423263669ea3849ef9 ......
	 orig commit -> 0b41ce991052022c030fd868e03877700220b090 ......
checking 456db805f77c45611caa217996dcb93f24afb2e5 ......
	 orig commit -> 401879c57f01cbf2da204ad2e8db910525c6dbea ......
checking 583aacb1f69b733e6808625fbc44da8f499c9bfb ......
	 orig commit -> f33798deecbd59a2955f40ac0ae2bc7dff54c069 ......
checking 62fe263236e09a5b4ec64bc71a42d37caf943eca ......
	 orig commit -> bd3a3cd6c27b117fb9a43a38c8072c95332beecc ......
checking 263b0af7cc419a6f5254269a30e9784b5476f433 ......
	 orig commit -> ccbc2a9e7878ff09bcaed4893c2a2d3adbb797e2 ......
checking a5e8deb7f07fb8f7d34c908dea303ba948752916 ......
	 orig commit -> 1fd24a4702d2af0ea4d5845126cf57d4d1796216 ......
checking b2fb06096e2538e131bd9551eb5a70ba42c1b3f7 ......
	 orig commit -> 4392bf333388cabdad5afe5b1500002d7b9c318e ......
checking cca86656508d12f998e11ee7f71b8a40864af3b4 ......
	 orig commit -> 45c5c6828214605eaefa6755c47bd1a2c7eb203e ......
checking 773332f0e2b1b530079c812975833c8c2d59e4d7 ......
	 orig commit -> 3b654288b196ceaa156029d9457ccbded0489b98 ......
checking 72c49c697bb63054c7c3a26b90d15fb3a95e30eb ......
	 orig commit -> 5d74325a2201376a95520a4a38a1ce2c65761c49 ......
checking 158c0029a8861591d42c6ad144d09cbd2c2dfe81 ......
	 orig commit -> 8e0ee3c9faed7ca68807ea45141775856c438ac0 ......
		 8e0ee3c9faed7ca68807ea45141775856c438ac0 has problem. Fixes commit -> 4f3b193dee4423d8c89c9a3e8e05f9197ea459a4
commit c447410b6dfacf132865e79af7bc26fa977f24e5
Author: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
Date:   Sat Feb 13 11:58:16 2016 +0200

    tpm: fix: return rc when devm_add_action() fails
    
    [ Upstream commit 4f3b193dee4423d8c89c9a3e8e05f9197ea459a4 ]
    
    Call put_device() and return error code if devm_add_action() fails.
    
    Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@linux.intel.com>
    Reported-by: Jason Gunthorpe <jgunthorpe@obsidianresearch.com>
    Fixes: 8e0ee3c9faed ("tpm: fix the cleanup of struct tpm_chip")
    Signed-off-by: Sasha Levin <sashal@kernel.org>
checking 062c8a4ff40fedf82c1ec177a63b06c41801c2e9 ......
	 orig commit -> 186d124f07da193a8f47e491af85cb695d415f2f ......
checking 160f50a3f40f3aa32ec7c7c9d18b3ffb5bdf12e2 ......
	 orig commit -> 99cda8cb4639de81cde785b5bab9bc52e916e594 ......
checking 3e69549b48e39e72c7aad093e0c5e29ab547a9f1 ......
	 orig commit -> 72c91ce8523ae5828fe5e4417ae0aaab53707a08 ......
checking fa0ae4f223ab29ab853959b08449b5c08c9cb7a0 ......
	 orig commit -> 15c13dfcad883a1e76b714480fb27be96247fd82 ......
checking 499f9ff872f8792d3318b0bd5e6533bfe48abf0d ......
	 orig commit -> ac4cbedfdf55455b4c447f17f0fa027dbf02b2a6 ......
checking f08fc4eed81e135c687ac246531a6dbbd236eb14 ......
	 orig commit -> dfe97ad30e8c038261663a18b9e04b8b5bc07bea ......
checking 75efb5fe5ce23f72ef8641f593b5829152c6203c ......
	 orig commit -> b62917a2622ebcb03a500ef20da47be80d8c8951 ......
checking 90933f3fb612574e326f9872c5bd2121f8e2da39 ......
	 orig commit -> 9b52d55f4f0e2bb9a34abbcf99e05e17f1b3b281 ......
checking f69c1b51f6da629e6f03b336ffec8c31b56e6f8a ......
	 orig commit -> 2b8b28fd232233c22fb61009dd8b0587390d2875 ......
checking 0cdc91f539d77f4be720330f577b708a56cc9391 ......
	 orig commit -> ce0ae266feaf35930394bd770c69778e4ef03ba9 ......
checking cc78d091bd92300de98b1b372da7d5ee9dcd8e63 ......
	 orig commit -> b31dde2a5cb1bf764282abf934266b7193c2bc7c ......
checking 8c5156ad2da4493e6402bf7335d044445dca8c00 ......
	 orig commit -> d1662165ae612ec8b5f94a6b07e65ea58b6dce34 ......
checking 120e2febfc11ea91e34bec1c92fe5d6475c89508 ......
	 orig commit -> 952bce9792e6bf36fda09c2e5718abb5d9327369 ......
checking 28dee875257cf0985de5ddea4053d968fe365b44 ......
	 orig commit -> 75c6aca4765dbe3d0c1507ab5052f2e373dc2331 ......
checking 36a7f23fc74cf3f3947ea837310b1140e9592f6d ......
	 orig commit -> 81d90442eac779938217c3444b240aa51fd3db47 ......
checking fb243c3d81a5d8b5a275c4e118bea481df5d0510 ......
	 orig commit -> 609574eb46335cfac1421a07c0505627cbbab1f0 ......
checking b7f03eeaaf7cdb9528c9710d648182af5a4db493 ......
	 orig commit -> 836b34a935abc91e13e63053d0a83b24dfb5ea78 ......
checking 4d073cfdf7f685628485d9692623c668b173bb60 ......
	 orig commit -> 902eb7fd1e4af3ac69b9b30f8373f118c92b9729 ......
checking 94bfaf24e6ba9a789fa0aa50fb4b7d228f8d3cff ......
	 orig commit -> 0ef21100ae912f76ed89f76ecd894f4ffb3689c1 ......
checking f9f026d3903957ffe515ab47ea5df421dafc47cb ......
	 orig commit -> 447d6275f0c21f6cc97a88b3a0c601436a4cdf2a ......
checking 57f6ad5f1580a5a06c573fb15ed6dcf701e037f6 ......
	 orig commit -> 0f886ca12765d20124bd06291c82951fd49a33be ......
checking fbd40d7beef0b17624bc1f838f4d44dfa4b0326b ......
	 orig commit -> 9c6ba456711687b794dcf285856fc14e2c76074f ......
checking 5cede226daa83e26c4ef21773a75f535927b935d ......
	 orig commit -> 7445e45d19a09e5269dc85f17f9635be29d2f76c ......
checking 49102971470cc282f50f674b4aa5c4adabeb281d ......
	 orig commit -> d48d5691ebf88a15d95ba96486917ffc79256536 ......
checking b3e0983cb9fc0b1e876fd51f186f8fa887089261 ......
	 orig commit -> ea6db90e750328068837bed34cb1302b7a177339 ......
checking df3dddcc643832fc4fd133b8956be64b37841b67 ......
	 orig commit -> cddc9434e3dcc37a85c4412fb8e277d3a582e456 ......
checking ca76906a7753052b00e491ba017393f9071b0406 ......
	 orig commit -> c55aee1bf0e6b6feec8b2927b43f7a09a6d5f754 ......
checking 4f6ad5b0d28c84030693fe21b308c0b711fa66f6 ......
	 orig commit -> 5a07975ad0a36708c6b0a5b9fea1ff811d0b0c1f ......
checking 9deac9454b7a5643a09829f4731276cea6697b72 ......
	 orig commit -> 4e9a0b05257f29cf4b75f3209243ed71614d062e ......
checking b6c6426252e2653407811f46c883661955b9f5fa ......
	 orig commit -> 0b818e3956fc1ad976bee791eadcbb3b5fec5bfd ......
checking 850631bedd3cb7f79cb32a456c9ad3a5f6e1d1f3 ......
	 orig commit -> 4ec0ef3a82125efc36173062a50624550a900ae0 ......
		 4ec0ef3a82125efc36173062a50624550a900ae0 has problem. Fixes commit -> b7321e81fc369abe353cf094d4f0dc2fe11ab95f
commit 179295c38d23874357ca75af104fd6f1fe769cfd
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Mar 7 16:11:03 2017 +0100

    USB: iowarrior: fix NULL-deref at probe
    
    commit b7321e81fc369abe353cf094d4f0dc2fe11ab95f upstream.
    
    Make sure to check for the required interrupt-in endpoint to avoid
    dereferencing a NULL-pointer should a malicious device lack such an
    endpoint.
    
    Note that a fairly recent change purported to fix this issue, but added
    an insufficient test on the number of endpoints only, a test which can
    now be removed.
    
    Fixes: 4ec0ef3a8212 ("USB: iowarrior: fix oops with malicious USB descriptors")
    Fixes: 946b960d13c1 ("USB: add driver for iowarrior devices.")
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 1ea680abf7640c777396909102bc22915107cb5b ......
	 orig commit -> 8835ba4a39cf53f705417b3b3a94eb067673f2c9 ......
checking a85722c650265714c592d7ef99d277106dbb17bb ......
	 orig commit -> 55ff8cfbc4e12a7d2187df523938cc671fbebdd1 ......
checking aa563cf3bc7ef570f449501ff7ab12f3b7080ff0 ......
	 orig commit -> 0d5ce778c43bf888328231bcdce05d5c860655aa ......
checking 951822beba268f76af9463c69095284df20311f6 ......
	 orig commit -> 264904ccc33c604d4b3141bbd33808152dfac45b ......
		 264904ccc33c604d4b3141bbd33808152dfac45b has problem. Fixes commit -> 6e01827ed93947895680fbdad68c072a0f4e2450
commit f1d03ba9449f036507b82e68199a8f116e315ee8
Author: Maxim Moseychuk <franchesko.salias.hudro.pedros@gmail.com>
Date:   Thu Jan 4 21:43:03 2018 +0300

    usb: do not reset if a low-speed or full-speed device timed out
    
    commit 6e01827ed93947895680fbdad68c072a0f4e2450 upstream.
    
    Some low-speed and full-speed devices (for example, bluetooth)
    do not have time to initialize. For them, ETIMEDOUT is a valid error.
    We need to give them another try. Otherwise, they will
    never be initialized correctly and in dmesg will be messages
    "Bluetooth: hci0 command 0x1002 tx timeout" or similars.
    
    Fixes: 264904ccc33c ("usb: retry reset if a device times out")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Maxim Moseychuk <franchesko.salias.hudro.pedros@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 8907d8a6fd3f21992283efd67002aea719396f2b ......
	 orig commit -> 98dbc9c6c61698792e3a66f32f3bf066201d42d7 ......
checking 7f47aea487df2dc281c7f64ff7430aff3b260af0 ......
	 orig commit -> d14fcf3dd79c0b8a8d0ba469c44a6b04f3a1403b ......
		 d14fcf3dd79c0b8a8d0ba469c44a6b04f3a1403b has problem. Fixes commit -> 9567366fefddeaea4ed1d713270535d93a3b3c76
commit 9d58f322ee18ffaca1e0b67d90ab811ad75e62a6
Author: Mike Snitzer <snitzer@redhat.com>
Date:   Tue Apr 12 12:14:46 2016 -0400

    dm cache metadata: fix READ_LOCK macros and cleanup WRITE_LOCK macros
    
    commit 9567366fefddeaea4ed1d713270535d93a3b3c76 upstream.
    
    The READ_LOCK macro was incorrectly returning -EINVAL if
    dm_bm_is_read_only() was true -- it will always be true once the cache
    metadata transitions to read-only by dm_cache_metadata_set_read_only().
    
    Wrap READ_LOCK and WRITE_LOCK multi-statement macros in do {} while(0).
    Also, all accesses of the 'cmd' argument passed to these related macros
    are now encapsulated in parenthesis.
    
    A follow-up patch can be developed to eliminate the use of macros in
    favor of pure C code.  Avoiding that now given that this needs to apply
    to stable@.
    
    Reported-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Fixes: d14fcf3dd79 ("dm cache: make sure every metadata function checks fail_io")
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 291e2b3900da45dcc9c58e264f960fcb822bd07a ......
	 orig commit -> 2eae9e4489b4cf83213fa3bd508b5afca3f01780 ......
checking 5504a47088034573d0839120751b1aec46204aab ......
	 orig commit -> 6acfe68bac7e6f16dc312157b1fa6e2368985013 ......
checking 15c3af026b6e66ca2d9566d862af7e2fd7943a40 ......
	 orig commit -> 4df2bf466a9c9c92f40d27c4aa9120f4e8227bfc ......
checking 83250e67a9d65a662c5fdec6075f3c2dee0e79a0 ......
	 orig commit -> 07accfa9d1a8bac8262f6d24a94a54d2d1f35149 ......
checking b9d26f81ae9fa23988a5b503455f300bcef292fb ......
	 orig commit -> 5a51a7abca133860a6f4429655a9eda3c4afde32 ......
checking e760edfb7ba763e48b870025ab0b5edb4af85089 ......
	 orig commit -> 84bd64993f916bcf86270c67686ecf4cea7b8933 ......
checking c1f327046b17e6d9fac9bc61e23bcb1897c2d9b3 ......
	 orig commit -> ff06c5ffbcb4ffa542fb80c897be977956fafecc ......
checking 67aa7e6dd927c17103b3c5acb7eb50efb2372dab ......
	 orig commit -> 6540a65da90c09590897310e31993b1f6e28485a ......
checking e468298bd4f80e9353b2fe1273ad036a4abaf6e6 ......
	 orig commit -> ecc479e00db8eb110b200afe1effcb3df20ca7ae ......
		 ecc479e00db8eb110b200afe1effcb3df20ca7ae has problem. Fixes commit -> 116d77fea02e2a5aded7d29ba4c692774cb339f1
commit 93e8e691675a33960b607d9fd0858d5a35f0e419
Author: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
Date:   Mon Apr 25 23:31:12 2016 -0700

    aacraid: Start adapter after updating number of MSIX vectors
    
    [ Upstream commit 116d77fea02e2a5aded7d29ba4c692774cb339f1 ]
    
    The adapter has to be started after updating the number of MSIX Vectors
    
    Fixes: ecc479e00db8 (aacraid: Set correct MSIX count for EEH recovery)
    Cc: stable@vger.kernel.org
    Signed-off-by: Raghava Aditya Renukunta <RaghavaAditya.Renukunta@microsemi.com>
    Reviewed-by: Johannes Thumshirn <jthumshirn@suse.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
checking f3a3019dfc5411743273b5a53f2d95a845bec736 ......
	 orig commit -> f88fa79a61726ce9434df9b4aede36961f709f17 ......
checking 1624297ccc24486aa9e264f04f59743e5563a6b2 ......
	 orig commit -> 3f4ce057d51a9c0ed9b01ba693df685d230ffcae ......
checking f5967a77df538ea60fb83f3957b9d7cfc4646ae2 ......
	 orig commit -> 5ecee0a3ee8d74b6950cb41e8989b0c2174568d4 ......
checking 8e8a1a17bcc016c59044b06776fc1ddbcc897bb3 ......
	 orig commit -> 18c98243ddf05a1827ad2c359c5ac051101e7ff7 ......
checking f71e846236048ca5165b4ff5bc6f1745cabb6bd6 ......
	 orig commit -> c29016cf41fe9fa994a5ecca607cf5f1cd98801e ......
checking 0f63ab5873ed78838afa4b2f8bfd9d18f806cf40 ......
	 orig commit -> b7a584598aea7ca73140cb87b40319944dd3393f ......
checking 1eeb3225856a914d199f92d2d492142783eb5740 ......
	 orig commit -> 7834c10313fb823e538f2772be78edcdeed2e6e3 ......
checking dc1441612fdb4ca221e3a4aa32e39e74d020e386 ......
	 orig commit -> 551adc60573cb68e3d55cacca9ba1b7437313df7 ......
checking 2221620b0bce6df54e19eaf6065c368075e499e6 ......
	 orig commit -> 4a2e7aab4ffce1e0e79b303dc2f9a03aa9f3a332 ......
checking 8cbac3c4f74d92bf04645a613e061ab4f9baa866 ......
	 orig commit -> b84106b4e2290c081cdab521fa832596cdfea246 ......
		 b84106b4e2290c081cdab521fa832596cdfea246 has problem. Fixes commit -> ad67b437f187ea818b2860524d10f878fadfdd99
commit a87f69dceff5c93a7d8f70f2cb255e1fcbda83bb
Author: Prarit Bhargava <prarit@redhat.com>
Date:   Wed May 11 12:27:16 2016 -0400

    PCI: Disable all BAR sizing for devices with non-compliant BARs
    
    commit ad67b437f187ea818b2860524d10f878fadfdd99 upstream.
    
    b84106b4e229 ("PCI: Disable IO/MEM decoding for devices with non-compliant
    BARs") disabled BAR sizing for BARs 0-5 of devices that don't comply with
    the PCI spec.  But it didn't do anything for expansion ROM BARs, so we
    still try to size them, resulting in warnings like this on Broadwell-EP:
    
      pci 0000:ff:12.0: BAR 6: failed to assign [mem size 0x00000001 pref]
    
    Move the non-compliant BAR check from __pci_read_base() up to
    pci_read_bases() so it applies to the expansion ROM BAR as well as
    to BARs 0-5.
    
    Note that direct callers of __pci_read_base(), like sriov_init(), will now
    bypass this check.  We haven't had reports of devices with broken SR-IOV
    BARs yet.
    
    [bhelgaas: changelog]
    Fixes: b84106b4e229 ("PCI: Disable IO/MEM decoding for devices with non-compliant BARs")
    Signed-off-by: Prarit Bhargava <prarit@redhat.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    CC: Thomas Gleixner <tglx@linutronix.de>
    CC: Ingo Molnar <mingo@redhat.com>
    CC: "H. Peter Anvin" <hpa@zytor.com>
    CC: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 88c9954c5c898dfe2e581cba34417ab5abccdd0d ......
	 orig commit -> 2c7e3306d23864d49f686f22e56e180ff0fffb7f ......
checking c1948606af0861bd181cb85ed1797ef02c20bbec ......
	 orig commit -> 80c544ded25ac14d7cc3e555abb8ed2c2da99b84 ......
checking c024dcd3df1a0180993d4ce94b87e8ec271c6c2e ......
	 orig commit -> 8f100bb1ff27873dd71f636da670e503b9ade3c6 ......
checking 1a4d9389206b787f620966dd0442ac0cd8df5525 ......
	 orig commit -> e370e4769463a65dcf8806fa26d2874e0542ac41 ......
checking 608377369dcebfa0dc9506a4f17d008bc93bb5b9 ......
	 orig commit -> 6f3508f61c814ee852c199988a62bd954c50dfc1 ......
checking dff87fa52ddf26df67526d303d08226e7168560b ......
	 orig commit -> eb1af3b71f9d83e45f2fd2fd649356e98e1c582c ......
		 eb1af3b71f9d83e45f2fd2fd649356e98e1c582c has problem. Fixes commit -> ff15e95c82768d589957dbb17d7eb7dba7904659
commit 5582eb00f5b2362234cccf542232101db61ffc8b
Author: Tony Luck <tony.luck@intel.com>
Date:   Thu Apr 14 10:21:52 2016 -0700

    x86 EDAC, sb_edac.c: Repair damage introduced when "fixing" channel address
    
    commit ff15e95c82768d589957dbb17d7eb7dba7904659 upstream.
    
    In commit:
    
      eb1af3b71f9d ("Fix computation of channel address")
    
    I switched the "sck_way" variable from holding the log2 value read
    from the h/w to instead be the actual number. Unfortunately it
    is needed in log2 form when used to shift the address.
    
    Tested-by: Patrick Geary <patrickg@supermicro.com>
    Signed-off-by: Tony Luck <tony.luck@intel.com>
    Acked-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    Cc: Aristeu Rozanski <arozansk@redhat.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: linux-edac@vger.kernel.org
    Fixes: eb1af3b71f9d ("Fix computation of channel address")
    Signed-off-by: Ingo Molnar <mingo@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 10595c57f4682b096d6ac6dd2212ac889f08d9f4 ......
	 orig commit -> b15d53d009558d14c4f394a6d1fa2039c7f45c43 ......
checking af080e5802224176001a987c3ab77ba7490ef49e ......
	 orig commit -> f9c904b7613b8b4c85b10cd6b33ad41b2843fa9d ......
checking d75936f3f968b98243b9380b0c05d90b5292245d ......
	 orig commit -> 81ad4276b505e987dd8ebbdf63605f92cd172b52 ......
	 orig commit -> bb431ba26c5cd0a17c941ca6c3a195a3a6d5d461 ......
checking 64bf6d9705aa8724a17a137e76dc6f5b58309026 ......
	 orig commit -> 67d5268908283c187e0a460048a423256c2fb288 ......
checking 6be7771fe7242d7d4399545e0c9e2f6f3cd76725 ......
	 orig commit -> 26dee028d365fbc0e3326606a8520260b4462381 ......
checking 2dfe91df33715503b253563d5e6d9a816758485c ......
	 orig commit -> 940db6dcd3f4659303fdf6befe7416adc4d24118 ......
checking 37014e0c5c90e250892da8aba8533cd43bacb4eb ......
	 orig commit -> 927a5570855836e5d5859a80ce7e91e963545e8f ......
checking 6a84dfcbf56eab7955b607e22696cb145e019f20 ......
	 orig commit -> ef697a712a6165aea7779c295604b099e8bfae2e ......
checking f9153f95f2b5a1a90b81c746342bed9d40dc9ae0 ......
	 orig commit -> f6870ee9e53430f2a318ccf0dd5e66bb46194e43 ......
checking c44b175bf03cd74e517f3c98b2cb4896e04202ae ......
	 orig commit -> 2849eb4f99d54925c543db12917127f88b3c38ff ......
checking 4e2fa4bbbac1c2e198e4c980d451c9ec568ae798 ......
	 orig commit -> e9ad4ec8379ad1ba6f68b8ca1c26b50b5ae0a327 ......
checking 49f0cbfc3e73108c319c3d3cc5fe04587d96b654 ......
	 orig commit -> 7dd0fdff145c5be7146d0ac06732ae3613412ac1 ......
checking 0f6e5e26e68f1171b7cf8bebb7ce86c95e506639 ......
	 orig commit -> 4e422bdd2f849d98fffccbc3295c2f0996097fb3 ......
checking 54fda475686cfb9a90bb558c0fa590e644503432 ......
	 orig commit -> b894157145e4ac7598d7062bc93320898a5e059e ......
		 b894157145e4ac7598d7062bc93320898a5e059e has problem. Fixes commit -> da77b67195de1c65bef4908fa29967c4d0af2da2
commit 92fe37c0f09c48ba42300d7ac79c0750e48d7a3f
Author: Prarit Bhargava <prarit@redhat.com>
Date:   Wed May 11 12:27:15 2016 -0400

    x86/PCI: Mark Broadwell-EP Home Agent 1 as having non-compliant BARs
    
    [ Upstream commit da77b67195de1c65bef4908fa29967c4d0af2da2 ]
    
    Commit b894157145e4 ("x86/PCI: Mark Broadwell-EP Home Agent & PCU as having
    non-compliant BARs") marked Home Agent 0 & PCU has having non-compliant
    BARs.  Home Agent 1 also has non-compliant BARs.
    
    Mark Home Agent 1 as having non-compliant BARs so the PCI core doesn't
    touch them.
    
    The problem with these devices is documented in the Xeon v4 specification
    update:
    
      BDF2          PCI BARs in the Home Agent Will Return Non-Zero Values
                    During Enumeration
    
      Problem:      During system initialization the Operating System may access
                    the standard PCI BARs (Base Address Registers).  Due to
                    this erratum, accesses to the Home Agent BAR registers (Bus
                    1; Device 18; Function 0,4; Offsets (0x14-0x24) will return
                    non-zero values.
    
      Implication:  The operating system may issue a warning.  Intel has not
                    observed any functional failures due to this erratum.
    
    Link: http://www.intel.com/content/www/us/en/processors/xeon/xeon-e5-v4-spec-update.html
    Fixes: b894157145e4 ("x86/PCI: Mark Broadwell-EP Home Agent & PCU as having non-compliant BARs")
    Signed-off-by: Prarit Bhargava <prarit@redhat.com>
    Signed-off-by: Bjorn Helgaas <bhelgaas@google.com>
    CC: Thomas Gleixner <tglx@linutronix.de>
    CC: Ingo Molnar <mingo@redhat.com>
    CC: "H. Peter Anvin" <hpa@zytor.com>
    CC: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
checking f6724209df88ec1a760d036b71b8f871b1556785 ......
	 orig commit -> 5690ae28e472d25e330ad0c637a5cea3fc39fb32 ......
checking 7657a398c105500d1614444a26c1fc9166813fb8 ......
	 orig commit -> 4e79e182b419172e35936a47f098509092d69817 ......
checking 5aeaf8bd6c6a3f29a1ab55987c10741ef984ea52 ......
	 orig commit -> 5f9c01aa7c49a2d74474d6d879a797b8badf29e6 ......
checking e8c28e096a07b7bdf6fae534c8ff5f372b25ea82 ......
	 orig commit -> 264285ac01673e70557c43ecee338ce97c4c0672 ......
checking 19e0783ae96837e30e94acdb0cc4ae935338a969 ......
	 orig commit -> a32ef81c9889c9554a3c4b465c4ee7b2d26c6b10 ......
checking c045105c641ccbeb6e94e87980cc8db870aa3961 ......
	 orig commit -> 27cbd7e815a8e223ff7c4fe56daca724101288ac ......
		 27cbd7e815a8e223ff7c4fe56daca724101288ac has problem. Fixes commit -> a32ef81c9889c9554a3c4b465c4ee7b2d26c6b10
commit 19e0783ae96837e30e94acdb0cc4ae935338a969
Author: Chris Paterson <chris.paterson2@renesas.com>
Date:   Wed Feb 10 14:07:01 2016 +0000

    mmc: sh_mmcif: Correct TX DMA channel allocation
    
    commit a32ef81c9889c9554a3c4b465c4ee7b2d26c6b10 upstream.
    
    Commit 27cbd7e815a8 ("mmc: sh_mmcif: rework dma channel handling")
    introduced a typo causing the TX DMA channel allocation to be overwritten
    by the requested RX DMA channel.
    
    Fixes: 27cbd7e815a8 ("mmc: sh_mmcif: rework dma channel handling")
    Signed-off-by: Chris Paterson <chris.paterson2@renesas.com>
    Acked-by: Laurent Pinchart <laurent.pinchart@ideasonboard.com>
    Acked-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Ulf Hansson <ulf.hansson@linaro.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking e08f9a7c0e0242c2fae664d252e25c9bf93db522 ......
	 orig commit -> b9a1a743818ea3265abf98f9431623afa8c50c86 ......
checking b1999fa6e8145305a6c8bda30ea20783717708e6 ......
	 orig commit -> 70a7fb80e85ae7f78f8e90cec3fbd862ea6a4d4b ......
checking 4c8fe4f52755d4690a745f4e56b543c51add86fe ......
	 orig commit -> fa731ac7ea04a7d3a5c6d2f568132478c02a83b3 ......
		 fa731ac7ea04a7d3a5c6d2f568132478c02a83b3 has problem. Fixes commit -> 70a7fb80e85ae7f78f8e90cec3fbd862ea6a4d4b
commit 5a58f809d731c23c0b898d2021903db8dee4466f
Author: Thierry Reding <treding@nvidia.com>
Date:   Wed Dec 2 16:54:50 2015 +0100

    regulator: core: Fix nested locking of supplies
    
    commit 70a7fb80e85ae7f78f8e90cec3fbd862ea6a4d4b upstream.
    
    Commit fa731ac7ea04 ("regulator: core: avoid unused variable warning")
    introduced a subtle change in how supplies are locked. Where previously
    code was always locking the regulator of the current iteration, the new
    implementation only locks the regulator if it has a supply. For any
    given power tree that means that the root will never get locked.
    
    On the other hand the regulator_unlock_supply() will still release all
    the locks, which in turn causes the lock debugging code to warn about a
    mutex being unlocked which wasn't locked.
    
    Cc: Mark Brown <broonie@kernel.org>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Fixes: fa731ac7ea04 ("regulator: core: avoid unused variable warning")
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Cc: Guenter Roeck <linux@roeck-us.net>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 34af67eb941ae5371110c9adbd5392c7a3aa841e
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Mon May 2 11:14:34 2016 -0700

    Revert "regulator: core: Fix nested locking of supplies"
    
    This reverts commit b1999fa6e8145305a6c8bda30ea20783717708e6 which was
    commit 70a7fb80e85ae7f78f8e90cec3fbd862ea6a4d4b upstream.
    
    It causes run-time breakage in the 4.4-stable tree and more patches are
    needed to be applied first before this one in order to resolve the
    issue.
    
    Reported-by: Guenter Roeck <linux@roeck-us.net>
    Cc: Mark Brown <broonie@kernel.org>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Cc: Thierry Reding <treding@nvidia.com>
    Cc: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit b1999fa6e8145305a6c8bda30ea20783717708e6
Author: Thierry Reding <treding@nvidia.com>
Date:   Wed Dec 2 16:54:50 2015 +0100

    regulator: core: Fix nested locking of supplies
    
    commit 70a7fb80e85ae7f78f8e90cec3fbd862ea6a4d4b upstream.
    
    Commit fa731ac7ea04 ("regulator: core: avoid unused variable warning")
    introduced a subtle change in how supplies are locked. Where previously
    code was always locking the regulator of the current iteration, the new
    implementation only locks the regulator if it has a supply. For any
    given power tree that means that the root will never get locked.
    
    On the other hand the regulator_unlock_supply() will still release all
    the locks, which in turn causes the lock debugging code to warn about a
    mutex being unlocked which wasn't locked.
    
    Cc: Mark Brown <broonie@kernel.org>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Fixes: Fixes: fa731ac7ea04 ("regulator: core: avoid unused variable warning")
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 84cf91ad330f5c9ba51f761a37e58b9aa99bf470 ......
	 orig commit -> 7a76aa95f6f6682db5629449d763251d1c9f8c4e ......
