Check from v4.4.1 to v4.4.2
Commit count: 120
checking 1cb8570bf04ab12a03c31c397a4d158f24895d9c ......
checking bedd67e92725dc7742f53fda328bfc90119fe1e0 ......
	 orig commit -> 73e7d63efb4d774883a338997943bfa59e127085 ......
checking fe5c164ef32ffbf441b33ff24088e09fca266dad ......
	 orig commit -> 564e81a57f9788b1475127012e0fd44e9049e342 ......
checking bddaf79195c4b9bae86b494fb6cfe855f8415afb ......
	 orig commit -> c102f07ca0b04f2cb49cfc161c83f6239d17f491 ......
checking aee0848f2e83f9a2a6acfcae0cdd411a8e8222f9 ......
	 orig commit -> 17ec4cd985780a7e30aa45bb8f272237c12502a4 ......
		 17ec4cd985780a7e30aa45bb8f272237c12502a4 has problem. Fixes commit -> 529e71e16403830ae0d737a66c55c5f360f3576b
commit 61ab6247366349aca80330db1c708c798b1c9774
Author: Takashi Iwai <tiwai@suse.de>
Date:   Wed Nov 30 15:54:08 2016 -0800

    zram: fix unbalanced idr management at hot removal
    
    commit 529e71e16403830ae0d737a66c55c5f360f3576b upstream.
    
    The zram hot removal code calls idr_remove() even when zram_remove()
    returns an error (typically -EBUSY).  This results in a leftover at the
    device release, eventually leading to a crash when the module is
    reloaded.
    
    As described in the bug report below, the following procedure would
    cause an Oops with zram:
    
     - provision three zram devices via modprobe zram num_devices=3
     - configure a size for each device
       + echo "1G" > /sys/block/$zram_name/disksize
     - mkfs and mount zram0 only
     - attempt to hot remove all three devices
       + echo 2 > /sys/class/zram-control/hot_remove
       + echo 1 > /sys/class/zram-control/hot_remove
       + echo 0 > /sys/class/zram-control/hot_remove
         - zram0 removal fails with EBUSY, as expected
     - unmount zram0
     - try zram0 hot remove again
       + echo 0 > /sys/class/zram-control/hot_remove
         - fails with ENODEV (unexpected)
     - unload zram kernel module
       + completes successfully
     - zram0 device node still exists
     - attempt to mount /dev/zram0
       + mount command is killed
       + following BUG is encountered
    
     BUG: unable to handle kernel paging request at ffffffffa0002ba0
     IP: get_disk+0x16/0x50
     Oops: 0000 [#1] SMP
     CPU: 0 PID: 252 Comm: mount Not tainted 4.9.0-rc6 #176
     Call Trace:
       exact_lock+0xc/0x20
       kobj_lookup+0xdc/0x160
       get_gendisk+0x2f/0x110
       __blkdev_get+0x10c/0x3c0
       blkdev_get+0x19d/0x2e0
       blkdev_open+0x56/0x70
       do_dentry_open.isra.19+0x1ff/0x310
       vfs_open+0x43/0x60
       path_openat+0x2c9/0xf30
       do_filp_open+0x79/0xd0
       do_sys_open+0x114/0x1e0
       SyS_open+0x19/0x20
       entry_SYSCALL_64_fastpath+0x13/0x94
    
    This patch adds the proper error check in hot_remove_store() not to call
    idr_remove() unconditionally.
    
    Fixes: 17ec4cd98578 ("zram: don't call idr_remove() from zram_remove()")
    Bugzilla: https://bugzilla.opensuse.org/show_bug.cgi?id=1010970
    Link: http://lkml.kernel.org/r/20161121132140.12683-1-tiwai@suse.de
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Reviewed-by: David Disseldorp <ddiss@suse.de>
    Reported-by: David Disseldorp <ddiss@suse.de>
    Tested-by: David Disseldorp <ddiss@suse.de>
    Acked-by: Minchan Kim <minchan@kernel.org>
    Acked-by: Sergey Senozhatsky <sergey.senozhatsky@gmail.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 73f6736093323247103ad59ef04676ea2bb000c7 ......
	 orig commit -> d913897abace843bba20249f3190167f7895e9c3 ......
checking 80c554f5f22f9760472ad47b24246cea59474e15 ......
	 orig commit -> 3d5fe03a3ea013060ebba2a811aeb0f23f56aefa ......
checking 724f135b755a628a5e3f8693f105553152e02c23 ......
	 orig commit -> c72fc9093718a3f8597249863a1bac345ba00859 ......
checking 7d4bf40d4e2cdf59f83a96cb32ed0411530a547d ......
	 orig commit -> 78bae1de422a7f6f2b4b61f6a5c379e3d7f96f44 ......
checking 2827c1d0344b3d8e43b5ac17aa211d141b94302c ......
	 orig commit -> 8a3978ad55fb4c0564d285fb2f6cdee2313fce01 ......
checking ee36c87a655325a7b5e442a9650a782db4ea20d2 ......
	 orig commit -> c033042aa8f69894df37dabcaa0231594834a4e4 ......
checking 714e7964f79e3b74e16b1d040efa34705da891f8 ......
	 orig commit -> d961436c11482e974b702c8324426208f00cd7c4 ......
checking 12426bd6b05f286fe252ddb69c4aea3209d01d5b ......
	 orig commit -> dad41997063723eaf5f77bc2015606a5a9bce320 ......
checking 66bca97f21762ba58ce3d6767b27f782c702ef65 ......
	 orig commit -> 6454c2b83f719057069777132b13949e4c6b6350 ......
checking 3e597bb7c3be2c69c03a6af95d27d5ed16b7b882 ......
	 orig commit -> ec69bbfb9902c32a5c1492f2b1b8ad032a66d724 ......
checking cfeab1cf35bcd023bb5db62635eccf8e8def7527 ......
	 orig commit -> 63e41ebc6630f39422d87f8a4bade1e793f37a01 ......
checking 8592536bcfcbc717a3bf7cec57d7c1b38f4eec1d ......
	 orig commit -> 613317bd212c585c20796c10afe5daaa95d4b0a1 ......
checking 792c6ff0d8ce1a3d1da9f7b657aa6a8017515216 ......
	 orig commit -> fe09786178f9df713a4b2dd6b93c0a722346bf5e ......
checking 6bb06a4fa1894533beaab22f0c657866b0e61b06 ......
	 orig commit -> 00420a65fa2beb3206090ead86942484df2275f3 ......
checking 936a322b57b4d98b42724af04c2d457bf1292514 ......
	 orig commit -> cbe09bd51bf23b42c3a94c5fb6815e1397c5fc3f ......
checking 2a6c3d5457e0e63c20125845ff7ccd41b32b53d3 ......
	 orig commit -> e7a7104e432c0db8469ca3568daf4f1d1afe3e73 ......
checking 3dd3e2544c48d55e975efca5f34b77dbbe8895c9 ......
	 orig commit -> 202736d99b7f29279db9da61587f11a08a04a9c6 ......
checking fec8beab63283003b546f83eebbbe32efb9acc53 ......
	 orig commit -> 4f0414e54e4d1893c6f08260693f8ef84c929293 ......
checking d175a4ee836be6be37de8637b0fed5b4daedea77 ......
	 orig commit -> fd7f6727102a1ccf6b4c1dfcc631f9b546526b26 ......
checking f84d1fcb59c6b17dec972932c05674127babf476 ......
	 orig commit -> 1822793a523e5d5730b19cc21160ff1717421bc8 ......
checking aa51954b30e7d07522689452aba08b24f748a005 ......
	 orig commit -> ad46d7e33219218605ea619e32553daf4f346b9f ......
checking 1bdbb041755b19975a9b87e22a02bd584a45e99c ......
	 orig commit -> a6a48c565f6f112c6983e2a02b1602189ed6e26e ......
checking 40bfd37ab95c89b20d1fa63aeea25ba5799bc125 ......
	 orig commit -> d7b65aee1e7b4c87922b0232eaba56a8a143a4a0 ......
checking 20509d916186a2fcc6f248d9fb8882d3988834d2 ......
	 orig commit -> f1d84af1835846a5a2b827382c5848faf2bb0e75 ......
checking 758c560bcbc7d7814a391597fbcba02f087fb7f7 ......
	 orig commit -> 6a935170a980024dd29199e9dbb5c4da4767a1b9 ......
checking 2f129c2d4fdbdf159a5a86e0ee071406a4dd7a20 ......
	 orig commit -> 342decff2b846b46fa61eb5ee40986fab79a9a32 ......
checking 1489f5d951089debd2a533e3a109fba9b36e3461 ......
	 orig commit -> 566d1827df2ef0cbe921d3d6946ac3007b1a6938 ......
		 566d1827df2ef0cbe921d3d6946ac3007b1a6938 has problem. Fixes commit -> bb4add2ce991e4ec891b5a0287fd1ab77b631979
17dcc37e3e847bc0e67a5b1ec52471fcc6c18682
2fd0f46cb1b82587c7ae4a616d69057fb9bd0af7
commit 011859fdb4764ccf46e6e36dbdfeb3442a17a71e
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Fri Apr 1 08:52:58 2016 +0100

    ARM: dts: apq8064: add ahci ports-implemented mask
    
    [ Upstream commit bb4add2ce991e4ec891b5a0287fd1ab77b631979 ]
    
    This patch adds new ports-implemented mask, which is required to get
    achi working on the mainline. Without this patch value read from
    PORTS_IMPL register which is zero would not enable any ports for
    software to use.
    
    Fixes: 566d1827df2e ("libata: disable forced PORTS_IMPL for >= AHCI 1.3")
    Cc: stable@vger.kernel.org # v4.5+
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Reviewed-by: Andy Gross <andy.gross@linaro.org>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6e337a05df8adfc54540ca2a2b9d621836697796
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Fri Apr 1 08:52:57 2016 +0100

    ata: ahci-platform: Add ports-implemented DT bindings.
    
    commit 17dcc37e3e847bc0e67a5b1ec52471fcc6c18682 upstream.
    
    On some SOCs PORTS_IMPL register value is never programmed by the
    firmware and left at zero value. Which means that no sata ports are
    available for software. AHCI driver used to cope up with this by
    fabricating the port_map if the PORTS_IMPL register is read zero,
    but recent patch broke this workaround as zero value was valid for
    NVMe disks.
    
    This patch adds ports-implemented DT bindings as workaround for this issue
    in a way that DT can can override the PORTS_IMPL register in cases where
    the firmware did not program it already.
    
    Fixes: 566d1827df2e ("libata: disable forced PORTS_IMPL for >= AHCI 1.3")
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Acked-by: Tejun Heo <tj@kernel.org>
    Reviewed-by: Andy Gross <andy.gross@linaro.org>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a7fa0a478a625039ef0852e5606d1248cba093e4
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Fri Apr 1 08:52:56 2016 +0100

    libahci: save port map for forced port map
    
    commit 2fd0f46cb1b82587c7ae4a616d69057fb9bd0af7 upstream.
    
    In usecases where force_port_map is used saved_port_map is never set,
    resulting in not programming the PORTS_IMPL register as part of initial
    config. This patch fixes this by setting it to port_map even in case
    where force_port_map is used, making it more inline with other parts of
    the code.
    
    Fixes: 566d1827df2e ("libata: disable forced PORTS_IMPL for >= AHCI 1.3")
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Acked-by: Tejun Heo <tj@kernel.org>
    Reviewed-by: Andy Gross <andy.gross@linaro.org>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 011859fdb4764ccf46e6e36dbdfeb3442a17a71e
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Fri Apr 1 08:52:58 2016 +0100

    ARM: dts: apq8064: add ahci ports-implemented mask
    
    [ Upstream commit bb4add2ce991e4ec891b5a0287fd1ab77b631979 ]
    
    This patch adds new ports-implemented mask, which is required to get
    achi working on the mainline. Without this patch value read from
    PORTS_IMPL register which is zero would not enable any ports for
    software to use.
    
    Fixes: 566d1827df2e ("libata: disable forced PORTS_IMPL for >= AHCI 1.3")
    Cc: stable@vger.kernel.org # v4.5+
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Reviewed-by: Andy Gross <andy.gross@linaro.org>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>

commit 6e337a05df8adfc54540ca2a2b9d621836697796
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Fri Apr 1 08:52:57 2016 +0100

    ata: ahci-platform: Add ports-implemented DT bindings.
    
    commit 17dcc37e3e847bc0e67a5b1ec52471fcc6c18682 upstream.
    
    On some SOCs PORTS_IMPL register value is never programmed by the
    firmware and left at zero value. Which means that no sata ports are
    available for software. AHCI driver used to cope up with this by
    fabricating the port_map if the PORTS_IMPL register is read zero,
    but recent patch broke this workaround as zero value was valid for
    NVMe disks.
    
    This patch adds ports-implemented DT bindings as workaround for this issue
    in a way that DT can can override the PORTS_IMPL register in cases where
    the firmware did not program it already.
    
    Fixes: 566d1827df2e ("libata: disable forced PORTS_IMPL for >= AHCI 1.3")
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Acked-by: Tejun Heo <tj@kernel.org>
    Reviewed-by: Andy Gross <andy.gross@linaro.org>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit a7fa0a478a625039ef0852e5606d1248cba093e4
Author: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
Date:   Fri Apr 1 08:52:56 2016 +0100

    libahci: save port map for forced port map
    
    commit 2fd0f46cb1b82587c7ae4a616d69057fb9bd0af7 upstream.
    
    In usecases where force_port_map is used saved_port_map is never set,
    resulting in not programming the PORTS_IMPL register as part of initial
    config. This patch fixes this by setting it to port_map even in case
    where force_port_map is used, making it more inline with other parts of
    the code.
    
    Fixes: 566d1827df2e ("libata: disable forced PORTS_IMPL for >= AHCI 1.3")
    Signed-off-by: Srinivas Kandagatla <srinivas.kandagatla@linaro.org>
    Acked-by: Tejun Heo <tj@kernel.org>
    Reviewed-by: Andy Gross <andy.gross@linaro.org>
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking a8e70a1a4fd6c0bc634a2b3f7b4b77ee378c3134 ......
	 orig commit -> 6e8d8ecf438792ecf7a3207488fb4eebc4edb040 ......
checking 7f5c995746ebc3f431c596ffabb98af1b3e3de86 ......
	 orig commit -> a1383cd86a062fc798899ab20f0ec2116cce39cb ......
checking 017db8bc9a1d62710af99b0eec605ee1f0285277 ......
	 orig commit -> 6de62f15b581f920ade22d758f4c338311c2f0d4 ......
		 6de62f15b581f920ade22d758f4c338311c2f0d4 has problem. Fixes commit -> a0118c8b2be9297aed8e915c60b4013326b256d4
commit e0a9e843cad4aaacc1e806d0f57c69fae79c4197
Author: Russell King <rmk+kernel@armlinux.org.uk>
Date:   Tue Aug 9 08:27:17 2016 +0100

    crypto: caam - fix non-hmac hashes
    
    commit a0118c8b2be9297aed8e915c60b4013326b256d4 upstream.
    
    Since 6de62f15b581 ("crypto: algif_hash - Require setkey before
    accept(2)"), the AF_ALG interface requires userspace to provide a key
    to any algorithm that has a setkey method.  However, the non-HMAC
    algorithms are not keyed, so setting a key is unnecessary.
    
    Fix this by removing the setkey method from the non-keyed hash
    algorithms.
    
    Fixes: 6de62f15b581 ("crypto: algif_hash - Require setkey before accept(2)")
    Signed-off-by: Russell King <rmk+kernel@armlinux.org.uk>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking f2e274ce8bfe8ab928ab1968a82a3b7eec27a69b ......
	 orig commit -> a5596d6332787fd383b3b5427b41f94254430827 ......
		 a5596d6332787fd383b3b5427b41f94254430827 has problem. Fixes commit -> 00420a65fa2beb3206090ead86942484df2275f3
commit 6bb06a4fa1894533beaab22f0c657866b0e61b06
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Wed Jan 27 00:16:37 2016 +0800

    crypto: shash - Fix has_key setting
    
    commit 00420a65fa2beb3206090ead86942484df2275f3 upstream.
    
    The has_key logic is wrong for shash algorithms as they always
    have a setkey function.  So we should instead be testing against
    shash_no_setkey.
    
    Fixes: a5596d633278 ("crypto: hash - Add crypto_ahash_has_setkey")
    Reported-by: Stephan Mueller <smueller@chronox.de>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Tested-by: Stephan Mueller <smueller@chronox.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking eeb2e2e72bce3c4f3e74d1ea2c621aa574b8ef18 ......
	 orig commit -> a0fa2d037129a9849918a92d91b79ed6c7bd2818 ......
checking d1b886e326f3578e8d6066c590d32a5c7028afbd ......
	 orig commit -> 37766586c965d63758ad542325a96d5384f4a8c9 ......
checking aa435a11e4bb37e23dbfc45fea2c11ddf6b813e0 ......
	 orig commit -> a383292c86663bbc31ac62cc0c04fc77504636a6 ......
checking 7509864bb2ec8a4dfbda52a9bda577ecdcb6b2c4 ......
	 orig commit -> c840ac6af3f8713a71b4d2363419145760bd6044 ......
checking b238717c0bb4606e2e36fc0de745306b0c900d83 ......
	 orig commit -> dd504589577d8e8e70f51f997ad487a4cb6c026f ......
checking a800cbddbc2042b042491867e96e2f3c5c0d3e3b ......
	 orig commit -> 9c03ee147193645be4c186d3688232fa438c57c7 ......
checking b80b70ef40459ec9e7493cef5e91e4e11dad9e42 ......
	 orig commit -> db7730e3091a52c2fcd8fcc952b964d88998e675 ......
checking 740c56110a2548ae353af93d07354f67f14f4b4e ......
	 orig commit -> 12c2ab09571e8aae3a87da2a4a452632a5fac1e5 ......
checking d343601a19410f71bf1765df5e2edda66fe5de5f ......
	 orig commit -> 5c17c861a357e9458001f021a7afa7aab9937439 ......
checking b4312250147d42dceed6c8d44aa02cb29539db19 ......
	 orig commit -> 7f22f6c935cda600660e623a411fe380015d28d9 ......
checking c35f1234931e2cae81726440ad4df8ef1f313219 ......
	 orig commit -> 0bfd464d3fdd5bb322f9cace4cc47f1796545cf7 ......
		 0bfd464d3fdd5bb322f9cace4cc47f1796545cf7 has problem. Fixes commit -> e9036d0662360cd4c79578565ce422ed5872f301
commit cc04a1433843ff8518f3bf6733e99abb05458b82
Author: Peter Hurley <peter@hurleysoftware.com>
Date:   Fri Feb 5 10:49:36 2016 -0800

    tty: Drop krefs for interrupted tty lock
    
    commit e9036d0662360cd4c79578565ce422ed5872f301 upstream.
    
    When the tty lock is interrupted on attempted re-open, 2 tty krefs
    are still held. Drop extra kref before returning failure from
    tty_lock_interruptible(), and drop lookup kref before returning
    failure from tty_open().
    
    Fixes: 0bfd464d3fdd ("tty: Wait interruptibly for tty lock on reopen")
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: Peter Hurley <peter@hurleysoftware.com>
    Cc: Jiri Slaby <jslaby@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking cccd9546e993ddcd10a482e43a821420cb09c05d ......
	 orig commit -> 6d27a63caad3f13e96cf065d2d96828c2006be6b ......
checking 46f0b319cd828cc52bce8a94ff6c010efbfbb660 ......
	 orig commit -> ccc04afb72cddbdf7c0e1c17e92886405a71b754 ......
checking bfa2ee5ddf3dd102f2ffc9842225591461a08f16 ......
	 orig commit -> fa89537783cb442263fa5a14df6c7693eaf32f11 ......
checking 7ab0e9d0a2283c6d1f2337847b89f86c53a1f9b7 ......
	 orig commit -> a38a08dfaaab978dced63aa9cad45f0f62e23a66 ......
checking dde53ae3ad07b6b3978d5dc22633edbaa42db431 ......
	 orig commit -> ffdb1e369a73b380fce95b05f8498d92c43842b4 ......
checking 858e9d4a226435e45401757ccda952254e4e251c ......
	 orig commit -> 19454462acb1bdef80542061bdc9b410e4ed1ff6 ......
checking 8d85f027360ac66c481751b458153ee0cc0da37c ......
	 orig commit -> 4152b387da81617c80cb2946b2d56e3958906b3e ......
checking 185db3a5ab58e2d4fbc54176e755bf53398e37e1 ......
	 orig commit -> ff4e2494dc17b173468e1713fdf6237fd8578bc7 ......
checking 7e13854aa55956198eda63095bb0ec9022816811 ......
	 orig commit -> f487c54ddd544e1c9172cd510954f697b77b76e3 ......
checking f463b2e192a0576fe988c694fbd4c4c809ddae7f ......
	 orig commit -> e03cdf22a2727c60307be6a729233edab3bfda9c ......
checking c9b1074e18b607f54ac195959d5a4daacaa81325 ......
	 orig commit -> d8f00cd685f5c8e0def8593e520a7fef12c22407 ......
checking ee4207bda5e15d0eecb834c4fc39c6069487279d ......
	 orig commit -> cac9b50b0d75a1d50d6c056ff65c005f3224c8e0 ......
checking 2dc803d0740f0c493a7db8a1baf6514d5b95b6a3 ......
	 orig commit -> cb3232138e37129e88240a98a1d2aba2187ff57c ......
checking 2bbe5162bacd8b8f120b08f641bf695329d90017 ......
	 orig commit -> b28785fa9cede0d4f47310ca0dd2a4e1d50478b5 ......
checking 18203289cea5010bc5dac4cebcdff91af76b8b6c ......
	 orig commit -> ac75fe5d8fe4a0bf063be18fb29684405279e79e ......
checking 4634f985fb4a43a89f1b6523509d30de4651ef89 ......
	 orig commit -> ddce57a6f0a2d8d1bfacfa77f06043bc760403c2 ......
checking fc1cf67cbf44ea100c9994d8d6a594415926eab8 ......
	 orig commit -> 2ebab40eb74a0225d5dfba72bfae317dd948fa2d ......
checking 1d9c34c147785319d16cb0e9be6a791bc446b334 ......
	 orig commit -> c44d9b1181cf34e0860c72cc8a00e0c47417aac0 ......
checking dc4d5c42bf59682a82ccd8c67eee5313e6c43c63 ......
	 orig commit -> 6c361d10e0eb859233c71954abcd20d2d8700587 ......
checking c9a35bd4bc91c98895b1f2d4392f003828caa9ed ......
	 orig commit -> 360a8245680053619205a3ae10e6bfe624a5da1d ......
checking 32495f0543b10630a2ecc2ed5432b13d85358496 ......
	 orig commit -> 2154cc0e2d4ae15132d005d17e473327c70c9a06 ......
checking 92cc7c5788b090c2a15d5dfdfdcb772d9b25e91a ......
	 orig commit -> ed8b1d6d2c741ab26d60d499d7fbb7ac801f0f51 ......
checking 4333cce1e75701f5ffb0f17cbe43c170e09e7e46 ......
	 orig commit -> 117159f0b9d392fb433a7871426fad50317f06f7 ......
checking 925249d5172a31d7d430fdf364fc9229223c7942 ......
	 orig commit -> 4dff5c7b7093b19c19d3a100f8a3ad87cb7cd9e7 ......
checking ce60478a9959a8e1d1dcc70325e72678e78d85c5 ......
	 orig commit -> f784beb75ce82f4136f8a0960d3ee872f7109e09 ......
checking 43d2ac7b542a862b55d22d179468df5290590801 ......
	 orig commit -> 094fd3be87b0f102589e2d5c3fa5d06b7e20496d ......
checking 3f75d8ad63e42d5e1f46bd7fc2ba643cda3aa5e7 ......
	 orig commit -> c3b1681375dc6e71d89a3ae00cc3ce9e775a8917 ......
checking 144b7ecc3bd6fdf791d54def453d73168d99569f ......
	 orig commit -> 7f0973e973cd74aa40747c9d38844560cd184ee8 ......
		 7f0973e973cd74aa40747c9d38844560cd184ee8 has problem. Fixes commit -> 13d5e5d4725c64ec06040d636832e78453f477b7
commit a40efb855068a20cf769425a799642aa95c57635
Author: Takashi Iwai <tiwai@suse.de>
Date:   Tue Feb 16 14:15:59 2016 +0100

    ALSA: seq: Fix double port list deletion
    
    commit 13d5e5d4725c64ec06040d636832e78453f477b7 upstream.
    
    The commit [7f0973e973cd: ALSA: seq: Fix lockdep warnings due to
    double mutex locks] split the management of two linked lists (source
    and destination) into two individual calls for avoiding the AB/BA
    deadlock.  However, this may leave the possible double deletion of one
    of two lists when the counterpart is being deleted concurrently.
    It ends up with a list corruption, as revealed by syzkaller fuzzer.
    
    This patch fixes it by checking the list emptiness and skipping the
    deletion and the following process.
    
    BugLink: http://lkml.kernel.org/r/CACT4Y+bay9qsrz6dQu31EcGaH9XwfW7o3oBzSQUG9fMszoh=Sg@mail.gmail.com
    Fixes: 7f0973e973cd ('ALSA: seq: Fix lockdep warnings due to 'double mutex locks)
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Tested-by: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 80f6a124a398b6e08ee86d3253dd461cfff85fe3 ......
	 orig commit -> 2d1b5c08366acd46c35a2e9aba5d650cb5bf5c19 ......
checking 3ed5d283254aab50d90525d8ea4dd713aac08d1d ......
	 orig commit -> 2cdc7b636d55cbcf42e1e6c8accd85e62d3e9ae8 ......
checking f8ae77d05089c8a7d3b626cd783970a55dba5577 ......
	 orig commit -> 5e82d2be6ee53275c72e964507518d7964c82753 ......
checking 195988d298fc4c2af1162a960fd7772c311dc747 ......
	 orig commit -> b248371628aad599a48540962f6b85a21a8a0c3f ......
checking f7fd4634b65c517321f1e7f30f5632d77b4208b4 ......
	 orig commit -> cfc5a845e62853edd36e564c23c64588f4adcae6 ......
checking fbc546e238785fae3085a8e0318fa628281c61fc ......
	 orig commit -> 4cc9b9d627af2c443cf98e651e3738d84f991cec ......
checking 1732e58646b4b2adf0cfaff757365a4472e4b6ab ......
	 orig commit -> 4231430da9607fb2eb7ea92f3b93ceef3bc2ed93 ......
checking 49ba9e222aa5a079cf89d2a86da9838aa0213a60 ......
	 orig commit -> 81f577542af15640cbcb6ef68baa4caa610cbbfc ......
checking 8af97f7c418ddc9c3e7a649414c70e798b134e50 ......
	 orig commit -> cc85f7a634cfaf9f0713c6aa06d08817424db37a ......
checking c3f8a5000e75da9dc40215bf1acf3aa5515c75fe ......
	 orig commit -> 06ab30034ed9c200a570ab13c017bde248ddb2a6 ......
checking aef1181d08fd293398fb3bda39cca05dc07c95e0 ......
	 orig commit -> da10816e3d923565b470fec78a674baba794ed33 ......
checking fa8fcbe38317a90094a29120ea959fb361b895fb ......
	 orig commit -> 599151336638d57b98d92338aa59c048e3a3e97d ......
checking d0cc6515b1238f90c61b713160e94ff768b43325 ......
	 orig commit -> 7ee96216c31aabe1eb42fb91ff50dae9fcd014b2 ......
checking 1963ffef4a1a92a07773bf8a30ce1224dd861bd5 ......
	 orig commit -> 462b3f161beb62eeb290f4ec52f5ead29a2f8ac7 ......
checking fc3e5563763429755a652b365b04c3cca562b92b ......
	 orig commit -> 6639484ddaf6707b41082c9fa9ca9af342df6402 ......
checking 9f080d37c73948b187698c368cc87b191afd269a ......
	 orig commit -> 61595dca742a9ba9a4c998b9af1f468adc816275 ......
checking 2f32c8c003b35510b4b4515e70046e6a6e5967ca ......
	 orig commit -> 07905298e4d5777eb58516cdc242f7ac1ca387a2 ......
checking fbb430c51d7ac989b79bf1adb40cce7af581682a ......
	 orig commit -> 07d86ca93db7e5cdf4743564d98292042ec21af7 ......
checking bb1066e621a195c5e9013f05b4f3d7dc46809923 ......
	 orig commit -> ad678b4ccd41aa51cf5f142c0e8cffe9d61fc2bf ......
checking 29a928ff8c1055ab34a0b40d285cbb2e4b0a4fd0 ......
	 orig commit -> 5327d6ba975042fd3da50ac6e94d1e9551ebeaec ......
checking 11e7913d54c97bd999724264ac7f2d78900bbbd5 ......
	 orig commit -> 1b3c993a699bed282e47c3f7c49d539c331dae04 ......
checking 1eb90d90eadad21dfae3d31b7865abe17e9c5d91 ......
	 orig commit -> 5a4ff9ec8d6edd2ab1cfe8ce6a080d6e57cbea9a ......
checking dd0d511548ea1ad8f233e9fa4a4acfb83af9bd29 ......
	 orig commit -> 203cbf77de59fc8f13502dcfd11350c6d4a5c95f ......
checking 2c4b95da2335088ba85dcdfa39d374491d76fbba ......
	 orig commit -> 1501efadc524a0c99494b576923091589a52d2a4 ......
checking 3809abbacf588dc2fa020a984ddf13d9ab71e752 ......
	 orig commit -> 329d88da4df9a96da43018aceabd3a06e6a7e7ae ......
		 329d88da4df9a96da43018aceabd3a06e6a7e7ae has problem. Fixes commit -> 1cb26030f3494a8bb3c953d45cffba838ec4d454
checking 702ea6de7132e65ca41e8055a02910a695b447e7 ......
	 orig commit -> e60fc5aa608eb38b47ba4ee058f306f739eb70a0 ......
checking 583097a3b2cef0bee535c8acc4189ceacb8bb6c6 ......
	 orig commit -> b0e551313ebde17764f3a5ed273df524d1e7e690 ......
checking a623f87a72de35096a9eae7cc7764d0c9533c2e9 ......
	 orig commit -> 8d91f8b15361dfb438ab6eb3b319e2ded43458ff ......
checking bf46aa7ec7417cab8b4402dc8117e17af54f5d8e ......
	 orig commit -> 6ccd83714a009ee301b50c15f6c3a5dc1f30164c ......
checking cc6d98006b1a713abaa8852de02a3c6f7ce62941 ......
	 orig commit -> 7717c6be699975f6733d278b13b7c4295d73caf6 ......
checking 695f6c8798c6c4a0be6df79082e9890b22af4d8b ......
	 orig commit -> 3460baa620685c20f5ee19afb6d99d26150c382c ......
checking ad53ae59587bcd110229d2594e059349b4306b6c ......
	 orig commit -> 8ff0ef996ca00028519c70e8d51d32bd37eb51dc ......
checking e18da11fc0f95979d14adc8e506707ed2fdab602 ......
	 orig commit -> f7a8e38f07a17be90758559fe66fe7337096053f ......
checking c13c92acfa9b46470de819db0706e4457f503399 ......
	 orig commit -> e47301b06d5a65678690f04c2248fd181db1e59a ......
checking 1463df0fa8e286d50edd897a6f61eed999031e48 ......
	 orig commit -> 9b2761cb72dc41e1948c8a5512b4efd384eda130 ......
checking e6fe2687ef2727b687f31340da8edda25ed4e472 ......
	 orig commit -> c95a51807b730e4681e2ecbdfd669ca52601959e ......
checking 7889b844ba4b9dc0b311b6daa6f6376a10fa9a75 ......
	 orig commit -> bef5502de074b6f6fa647b94b73155d675694420 ......
checking 5feecbf0568ab2395e57d0bdd9eb4babb58e4b1f ......
	 orig commit -> e7fdd52779a6c2b49d457f452296a77c8cffef6a ......
checking bfc5caf7569e39999c6515bd9f945bde14f2990f ......
	 orig commit -> d0e5fbb01a67e400e82fefe4896ea40c6447ab98 ......
checking 9e5d4a6c799565346b677484f7348effd6f2d877 ......
	 orig commit -> 25cad69f21f5532d99e2ee73c8ab6512bcab614c ......
checking 0fc93ba93bdbd73b94c67fc6250ac6e9ae9deb97 ......
	 orig commit -> e470127e9606b1fa151c4184243e61296d1e0c0f ......
checking 001915457e3488b8c647ea77cb475e2374136a31 ......
	 orig commit -> b1b1e15ef6b80facf76d6757649dfd7295eda29f ......
checking d2081cfe624b5decaaf68088ca256ed1b140672c ......
	 orig commit -> e36f6204288088fda50d1c84830340ccb70f85ff ......
		 e36f6204288088fda50d1c84830340ccb70f85ff has problem. Fixes commit -> a7297a6a3a3322b054592e8e988981d2f5f29cc4
d0e5fbb01a67e400e82fefe4896ea40c6447ab98
commit bfc5caf7569e39999c6515bd9f945bde14f2990f
Author: Ming Lei <tom.leiming@gmail.com>
Date:   Sat Jan 23 08:05:33 2016 +0800

    block: fix bio splitting on max sectors
    
    commit d0e5fbb01a67e400e82fefe4896ea40c6447ab98 upstream.
    
    After commit e36f62042880(block: split bios to maxpossible length),
    bio can be splitted in the middle of a vector entry, then it
    is easy to split out one bio which size isn't aligned with block
    size, especially when the block size is bigger than 512.
    
    This patch fixes the issue by making the max io size aligned
    to logical block size.
    
    Fixes: e36f62042880(block: split bios to maxpossible length)
    Reported-by: Stefan Haberland <sth@linux.vnet.ibm.com>
    Cc: Keith Busch <keith.busch@intel.com>
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ming Lei <tom.leiming@gmail.com>
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 9fed24fe30c1217c640d2b38403034c2c7fdce12
Author: Ming Lei <ming.lei@canonical.com>
Date:   Fri Apr 15 18:51:28 2016 +0800

    block: loop: fix filesystem corruption in case of aio/dio
    
    commit a7297a6a3a3322b054592e8e988981d2f5f29cc4 upstream.
    
    Starting from commit e36f620428(block: split bios to max possible length),
    block core starts to split bio in the middle of bvec.
    
    Unfortunately loop dio/aio doesn't consider this situation, and
    always treat 'iter.iov_offset' as zero. Then filesystem corruption
    is observed.
    
    This patch figures out the offset of the base bvevc via
    'bio->bi_iter.bi_bvec_done' and fixes the issue by passing the offset
    to iov iterator.
    
    Fixes: e36f6204288088f (block: split bios to max possible length)
    Cc: Keith Busch <keith.busch@intel.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Signed-off-by: Ming Lei <ming.lei@canonical.com>
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit bfc5caf7569e39999c6515bd9f945bde14f2990f
Author: Ming Lei <tom.leiming@gmail.com>
Date:   Sat Jan 23 08:05:33 2016 +0800

    block: fix bio splitting on max sectors
    
    commit d0e5fbb01a67e400e82fefe4896ea40c6447ab98 upstream.
    
    After commit e36f62042880(block: split bios to maxpossible length),
    bio can be splitted in the middle of a vector entry, then it
    is easy to split out one bio which size isn't aligned with block
    size, especially when the block size is bigger than 512.
    
    This patch fixes the issue by making the max io size aligned
    to logical block size.
    
    Fixes: e36f62042880(block: split bios to maxpossible length)
    Reported-by: Stefan Haberland <sth@linux.vnet.ibm.com>
    Cc: Keith Busch <keith.busch@intel.com>
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Ming Lei <tom.leiming@gmail.com>
    Signed-off-by: Jens Axboe <axboe@fb.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 1f1c9c9befd45d61ff0a91ea78892be03a4087e7 ......
	 orig commit -> 1a093ceb053832c25b92f3cf26b957543c7baf9b ......
checking 6abc65624a647f5e27d2dbccff03335f3c28504a ......
	 orig commit -> 4f9ea86604e3ba64edd2817795798168fbb3c1a6 ......
