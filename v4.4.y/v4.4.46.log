Check from v4.4.46 to v4.4.47
Commit count: 21
checking 4686ea264f1dfec6bc5db9ef4bb9ed5babbb78cd ......
checking 384e4bf0def9092b8c30f025c6b29982e2e96c50 ......
	 orig commit -> f154be241d22298d2b63c9b613f619fa1086ea75 ......
checking 74a7c39ec627f717e3418625abd687b20da4a540 ......
	 orig commit -> 5b9f57516337b523f7466a53939aaaea7b78141b ......
checking 0492a033fb71b5ef0573aa157aadda049e8a7770 ......
	 orig commit -> 0fb44559ffd67de8517098b81f675fa0210f13f0 ......
checking e674c70bafe78f96ca63b645b7881744c82b5586 ......
	 orig commit -> 6a0b76c04ec157c88ca943debf78a8ee58469f2d ......
checking 980b9afd9eccc113edbba359d361ff4c89ab3607 ......
	 orig commit -> b6677449dff674cf5b81429b11d5c7f358852ef9 ......
		 b6677449dff674cf5b81429b11d5c7f358852ef9 has problem. Fixes commit -> 5b8d5429daa05bebef6ffd3297df3b502cc6f184
b6fe0440c63716e09cfc0d1484e3898a0f29d1d1
commit e29066778bc28eff5f63616800c6b60f12c87267
Author: Ido Schimmel <idosch@mellanox.com>
Date:   Mon Apr 10 14:59:28 2017 +0300

    bridge: netlink: register netdevice before executing changelink
    
    
    [ Upstream commit 5b8d5429daa05bebef6ffd3297df3b502cc6f184 ]
    
    Peter reported a kernel oops when executing the following command:
    
    $ ip link add name test type bridge vlan_default_pvid 1
    
    [13634.939408] BUG: unable to handle kernel NULL pointer dereference at
    0000000000000190
    [13634.939436] IP: __vlan_add+0x73/0x5f0
    [...]
    [13634.939783] Call Trace:
    [13634.939791]  ? pcpu_next_unpop+0x3b/0x50
    [13634.939801]  ? pcpu_alloc+0x3d2/0x680
    [13634.939810]  ? br_vlan_add+0x135/0x1b0
    [13634.939820]  ? __br_vlan_set_default_pvid.part.28+0x204/0x2b0
    [13634.939834]  ? br_changelink+0x120/0x4e0
    [13634.939844]  ? br_dev_newlink+0x50/0x70
    [13634.939854]  ? rtnl_newlink+0x5f5/0x8a0
    [13634.939864]  ? rtnl_newlink+0x176/0x8a0
    [13634.939874]  ? mem_cgroup_commit_charge+0x7c/0x4e0
    [13634.939886]  ? rtnetlink_rcv_msg+0xe1/0x220
    [13634.939896]  ? lookup_fast+0x52/0x370
    [13634.939905]  ? rtnl_newlink+0x8a0/0x8a0
    [13634.939915]  ? netlink_rcv_skb+0xa1/0xc0
    [13634.939925]  ? rtnetlink_rcv+0x24/0x30
    [13634.939934]  ? netlink_unicast+0x177/0x220
    [13634.939944]  ? netlink_sendmsg+0x2fe/0x3b0
    [13634.939954]  ? _copy_from_user+0x39/0x40
    [13634.939964]  ? sock_sendmsg+0x30/0x40
    [13634.940159]  ? ___sys_sendmsg+0x29d/0x2b0
    [13634.940326]  ? __alloc_pages_nodemask+0xdf/0x230
    [13634.940478]  ? mem_cgroup_commit_charge+0x7c/0x4e0
    [13634.940592]  ? mem_cgroup_try_charge+0x76/0x1a0
    [13634.940701]  ? __handle_mm_fault+0xdb9/0x10b0
    [13634.940809]  ? __sys_sendmsg+0x51/0x90
    [13634.940917]  ? entry_SYSCALL_64_fastpath+0x1e/0xad
    
    The problem is that the bridge's VLAN group is created after setting the
    default PVID, when registering the netdevice and executing its
    ndo_init().
    
    Fix this by changing the order of both operations, so that
    br_changelink() is only processed after the netdevice is registered,
    when the VLAN group is already initialized.
    
    Fixes: b6677449dff6 ("bridge: netlink: call br_changelink() during br_dev_newlink()")
    Signed-off-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
    Signed-off-by: Ido Schimmel <idosch@mellanox.com>
    Reported-by: Peter V. Saveliev <peter@svinota.eu>
    Tested-by: Peter V. Saveliev <peter@svinota.eu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit e29066778bc28eff5f63616800c6b60f12c87267
Author: Ido Schimmel <idosch@mellanox.com>
Date:   Mon Apr 10 14:59:28 2017 +0300

    bridge: netlink: register netdevice before executing changelink
    
    
    [ Upstream commit 5b8d5429daa05bebef6ffd3297df3b502cc6f184 ]
    
    Peter reported a kernel oops when executing the following command:
    
    $ ip link add name test type bridge vlan_default_pvid 1
    
    [13634.939408] BUG: unable to handle kernel NULL pointer dereference at
    0000000000000190
    [13634.939436] IP: __vlan_add+0x73/0x5f0
    [...]
    [13634.939783] Call Trace:
    [13634.939791]  ? pcpu_next_unpop+0x3b/0x50
    [13634.939801]  ? pcpu_alloc+0x3d2/0x680
    [13634.939810]  ? br_vlan_add+0x135/0x1b0
    [13634.939820]  ? __br_vlan_set_default_pvid.part.28+0x204/0x2b0
    [13634.939834]  ? br_changelink+0x120/0x4e0
    [13634.939844]  ? br_dev_newlink+0x50/0x70
    [13634.939854]  ? rtnl_newlink+0x5f5/0x8a0
    [13634.939864]  ? rtnl_newlink+0x176/0x8a0
    [13634.939874]  ? mem_cgroup_commit_charge+0x7c/0x4e0
    [13634.939886]  ? rtnetlink_rcv_msg+0xe1/0x220
    [13634.939896]  ? lookup_fast+0x52/0x370
    [13634.939905]  ? rtnl_newlink+0x8a0/0x8a0
    [13634.939915]  ? netlink_rcv_skb+0xa1/0xc0
    [13634.939925]  ? rtnetlink_rcv+0x24/0x30
    [13634.939934]  ? netlink_unicast+0x177/0x220
    [13634.939944]  ? netlink_sendmsg+0x2fe/0x3b0
    [13634.939954]  ? _copy_from_user+0x39/0x40
    [13634.939964]  ? sock_sendmsg+0x30/0x40
    [13634.940159]  ? ___sys_sendmsg+0x29d/0x2b0
    [13634.940326]  ? __alloc_pages_nodemask+0xdf/0x230
    [13634.940478]  ? mem_cgroup_commit_charge+0x7c/0x4e0
    [13634.940592]  ? mem_cgroup_try_charge+0x76/0x1a0
    [13634.940701]  ? __handle_mm_fault+0xdb9/0x10b0
    [13634.940809]  ? __sys_sendmsg+0x51/0x90
    [13634.940917]  ? entry_SYSCALL_64_fastpath+0x1e/0xad
    
    The problem is that the bridge's VLAN group is created after setting the
    default PVID, when registering the netdevice and executing its
    ndo_init().
    
    Fix this by changing the order of both operations, so that
    br_changelink() is only processed after the netdevice is registered,
    when the VLAN group is already initialized.
    
    Fixes: b6677449dff6 ("bridge: netlink: call br_changelink() during br_dev_newlink()")
    Signed-off-by: Nikolay Aleksandrov <nikolay@cumulusnetworks.com>
    Signed-off-by: Ido Schimmel <idosch@mellanox.com>
    Reported-by: Peter V. Saveliev <peter@svinota.eu>
    Tested-by: Peter V. Saveliev <peter@svinota.eu>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@verizon.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 8f9e4ad8d7f365390a57599bbed5be066d8dd37d ......
	 orig commit -> 0dbd7ff3ac5017a46033a9d0a87a8267d69119d9 ......
checking 8051bf2890e9778428495121a5ff77330a05324b ......
	 orig commit -> 03e4deff4987f79c34112c5ba4eb195d4f9382b0 ......
checking 8a066a87025ea7bb727db28e4a273fe11ae34d35 ......
	 orig commit -> cd33b3e0da43522ff8e8f2b2b71d3d08298512b0 ......
checking 6fec199362c4d94e551d18edb9c5ad1ef83fea1d ......
	 orig commit -> 7be2c82cfd5d28d7adb66821a992604eb6dd112e ......
checking 4f5e54bdd052cb7b6f754d6e4ced0367b11af3ed ......
	 orig commit -> 8a367e74c0120ef68c8c70d5a025648c96626dff ......
checking 062b7f35ff6caf2f4ed0ee99926944aad1e1ceb1 ......
	 orig commit -> 8ec3e8a192ba6f13be4522ee81227c792c86fb1a ......
checking 7d691d89eed02101a50056a1b507e2ecaec26e4a ......
	 orig commit -> 75f01a4c9cc291ff5cb28ca1216adb163b7a20ee ......
checking b82981fb273d3d0759bff5a55449f4c22f977869 ......
	 orig commit -> 003c941057eaa868ca6fedd29a274c863167230d ......
checking ec9e993f30f6374dc69fa5ff2d8c57e7572630a8 ......
	 orig commit -> 148d3d021cf9724fcf189ce4e525a094bbf5ce89 ......
checking 40e7c725ab0f135aab0d969d9237426b55a14641 ......
	 orig commit -> 8a430ed50bb1b19ca14a46661f3b1b35f2fb5c39 ......
checking 2e84b8ce6fc3228e0589e6f1215af99613963f0d ......
	 orig commit -> ea7a80858f57d8878b1499ea0f1b8a635cc48de7 ......
checking 290db2cd517ee73bafbf4dcef34a942efdd0b1b1 ......
	 orig commit -> 28e46a0f2e03ab4ed0e23cace1ea89a68c8c115b ......
checking 811bb1b9d9ab0ac6bfdb9ae3fb7596e604114e31 ......
	 orig commit -> 400fc0106dd8c27ed84781c929c1a184785b9c79 ......
checking 9edb2d75d81be37a79d0fa84b0a7d5c5f4880b89 ......
	 orig commit -> 36bf38d158d3482119b3e159c0619b3c1539b508 ......
checking 595ac452c451b1d00dfe174011dea8b5bf65d8b0 ......
	 orig commit -> 19c0f40d4fca3a47b8f784a627f0467f0138ccc8 ......
