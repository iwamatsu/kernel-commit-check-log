Check from v4.19.1 to v4.19.2
Commit count: 362
checking 7950eb316adf792283cac5743dfe5a11e74833dc ......
checking 589c375032fc7e0d90ba554f2f16414401034eb3 ......
	 orig commit -> 9e753ba9b9b405e3902d9f08aec5f2ea58a0c317 ......
checking fcd90d7dea56f968cc540ba5b500700449799be8 ......
	 orig commit -> fc09ab7a767394f9ecdad84ea6e85d68b83c8e21 ......
checking 34d9615249671e901522c43297e1ba2ca7b54899 ......
	 orig commit -> 1ae80cf31938c8f77c37a29bbe29e7f1cd492be8 ......
checking 9a7a80fb02cc7515b273dbb4249374d6e6a35b70 ......
	 orig commit -> d2f007dbe7e4c9583eea6eb04d60001e85c6f1bd ......
checking 13794b24ef4eac7951018630b0434d24b7a2f808 ......
	 orig commit -> 943210ba807ec50aafa2fa7b13bd6d36a478969b ......
checking ab5d01b6130a4faa37a393cf828c6f65c45e7251 ......
	 orig commit -> e72bde6b66299602087c8c2350d36a525e75d06e ......
checking 0c286e9d164b4b29a50a608ef83dfd7dc312e8b2 ......
	 orig commit -> 9084cb6a24bf5838a665af92ded1af8363f9e563 ......
checking 5b7a463003f5c1feb8a45bcd087bdf0beefdb6e1 ......
	 orig commit -> 421f0922a2cfb0c75acd9746454aaa576c711a65 ......
checking 51c62a33574da61e5ce33878bedf08f47e8aa207 ......
	 orig commit -> c495144bc6962186feae31d687596d2472000e45 ......
checking dd4729566e10fb822c839e4f5568f790c7a1987e ......
	 orig commit -> 30928e9baac238a7330085a1c5747f0b5df444b4 ......
		 30928e9baac238a7330085a1c5747f0b5df444b4 has problem. Fixes commit -> d6fd0ae25c6495674dc5a41a8d16bc8e0073276d
commit b4c7c826709b7d882ec9b264d5032e887e6bd720
Author: Omar Sandoval <osandov@fb.com>
Date:   Wed Oct 31 10:06:08 2018 -0700

    Btrfs: fix missing delayed iputs on unmount
    
    [ Upstream commit d6fd0ae25c6495674dc5a41a8d16bc8e0073276d ]
    
    There's a race between close_ctree() and cleaner_kthread().
    close_ctree() sets btrfs_fs_closing(), and the cleaner stops when it
    sees it set, but this is racy; the cleaner might have already checked
    the bit and could be cleaning stuff. In particular, if it deletes unused
    block groups, it will create delayed iputs for the free space cache
    inodes. As of "btrfs: don't run delayed_iputs in commit", we're no
    longer running delayed iputs after a commit. Therefore, if the cleaner
    creates more delayed iputs after delayed iputs are run in
    btrfs_commit_super(), we will leak inodes on unmount and get a busy
    inode crash from the VFS.
    
    Fix it by parking the cleaner before we actually close anything. Then,
    any remaining delayed iputs will always be handled in
    btrfs_commit_super(). This also ensures that the commit in close_ctree()
    is really the last commit, so we can get rid of the commit in
    cleaner_kthread().
    
    The fstest/generic/475 followed by 476 can trigger a crash that
    manifests as a slab corruption caused by accessing the freed kthread
    structure by a wake up function. Sample trace:
    
    [ 5657.077612] BUG: unable to handle kernel NULL pointer dereference at 00000000000000cc
    [ 5657.079432] PGD 1c57a067 P4D 1c57a067 PUD da10067 PMD 0
    [ 5657.080661] Oops: 0000 [#1] PREEMPT SMP
    [ 5657.081592] CPU: 1 PID: 5157 Comm: fsstress Tainted: G        W         4.19.0-rc8-default+ #323
    [ 5657.083703] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS rel-1.11.2-0-gf9626cc-prebuilt.qemu-project.org 04/01/2014
    [ 5657.086577] RIP: 0010:shrink_page_list+0x2f9/0xe90
    [ 5657.091937] RSP: 0018:ffffb5c745c8f728 EFLAGS: 00010287
    [ 5657.092953] RAX: 0000000000000074 RBX: ffffb5c745c8f830 RCX: 0000000000000000
    [ 5657.094590] RDX: 0000000000000000 RSI: 0000000000000001 RDI: ffff9a8747fdf3d0
    [ 5657.095987] RBP: ffffb5c745c8f9e0 R08: 0000000000000000 R09: 0000000000000000
    [ 5657.097159] R10: ffff9a8747fdf5e8 R11: 0000000000000000 R12: ffffb5c745c8f788
    [ 5657.098513] R13: ffff9a877f6ff2c0 R14: ffff9a877f6ff2c8 R15: dead000000000200
    [ 5657.099689] FS:  00007f948d853b80(0000) GS:ffff9a877d600000(0000) knlGS:0000000000000000
    [ 5657.101032] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    [ 5657.101953] CR2: 00000000000000cc CR3: 00000000684bd000 CR4: 00000000000006e0
    [ 5657.103159] Call Trace:
    [ 5657.103776]  shrink_inactive_list+0x194/0x410
    [ 5657.104671]  shrink_node_memcg.constprop.84+0x39a/0x6a0
    [ 5657.105750]  shrink_node+0x62/0x1c0
    [ 5657.106529]  try_to_free_pages+0x1a4/0x500
    [ 5657.107408]  __alloc_pages_slowpath+0x2c9/0xb20
    [ 5657.108418]  __alloc_pages_nodemask+0x268/0x2b0
    [ 5657.109348]  kmalloc_large_node+0x37/0x90
    [ 5657.110205]  __kmalloc_node+0x236/0x310
    [ 5657.111014]  kvmalloc_node+0x3e/0x70
    
    Fixes: 30928e9baac2 ("btrfs: don't run delayed_iputs in commit")
    Signed-off-by: Omar Sandoval <osandov@fb.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    [ add trace ]
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
checking 186b52489a4fc6f08a9f746c9a73a57893a2e898 ......
	 orig commit -> 80ee54bfe8a3850015585ebc84e8d207fcae6831 ......
checking 5a1e9bf45a3ce2843bd3d008d07e7de05f3fe105 ......
	 orig commit -> 49940bdd57779c78462da7aa5a8650b2fea8c2ff ......
checking a746cfd00197146fbefc7c2d92cddba5f3c7403d ......
	 orig commit -> fb5c39d7a887108087de6ff93d3f326b01b4ef41 ......
checking 4a351e751731e1358c7ec71b18478bbd9ebdde08 ......
	 orig commit -> ad22cf6ea47fa20fbe11ac324a0a15c0a9a4a2a9 ......
checking e982beca3e4e989716dda88d215d1b96b585e542 ......
	 orig commit -> 21a94f7acf0f748599ea552af5d9ee7d7e41c72f ......
checking ea9c846f54dbf03da159a1b7566aa95e9bf1674b ......
	 orig commit -> 5ce555578e0919237fa4bda92b4670e2dd176f85 ......
		 5ce555578e0919237fa4bda92b4670e2dd176f85 has problem. Fixes commit -> a6d8654d885d7d79a3fb82da64eaa489ca332a82
commit d7068618ae1fbb80fc16bd7c58798e208a696483
Author: Filipe Manana <fdmanana@suse.com>
Date:   Tue Jan 8 11:44:41 2019 +0000

    Btrfs: fix deadlock when using free space tree due to block group creation
    
    commit a6d8654d885d7d79a3fb82da64eaa489ca332a82 upstream.
    
    When modifying the free space tree we can end up COWing one of its extent
    buffers which in turn might result in allocating a new chunk, which in
    turn can result in flushing (finish creation) of pending block groups. If
    that happens we can deadlock because creating a pending block group needs
    to update the free space tree, and if any of the updates tries to modify
    the same extent buffer that we are COWing, we end up in a deadlock since
    we try to write lock twice the same extent buffer.
    
    So fix this by skipping pending block group creation if we are COWing an
    extent buffer from the free space tree. This is a case missed by commit
    5ce555578e091 ("Btrfs: fix deadlock when writing out free space caches").
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=202173
    Fixes: 5ce555578e091 ("Btrfs: fix deadlock when writing out free space caches")
    CC: stable@vger.kernel.org # 4.18+
    Signed-off-by: Filipe Manana <fdmanana@suse.com>
    Reviewed-by: David Sterba <dsterba@suse.com>
    Signed-off-by: David Sterba <dsterba@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking e17af96eebd39a53d467c3beb6f946f64f5c3637 ......
	 orig commit -> 7ed586d0a8241e81d58c656c5b315f781fa6fc97 ......
checking 85c5f244fd3cf1d7af42525b3655d607c60a3cfb ......
	 orig commit -> 3527a018c00e5dbada2f9d7ed5576437b6dd5cfb ......
checking 8181a8f849e40f6e9de3ba14ccfa46d994cdfb4e ......
	 orig commit -> 9c7b0c2e8dbfbcd80a71e2cbfe02704f26c185c6 ......
checking d2c6df39f93efd80f932a415390c2f50d2cc1a36 ......
	 orig commit -> 0f375eed92b5a407657532637ed9652611a682f5 ......
checking 55f21e169c84461bef80f1c3ab135f8b8b14785e ......
	 orig commit -> f2d72f42d5fa3bf33761d9e47201745f624fcff5 ......
checking 1d6d4a0339675b0f2edb421191dc6518d5720be2 ......
	 orig commit -> 545e3366db823dc3342ca9d7fea803f829c9062f ......
checking 9aabbb2ecd0511872af94533c609f83c6104b0a6 ......
	 orig commit -> 553cceb49681d60975d00892877d4c871bf220f9 ......
checking 9006ad16effe24fa74c7dd1dc5b16197e1b2ece2 ......
	 orig commit -> 84de76a2fb217dc1b6bc2965cc397d1648aa1404 ......
checking 0de8cf3f9909a7d1b6c4a87805a7fa42210dc77a ......
	 orig commit -> f45c752b65af46bf42963295c332865d95f97fff ......
checking 8f2ecee5a2a2107189946b7971f5285f2f352a2b ......
	 orig commit -> 7703bdd8d23e6ef057af3253958a793ec6066b28 ......
checking 2974abff6a83a4fc94cc7c3cc40963d5aaea2926 ......
	 orig commit -> 3aa7c7a31c26321696b92841d5103461c6f3f517 ......
checking 0a7f6c7e973d82a43bd17ec2166977bdac345e2b ......
	 orig commit -> fee7acc361314df6561208c2d3c0882d663dd537 ......
checking 4d0dfd8fc83395ac06a0ba34b6f77151f2ea173d ......
	 orig commit -> 0be88e367fd8fbdb45257615d691f4675dda062f ......
checking 76e59a628e0124929fe05984c3fa0fbaf00a9b0b ......
	 orig commit -> d4e329de5e5e21594df2e0dd59da9acee71f133b ......
checking d147f4dc8a528c5fd28a5b4baa95db5c504a8e2e ......
	 orig commit -> 6ba9fc8e628becf0e3ec94083450d089b0dec5f5 ......
checking c9ee71096aeefa2dee33f02a8716449b23e7424a ......
	 orig commit -> 93bba24d4b5ad1e5cd8b43f64e66ff9d6355dd20 ......
checking 18bdce0e35c248835fe6aa3287f5fa84cc0fb65f ......
	 orig commit -> 5c06147128fbbdf7a84232c5f0d808f53153defe ......
checking cdecd48a5546dfff26d8a697de00ab99e8c20c11 ......
	 orig commit -> 374b0e2d6ba5da7fd1cadb3247731ff27d011f6f ......
checking d4f56c440d9e42c17e99f60894047ac64226aa99 ......
	 orig commit -> b72c3aba09a53fc7c1824250d71180ca154517a7 ......
checking 4f2a4e02e2b17ffd90ad4bc0e12c97b20c0e67ed ......
	 orig commit -> 65c6e82becec33731f48786e5a30f98662c86b16 ......
checking c25c6665f33b7b8293064bea645bd9e2ead9e511 ......
	 orig commit -> 3628b4ca64f24a4ec55055597d0cb1c814729f8b ......
checking 2b3171ec5ae0471bdef9dc1141b3ed8dd94c8532 ......
	 orig commit -> 18858511fd8a877303cc34c06efa461b26a0e070 ......
checking 1ebadf5ef7f51b924d4f11863c495107ccbc6827 ......
	 orig commit -> 48dc0ef19044bfb69193302fbe3a834e3331b7ae ......
checking 2dc12479fbcaf6bba2d1fe0edd84ac5c0f4c1e08 ......
	 orig commit -> 0d0352d8b3d6d7ca9a710b40e194cbbaeb841c88 ......
checking b4087c2a327530028c9b4b0fc1e7ea98f30027a0 ......
	 orig commit -> 1dc6bd5e39a29453bdcc17348dd2a89f1aa4004e ......
checking 7f9a150f91b668c6bab1af0c60e6bfada46de388 ......
	 orig commit -> 137dc5843faeacabf48fc22a8dc58c4e0b4f0927 ......
checking 142261e7b90849a5bdc039d71ae4401ee26fe13e ......
	 orig commit -> 74121b9aa3cd571ddfff014a9f47db36cae3cda9 ......
checking 9a209614d42caff106357122e640ba437bad74f8 ......
	 orig commit -> ce3bf934f919a7d675c5b7fa4cc233ded9c6256e ......
checking 9d9da6fe1f018669a0abd9d94f3810de5798a161 ......
	 orig commit -> 672ca9dd13f1aca0c17516f76fc5b0e8344b3e46 ......
checking 9632c0339b1217e280f693161498c3152c9c7bb3 ......
	 orig commit -> 940c620d6af8fca7d115de40f19870fba415efac ......
checking 64537fda9a6aad48ed26601026e1d5f2efdc95c4 ......
	 orig commit -> 2a6c7c367de82951c98a290a21156770f6f82c84 ......
checking 3f7987f818e86d660d5bbef1aa5a74294014464d ......
	 orig commit -> 463659a08d7999d5461fa45b35b17686189a70ca ......
checking b1452c51f42a29f429a0af620af6153a561c583b ......
	 orig commit -> db0340182444612bcadb98bdec22f651aa42266c ......
checking 29ba4b99ca18b1de4611555de8b001c6f9dd24eb ......
	 orig commit -> a58c37978cf02f6d35d05ee4e9288cb8455f1401 ......
checking 5501b81206ed02d36f38c503ba9212aa4a75e437 ......
	 orig commit -> ceff2f4dcd44abf35864d9a99f85ac619e89a01d ......
checking 6529dcce7920c1ac69c124c92147db2d4f73136e ......
	 orig commit -> ab83203e181015b099720aff43ffabc1812e0fb3 ......
checking 3e383b31b30327db3b76d9546fdbf8d0c3880a0f ......
	 orig commit -> e7da89926f6dc6cf855f5ffdf79ef99a1b115ca7 ......
checking 9a79eb1233e27933b351973473311f42b41e4de3 ......
	 orig commit -> 258c430456ba5f0005043762e14fc3be35983aaf ......
checking 3e2e4d05b50b5033df9d6bc7527c3fe2566f3884 ......
	 orig commit -> afeaade90db4c5dab93f326d9582be1d5954a198 ......
checking d861ec5dfe0cfda7147b1a70df0ed6b19e794c6a ......
	 orig commit -> 15644bfa195bd166d0a5ed76ae2d587f719c3dac ......
checking 73dc88fa1c68b12c5d31b28e3e49b995fce7b6a2 ......
	 orig commit -> 5c4c4505b716cb782ad7263091edc466c4d1fbd4 ......
checking e015b50253610ffefca3b8f611e5ed4796a70c6c ......
	 orig commit -> f823ce2a1202d47110a7ef86b65839f0be8adc38 ......
checking 2781b86d7e45de09befa5ace296b66787146561f ......
	 orig commit -> 490d84f6d73c12f4204241cff8651eed60aae914 ......
checking b68d405a2e6a3e8236773b12739ef684fb43d0e9 ......
	 orig commit -> 7d867a1b765e2b70815fec4964d7822a976ed349 ......
checking 94ec4487af9f08d10270bd2ad5d6802a2a42d74f ......
	 orig commit -> 7ec2b3b941a666a942859684281b5f6460a0c234 ......
		 7ec2b3b941a666a942859684281b5f6460a0c234 has problem. Fixes commit -> 490d84f6d73c12f4204241cff8651eed60aae914
commit 2781b86d7e45de09befa5ace296b66787146561f
Author: Hans Verkuil <hverkuil@xs4all.nl>
Date:   Mon Oct 15 06:14:22 2018 -0400

    media: cec: forgot to cancel delayed work
    
    commit 490d84f6d73c12f4204241cff8651eed60aae914 upstream.
    
    If the wait for completion was interrupted, then make sure to cancel
    any delayed work.
    
    This can only happen if a transmit is waiting for a reply, and you press
    Ctrl-C or reboot/poweroff or something like that which interrupts the
    thread waiting for the reply and then proceeds to delete the CEC message.
    
    Since the delayed work wasn't canceled, once it would trigger it referred
    to stale data and resulted in a kernel oops.
    
    Fixes: 7ec2b3b941a6 ("cec: add new tx/rx status bits to detect aborts/timeouts")
    
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Cc: <stable@vger.kernel.org>      # for v4.18 and up
    Signed-off-by: Mauro Carvalho Chehab <mchehab+samsung@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 587960d865b2ccaabc77fda31c77874a245590e8 ......
	 orig commit -> 6cc4a0863c9709c512280c64e698d68443ac8053 ......
checking 1ebdc3d180c8ad2a08fd5178b4852fe54191f7c9 ......
	 orig commit -> 3941552aec1e04d63999988a057ae09a1c56ebeb ......
checking d54e8a7d974a6e8fa77d493204fe671bba603149 ......
	 orig commit -> d3132b3860f6cf35ff7609a76bbcdbb814bd027c ......
checking 9130ced3952ad48ee76875c1ad5e56db906af81f ......
	 orig commit -> e81bff39489a06384822bb38ce7a59f9e365bbe9 ......
checking c1a4102e43cd5eac93dc6de0dac389cdcc17f6f0 ......
	 orig commit -> b915bf575d5b7774d0f22d57d6c143e07dcaade2 ......
checking a91394b21ddf43922ff974138446ee7920a08127 ......
	 orig commit -> d5269c4553a64b6882f2c019ae21b783a0984a83 ......
		 d5269c4553a64b6882f2c019ae21b783a0984a83 has problem. Fixes commit -> 1e2517d126171a41f801738ffd19687836cd178a
checking df7ada33d6dc57926e25e4cf1a22e80b4f385884 ......
	 orig commit -> 1bd54d851f50dea6af30c3e6ff4f3e9aab5558f9 ......
checking 43cdccfe10cafe5f2aaf895e9fd69ecfb986f003 ......
	 orig commit -> 9afc82194de9a1ce298f0d77d7d779d585bf962c ......
checking 04feb58d811be27c92745442497ea5c96999f38f ......
	 orig commit -> 250854eed5d45a73d81e4137dfd85180af6f2ec3 ......
checking 90bedf4a7c76ad7fcb002c1ecd1246a34c299af9 ......
	 orig commit -> d397dbe606120a1ea1b11b0020c3f7a3852da5ac ......
checking b0b62843d003cc1d626480520af57362a000899e ......
	 orig commit -> 3f2aa244ee1a0d17ed5b6c86564d2c1b24d1c96b ......
checking 14dd2a14e8b776db648c9ae3634f8ebe930adeaf ......
	 orig commit -> 7d321bd3542500caf125249f44dc37cb4e738013 ......
checking 32396672cbc6a72c0c5d892f71f4c35906430ad9 ......
	 orig commit -> 6f8e45f7eb1bee5efdbe4a9cfe4a45627403c5fb ......
checking 168945fe47d109df0bf327c5d09a03e74c5e6802 ......
	 orig commit -> 9844fb2e351311210e6660a9a1c62d17424a6145 ......
checking 65635b7d4dd7c0f74c3f476b4972c1202e6e9c4f ......
	 orig commit -> bc51098cdd9573bfdecfd02fc8ed474419d73ea0 ......
checking 65a060ca4bfc129bcdc1bdfbafda1396e2ce77ad ......
	 orig commit -> d197a253855d2d8e507a003880aab35c4e2473db ......
checking f3e5730821cffb21cc3f91883067f9b71871efdc ......
	 orig commit -> 7dceef78f310f5351735060d78a1777c69606016 ......
checking 7d9f3a26ea8a74c71754f430ab3b85d92f302a4b ......
	 orig commit -> c0fae7e2452b90c31edd2d25eb3baf0c76b400ca ......
checking 66eb08aea0072366d01c34e3c2870f651f0cb1e7 ......
	 orig commit -> bc276ecba132caccb1fda5863a652c15def2b8c6 ......
checking e0f5f1c89c17f41ef01e01bd0f72b168ffecf4c7 ......
	 orig commit -> dd9a8c5a87395b6f05552c3b44e42fdc95760552 ......
checking 7607e1dad579cfb16a4a025f1cd06d9e7b04c2d1 ......
	 orig commit -> 0f99153def98134403c9149128e59d3e1786cf04 ......
checking 5f489579ef918970f655b3afc19c03732f16cbc4 ......
	 orig commit -> 59fe7eaf3598a89cbcd72e645b1d08afd76f7b29 ......
checking 778af261c53b0852ba5d9e2f45d4c03f46eddee6 ......
	 orig commit -> 721fb6fbfd2132164c2e8777cc837f9b2c1794dc ......
checking a94a2e3b59038e290956730741148e4173da3c5b ......
	 orig commit -> 786fa584eda86d6598db3b87c61dc81f68808d11 ......
checking 8f882a6b0b9336da07b9610abb1dbcc9286cc7a1 ......
	 orig commit -> 3d4e738311327bc4ba1d55fbe2f1da3de4a475f9 ......
checking fceb0d85246e9378dacc70deaee7e5c304558728 ......
	 orig commit -> 33c2865f8d011a2ca9f67124ddab9dc89382e9f1 ......
checking b42128078cfc1c84a53547d31126fdb2e188b9cb ......
	 orig commit -> 800a7340ab7dd667edf95e74d8e4f23a17e87076 ......
checking 86edf5629edc161a5fbe6c5d9179f7fe8629c557 ......
	 orig commit -> 93f38b6fae0ea8987e22d9e6c38f8dfdccd867ee ......
checking 18c1d28f359cd6c7b26ef9856a61427d63bedfcc ......
	 orig commit -> bb6ad5572c0022e17e846b382d7413cdcf8055be ......
checking b71f9663a7babdefdc54c7fdb83e89d2b2b9ec42 ......
	 orig commit -> bd8d725078867cda250fe94b9c5a067b4a64ca74 ......
checking d99bbbf1eedd99af73a869f11ae13392331b1aa9 ......
	 orig commit -> fdbd1a2e4a71adcb1ae219fcfd964930d77a7f84 ......
checking 3a1c13e182977bab99a8ce7944b8d62129bc0336 ......
	 orig commit -> 943cff67b842839f4f35364ba2db5c2d3f025d94 ......
checking d9e1cdc8b0ff6083103ef3c02e2b5163f52cc061 ......
	 orig commit -> 5bf59773aaf36dd62117dc83d50e1bbf9ef432da ......
checking c6d2e2023c2c0dd91cf8ba18fe2fa888aceb0f88 ......
	 orig commit -> 84b59f6487d82d3ab4247a099aba66d4d17e8b08 ......
checking e6d2f788cb714c1675645813feee23306ad39e73 ......
	 orig commit -> 746a923b863a1065ef77324e1e43f19b1a3eab5c ......
checking e945325eb75fa9f27727a3598dd41e2273ddf1a1 ......
	 orig commit -> 277fcdb2cfee38ccdbe07e705dbd4896ba0c9930 ......
checking 93e2e86745480686f336d8c5ea699ca4125b49f8 ......
	 orig commit -> 926674de6705f0f1dbf29a62fd758d0977f535d6 ......
checking 108b981d48f115144ab13e056cd16f828728e561 ......
	 orig commit -> 1e77a8c204c9d1b655c61751b8ad0fde22421dbb ......
checking eb7814c36f49219f71d8cae91150c3e000c1531a ......
	 orig commit -> 2c887635cd6ab3af619dc2be94e5bf8f2e172b78 ......
checking b8e2aea1d4efa0ecfcfcd54c799678e581ed835b ......
	 orig commit -> a007734618fee1bf35556c04fa498d41d42c7301 ......
checking cf6ab9439838cdcae65d3ad86361fca251786359 ......
	 orig commit -> aea835f2dc8a682942b859179c49ad1841a6c8b9 ......
checking b7e95f41121dcff8d2d61fe31d793b333c82b8a5 ......
	 orig commit -> bc1b45326223e7e890053cf6266357adfa61942d ......
checking f809deba3e5771b177695edc572232969744c226 ......
	 orig commit -> d3fa21c73c391975488818b085b894c2980ea052 ......
checking 57629351f0a627101ac85419bb7b25c4af743809 ......
	 orig commit -> 8911a43bc198877fad9f4b0246a866b26bb547ab ......
checking 1e36467f654e694c4c3421fa437a3bd28088adca ......
	 orig commit -> 6a32c2469c3fbfee8f25bcd20af647326650a6cf ......
checking 59571785018d22893eaaf266ecae9aa9c12343c4 ......
	 orig commit -> da5a3ce66b8bb51b0ea8a89f42aac153903f90fb ......
checking 3e286d39ccd799e271c215b2e6633f19d34d910b ......
	 orig commit -> fd2ef358282c849c193aa36dadbf4f07f7dcd29b ......
checking daca89ecdb72c686127155b61857937fe43cd847 ......
	 orig commit -> 86a2d59841ab0b147ffc1b7b3041af87927cf312 ......
checking f968acd737c108c308425276bbda43a9ded0211e ......
	 orig commit -> aab8d0520e6e7c2a61f71195e6ce7007a4843afb ......
checking fa5466d73cae9f663f9d8ebdb16d567e2354e82b ......
	 orig commit -> 22146c3ce98962436e401f7b7016a6f664c9ffb5 ......
checking 8b259b99654cbd19b5958061ed6190dc514d6286 ......
	 orig commit -> a408e4a86b36bf98ad15b9ada531cf0e5118ac67 ......
checking 13d3c98fa8037ecd5c8d4ed165150fad95f59e6f ......
	 orig commit -> 1e4c8dafbb6bf72fb5eca035b861e39c5896c2b7 ......
checking d2e97f026b1b8948a9782c4c42a87a51da455a55 ......
	 orig commit -> ae62c16e105a869524afcf8a07ee85c5ae5d0479 ......
checking 30391e41deef661849d6c2d345a8c87eb4fdcf5a ......
	 orig commit -> fa76da461bb0be13c8339d984dcf179151167c8f ......
checking 3252b60cf810aec6460f4777a7730bfc70448729 ......
	 orig commit -> 578bdaabd015b9b164842c3e8ace9802f38e7ecc ......
		 578bdaabd015b9b164842c3e8ace9802f38e7ecc has problem. Fixes commit -> 733ac4f9935c4b257aff2ec476e6c20665daf6c2
checking 4f1f95224687bf80a553fbaeac591cbd49e44db2 ......
	 orig commit -> 4a34e3c2f2f48f47213702a84a123af0fe21ad60 ......
checking 964f374b3ba7282c6703bbf05ec4d7d50fbe0c72 ......
	 orig commit -> 5a8dedfa3276e88c5865f265195d63d72aec3e72 ......
checking 0b5fdbbe55754da5899431057109a26ac148700d ......
	 orig commit -> a788848116454d753b13a4888e0e31ada3c4d393 ......
checking 94c7bb6598567a663835efdbf8377ee4fbe9426d ......
	 orig commit -> 331351f89c36bf7d03561a28b6f64fa10a9f6f3a ......
checking c2ff394968b000d2e5cf692cab2865f66606761c ......
	 orig commit -> fbe1a850b3b1522e9fc22319ccbbcd2ab05328d2 ......
checking 04eb71942e858c840d1e3a63d81d9bec83b157c5 ......
	 orig commit -> a36700589b85443e28170be59fa11c8a104130a5 ......
checking 392d51e0b5b86280a6e95f2849c0caabe064e884 ......
	 orig commit -> 0ab93e9c99f8208c0a1a7b7170c827936268c996 ......
checking 33d19d93cd128624b961f94eb3e1999c532c2432 ......
	 orig commit -> d0c9606b31a21028fb5b753c8ad79626292accfd ......
checking 1e37e70dfc0e0a80f12cd3c3bace256dbcf908af ......
	 orig commit -> aeae4f3e5c38d47bdaef50446dc0ec857307df68 ......
checking 6be746c4ef136e2afbfcb233f3fd9a50f98c58ec ......
	 orig commit -> 6d0af44a82be87c13f2320821e9fbb8b8cf5a56f ......
checking 51819131edabfbb96b8495b875a73d58a10d53cf ......
	 orig commit -> 8f18973877204dc8ca4ce1004a5d28683b9a7086 ......
checking 5d1267c68169de90ef1157751d37ac7d3ee3470f ......
	 orig commit -> 432de7fd7630c84ad24f1c2acd1e3bb4ce3741ca ......
checking 468d9f010f16a107db78e8ccf78f39049486a711 ......
	 orig commit -> 8960de4a5ca7980ed1e19e7ca5a774d3b7a55c38 ......
checking b599ba1309c40fd186f829c2b71d0bcca45365e2 ......
	 orig commit -> f11274396a538b31bc010f782e05c2ce3f804c13 ......
checking 19785f4c18b72c21f2f9d2539d4b59ef12d109de ......
	 orig commit -> 11db8173dbab7a94cf5ba5225fcedbfc0f3b7e54 ......
checking f77c84673d8a85d802c15c855fb5705a3640d5fc ......
	 orig commit -> 7bb185edb0306bb90029a5fa6b9cff900ffdbf4b ......
checking 15f255ec0f768bebebd8e3d9dfaad0afb9e78d4d ......
	 orig commit -> 33458eaba4dfe778a426df6a19b7aad2ff9f7eec ......
checking ce1daaa84d87a633a0668307dfa279037d6e8fcd ......
	 orig commit -> 182a79e0c17147d2c2d3990a9a7b6b58a1561c7a ......
checking 0d0413e92f4434b1e490f78aa8bf75f6a7122e52 ......
	 orig commit -> dc7ac6c4cae3b58724c2f1e21a7c05ce19ecd5a8 ......
checking 99a3b22447272258a8ea114db493ea4dcd658c9c ......
	 orig commit -> 625ef8a3acd111d5f496d190baf99d1a815bd03e ......
checking b2af09dd37433a10c5f626339ae406f135f8bfb2 ......
	 orig commit -> 18aded17492088962ef43f00825179598b3e8c58 ......
checking 8c448126af0e8fb16ef43303aa30890baa6f4e78 ......
	 orig commit -> 3df629d873f8683af6f0d34dfc743f637966d483 ......
checking 25881163ae1f2d26458a6c57aabff41787ef8a69 ......
	 orig commit -> ccd3c4373eacb044eb3832966299d13d2631f66f ......
checking 3b0b2820a64f2d0e9c47ef611ac3c5c44740fe21 ......
	 orig commit -> 9a59739bd01f77db6fbe2955a4fce165f0f43568 ......
		 9a59739bd01f77db6fbe2955a4fce165f0f43568 has problem. Fixes commit -> 6325e01b6cdf4636b721cf7259c1616e3cf28ce2
commit ec485378a4c48c5c08bcc95b3d71233f88db4066
Author: Adit Ranadive <aditr@vmware.com>
Date:   Wed Jan 9 23:08:49 2019 +0000

    RDMA/vmw_pvrdma: Return the correct opcode when creating WR
    
    commit 6325e01b6cdf4636b721cf7259c1616e3cf28ce2 upstream.
    
    Since the IB_WR_REG_MR opcode value changed, let's set the PVRDMA device
    opcodes explicitly.
    
    Reported-by: Ruishuang Wang <ruishuangw@vmware.com>
    Fixes: 9a59739bd01f ("IB/rxe: Revise the ib_wr_opcode enum")
    Cc: stable@vger.kernel.org
    Reviewed-by: Bryan Tan <bryantan@vmware.com>
    Reviewed-by: Ruishuang Wang <ruishuangw@vmware.com>
    Reviewed-by: Vishnu Dasa <vdasa@vmware.com>
    Signed-off-by: Adit Ranadive <aditr@vmware.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking b8a7fdb121274fb5c69a56fcaf19e2be1a062f81 ......
	 orig commit -> 013c2403bf32e48119aeb13126929f81352cc7ac ......
checking 8d564c8c60c505fc0d484a14a2965a39d5dd721e ......
	 orig commit -> 747df19747bc9752cd40b9cce761e17a033aa5c2 ......
checking 77a651186ed5ee9aff6e3811b0b6e757a44d8eeb ......
	 orig commit -> 9c80c5a8831471e0a3e139aad1b0d4c0fdc50b2f ......
checking 6c1400b39151625c356e84d44c9e9bfb67109dbd ......
	 orig commit -> 91ed7ac444ef749603a95629a5ec483988c4f14b ......
checking 8f696986dbf2f9034d90eff19cb29996b65cbf50 ......
	 orig commit -> 5d394eee2c102453278d81d9a7cf94c80253486a ......
checking 4f1a55a4f990016406147cf3e0c9487bf83e50f0 ......
	 orig commit -> b6eae0f61db27748606cc00dafcfd1e2c032f0a5 ......
checking 7a338b87b93128f6bf846c9aec27ffe0b93b0580 ......
	 orig commit -> 38fe73cc2c96fbc9942b07220f2a4f1bab37392d ......
checking fd594155e491a545255dc0d118cb80f8edfce126 ......
	 orig commit -> 25ab0bc334b43bbbe4eabc255006ce42a9424da2 ......
checking 1ff435098faacd4f936a440d175bf8409352f884 ......
	 orig commit -> 27d8d2d7a9b7eb05c4484b74b749eaee7b50b845 ......
checking 247a9fa4b41842bc2dc3495a7af14e49aad315f6 ......
	 orig commit -> 076ed3da0c9b2f88d9157dbe7044a45641ae369e ......
checking 3fa2721424654eae32d14a8374420aa17a0c1255 ......
	 orig commit -> 3d71c3f1f50cf309bd20659422af549bc784bfff ......
checking 77f61e7043bfd7ee5ef954383591b3ae544988b0 ......
	 orig commit -> 5289976ad887deb07c76df7eecf553c264aeebed ......
checking 11abbcd397a4688f020397e9dd978303370004dc ......
	 orig commit -> afc92514a34c7414b28047b1205a6b709103c699 ......
checking 512307dd4f0976fa83d7cf576d10c426869bb3f5 ......
	 orig commit -> 1b6af2f58c2b1522e0804b150ca95e50a9e80ea7 ......
checking 08c7103daa0d2da9b693a9fddf139ba33d0de886 ......
	 orig commit -> e28fd56ad5273be67d0fae5bedc7e1680e729952 ......
checking f253f6def4bc2c01d1a2b2f7c5ec82b8d18ba53d ......
	 orig commit -> 6528d88047801b80d2a5370ad46fb6eff2f509e0 ......
checking c43c81bef7d4c9150514b80af4a233f0cb6e60b0 ......
	 orig commit -> e6111161c0a02d58919d776eec94b313bb57911f ......
checking 82f76b056d01fb3bd936278ddd253f58ef3155e5 ......
	 orig commit -> 7deecbda3026f5e2a8cc095d7ef7261a920efcf2 ......
checking 99d255861e288b40cb88d0a186ea1b22d9e1eddf ......
	 orig commit -> a856531951dc8094359dfdac21d59cee5969c18e ......
		 a856531951dc8094359dfdac21d59cee5969c18e has problem. Fixes commit -> d3132b3860f6cf35ff7609a76bbcdbb814bd027c
commit d54e8a7d974a6e8fa77d493204fe671bba603149
Author: Juergen Gross <jgross@suse.com>
Date:   Thu Nov 8 08:35:06 2018 +0100

    xen: fix xen_qlock_wait()
    
    commit d3132b3860f6cf35ff7609a76bbcdbb814bd027c upstream.
    
    Commit a856531951dc80 ("xen: make xen_qlock_wait() nestable")
    introduced a regression for Xen guests running fully virtualized
    (HVM or PVH mode). The Xen hypervisor wouldn't return from the poll
    hypercall with interrupts disabled in case of an interrupt (for PV
    guests it does).
    
    So instead of disabling interrupts in xen_qlock_wait() use a nesting
    counter to avoid calling xen_clear_irq_pending() in case
    xen_qlock_wait() is nested.
    
    Fixes: a856531951dc80 ("xen: make xen_qlock_wait() nestable")
    Cc: stable@vger.kernel.org
    Reported-by: Sander Eikelenboom <linux@eikelenboom.it>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Reviewed-by: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Tested-by: Sander Eikelenboom <linux@eikelenboom.it>
    Signed-off-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 9dc8cf0df2cde550b7bad97bf696c087bb39f207 ......
	 orig commit -> 2ac2a7d4d9ff4e01e36f9c3d116582f6f655ab47 ......
checking a3e7530f44c03b4fc43ba6a0c26e07c711a0b20a ......
	 orig commit -> 3aa6c19d2f38be9c6e9a8ad5fa8e3c9d29ee3c35 ......
checking f6a2cd180adb0c32efbaecf56dfe27e9e7a40360 ......
	 orig commit -> f92898e7f32e3533bfd95be174044bc349d416ca ......
