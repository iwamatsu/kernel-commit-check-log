checking 96db90800c06d3fe3fa08eb6222fe201286bb778 ......
checking d873e63e0a01906e7a3610201c3162d694c72740 ......
	 orig commit -> a8f438c684eaa4cbe6c98828eb996d5ec53e24fb ......
checking 5724c6ad1c4ca8396144e16342a356e61d837c3f ......
	 orig commit -> c2c3f42df4dd9bb231d756bacb0c897f662c6d3c ......
checking 644fefe4c6a7c892f85948b5c134c72cec4c76e4 ......
	 orig commit -> 3cca8ef5f774cbd61c8db05d9aa401de9bb59c66 ......
checking f8248ad512b61bef934f0c4be3a7983b85f4bf08 ......
	 orig commit -> dc29a1c187eedc1d498cb567c44bbbc832b009cb ......
checking 905fa2f2ffad7186df9c4997b473a6376f680f99 ......
	 orig commit -> bad1774ed41e98a43074e50e7d5ac9e1e848d99a ......
checking c59dc6cf4fd98c8a9ebf6f807167550eb2e029fb ......
	 orig commit -> aa4bb8b8838ffcc776a79f49a4d7476b82405349 ......
checking 016a8fc59d14c8b6aebb0ef1405b1cb5275192a3 ......
	 orig commit -> 92aa39e9dc77481b90cbef25e547d66cab901496 ......
checking 38084377af4fc8093f02a47e43124579affa7b16 ......
	 orig commit -> c26b5aa8ef0d46035060fded475e6ab957b9f69f ......
checking 9365cdf8db5139f63ffd51fc2743c90cb95fd991 ......
	 orig commit -> b97b3d9fb57860a60592859e332de7759fd54c2e ......
checking 5a2261ed3a29a180e006526718acb5712cf5bcc7 ......
	 orig commit -> c9a8e5fce009e3c601a43c49ea9dbcb25d1ffac5 ......
checking 5e8c28f4fd641fbc9b1f13448ed7e72019c673f6 ......
	 orig commit -> 4d54954a197175c0dcb3c82af0c0740d0c5f827a ......
checking e7a121e34c79bca171e5076a4c30a17d9966e88f ......
	 orig commit -> 25bbe21bf427a81b8e3ccd480ea0e1d940256156 ......
checking 9dec38554aa876700acb851b35ee0c5e28841e03 ......
	 orig commit -> c63ae43ba53bc432b414fd73dd5f4b01fcb1ab43 ......
checking db89fc007b2338ba80336c4ae70687c968267b5b ......
	 orig commit -> 1a413646931cb14442065cfc17561e50f5b5bb44 ......
checking b44fd1268bd2ffa0ae72b647c96fea44eac9cd98 ......
	 orig commit -> 9d7899999c62c1a81129b76d2a6ecbc4655e1597 ......
checking 510066729ba42381c033e4cf4492f5055cc56880 ......
	 orig commit -> ca0246bb97c23da9d267c2107c07fb77e38205c9 ......
checking 43b2ceb0d4e0147b114cb1d0112a988cbb81ecbc ......
	 orig commit -> 33412b8673135b18ea42beb7f5117ed0091798b6 ......
checking f5c632cfc4240a3df15b0cefed12961f4422b329 ......
	 orig commit -> 437ccdc8ce629470babdda1a7086e2f477048cbd ......
checking b5ccf0038f34a5a207d9c33d8cc1e40b2faf6725 ......
	 orig commit -> e39d8a186ed002854196668cb7562ffdfbc6d379 ......
checking 2bc40f89f47e3b6fb63a2b186073ef1ce75dca53 ......
	 orig commit -> c2b94c72d93d0929f48157eef128c4f9d2e603ce ......
checking 4dc8439068731e22ba02cebb4fdd0d1ce3b362f6 ......
	 orig commit -> c837243ff4017f493c7d6f4ab57278d812a86859 ......
checking 021e2f3fc985842d756e292b7aaa1a44a8d41fd9 ......
	 orig commit -> ef3a61406618291c46da168ff91acaa28d85944c ......
checking fc9b1d7f791f4975f196e60280dd0524b31cb98a ......
	 orig commit -> f157d411a9eb170d2ee6b766da7a381962017cc9 ......
checking ab1a520669381c68b542f5c110a01a514ac28950 ......
	 orig commit -> e3d5e573a54dabdc0f9f3cb039d799323372b251 ......
checking 487d58a9c3e5b2357b8bef6461ae228ad8e73f83 ......
	 orig commit -> ca474b73896bf6e0c1eb8787eb217b0f80221610 ......
checking 08f94d0628c361937d463061cef8d0b9b0a1c718 ......
	 orig commit -> c10a8de0d32e95b0b8c7c17b6dc09baea5a5a899 ......
checking 08fbd4e011ef27e662f26a5ee34ccc54e4eff6bf ......
	 orig commit -> c469933e772132aad040bd6a2adc8edf9ad6f825 ......
checking b771863247e812b1564d852190d61472f603181f ......
	 orig commit -> 43c6494fa1499912c8177e71450c0279041152a6 ......
checking 73fd491d770865df4ef34232fce28db8afcb13be ......
	 orig commit -> de7b75d82f70c5469675b99ad632983c50b6f7e7 ......
checking c587ba480e12c6efdd81622fa1a3f865093dcbf5 ......
	 orig commit -> 508a1c4df085a547187eed346f1bfe5e381797f1 ......
checking 49bcb0415da9112a60f30e6a94b7cc78c6c97257 ......
	 orig commit -> 9bde0afb7a906f1dabdba37162551565740b862d ......
checking b411f9463a781a702246514402b897c9cd87f5f0 ......
	 orig commit -> fbb974ba693bbfb4e24a62181ef16d4e45febc37 ......
checking 121f89dd7024bd90e5b1ee25258345a45075a849 ......
	 orig commit -> 6ef28a04d1ccf718eee069b72132ce4aa1e52ab9 ......
checking 8d976d7a883cfc6bdb1199e6b6af20c211facbba ......
	 orig commit -> 28c5bcf74fa07c25d5bd118d1271920f51ce2a98 ......
checking c7ae5115e32a4ae968291eb55e710f9d3c90793f ......
	 orig commit -> e34ff8edcae89922d187425ab0b82e6a039aa371 ......
checking 3d57a04fbd6d97a921030fdee7857485e34a94d0 ......
	 orig commit -> f8d294324598ec85bea2779512e48c94cbe4d7c6 ......
checking 08609aace6bb0a9604bcffeff621d8830d5250a1 ......
	 orig commit -> af31b04b67f4fd7f639fd465a507c154c46fc9fb ......
checking c4b25ef590f5bc8e4763612e249be67383432064 ......
	 orig commit -> a1705f02704cd8a24d434bfd0141ee8142ad277a ......
checking 93620bc4de8a00aedc08c34728ea5a472989d6ef ......
	 orig commit -> e91b162d2868672d06010f34aa83d408db13d3c6 ......
checking c74e3fc6d0c3dc22a4022c9729cf269278fcdde5 ......
	 orig commit -> ed3a2b74f3eb34c84c8377353f4730f05acdfd05 ......
checking 5922ab4adc13203f745bb82557e0ffd49c4a1cbb ......
	 orig commit -> 4bc51e1e350cd4707ce6e551a93eae26d40b9889 ......
checking 71ab26e917de919b0120738955d5734d02e58d73 ......
	 orig commit -> e39f9dd8206ad66992ac0e6218ef1ba746f2cce9 ......
		 e39f9dd8206ad66992ac0e6218ef1ba746f2cce9 has problem. Fixes commit -> 614b1868a125a0ba24be08f3a7fa832ddcde6bca
commit cd9ff62bad88456448016ad5d542457147f75798
Author: Jerome Brunet <jbrunet@baylibre.com>
Date:   Tue Nov 13 11:55:36 2018 +0100

    pinctrl: meson: fix pull enable register calculation
    
    [ Upstream commit 614b1868a125a0ba24be08f3a7fa832ddcde6bca ]
    
    We just changed the code so we apply bias disable on the correct
    register but forgot to align the register calculation. The result
    is that we apply the change on the correct register, but possibly
    at the incorrect offset/bit
    
    This went undetected because offsets tends to be the same between
    REG_PULL and REG_PULLEN for a given pin the EE controller. This
    is not true for the AO controller.
    
    Fixes: e39f9dd8206a ("pinctrl: meson: fix pinconf bias disable")
    Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
    Acked-by: Neil Armstrong <narmstrong@baylibre.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
checking 20663629f6ae7bc072a8bbc658721bd99626a26d ......
	 orig commit -> b469e7e47c8a075cc08bcd1e85d4365134bdcdd5 ......
checking 1dc3c17cdb9fb1dd9ff95c6696f7c13821836cd2 ......
	 orig commit -> 007d1e8395eaa59b0e7ad9eb2b53a40859446a88 ......
checking 6763372b816c4bf98f6f103bba4c4bf47e3ae0d8 ......
	 orig commit -> a0e0cb82804a6a21d9067022c2dfdf80d11da429 ......
checking 87403e35bc56d3c7fa626c1ce1eaeda30763347c ......
	 orig commit -> 4abb951b73ff0a8a979113ef185651aa3c8da19b ......
		 4abb951b73ff0a8a979113ef185651aa3c8da19b has problem. Fixes commit -> c5781ffbbd4f742a58263458145fe7f0ac01d9e0
commit d4b4aeea5506349a68adc9d2c372c8fa2416d790
Author: Erik Schmauss <erik.schmauss@intel.com>
Date:   Mon Apr 8 13:42:26 2019 -0700

    ACPICA: Namespace: remove address node from global list after method termination
    
    commit c5781ffbbd4f742a58263458145fe7f0ac01d9e0 upstream.
    
    ACPICA commit b233720031a480abd438f2e9c643080929d144c3
    
    ASL operation_regions declare a range of addresses that it uses. In a
    perfect world, the range of addresses should be used exclusively by
    the AML interpreter. The OS can use this information to decide which
    drivers to load so that the AML interpreter and device drivers use
    different regions of memory.
    
    During table load, the address information is added to a global
    address range list. Each node in this list contains an address range
    as well as a namespace node of the operation_region. This list is
    deleted at ACPI shutdown.
    
    Unfortunately, ASL operation_regions can be declared inside of control
    methods. Although this is not recommended, modern firmware contains
    such code. New module level code changes unintentionally removed the
    functionality of adding and removing nodes to the global address
    range list.
    
    A few months ago, support for adding addresses has been re-
    implemented. However, the removal of the address range list was
    missed and resulted in some systems to crash due to the address list
    containing bogus namespace nodes from operation_regions declared in
    control methods. In order to fix the crash, this change removes
    dynamic operation_regions after control method termination.
    
    Link: https://github.com/acpica/acpica/commit/b2337200
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=202475
    Fixes: 4abb951b73ff ("ACPICA: AML interpreter: add region addresses in global list during initialization")
    Reported-by: Michael J Gruber <mjg@fedoraproject.org>
    Signed-off-by: Erik Schmauss <erik.schmauss@intel.com>
    Signed-off-by: Bob Moore <robert.moore@intel.com>
    Cc: 4.20+ <stable@vger.kernel.org> # 4.20+
    Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking d5a9ba4324d5263b7b86cb8fd4779d3f159663db ......
	 orig commit -> e05237f9da42ee52e73acea0bb082d788e111229 ......
checking 24e5589791d09214e31335ae2b581c668d4803b7 ......
	 orig commit -> cbffaf7aa09edbaea2bc7dc440c945297095e2fd ......
		 cbffaf7aa09edbaea2bc7dc440c945297095e2fd has problem. Fixes commit -> a55234dabe1f72cf22f9197980751d37e38ba020
22233f7bf2c99ef52ec19d30876a12d2f725972e
commit 116a9e31237cd99c8aac653a3b08f41f9c5b90e7
Author: Marc Kleine-Budde <mkl@pengutronix.de>
Date:   Wed Nov 28 15:31:37 2018 +0100

    can: flexcan: FLEXCAN_IFLAG_MB: add () around macro argument
    
    [ Upstream commit 22233f7bf2c99ef52ec19d30876a12d2f725972e ]
    
    This patch fixes the following checkpatch warning:
    
    | Macro argument 'x' may be better as '(x)' to avoid precedence issues
    
    Fixes: cbffaf7aa09e ("can: flexcan: Always use last mailbox for TX")
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Sasha Levin <sashal@kernel.org>
commit 6f4f2a443d87e964ebdbb2543cbd7df285cd6080
Author: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
Date:   Fri Jan 11 12:20:41 2019 +0100

    can: flexcan: fix NULL pointer exception during bringup
    
    commit a55234dabe1f72cf22f9197980751d37e38ba020 upstream.
    
    Commit cbffaf7aa09e ("can: flexcan: Always use last mailbox for TX")
    introduced a loop letting i run up to (including) ARRAY_SIZE(regs->mb)
    and in the body accessed regs->mb[i] which is an out-of-bounds array
    access that then resulted in an access to an reserved register area.
    
    Later this was changed by commit 0517961ccdf1 ("can: flexcan: Add
    provision for variable payload size") to iterate a bit differently but
    still runs one iteration too much resulting to call
    
            flexcan_get_mb(priv, priv->mb_count)
    
    which results in a WARN_ON and then a NULL pointer exception. This
    only affects devices compatible with "fsl,p1010-flexcan",
    "fsl,imx53-flexcan", "fsl,imx35-flexcan", "fsl,imx25-flexcan",
    "fsl,imx28-flexcan", so newer i.MX SoCs are not affected.
    
    Fixes: cbffaf7aa09e ("can: flexcan: Always use last mailbox for TX")
    Signed-off-by: Uwe Kleine-König <u.kleine-koenig@pengutronix.de>
    Cc: linux-stable <stable@vger.kernel.org> # >= 4.20
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 50d94ac1da7457ac66cc6e4dd4e0d804a9bfdd0e ......
	 orig commit -> f164d0204b1156a7e0d8d1622c1a8d25752befec ......
checking bf8295faed733debbe5625ec1a0c137f1170ac2f ......
	 orig commit -> a43608fa77213ad5ac5f75994254b9f65d57cfa0 ......
checking 04f985776f0428a39cc6a68be5c74c3cf2d8cf83 ......
	 orig commit -> ed72bc8bcb9277061e753faf300b20f97323761c ......
checking f699c3222635eaf919f3d4716fe0e0565cd4afad ......
	 orig commit -> d788905f68fd4714c82936f6f7f1d3644d7ae7ef ......
checking 6ce9d61a65373d99ad310bf5d1d3786a3d637c72 ......
	 orig commit -> 4530ec36bb1e0d24f41c33229694adacda3d5d89 ......
checking 169130c87a88c1d85433cb0ef469c826dbe2f2d1 ......
	 orig commit -> 55059f2b7f868cd43b3ad30e28e18347e1b46ace ......
checking 474673a94f1758a64b22c0c012eaae2ecdcf9810 ......
	 orig commit -> 7da11ba5c5066dadc2e96835a6233d56d7b7764a ......
		 7da11ba5c5066dadc2e96835a6233d56d7b7764a has problem. Fixes commit -> 7b12c8189a3dc50638e7d53714c88007268d47ef
commit 8d85aa96c54bb558fe923403084fc825bebef4a5
Author: Manfred Schlaegl <manfred.schlaegl@ginzinger.com>
Date:   Wed Dec 19 19:39:58 2018 +0100

    can: dev: __can_get_echo_skb(): fix bogous check for non-existing skb by removing it
    
    commit 7b12c8189a3dc50638e7d53714c88007268d47ef upstream.
    
    This patch revert commit 7da11ba5c506
    ("can: dev: __can_get_echo_skb(): print error message, if trying to echo non existing skb")
    
    After introduction of this change we encountered following new error
    message on various i.MX plattforms (flexcan):
    
    | flexcan 53fc8000.can can0: __can_get_echo_skb: BUG! Trying to echo non
    | existing skb: can_priv::echo_skb[0]
    
    The introduction of the message was a mistake because
    priv->echo_skb[idx] = NULL is a perfectly valid in following case: If
    CAN_RAW_LOOPBACK is disabled (setsockopt) in applications, the pkt_type
    of the tx skb's given to can_put_echo_skb is set to PACKET_LOOPBACK. In
    this case can_put_echo_skb will not set priv->echo_skb[idx]. It is
    therefore kept NULL.
    
    As additional argument for revert: The order of check and usage of idx
    was changed. idx is used to access an array element before checking it's
    boundaries.
    
    Signed-off-by: Manfred Schlaegl <manfred.schlaegl@ginzinger.com>
    Fixes: 7da11ba5c506 ("can: dev: __can_get_echo_skb(): print error message, if trying to echo non existing skb")
    Cc: linux-stable <stable@vger.kernel.org>
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking e3b8d98e3758514443b39f9e719df03369f18d2b ......
	 orig commit -> e7a6994d043a1e31d5b17706a22ce33d2a3e4cdc ......
checking cfc8ed910312c97fbf7ddf3fca8e65cb76894fa5 ......
	 orig commit -> 200f5c49f7a2cd694436bfc6cb0662b794c96736 ......
checking 5877d2c0eac8f19ff8f4a8814708feb71b0fab27 ......
	 orig commit -> a4310fa2f24687888ce80fdb0e88583561a23700 ......
checking 8d2aed6439cf41bcaee3d44eff5bfacb2bfb3039 ......
	 orig commit -> 5178b7cd8e42448b1041716f124734eaaa36ca50 ......
checking 09132a6b01a75c5501aa05b388c91b4449459998 ......
	 orig commit -> 5478ad10e7850ce3d8b7056db05ddfa3c9ddad9a ......
checking 80142af39bd9e403d02d0595736664f6944f1a57 ......
	 orig commit -> 7989b9ee8bafe5cc625381dd0c3c4586de27ca26 ......
checking e9d2c0fbe161e3ca77e041cfc72f09a8f69fdbda ......
	 orig commit -> 1a37bd823891568f8721989aed0615835632d81a ......
checking 382debd2fe42f3b6ffbfc089450980411bdfd699 ......
	 orig commit -> 21556350ade3cb5d7afecc8b3544e56431d21695 ......
checking e3290a5e24df81bf2cdb603f0a897725d3eb3ea5 ......
	 orig commit -> 919a52fc4ca137c871f295224507fa3401e08472 ......
checking d9ea911e2b90478b29fd6b2325723099a55f6171 ......
	 orig commit -> fcc86cb45d38ca2f24bcea9c29c7f4742041caed ......
checking 7841a545f8bd66567edc21669531116caf1daeb1 ......
	 orig commit -> 8d4d7c58994759bbd9f4fec32d88bf0e0b89302e ......
checking d543f583e3af75ab4c9d5737273614fadcec9d35 ......
	 orig commit -> 8fd3b90300bec541806dac271de2fd44e2e4e2d2 ......
checking cddcc9959a32999ce2d38018900595a5ab453eb2 ......
	 orig commit -> 8873c064d1de579ea23412a6d3eee972593f142b ......
checking 5999609a93a4eb4956b6548159ce69295b1557b2 ......
	 orig commit -> ff09d7ec9786be4ad7589aa987d7dc66e2dd9160 ......
checking 3996e891ec97c9c5f66ed3a2a450e3621ec32c50 ......
	 orig commit -> 61448479a9f2c954cde0cfe778cb6bec5d0a748d ......
checking 292c48e2971e7fda592b8e23567c63b7efb267ae ......
	 orig commit -> 604d415e2bd642b7e02c80e719e0396b9d4a77a6 ......
checking 331bd738eb17903edf6b87e70224395532241650 ......
	 orig commit -> 4c62bd9cea7bcf10292f7e4c57a2bca332942697 ......
checking cd947138e8c31e8cfcd489c12e9b97271beb6e79 ......
	 orig commit -> df132eff463873e14e019a07f387b4d577d6d1f9 ......
checking 8380cbfe4eab437309da558ceb5404b7be4dfc7a ......
	 orig commit -> 9f2df09a33aa2c76ce6385d382693f98d7f2f07e ......
checking 9891b528f91d57027c1ce7d9f8165f781c1b532c ......
	 orig commit -> f39f8688888ae74fa8deae2d01289b69b4727394 ......
checking 3962e78a9fcb881d3865eba7faf51536e062ccf8 ......
	 orig commit -> 4458bba09788e70e8fb39ad003f087cd9dfbd6ac ......
checking 829567dd9196a32951c7e4de91d590e684ce3b00 ......
	 orig commit -> 81c99089bce693b94b775b6eb888115d2d540086 ......
checking 9f9e2bd0bbcf787c90c28bda082b6287b5c5661e ......
	 orig commit -> 9de9aa45e9bd67232e000cca42ceb134b8ae51b6 ......
checking b7d5ef6af8eb1da163bcec2723c6bec87e95faed ......
	 orig commit -> 622fecbccfe86a8052dea6b512d3821dcce29994 ......
checking 50f4a3b8eb62a4ff8fbf23a6e8b9fde147ed0202 ......
	 orig commit -> ba038546ff9e15d54d1134b5c5d2355648c00dec ......
checking 54923bc74bebbd93a44380bce87006efdce3a8fe ......
	 orig commit -> d1fe6ad6f6bd61c84788d3a7b11e459a439c6169 ......
checking c74c926ffa0a1eb5b430255d35e2336b2f67c921 ......
	 orig commit -> 5d041c46ccb9b48acc110e214beff5e2789311df ......
checking 4969751575c819d7be50b28f63b7ce1ab933b24e ......
	 orig commit -> 82715ac71e6b94a2c2136e31f3a8e6748e33aa8c ......
checking b643d705441c734feeb9e040c3a0ddcc896b58aa ......
	 orig commit -> ec484d03ef0df8d34086b95710e355a259cbe1f2 ......
checking 29d920ba59c30caf9cd8e829f47124de3d200618 ......
	 orig commit -> 66e839030fd698586734e017fd55c4f2a89dba0b ......
		 66e839030fd698586734e017fd55c4f2a89dba0b has problem. Fixes commit -> eca1e56ceedd9cc185eb18baf307d3ff2e4af376
commit c151740ff107ddd253447ff4d0825c438a8692f9
Author: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
Date:   Fri Dec 14 18:30:22 2018 +0200

    iwlwifi: mvm: don't send GEO_TX_POWER_LIMIT to old firmwares
    
    commit eca1e56ceedd9cc185eb18baf307d3ff2e4af376 upstream.
    
    Old firmware versions don't support this command. Sending it
    to any firmware before -41.ucode will crash the firmware.
    
    This fixes https://bugzilla.kernel.org/show_bug.cgi?id=201975
    
    Fixes: 66e839030fd6 ("iwlwifi: fix wrong WGDS_WIFI_DATA_SIZE")
    CC: <stable@vger.kernel.org> #4.19+
    Signed-off-by: Emmanuel Grumbach <emmanuel.grumbach@intel.com>
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Kalle Valo <kvalo@codeaurora.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking 602162dce8a4cb61686226588161ded7b7ea604c ......
	 orig commit -> a05a14049999598a3bb6fab12db6b768a0215522 ......
checking 6d24302acc10279d6e4a02590b4ea06475b1f744 ......
	 orig commit -> 5305ec6a27b2dc7398a689e661a4a2e951026f09 ......
checking 52f4036282f79c93447c9eed734610a31ed933da ......
	 orig commit -> cdcefe6bd9df754f528ffc339d3cc143cea4ddf6 ......
checking bcec3b858057dfe6dfd05d6ba803e81af8d5adff ......
	 orig commit -> 544b03da39e2d7b4961d3163976ed4bfb1fac509 ......
checking 160a390a9d5354caf7bddab4a70c307b8c4f9b17 ......
	 orig commit -> 14fdc2c5318ae420e68496975f48dc1dbef52649 ......
checking fc0f90849a45eb1844116debc5380d9429a3d09b ......
	 orig commit -> cb5d21946d2a2f4687c482ab4604af1d29dac35a ......
checking 27d6abfb99c871b7c0179b52b6a23acc6c7c005b ......
	 orig commit -> 65766ee0bf7fe8b3be80e2e1c3ef54ad59b29476 ......
checking cc8b329fef53c74a4abf98b0755b3832d572d6ce ......
	 orig commit -> 2f31a67f01a8beb22cae754c53522cb61a005750 ......
		 2f31a67f01a8beb22cae754c53522cb61a005750 has problem. Fixes commit -> d92f2c59cc2cbca6bfb2cc54882b58ba76b15fd4
45f750c16cae3625014c14c77bd9005eda975d35
commit e13bfb357f5bc04f9e7ccff7d07770388062a8cc
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Fri Dec 14 10:54:43 2018 +0200

    xhci: Don't prevent USB2 bus suspend in state check intended for USB3 only
    
    commit 45f750c16cae3625014c14c77bd9005eda975d35 upstream.
    
    The code to prevent a bus suspend if a USB3 port was still in link training
    also reacted to USB2 port polling state.
    This caused bus suspend to busyloop in some cases.
    USB2 polling state is different from USB3, and should not prevent bus
    suspend.
    
    Limit the USB3 link training state check to USB3 root hub ports only.
    The origial commit went to stable so this need to be applied there as well
    
    Fixes: 2f31a67f01a8 ("usb: xhci: Prevent bus suspend if a port connect change or polling state is detected")
    Cc: stable@vger.kernel.org
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
commit 82a5090aad84e452dcf86864ffae71843607bff4
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Fri Mar 22 17:50:17 2019 +0200

    xhci: Don't let USB3 ports stuck in polling state prevent suspend
    
    commit d92f2c59cc2cbca6bfb2cc54882b58ba76b15fd4 upstream.
    
    Commit 2f31a67f01a8 ("usb: xhci: Prevent bus suspend if a port connect
    change or polling state is detected") was intended to prevent ports that
    were still link training from being forced to U3 suspend state mid
    enumeration.
    This solved enumeration issues for devices with slow link training.
    
    Turns out some devices are stuck in the link training/polling state,
    and thus that patch will prevent suspend completely for these devices.
    This is seen with USB3 card readers in some MacBooks.
    
    Instead of preventing suspend, give some time to complete the link
    training. On successful training the port will end up as connected
    and enabled.
    If port instead is stuck in link training the bus suspend will continue
    suspending after 360ms (10 * 36ms) timeout (tPollingLFPSTimeout).
    
    Original patch was sent to stable, this one should go there as well
    
    Fixes: 2f31a67f01a8 ("usb: xhci: Prevent bus suspend if a port connect change or polling state is detected")
    Cc: stable@vger.kernel.org
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit e13bfb357f5bc04f9e7ccff7d07770388062a8cc
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Fri Dec 14 10:54:43 2018 +0200

    xhci: Don't prevent USB2 bus suspend in state check intended for USB3 only
    
    commit 45f750c16cae3625014c14c77bd9005eda975d35 upstream.
    
    The code to prevent a bus suspend if a USB3 port was still in link training
    also reacted to USB2 port polling state.
    This caused bus suspend to busyloop in some cases.
    USB2 polling state is different from USB3, and should not prevent bus
    suspend.
    
    Limit the USB3 link training state check to USB3 root hub ports only.
    The origial commit went to stable so this need to be applied there as well
    
    Fixes: 2f31a67f01a8 ("usb: xhci: Prevent bus suspend if a port connect change or polling state is detected")
    Cc: stable@vger.kernel.org
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
checking b6cc7f9c6461a3d23bc1e8ad47eacb0a2188168a ......
	 orig commit -> 11644a7659529730eaf2f166efaabe7c3dc7af8c ......
checking cad3876cd23d63e818c3112e885767a09b249905 ......
	 orig commit -> a5baeaeabcca3244782a9b6382ebab6f8a58f583 ......
checking 60ac01c60ba94d8a17016ede99789207a5b93856 ......
	 orig commit -> 958c0bd86075d4ef1c936998deefe1947e539240 ......
checking 3e8886bd158fc34efad491176b8899417736dc1f ......
	 orig commit -> d9193efba84fe4c4aa22a569fade5e6ca971f8af ......
checking a237717dfdbc5e6f7cd9d5b2d66627ad793bb8cf ......
	 orig commit -> 1245374e9b8340fc255fd51b2015173a83050d03 ......
checking 82c1b66894fd3b81af823861a39d532af4337f4e ......
	 orig commit -> f068090426ea8d72c408ebd42953a82a88e2282c ......
checking 2ff85eaf165f57c668eee613e9570d94d4b7f4cf ......
	 orig commit -> 7b412b04a0c7000293008231ce8413056abb1982 ......
checking c4d1e71e56135dcd4f309bf1d3cd9bff36fce2c9 ......
	 orig commit -> 08fd9a82fda86529bb2f2af3c2f7cb657b4d3066 ......
checking 4b977515da489f5c33762f1475a0fcfaec525704 ......
	 orig commit -> ba3a51ac32ebcf8d0a54b37f1af268ad8a31c52f ......
checking 47cb27191f6cac951bf2bfd00cceff264cfc191f ......
	 orig commit -> 2fc6d4be35fb1e262f209758e25bfe2b7a113a7f ......
checking 269c01eb49ed0643a2ed2161fa1d46749cef30b1 ......
	 orig commit -> 22454b79e6de05fa61a2a72d00d2eed798abbb75 ......
checking 711bd5d290da6c3bbdb14f53f86f77e372e2e44d ......
	 orig commit -> 41f1c48420709470c51ee0e54b6fb28b956bb4e0 ......
checking fb87a92b43961c89bf4a115d8a700885d8959cb1 ......
	 orig commit -> 385a4886778f6d6e61eff1d4d295af332d7130e1 ......
